- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Getting Started with AI Game Development
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to the fascinating world of **artificial intelligence** ( **AI** ) development
    in **Unreal Engine** ! I am thrilled that you have chosen me and my book as your
    guide on this sometimes intimidating journey into the realm of AI programming.
    Rest assured that I am committed to making this experience as easy and enjoyable
    as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this book, you will acquire the skills required to create Unreal
    Engine games that involve the use of AI techniques and learn how to handle them
    at runtime. We will start from the basics, such as moving agents within a game
    level, and gradually progress to more advanced topics such as creating complex
    behaviors and managing multiple AI entities (even dozens or hundreds). By the
    end of this journey, you will be proficient in crafting formidable opponents that
    will challenge your players; what’s more, you will possess a deep understanding
    of the potential pitfalls in AI development and how to avoid them.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, I will introduce you to some basic keywords about AI development;
    these concepts will serve as a gentle introduction to the whole book, providing
    you with a foundation to delve deeper into the fascinating world of AI programming
    in Unreal Engine .
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will be covering the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introducing AI
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding AI in game development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Explaining AI techniques in video games
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I guess you are already aware that the **Unreal Engine Editor** can be quite
    demanding in terms of hardware prerequisites. However, there is no need to be
    intimidated as this book primarily focuses on game programming rather than real-time
    visual effects.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we will explore the hardware and software requirements necessary
    to follow along with this book. Additionally, we will discuss some prerequisite
    knowledge that will be beneficial for your journey.
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisite knowledge
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before we dive into the exciting world of AI in game development, I want to
    kindly remind you that this book is designed for individuals who already possess
    some knowledge about working with Unreal Engine. Therefore, you must be already
    familiar with the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Unreal Engine** : It’s essential to have a basic understanding of this software
    interface, tools, and workflow.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Game development basics** : Having a good grasp of general game development
    principles and terminology will greatly aid your understanding of the concepts
    discussed in this book.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Programming knowledge** : As this book focuses on game development, it is
    assumed that you have some programming experience. Ideally, you should be familiar
    at least with the Unreal Engine visual scripting system ( **Blueprints** ) and,
    to some extent, with C++.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you are new to Unreal Engine, I highly recommend exploring some introductory
    books or resources to familiarize yourself with its fundamentals. One amazing
    starting point is *Blueprints Visual Scripting for Unreal Engine 5* by *Marcos
    Romero* , *Packt Publishing* , which will guide you through the main features
    of programming in Unreal Engine with Blueprints.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, and whenever possible, I will be showing you techniques by using
    both Blueprints and C++. If you need a gentle introduction to C++, at the end
    of this book, you will find a valuable appendix that delves into the intricacies
    of C++ programming in the context of Unreal Engine. This quick guide is also designed
    to provide you with some understanding of how C++ works within the Unreal Engine
    framework.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware requirements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'At the time of writing this book, Epic Games is officially recommending the
    following basic requirements. If your hardware meets at least these specifications,
    you can expect to have a pleasant experience while reading through the chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Windows OS** :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operating system** : Windows 10 or 11 64-bit version'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Processor** : Quad-core Intel or AMD, 2.5 GHz or faster'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Memory** : 8 GB RAM'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Graphics card** : DirectX 11- or 12-compatible graphics card'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Linux** :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operating system** : Ubuntu 22.04'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Processor** : Quad-core Intel or AMD, 2.5 GHz or faster'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Memory** : 32 GB RAM'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Video card** : NVIDIA GeForce 960 GTX or higher with the latest NVIDIA binary
    drivers'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Video RAM** : 8 GB or more'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**macOS** :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operating system** : Latest macOS Ventura'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Processor** : Quad-core Intel, 2.5 GHz'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Memory** : 8 GB RAM'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Video card** : Metal 1.2-compatible graphics card'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'I''ve written this book using the following hardware:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Desktop** :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operating system** : Windows 10 64-bit version'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Processor** : Intel Core i9 9900K'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Memory** : 64 GB RAM'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Graphics card** : NVIDIA GeForce RTX 3090ti'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Laptop** :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operating system** : Windows 11 64-bit version'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Processor** : Intel Core i7 13650HX'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Memory** : 8 GB RAM'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Graphics card** : NVIDIA GeForce RTX 4060'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Software requirements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This book assumes you have the **Epic Games Launcher** and **Unreal Engine 5**
    installed and fully working on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: At the time of writing this book, the latest version of Unreal Engine is 5.4
    but you will be able to follow along with any version more recent than 5.4.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, as we will also be working with C++, you’ll need an IDE supporting
    this language and Unreal Engine. If you already have some experience, chances
    are you have already installed Visual Studio 2019/2022 or JetBrains Rider; if
    you don’t, you will need to install one of them to follow along with the C++ coding
    parts.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Visual Studio for Unreal Engine development in C++
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Once you have Visual Studio installed, you’ll need the following extra components
    to make it work properly with Unreal Engine:'
  prefs: []
  type: TYPE_NORMAL
- en: '**C++** **profiling tools**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C++ AddressSanitizer**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Windows** **10 SDK**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Unreal** **Engine installer**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To include these tools, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open **Visual** **Studio Installer** .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select **Modify** from your Visual Studio installation, selecting the version
    you will be using:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.1 – Selecting the Visual Studio Installer version](img/B31016_01_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.1 – Selecting the Visual Studio Installer version
  prefs: []
  type: TYPE_NORMAL
- en: Once the **Modifying** modal window opens, in the top bar, make sure you are
    in the **Workloads** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, activate the **Game development with C++** option by clicking the checkmark.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, if it is closed, open **Installation details** | **Game development with
    C++** | **Optional** from the right sidebar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the following fields, as shown in *Figure 1* *.2* :'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**C++** **profiling tools**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The latest **Windows 11 SDK** version available
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C++ AddressSanitizer**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IDE support for Unreal** **Engine** (optional)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Unreal** **Engine installer**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 1.2 – The Workload section](img/B31016_01_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.2 – The Workload section
  prefs: []
  type: TYPE_NORMAL
- en: Click the **Install while downloading** button (or the **Download all, then
    install** one) to start the installation process.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The **IDE support for Unreal Engine** integration is an extension introduced
    in Visual Studio 2022 and adds some nifty features such as Blueprint references,
    Blueprint assets, and CodeLens hints on top of the Unreal Engine classes, functions,
    and properties. Although not mandatory, I highly recommend using it as it will
    make your life as a developer much easier!
  prefs: []
  type: TYPE_NORMAL
- en: After completing the download and installation process, you will be fully prepared
    to embark on the development of your own C++ games using Unreal Engine.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have successfully set up your system, it is time to get acquainted
    with some of the key terminologies in the AI environment. This will provide you
    with a solid foundation to understand and navigate the world of AI more effectively.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing AI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AI has emerged as a transformative force in various industries; in its broadest
    sense, AI involves the simulation of human intelligence in machines that are programmed
    to think and (sometimes) learn like humans.
  prefs: []
  type: TYPE_NORMAL
- en: As such, developing AI means studying methods and software that enable machines
    to perceive their environment, learn from data, reason, and make decisions to
    achieve defined goals.
  prefs: []
  type: TYPE_NORMAL
- en: 'AI encompasses various subfields and applications, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Robotics** : The development of intelligent machines that can interact with
    the physical world'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Natural language processing** : The ability of computers to understand, interpret,
    and generate human language'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Machine learning** : The use of algorithms and statistical models to enable
    computers to learn from data and make predictions or decisions without being explicitly
    programmed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deep learning** : A branch of machine learning that leverages neural networks
    to emulate decision-making abilities observed in the human brain'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Computer vision** : The ability of computers to understand and interpret
    visual information from images or videos'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'What’s more, AI has been making significant strides in the entertainment industry,
    transforming the way content is created, consumed, and personalized. Here are
    some key points about AI’s impact on the entertainment industry:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Generative AI** : This kind of technology can create outputs such as stories,
    scripts, and images and has the potential to revolutionize content creation in
    the entertainment industry.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Personalized recommendations** : AI-enabled tools are being used to help
    users discover content tailored to their preferences by providing personalized
    suggestions. These recommendations are based on user behavior, viewing history,
    and other data, enhancing the user experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data-driven insights** : By analyzing user behavior, AI allows the entertainment
    industry to gain valuable insights from data such as preferences and trends and
    can help companies understand their audiences better and make data-driven decisions
    regarding content production, distribution, and marketing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: However, as the age-old adage suggests, “ *With great power comes great responsibility*
    .” The adoption of AI brings forth many challenges and considerations. Discussions
    surrounding intellectual property and copyright matters pertaining to AI-generated
    content have taken place and still do. Furthermore, there is growing concern about
    the impact of AI on employment within various industries, as certain roles may
    face disruption or transformation due to the advancements in AI technologies.
  prefs: []
  type: TYPE_NORMAL
- en: Ethics in utilizing AI is an essential subject that delves into the moral considerations
    and implications linked to the utilization of these systems. As AI technology
    continues to progress at a faster and faster pace, it evokes profound ethical
    concerns regarding its effects on society, individuals, and the environment.
  prefs: []
  type: TYPE_NORMAL
- en: While it cannot be denied that AI has the potential to enhance efficiency and
    productivity, it may also result in job losses within specific sectors; as such,
    some people consider it mandatory to implement measures that alleviate adverse
    effects on workers and society.
  prefs: []
  type: TYPE_NORMAL
- en: You have just been introduced to some of the most common terminology about AI
    in general. Now, let’s shift our focus to understanding how AI works specifically
    in the realm of game development. In this next section, we will delve into its
    fundamentals, providing you with a basic understanding of its principles and workings.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding AI in game development
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When applied to game development, AI is employed to create intelligent systems
    capable of performing tasks without explicit programming. These systems adapt
    and improve their performance based on experience, enhancing the overall gaming
    experience. For instance, game characters have been imbued with AI for many years,
    enabling them to exhibit seemingly intelligent behavior. Even the four iconic
    Pac-Man ghosts have been programmed with unique and distinct behaviors!
  prefs: []
  type: TYPE_NORMAL
- en: AI in game development extends far beyond the control of **non-playable characters**
    ( **NPCs** ) or enemies. It encompasses a diverse range of applications that revolutionize
    game design, development, and player experience. By leveraging AI, game developers
    can introduce innovative and immersive gameplay elements that will captivate players
    during gameplay.
  prefs: []
  type: TYPE_NORMAL
- en: If you have picked up this book, chances are you are eager to grasp the fundamental
    principles of AI programming in games and apply this knowledge to create your
    next big hit. As an AI programmer, you will have the power to craft stunning opponents,
    create NPCs that will help players achieve their goals, or simply invent new and
    engaging behaviors that will make your games enjoyable to the next level; this
    is going to be an immensely rewarding endeavor!
  prefs: []
  type: TYPE_NORMAL
- en: However, it is important to note that AI video game programming can present
    significant challenges, demanding long hours and potentially inducing stress.
    Being aware of these potential pitfalls is crucial before embarking on this career
    path. To avoid such setbacks, it is essential to develop a solid understanding
    of how AI functions, enabling players to have a seamless and enjoyable gaming
    experience. What’s more, comprehending this subject also entails troubleshooting
    computer issues that may arise and effectively resolving them. Rest assured, these
    issues will inevitably surface sooner or later!
  prefs: []
  type: TYPE_NORMAL
- en: In the following section, you will receive a gentle introduction to the major
    AI techniques used in games, along with the distinctive features that set them
    apart.
  prefs: []
  type: TYPE_NORMAL
- en: Explaining AI techniques in video games
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AI plays a pivotal role in enhancing gaming experiences, making them more immersive
    and exciting. Therefore, it is crucial to have a comprehensive understanding of
    the underlying principles behind AI development and how they function. This knowledge
    will empower game developers to effectively harness AI’s potential, creating rich
    and captivating gameplay that keeps players engaged and enthralled.
  prefs: []
  type: TYPE_NORMAL
- en: Just think about the *Assassin’s Creed* series, which is known for its open-world
    gameplay, where complex AI behaviors are used to control NPCs. On a more advanced
    level, games such as *Counter-Strike* introduced AI-controlled player characters
    – called **bots** – that can be created and managed to stand in place of real
    players.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the future of AI in game development holds exciting possibilities and
    innovations as AI is being used to create dynamic and adaptive narratives in games.
    By observing player behavior and preferences, AI algorithms can construct narrative
    branches, challenges, and rewards tailored uniquely to each player.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, I will give a brief and non-exhaustive overview of AI techniques
    that are commonly used in games. In this book, you’ll get the chance to explore
    some of these techniques and see how they are used in Unreal Engine. For those
    techniques that won’t be covered in this book, there will be plenty of opportunities
    for you to explore and delve into them on your own. The world of AI in gaming
    is vast and ever-evolving, offering endless possibilities for experimentation
    and innovation. So, don’t be discouraged if a particular technique is not covered
    here – the journey of discovery continues, and there are countless resources available
    to help you unlock new horizons in AI game development.
  prefs: []
  type: TYPE_NORMAL
- en: Pathfinding
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Pathfinding** is essential for efficient navigation in game environments
    and refers to the process of determining the optimal path while simulating the
    movement from one point to another. It can be used by autonomous agents, such
    as NPCs or opponents, but it is also useful in point-and-click games, where your
    character needs to reach a specific location. Pathfinding involves finding the
    optimal path from one location to another while avoiding obstacles; algorithms
    such as **A*** are commonly used in these situations. NPCs can use this technique
    to plan their movement, whether to avoid enemy units, find shortcuts, or follow
    waypoints.'
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the most common pathfinding techniques in game development is achieved
    by using a **navigation mesh** – or **nav mesh** , which is a data structure that
    represents the walkable surfaces of a level. *Figure 1* *.3* shows an example
    of AI movement through a nav mesh:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.3 – AI movement through a navigation mesh](img/B31016_01_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.3 – AI movement through a navigation mesh
  prefs: []
  type: TYPE_NORMAL
- en: Rule-based
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Rule-based systems** refer to a type of AI that operates based on a set of
    predefined rules. These rules are coded by humans and dictate the behavior and
    decision-making of the system itself; this means following the rules to produce
    predetermined outcomes based on some kind of input. Put simply, these rules are
    commonly referred to as *if statements* because they typically adhere to the structure
    of *if something is true, then do something else* . Although limited, these systems
    are relatively easy to implement and manage because the knowledge encoded in the
    rules is modular, and the rules can be coded in any order. This provides much
    flexibility in both coding and modifying the system.'
  prefs: []
  type: TYPE_NORMAL
- en: Finite state machines
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Finite state machines** ( **FSMs** ) are a common technique used in AI development
    and they involve breaking down an opponent’s or NPC’s behavior into different
    states, where each state represents a specific behavior or action. Transitions
    between states are triggered when certain condit ions or events are satisfied.
    For instance, a sentinel character may have states such as patrol, alert, or chase,
    with transitions occurring when the character has made some noise or has been
    spotted because they are in the line of sight. FSMs provide a clear and organized
    way to control NPC behavior, especially in games with predefined sequences of
    actions.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 1* *.4* shows an example of a simple FSM with states and conditions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.4 – A finite state machine](img/B31016_01_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.4 – A finite state machine
  prefs: []
  type: TYPE_NORMAL
- en: Behavior trees
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Behavior trees** are hierarchical structures used to control AI behavior.
    They consist of nodes representing specific actions or conditions. The tree structure
    allows for the sequencing of actions and decision-making based on the conditions
    themselves. The system will traverse the tree from the root to the leaf nodes,
    executing actions or evaluating conditions along the way. Behavior trees provide
    a flexible and modular approach to NPC behavior, allowing for complex and dynamic
    decision-making. A behavior tree can include nodes such as selectors, sequences,
    conditions, or action nodes. *Figure 1* *.5* shows a behavior tree where a selector
    decides which part of the tree will execute, and sequence nodes will perform a
    list of tasks in a predefined order.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.5 – A behavior tree](img/B31016_01_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.5 – A behavior tree
  prefs: []
  type: TYPE_NORMAL
- en: If you are unfamiliar with these terms, have no fear! I’ll be explaining them
    in [*Chapter 7*](B31016_07.xhtml#_idTextAnchor132) , *Introducing* *Behavior Trees*
    .
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning AI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Machine learning** involves training AI models using data and algorithms
    to enable NPCs to learn and improve their behavior over time. This technique allows
    NPCs to adapt, make decisions, and respond to unpredictable situations based on
    patterns and experiences from previous gameplay. Machine learning can provide
    more dynamic, realistic, and engaging interactions with NPCs, as their behavior
    evolves through iterations and learning from player actions.'
  prefs: []
  type: TYPE_NORMAL
- en: One example of a game that uses machine learning is *AlphaGo* ( [https://deepmind.google/technologies/alphago/](https://deepmind.google/technologies/alphago/)
    ), developed by DeepMind. *AlphaGo* is an AI system that mastered the ancient
    Chinese game of *Go* by using machine learning techniques to calculate probabilities
    and make strategic decisions in the game.
  prefs: []
  type: TYPE_NORMAL
- en: Reinforcement learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Reinforcement learning** is a type of machine learning system where NPCs
    learn through trial and error, receiving feedback or rewards based on their actions.
    NPCs explore the game environment, take action, and learn from the consequences.
    Reinforcement learning enables NPCs to optimize their behavior by maximizing rewards
    and minimizing penalties. This technique can result in NPCs that exhibit adaptive
    and strategic decision-making, enhancing the challenge and immersion of the game.
    Reinforcement learning is typically employed during the development process to
    create a functional system by the time a game is released. Due to the nature of
    reinforcement learning, sometimes results may not be as expected, and NPCs may
    exhibit weird or erratic behavior.'
  prefs: []
  type: TYPE_NORMAL
- en: Generative AI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The aforementioned generative AI is being increasingly used in video game development,
    offering new possibilities and transforming various aspects of game development.
    Some of these aspects involve creating more realistic NPCs whose behaviors go
    beyond fixed patterns and making decision-making systems more adaptative and engaging
    for players.
  prefs: []
  type: TYPE_NORMAL
- en: Although generative AI is still at its initial stages in game development and
    its full potential is still to be explored, it is already demonstrating promising
    capabilities to transform various aspects of the game industry.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explored the fundamental principles of AI development and
    saw how it is applied in the game industry. In the upcoming chapter, I’ll introduce
    you to the incredible potential that Unreal Engine offers and how its framework
    can be leveraged to create intelligent and immersive AI in games. Brace yourself
    for a thrilling exploration of its possibilities and let’s dive into the fascinating
    realm of AI game programming with your favorite game engine!
  prefs: []
  type: TYPE_NORMAL
- en: Credits
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The examples in this chapter were created with the help of *Basic Miscellany
    Lineal* icons from *Flaticon* ( [https://www.flaticon.com/](https://www.flaticon.com/)
    ).
  prefs: []
  type: TYPE_NORMAL
