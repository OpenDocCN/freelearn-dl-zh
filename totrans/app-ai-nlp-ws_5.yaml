- en: 5\. Using Speech with the Chatbot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Overview
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will learn about the basics of Amazon Connect. We'll look
    at how to use Amazon Connect, Lex, and Lambda to interact with a chatbot using
    voice. We will also demonstrate how you can create a personal call center using
    Amazon Connect. We'll learn how to obtain a free phone number for a personal call
    center. We will also learn about using Amazon Lex chatbots with Amazon Connect
    with contact flows and different templates. By the end of this chapter, you will
    be able to connect the call center to your Lex chatbot.
  prefs: []
  type: TYPE_NORMAL
- en: Amazon Connect Basics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Amazon Connect** is a service from AWS (Amazon Web Services) that allows
    you to create cloud-based contact centers. This means that people can use a telephone
    number to contact the service and have conversations with bots or human representatives.
    In this chapter, we are primarily interested in automating interaction using the
    chatbot that we built in the previous chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some key features of Amazon Connect are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: It is easy to set up and use Connect with workflows that are defined using a
    graphical editor.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is no infrastructure to deploy or manage, so contact centers can be scaled
    up and down quickly.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is a **pay-as-you-go service**, so there is no setup or monthly fees. We
    will be using the free tier, so we should not have to pay anything to use the
    service. For commercial usage, charges are based on rates per minute.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amazon Connect is deployed in 42 availability zones and within 16 geographic regions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disclaimer
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Unfortunately, Amazon Connect is not available for use in all regions. When
    setting up Amazon Connect, a local telephone number is provided, and at the time
    of writing this book (April 2020), this service is only available in the US, UK,
    Australia, Japan, Germany, and Singapore. The good news is that Amazon is constantly
    expanding its services. So, by the time you read this book, Amazon Connect might
    be available where you are. The region table at [https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/](https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Free Tier Information
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Throughout this book, you will only need to use the free tier of the services
    presented. However, it is important to be aware of the limits of free usage and
    the pricing of other tiers.
  prefs: []
  type: TYPE_NORMAL
- en: You should refer to the official web page at [https://aws.amazon.com/connect/](https://aws.amazon.com/connect/).
    A single contact center may include a set amount of Amazon Connect service usage
    and a direct-dial number including 60 minutes of inbound and outbound calls. This
    can change depending on your regional settings.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: You shouldn't need to go beyond the services provided by the free tier for this
    book. If you go beyond the limits of the free tier, you will be charged by Amazon
    according to the rates published at [https://aws.amazon.com/connect/pricing/](https://aws.amazon.com/connect/pricing/).
  prefs: []
  type: TYPE_NORMAL
- en: Interacting with the Chatbot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using Connect to interact with your chatbot by voice requires you to first
    set up a call center within Connect. The call center receives a free local phone
    number (or a US toll-free number in the United States). This number can be connected
    to an `MarketNanny`). The chatbot uses the Lambda serverless service to get data
    from an external API and relay it back to the user on the phone:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Reference for image*: [https://aws.amazon.com/blogs/aws/new-amazon-connect-and-amazon-lex-integration/](https://aws.amazon.com/blogs/aws/new-amazon-connect-and-amazon-lex-integration/)'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.1: A sample voice-based chatbot application using Amazon Connect,
    Lex, and Lambda'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16061_05_01.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 5.1: A sample voice-based chatbot application using Amazon Connect,
    Lex, and Lambda'
  prefs: []
  type: TYPE_NORMAL
- en: Talking to Your Chatbot through a Call Center Using Amazon Connect
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using Amazon Connect, we can create a call center application that will allow
    us to connect to the chatbot that we built in the preceding *Chapter 4*, *Conversational
    Artificial Intelligence* (`MarketNanny`), using voice commands rather than a textbox.
  prefs: []
  type: TYPE_NORMAL
- en: To create an Amazon Connect call center, you need to make an Amazon Connect
    instance. Each example contains the majority of the assets and settings identified
    with your call center instance. You can oversee the settings for your scenario
    from the Amazon Connect support page.
  prefs: []
  type: TYPE_NORMAL
- en: You can make various instances; however, each example is limited to solely inside
    the AWS area in which it has been created. The settings, clients, measurements,
    and details are not shared across Amazon Connect instances.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: It is mandatory to have an AWS account. Amazon Lex services can be accessed
    through the Console page.
  prefs: []
  type: TYPE_NORMAL
- en: 'Exercise 5.01: Creating a Personal Call Center'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this exercise, we will create a personal call center using Amazon Connect,
    and we will connect your `MarketNanny` chatbot to it. Note that we have already
    discussed the Amazon Connect service earlier in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For the first step, navigate to the Amazon Connect service page in the AWS
    Console. You can select the link to navigate to, or you can go directly to [https://console.aws.amazon.com/connect](https://console.aws.amazon.com/connect):![Figure
    5.2: The Amazon Connect welcome screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_02.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.2: The Amazon Connect welcome screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the `Get started` button to create a new `Call Center` instance. In the
    screen that follows, keep the default option of `Store users within Amazon Connect`,
    and then enter a name for your application. The name is unique across AWS and
    duplicates are not allowed, so you may have to experiment a bit or add numbers
    to the name until you get a name that is unique.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the `Next step` button when you are done:![Figure 5.3: Step 1 of the
    Amazon Connect resource configuration screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_03.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.3: Step 1 of the Amazon Connect resource configuration screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In the next step, add the information for a new admin, setting the email address
    to your email address. Again, click the `Next step` button when you are done:![Figure
    5.4: Step 2 of the Amazon Connect resource configuration screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_04.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.4: Step 2 of the Amazon Connect resource configuration screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In the next step, leave the `Incoming calls` checkbox checked, and uncheck
    the `Outbound calls` checkbox:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In this case, we have no requirement for our bot to initiate a call to anyone,
    but we do want it to be able to receive calls.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.5: Step 3 of the Amazon Connect resource configuration screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B16061_05_05.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.5: Step 3 of the Amazon Connect resource configuration screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the `Next step` button when you are done.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, you will be presented with an informational screen, letting you know that
    you are granting the call center application permissions to read and write data
    to or from your S3 bucket, to encrypt or decrypt data, and to read and write to
    and from the `CloudWatch` logs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It will also show you the location of the `S3 buckets` where your `data` and
    Contact flow logs will be stored. Click `Next step`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note that there is a `Customize settings` link to further customize these locations,
    but we will not use this now.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.6: Step 4 of the Amazon Connect resource configuration screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B16061_05_06.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.6: Step 4 of the Amazon Connect resource configuration screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'This will bring you to the final screen, which will provide you with a review
    of all of the settings for your Contact center application:![Figure 5.7: Step
    5 of the Amazon Connect resource configuration screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_07.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.7: Step 5 of the Amazon Connect resource configuration screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, click the `Create instance` button to create your application. You should
    see a dialog window:![Figure 5.8: Setting up Amazon Connect'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_08.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.8: Setting up Amazon Connect'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In a minute or two, it will complete the setup process and take you to a `Success!`
    screen, where you can click on the `Get started` button to go directly to your
    application:![Figure 5.9: The Success! screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_09.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.9: The Success! screen'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: It may take up to 15 minutes for the application to get set up. So, if you do
    not succeed in getting to the application page initially, have some patience and
    try again every once in a while, until it does succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Typically, it should not take very long, and generally, the application page
    will be accessible right away.
  prefs: []
  type: TYPE_NORMAL
- en: So, you have created a customer contact center, in minutes, that would previously
    take anywhere between 3 to 6 months. While the creation interface looked very
    simple, it has masked all the complexity of the underlying infrastructure. This
    is the power of Amazon AWS Connect.
  prefs: []
  type: TYPE_NORMAL
- en: As you will see in the next exercise, you can actually get a physical phone
    number in order to call your very own contact center.
  prefs: []
  type: TYPE_NORMAL
- en: 'Exercise 5.02: Obtaining a Free Phone Number for Your Call Center'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this exercise, we will acquire a free number for our custom call center.
    The free telephone number can be acquired by the free tier services provided by
    Amazon Connect. The following are the steps to perform to obtain a free number:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The welcome screen for your personal call center should be visible. If it is
    not, you can access it easily at the URL displayed on the previous screen, right
    before you click the `Get Started` button:![Figure 5.10: The Amazon Connect welcome
    screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_10.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.10: The Amazon Connect welcome screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'At this point, you can click the `Let''s go` button in order to initiate the
    first step, which is to claim a local phone number for your call center application.
    On this screen, you can select your country:![Figure 5.11: The Claim phone number
    screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_11.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.11: The Claim phone number screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Leave the `Type` as the default (`Direct Dial`) option. Then, from the `Phone
    number` drop-down menu, select a phone number. This should be, in most cases,
    a number that is local to you. If you choose one that is not, you may be charged
    based on the cost to dial the number:![Figure 5.12: Phone number selection'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_12.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.12: Phone number selection'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the `Next` button when you are done. This will allow you to test your
    new phone number by dialing it. You should hear a message that starts with *Hello,
    thanks for calling*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This will be followed by a list of options; you can try them for yourself to
    see what they do when you have some time. For now, click the `Continue` button,
    which will bring you to the `Dashboard` screen:![Figure 5.13: The Amazon Connect
    Dashboard screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_13.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.13: The Amazon Connect Dashboard screen'
  prefs: []
  type: TYPE_NORMAL
- en: You now have a working call center application on Amazon Connect.
  prefs: []
  type: TYPE_NORMAL
- en: Using Amazon Lex Chatbots with Amazon Connect
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With Amazon Lex, you can create intelligent chatbots. This can be done by converting
    contact flows into regular conversations. The Amazon Connect service compliments
    the previously mentioned feature by enabling the creation of a contact center
    (cloud-based) along with the generation of dynamic flows. This delivers a personalized
    experience to your callers. Additionally, **Dual-tone multi-frequency** (**DTMF**)
    digits entered by callers during a call can be easily recognized by these chatbots.
  prefs: []
  type: TYPE_NORMAL
- en: With both Amazon Lex and Amazon Connect working in sync, the chatbot can gauge
    the caller's intent. Furthermore, you can use the AWS Lambda function along with
    your chatbot to process caller requests, provide information to callers, and query
    applications. These chatbots are capable of maintaining context by intelligently
    managing dialogue and reviewing replies based on caller responses on the fly.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will connect your *MarketNanny* chatbot to the call
    center. This is so that the user can speak into the phone and have their speech
    automatically converted into a text utterance that will be sent to the Lex chatbot.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Contact Flows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A **contact flow** defines each step of the experience that customers have when
    they interact with your call center. Amazon connect has templates for you to create
    simple and efficient contact flows. You can also create new contact flows using
    the visual contact flow editor. The editor is a very intuitive and simple tool
    to create contact flows. But do not let the simplicity fool you—you can create
    very complex and detailed flows.
  prefs: []
  type: TYPE_NORMAL
- en: The contact flow designer screen provides a way to create contact flows in a
    drag and drop environment. Contact flows are made of nodes that can be accessed
    in the left panel, within the designer area (under the `Show additional flow information`
    link).
  prefs: []
  type: TYPE_NORMAL
- en: Nodes are categorized under the `Interact`, `Set`, `Branch`, `Integrate`, and
    `Terminate`/`Transfer` categories. Nodes in each category can be hidden or revealed
    by clicking on the drop-down icon next to the section name. You will explore some
    of the nodes that are available by creating the contact flow for your chatbot.
  prefs: []
  type: TYPE_NORMAL
- en: Contact flows are a way for users (typically, supervisors) to progressively
    refresh the settings for each call entering the framework and ensure that the
    users hear customized and pertinent choices. While there are a number of predesigned
    contact flows, you will create a new one for your `MarketNanny` chatbot.
  prefs: []
  type: TYPE_NORMAL
- en: Contact Flow Templates
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following lists the various templates that are available. Just for information,
    the complete list is shown in the following screenshot. The ones you create will
    also show up in the template list. You can click each flow to get more details
    and learn from them:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.14: Amazon Connect contact flow templates'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16061_05_14.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 5.14: Amazon Connect contact flow templates'
  prefs: []
  type: TYPE_NORMAL
- en: In the next topic, we will set up your call center so that it can accept incoming
    calls, connect your `MarketNanny` chatbot to the call center so that the user
    can speak into the phone, and have the user's speech automatically converted into
    a text utterance that will be sent to the Lex chatbot.
  prefs: []
  type: TYPE_NORMAL
- en: The chatbot then continues with processing the utterance, finding the intent
    and slots, and fulfilling the user request through the Lambda function that you
    set up in the preceding section.
  prefs: []
  type: TYPE_NORMAL
- en: To connect your call center instance with your chatbot, you will need to go
    back to the main screen and navigate to the Connect dashboard, as shown in the
    following screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: 'Select `Services` > `Customer Engagement` > `Amazon Connect`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.15: Selecting Amazon Connect from the AWS Management Console'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16061_05_15.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 5.15: Selecting Amazon Connect from the AWS Management Console'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select your Connect instance:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.16: Amazon Connect console'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16061_05_16.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 5.16: Amazon Connect console'
  prefs: []
  type: TYPE_NORMAL
- en: 'Exercise 5.03: Connecting the Call Center to Your Lex Chatbot'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this exercise, you will set up your call center so that it can accept incoming
    calls, and so that you can connect your `MarketNanny` chatbot to the call center.
    The following are the steps to complete:'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the Amazon Management Console, navigate via `Services` to `Amazon Connect`
    under `Customer Engagement`. You will see the `Amazon Connect` virtual contact
    center instances screen; click your instance. Choose `Contact flows` from the
    left toolbar. Click `Bot`; then click the drop-down menu to find the `MarketNanny`
    bot entry, select it, and then select the `Add Lex Bot` link to save it:![Figure
    5.17: The Contact flow screen with the Lex bot''s selection drop-down'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_17.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.17: The Contact flow screen with the Lex bot''s selection drop-down'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The following screenshot shows `MarketNanny` added to the Lex bot:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.18: Showing the Lex bot under Lex bots'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B16061_05_18.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.18: Showing the Lex bot under Lex bots'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, you can navigate back to the `Dashboard` screen by selecting the `Overview`
    link and clicking on the `Login URL` button and then enter the credentials for
    your Amazon Connect instance. The `Dashboard` screen will open in a new browser
    tab:![Figure 5.19: The Login overview screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_19.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.19: The Login overview screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'On the `Dashboard` screen, select the `View Contact Flows` icon under `5\.
    Create contact flows`:![Figure 5.20: Selecting routing and contact flows from
    the Left Panel screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_20.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.20: Selecting routing and contact flows from the Left Panel screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'This will bring you to a `Contact flows` screen that is similar to the one
    we were just on previously. This is the `Contact flow designer` screen, where
    you can design and create new contact flows:![Figure 5.21: Contact flows screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_21.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.21: Contact flows screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Click the `Create contact flow` button in the upper-right corner of the page
    to create a new contact flow. Name it `MarketNannyFlow`:![Figure 5.22: The Contact
    flow designer screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_22.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.22: The Contact flow designer screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The first node that you will use for your chatbot's contact flow is the `Set
    voice` node. You can find it under the `Set` category and drag it to the graphical
    view to the right of the `Entry point` node, which is already in the view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Connect the output of the `Entry point` node to the input of the `Set voice`
    node by clicking the output circle and dragging it, with your mouse, to the input
    bump on the left of the `Set voice` node:![Figure 5.23: The Contact flow designer
    screen with the Set voice node'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_23.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.23: The Contact flow designer screen with the Set voice node'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, you can set the *properties of the node* by clicking at the top of the
    node. This will bring up a panel on the right-hand side of the screen, with the
    relevant properties that you can set.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For this component, it provides `Language` and `Voice` properties, both of
    which can be set by selecting a value from the dropdown under each property label.
    You can set the values that are appropriate to your scenario, and then click the
    `Save` button:![Figure 5.24: Properties for the Set Voice node'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_24.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.24: Properties for the Set Voice node'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The next node to add is the `Get customer input` node, which you will find
    under the `Interact` tab. You can connect the input of this node to the output
    of the `Set voice` node, just like when you connected `Set voice` to the `Entry
    point` node:![Figure 5.25: Adding the Get customer input node'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_25.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.25: Adding the Get customer input node'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'First, click on the properties icon on the `Get customer input` block, select
    the `Text to speech (Ad hoc)` option, and then click `Enter text` under it. In
    the input textbox, enter a greeting such as the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Feel free to replace this with some other text that may be more interesting
    or appropriate for you.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'This is the text that will be converted into a voice greeting when the `Contact
    center` application first answers the phone:![Figure 5.26: Get customer input
    properties'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_26.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.26: Get customer input properties'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, scroll down the settings pane and select the `Amazon Lex` subsection,
    not the `DTMF` section. Here, you will be able to configure the node to work with
    your chatbot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The `DTMF` section provides a way to specify interactions with the caller via
    button presses on their phone, but we will not cover that here. We are much more
    interested in having our chatbot interact with the caller.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In this section, under `Lex bot`, you can enter the name and alias for your
    chatbot. Under `Name`, enter `MarketNanny`, and under `Alias`, enter `$LATEST`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`$LATEST` is a system-defined alias, which specifies that the contact center
    will always access the most recently published version of the `MarketNanny` chatbot:![Figure
    5.27: Amazon Lex properties in the Get customer input properties'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_27.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.27: Amazon Lex properties in the Get customer input properties'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Finally, specify the `GetQuote` intent under the `Intents` section. Since that
    is the only intent we are currently working with, click on the `Save` button:![Figure
    5.28: The GetQuote intent in the Get customer input node'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_28.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.28: The GetQuote intent in the Get customer input node'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You can now see that the `Get customer input` node has changed to display the
    intent that we specified in its properties pane:![Figure 5.29: Full contact center
    flow'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_29.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.29: Full contact center flow'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You can finish the flow by adding two more nodes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Play prompt` from the `Interact` section: Set the `Prompt` property to `Text
    to speech (Ad hoc)` in the property pane, and enter text in the textbox under
    `Enter text` as follows:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: '`Disconnect/hang up` from the `Terminate`/`Transfer` section. Do not set any
    properties.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Connect the nodes as shown previously. Connect the outputs of the `Default`
    and `Error` states in `Get customer input` to the input of the `Disconnect/Hang
    up` node.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the `GetQuote` output to the `Play prompt` node.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the output from `Play prompt` to the input of `Set voice`. This ensures
    that you can interact with your chatbot for as long as you keep asking the right
    questions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Finally, click the `Save` button in the top-right corner of the screen, and
    then select the `Publish` button to publish the contact flow:![Figure 5.30: The
    Save and Publish buttons'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_30.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.30: The Save and Publish buttons'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As the final step, you will connect your call center phone number to the new
    contact flow you have just created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'From the menu panel on the left-hand side of the screen, select the `Routing`
    menu. Then, from that, select the `Phone numbers` item:![Figure 5.31: Selecting
    Routing and Phone numbers from the Dashboard'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_31.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.31: Selecting Routing and Phone numbers from the Dashboard'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will bring up the `Manage Phone` numbers screen, where you can select the
    phone number that you wish to use for `MarketNanny`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Selecting the phone number will bring you to the `Edit Phone number` page:![Figure
    5.32: The Edit Phone number page'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_32.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.32: The Edit Phone number page'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Here, click the dropdown under `Contact flow/IVR` and select or type in the
    name of your new contact flow: `MarketNannyFlow`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Call your contact center phone number to verify that you can interact with your
    `MarketNanny` chatbot by speaking to it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can see the logs in the S3 bucket. You can also see the logs in `CloudWatch`
    > `Log groups`. In our case, we could see `jarvis42`, as shown in the following screenshot:![Figure
    5.33: Amazon CloudWatch console'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16061_05_33.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.33: Amazon CloudWatch console'
  prefs: []
  type: TYPE_NORMAL
- en: In this exercise, we set up our very own call center and we even connected our
    MarketNanny chatbot to the call center. Now, let's test what we've learned so
    far through an interesting activity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Activity 5.01: Creating a Custom Bot and Connecting the Bot with Amazon Connect'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this activity, we are going to create an **Amazon Lex** bot to check a user's
    **Account Balance**. The bot will be controlled via **Automatic Speech Recognition**
    (**ASR**) and **Natural Language Understanding** (**NLU**) capacities, which are
    similar innovations that power Amazon's Alexa.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this activity, we will consider the following user story: as a user, you
    can check your account balance via the voice user interface using your phone.'
  prefs: []
  type: TYPE_NORMAL
- en: Extrapolating, we can see that we need Amazon Connect, a phone number, a Lex
    bot, and a Lambda to look up the account balance. We will make a simplifying assumption
    that the user has only one account—otherwise, we would need more prompts to select
    an account and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps to create the Account Balance service via Amazon Connect are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.34: Steps to create the Account Balance service via Amazon Connect'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16061_05_34.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 5.34: Steps to create the Account Balance service via Amazon Connect'
  prefs: []
  type: TYPE_NORMAL
- en: We will store the account balance in an S3 bucket for simplicity. In real life,
    the call to a bucket will be replaced by a SQL call to a database, for example,
    `SELECT account_balance from balance_table WHERE account_number = <account Number>`
    or something similar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, we will create a Lambda to access the bucket and return the balance value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will then create a Lex bot to get the account balance. That way, we can be
    omnichannel—a customer can get their account balance via a chatbot or by calling
    our contact center.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, of course, we create a contact flow in Amazon Connect to activate the
    bot via a call and get the balance via phone.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The solution for this activity can be found on page 312.
  prefs: []
  type: TYPE_NORMAL
- en: Hope this activity and this chapter was interesting and that you are motivated
    to try even more complex and exciting bots that can answer all kind of questions.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we ventured into the world of voice—we learned about the basics
    of Amazon Connect, and even looked at the free tier version of Amazon Connect.
    Later, we explored the sample voice-based chatbot application using Amazon Connect,
    Lex, and Lambda. Then, we created a personal call center.
  prefs: []
  type: TYPE_NORMAL
- en: You have also learned how to obtain a free phone number for a personal call
    center, and about using Amazon Lex chatbots with Amazon Connect with contact flows
    and different templates. Finally, you learned how to connect the call center to
    your Lex chatbot.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will learn how to analyze images with computer vision
    using Amazon Rekognition services. Amazon Rekognition services are used to detect
    objects, scenes, and text in images. It is also used to match faces in different
    images and to compare how closely images are interlinked with each other.
  prefs: []
  type: TYPE_NORMAL
