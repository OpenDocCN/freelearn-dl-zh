["```py\nfrom timeit import default_timer as timer\nfrom datetime import timedelta\nstart = timer()\nelements = list(range(1_000_000)) data = []\nfor el in elements: if not el % 2: # if even number\ndata.append(el)\nend = timer() print(timedelta(seconds=end-start)) \n```", "```py\nFile \"C:\\Users\\vaalt\\Anaconda3\\lib\\site-packages\\streamlit\\elements\\text_widgets.py\", line 266, in _text_input text_input_proto.value = widget_state.value\nTypeError: [] has type list, but expected one of: bytes, Unicode \n```", "```py\nclass UnderscoreAdder:\ndef __init__(self, word):\n    self.word = word\ndef add_underscores(self):\n    return \"_\".join(self.word)  # More efficient \n```", "```py\nmodel=tf.keras.Sequential()\nmodel.add(tf.keras.layers.Conv2D(32,kernel_ size=(3,3),activation='relu',input_shape=\n(32,32,1)))\nmodel.add(tf.keras.layers.MaxPooling2D(pool_size=(2,2))) model.add(tf.keras.layers.Flatten()) model.add(tf.keras.layers.Dense(1024,activation='relu')) model.add(tf.keras.layers.Dense(10,activation='softmax')) \n```", "```py\nfrom tensorflow.keras import layers\n# Load the MNIST dataset\n(x_train, y_train), (x_test, y_test) = keras.datasets.mnist.load_ data()\n# Preprocess the data\nx_train = x_train.reshape(-1, 28*28) / 255.0 x_test = x_test.reshape(-1, 28*28) / 255.0 y_train = keras.utils.to_categorical(y_train) y_test = keras.utils.to_categorical(y_test)\n# Define the model architecture model = keras.Sequential([\nlayers.Dense(256, activation='relu', input_shape=(28*28,)), layers.Dense(128, activation='relu'),\nlayers.Dense(10, activation='softmax')\n])\n# Compile the model\nmodel.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n# Train the model\nhistory = model.fit(x_train, y_train, validation_split=0.2, epochs=10, batch_size=128)\n# Evaluate the model\ntest_loss, test_acc = model.evaluate(x_test, y_test, verbose=0) print('Test accuracy:', test_acc) \n```", "```py\n IDENTIFICATION DIVISION.\n       PROGRAM-ID. AddTen.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01  INPUT-NUMBER    PIC 9(5).\n       01  RESULT-NUMBER   PIC 9(5).\n       PROCEDURE DIVISION.\n           DISPLAY 'Enter a number: '.\n           ACCEPT INPUT-NUMBER.\n           COMPUTE RESULT-NUMBER = INPUT-NUMBER + 10.\n           DISPLAY 'Result after adding 10: ' RESULT-NUMBER.\n           STOP RUN. \n```"]