["```py\n loader = WebBaseLoader(\n    web_paths=(\"https://kbourne.github.io/chapter1.html\",)\n    bs_kwargs=dict(\n        parse_only=bs4.SoupStrainer(\n            class_=(\"post-content\", \"post-title\",\n                    \"post-header\")\n       )\n    ),\n)\ndocs = loader.load()\n```", "```py\n text_splitter = SemanticChunker(OpenAIEmbeddings())\nsplits = text_splitter.split_documents(docs)\n```", "```py\n text_splitter = RecursiveCharacterTextSplitter(\n   chunk_size=1000, chunk_overlap=200)\nsplits = text_splitter.split_documents(docs)\n```", "```py\n vectorstore = Chroma.from_documents(\n                   documents=splits,\n                   embedding=OpenAIEmbeddings())\nretriever = vectorstore.as_retriever()\n```", "```py\n # Post-processing\ndef format_docs(docs):\n    return \"\\n\\n\".join(doc.page_content for doc in docs)\n```", "```py\n {\"context\": retriever | format_docs, \"question\": RunnablePassthrough()}\n```", "```py\n rag_chain.invoke(\"What are the Advantages of using RAG?\")\n```", "```py\n rag_chain = (\n    {\"context\": <st c=\"13492\">retriever | format_docs</st>,\n     \"question\": RunnablePassthrough()}\n    | prompt\n    | llm\n    | StrOutputParser()\n)\n```", "```py\n def format_docs(docs):\n    return \"\\n\\n\".join(doc.page_content for doc in docs)\n```", "```py\n<st c=\"15601\">{\"context\": retriever | format_docs, \"question\": RunnablePassthrough()}</st>\n```", "```py\n retriever = vectorstore.as_retriever()\n```", "```py\n vectorstore = Chroma.from_documents(\n                   documents=splits,\n                   embedding=OpenAIEmbeddings())\n```", "```py\n prompt = hub.pull(\"jclemens24/rag-prompt\")\n```", "```py\n llm = ChatOpenAI(model_name=\"gpt-4o\", temperature=0)\n```", "```py\n | prompt\n  | llm\n```", "```py\n rag_chain = (\n    {\"context\": retriever | format_docs,\n     \"question\": RunnablePassthrough()}\n    | <st c=\"19356\">prompt</st> | llm\n    | StrOutputParser()\n)\n```", "```py\n prompt = hub.pull(\"jclemens24/rag-prompt\")\nprompt.input_variables\n```", "```py\n ['context', 'question']\n```", "```py\n {\"<st c=\"19743\">context</st>\": retriever | format_docs,\n \"<st c=\"19781\">question</st>\": RunnablePassthrough()}\n```", "```py\n input_variables=['context', 'question'] messages=[HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['context', 'question'], template=\"You are an assistant for question-answering tasks. Use the following pieces of retrieved-context to answer the question. If you don't know the answer, just say that you don't know.\\nQuestion: {question} \\nContext: {context} \\nAnswer:\"))]\n```", "```py\n template=\"You are an assistant for question-answering tasks. Use the following pieces of retrieved-context to answer the question. If you don't know the answer, just say that you don't know.\\nQuestion: <st c=\"21193\">{question}</st> \\nContext: <st c=\"21215\">{context}</st> \\nAnswer:\"\n```", "```py\n rag_chain = (\n    {\"context\": retriever | format_docs,\n     \"question\": RunnablePassthrough()}\n    | prompt\n    | <st c=\"22346\">llm</st> | StrOutputParser()\n)\n```", "```py\n llm = ChatOpenAI(model_name=\"gpt-4o\", temperature=0)\n```", "```py\n llm_only = llm.invoke(\"Answering in less than 100 words,\n    what are the Advantages of using RAG?\")\nprint(llm_only.content)\n```", "```py\n RAG (Red, Amber, Green) status reporting allows for clear and straightforward communication of project progress or issues. It helps to quickly identify areas that need attention or improvement, enabling timely decision-making. RAG status also provides a visual representation of project health, making it easy for stakeholders to understand the current situation at a glance. Additionally, using RAG can help prioritize tasks and resources effectively, increasing overall project efficiency and success.'\n```", "```py\n rag_chain.invoke(\"What are the Advantages of using RAG?\")\n```", "```py\n rag_chain.invoke(\"What are the Advantages of using RAG?\")\n```", "```py\n AIMessage(content=\"The advantages of using RAG include improved accuracy and relevance of responses generated by large language models, customization and flexibility in responses tailored to specific needs, and expanding the model's knowledge beyond the initial training data.\")\n```", "```py\n 'The advantages of using RAG (Retrieval Augmented Generation) include improved accuracy and relevance, customization, flexibility, and expanding the model's knowledge beyond the training data. This means that RAG can significantly enhance the accuracy and relevance of responses generated by large language models, tailor responses to specific needs, and access and utilize information not included in initial training sets, making the models more versatile and adaptable.'\n```"]