["```py\n    //** Behavior Tree for an AI Controller (Added in Chapter 2)\n    UPROPERTY(EditAnywhere, BlueprintReadWrite, category=AI)\n    UBehaviorTree* BehaviorTree;\n```", "```py\npublic:\n     AUnrealAIBookCharacter();\n\n    /** Base turn rate, in deg/sec. Other scaling may affect final turn rate. */\n     UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Camera)\n     float BaseTurnRate;\n\n    /** Base look up/down rate, in deg/sec. Other scaling may affect final rate. */\n     UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Camera)\n     float BaseLookUpRate;\n\n *//** Behavior Tree for an AI Controller (Added in Chapter 2)*\n *UPROPERTY(EditAnywhere, BlueprintReadWrite, category=AI)*\n *UBehaviorTree* BehaviorTree;*\n```", "```py\n#include \"CoreMinimal.h\"\n#include \"GameFramework/Character.h\"\n#include \"BehaviorTree/BehaviorTree.h\" #include \"UnrealAIBookCharacter.generated.h\"\n```", "```py\nUCLASS()\nclass UNREALAIBOOK_API AMyFirstAIController : public AAIController\n{\n     GENERATED_BODY()\n\nprotected:\n\n //** override the OnPossess function to run the behavior tree.\n void OnPossess(APawn* InPawn) override;\n\n};\n```", "```py\n#include \"MyFirstAIController.h\"\n#include \"UnrealAIBookCharacter.h\" #include \"BehaviorTree/BehaviorTree.h\"\n```", "```py\nvoid AMyFirstAIController::OnPossess(APawn* InPawn)\n{\n  Super::OnPossess(InPawn);\n  AUnrealAIBookCharacter* Character = Cast<AUnrealAIBookCharacter>(InPawn);\n  if (Character != nullptr)\n  {\n    UBehaviorTree* BehaviorTree = Character->BehaviorTree;\n    if (BehaviorTree != nullptr) {\n      RunBehaviorTree(BehaviorTree);\n    }\n  }\n}\n```"]