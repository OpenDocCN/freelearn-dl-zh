- en: Different Problems Require Different Solutions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不同的问题需要不同的解决方案
- en: A brief history of, and solutions to game AI
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏人工智能的简要历史及其解决方案
- en: To better understand how to overcome the problems that game developers are currently
    facing, we need to dig a little bit into the history of video game development
    and take a look at the problems and their solutions that were so important at
    the time. Some of them were so avant-garde that they actually changed the entire
    history of video game design itself, and we still use the same methods today to
    create unique and enjoyable games.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解如何克服游戏开发者目前面临的问题，我们需要稍微深入了解一下电子游戏开发的历史，并看看当时那些重要的问题及其解决方案。其中一些解决方案如此前卫，以至于它们实际上改变了电子游戏设计本身的历史，而今天我们仍然使用相同的方法来创造独特且令人愉悦的游戏。
- en: One of the first relevant marks that is always worth mentioning when talking
    about game AI is computer chess programmed to compete against humans. It was the
    perfect game to start experimenting with artificial intelligence, because chess
    usually requires a lot of thought and planning ahead, something that a computer
    couldn't do at the time because it was necessary to have human features in order
    to successfully play and win the game. So, the first step was to make it able
    for the computer to process the game rules and think for itself in order to make
    a good judgement of the next move that the computer should do to achieve the final
    goal, that is, winning by checkmating. The problem is that chess has many possibilities;
    so, even if the computer had a perfect strategy to beat the game, it was necessary
    to recalculate that strategy, adapting it, changing, or even creating a new one
    every time something went wrong with the first strategy.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在谈论游戏人工智能时，首先值得提到的相关标志之一是编程用于与人类竞争的计算机象棋。这是一款非常适合开始尝试人工智能实验的游戏，因为象棋通常需要大量的思考和提前规划，这在当时是计算机无法做到的，因为为了成功地玩游戏并赢得比赛，计算机必须具备人类特征。因此，第一步是让计算机能够处理游戏规则并自行思考，以便对计算机应该采取的下一步做出良好的判断，以达到最终目标，即通过将军获胜。问题是象棋有无数种可能性；所以，即使计算机有一个完美的策略来击败游戏，每次第一个策略出现问题时，都必须重新计算那个策略，适应它，改变它，甚至创造一个新的策略。
- en: Humans can play differently every time; this makes it a huge task for the programmers
    to input all the possible data into the computer in order to win the game. So,
    writing all the possibilities that could exist wasn't a viable solution, and because
    of that, the programmers needed to think again about the problem. Then, one day,
    they finally came out with a better solution, that is, to make the computer decide
    for itself every turn, choosing the most plausible option for each turn; that
    way, the computer could adapt to any possibility in the game. Yet, this involved
    another problem–the computer would only think the short-term moves, and not create
    any plans to defeat the human in the future moves; so, it was easy to play against
    it, but at least we started to have something going on. It was decades later that
    someone defined the word **Artificial Intelligence** (**AI**) by solving the first
    problem that many researchers had by trying to create a computer that was capable
    of defeating a human player. Arthur Samuel is the person responsible for creating
    a computer that could learn for itself and memorize all the possible combinations.
    That way, there wasn't necessarily any human intervention and the computer could
    actually think on its own, and that was a huge step that is still impressive even
    by today's standards.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 人类可以每次都玩得不同；这使得程序员将所有可能的数据输入计算机以赢得游戏成为一项巨大的任务。因此，写下所有可能存在的情况并不是一个可行的解决方案，正因为如此，程序员需要再次思考这个问题。然后，有一天，他们终于提出了一个更好的解决方案，那就是让计算机在每个回合自行决定，选择每个回合最可能的选项；这样，计算机就能适应游戏中的任何可能性。然而，这又带来了另一个问题——计算机只会考虑短期移动，而不会为未来移动制定击败人类的计划；因此，对抗它很容易，但至少我们开始有所进展。几十年后，有人通过解决第一个问题来定义了“人工智能”（**AI**）这个词，即通过尝试创造一个能够击败人类玩家的计算机来解决许多研究人员的问题。亚瑟·塞缪尔是负责创建能够自行学习和记住所有可能组合的计算机的人。这样，就不一定需要任何人类干预，计算机实际上可以独立思考，这是一个巨大的进步，即使在今天也仍然令人印象深刻。
- en: Enemy AI in video games
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电子游戏中的敌人人工智能
- en: Now, let's move to the video game industry and analyze how the first enemies
    and game obstacles were programmed; was it that different from what we are doing
    now? Let's find out.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Single-player games with AI enemies started to appear in the 1970s, and soon,
    some games started to elevate the quality and expectations of what defines a video
    game AI. Some of those examples were released for arcade machines, such as *Speed
    Race* from *Taito* (a racing video game), or *Qwak* (a duck hunting game using
    a light gun), and *Pursuit* (an aircraft fighter) both from Atari. Other notable
    examples are the text-based games released for the first personal computers, such
    as *Hunt the Wumpus* and *Star Trek*, which also had enemies. What made those
    games so enjoyable was precisely that the AI enemies that didn't reacted like
    any other before because they had random elements mixed with the traditional stored
    patterns, making them unpredictable, and hence providing a unique experience every
    time you played the game. However, that was only possible due to the incorporation
    of microprocessors that expanded the capabilities of a programmer at that time.
    Space Invaders brought the movement patterns and *Galaxian* improved and added
    more variety, making the AI even more complex. *PAC-MAN* later on brought movement
    patterns to the maze genre.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: The influence that the AI design in *PAC-MAN* had is just as significant as
    the influence of the game itself. This classic arcade game makes the player believe
    that the enemies in the game are chasing him, but not in a crude manner. The ghosts
    are chasing the player (or evading the player) in a different way as if they have
    an individual personality. This gives people the illusion that they are actually
    playing against four or five individual ghosts rather than copies of the same
    computer enemy.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: After that, *Karate Champ* introduced the first AI fighting character and *Dragon
    Quest* introduced the tactical system for the RPG genre; over the years, the list
    of games that explored artificial intelligence and used it to create unique game
    concepts kept expanding, and all of that came from a single question, how can
    we make a computer capable of beating a human in a game?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: All the games mentioned above are of a different genre, and they are unique
    in their style, but all of them used the same method for the AI called **finite-state
    machine** (**FSM**). Here, the programmer inputs all the behaviors necessary for
    the computer to challenge the player, just like the computer that first played
    chess. The programmer defined exactly how the computer should behave on different
    occasions in order to move, avoid, attack, or perform any other behavior to challenge
    the player, and that method is used even in the latest big budget games of today.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ac91d471-d49c-4ccf-9a4b-838f9e22fb0a.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
- en: From simple to smart and human-like AI
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Programmers face many challenges while developing an AI character, but one of
    the greatest challenges is adapting the AI movement and behavior in relation to
    what the player is currently doing, or will do in future actions. The difficulty
    exists because the AI is programmed with predetermined states, using probability
    or possibility maps in order to adapt their movement and behavior according to
    the player. This technique can become very complex if the programmer extends the
    possibilities of the AI decisions, just like the chess machine that has all the
    possible situations that may occur in the game.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发人工智能角色时，程序员面临着许多挑战，其中最大的挑战之一是使人工智能的动作和行为适应玩家当前的行为，或未来可能的行为。这种困难存在的原因是因为人工智能被编程为具有预定的状态，使用概率或可能性图来根据玩家的行为调整其动作和行为。如果程序员扩展了人工智能决策的可能性，这种技术可能会变得非常复杂，就像具有游戏中可能出现的所有可能情况的棋机一样。
- en: It's a huge task for the programmer because it's necessary to determine what
    the player can do and how the AI will react to each action of the player, and
    that takes a lot of CPU power. To overcome that challenge, programmers started
    to mix possibility maps with probabilities and perform other techniques that let
    the AI decide for itself on how it should react according to the player's actions.
    These factors are important to be considered while developing an AI that elevates
    the game quality, as we are about to discover.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于程序员来说，这是一个巨大的任务，因为需要确定玩家可以做什么，以及人工智能将如何对玩家的每个动作做出反应，这需要大量的CPU功率。为了克服这个挑战，程序员开始将可能性图与概率混合，并执行其他让人工智能根据玩家的动作自行决定如何反应的技术。在开发能够提高游戏质量的人工智能时，这些因素是需要考虑的，正如我们即将发现的。
- en: 'Games kept evolving and players got even more exigent, not only with the visual
    quality but also with the capabilities of the AI enemies and the allied characters.
    To deliver new games that took into consideration the player expectations, programmers
    started to write even more states for each character, creating new possibilities
    and more engaging enemies, implementing important allied characters, which meant
    more things for the player to do, and creating a lot more features that helped
    redefine different genres and created new ones. Of course, this was also possible
    because technology kept improving, allowing developers to explore even more artificial
    intelligence in video games. A great example of this that is worth mentioning
    is *Metal Gear Solid*, the game that brought a new genre to the video game industry
    by implementing stealth elements, instead of the popular straightforward shooting.
    However, those elements couldn''t be fully explored as Hideo Kojima intended because
    of the hardware limitations at the time. Jumping forward from the third to the
    fifth generation of consoles, Konami, and Hideo Kojima presented the same title,
    but this time with a lot more interactions, possibilities, and behaviors from
    the AI elements of the game, making it so successful and important in video game
    history that it''s easy to see its influence in a large number of games that came
    after *Metal Gear Solid*:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏不断进化，玩家对视觉质量以及人工智能敌人的能力和盟友角色的要求也越来越高。为了满足玩家的期望，程序员开始为每个角色编写更多的状态，创造新的可能性，并创造更具吸引力的敌人，实施重要的盟友角色，这意味着玩家有更多的事情要做，并创造了更多帮助重新定义不同类型并创造新类型的特性。当然，这也得益于技术的不断进步，使得开发者能够探索更多视频游戏中的人工智能。一个值得提到的例子是
    *Metal Gear Solid*，这款游戏通过实施潜行元素，而不是流行的直接射击，为视频游戏行业带来了一种新的类型。然而，由于当时的硬件限制，这些元素无法完全按照小岛秀夫的意图进行探索。从第三代跳到第五代游戏机，科乐美和小岛秀夫推出了同样的标题，但这次游戏中的AI元素有了更多的交互、可能性和行为，使其在视频游戏历史上如此成功和重要，以至于我们可以很容易地看到它在
    *Metal Gear Solid* 之后的大量游戏中的影响：
- en: '![](img/0c09dc82-169a-44b7-a09f-7f9bca6b02b3.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0c09dc82-169a-44b7-a09f-7f9bca6b02b3.jpg)'
- en: Metal Gear Solid - Sony Playstation 1
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Metal Gear Solid - 索尼PlayStation 1
- en: Visual and audio awareness
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视觉和听觉意识
- en: 'The game in the preceding screenshot implemented visual and audio awareness
    for the enemy AI, a feature that later on we''ll explore in detail in this book.
    This feature established the genre that we know today as a stealth game. So, the
    game uses Path Finding and a FSM, features that were already known from the beginning
    of the video game industry; but, in order to create something new, they also created
    new features, such as interaction with the environment, navigation behavior, visual/audio
    awareness, and AI interaction; a lot of things that didn''t exist at the time
    but that are widely used today in different game genres, such as sports, racing,
    fighting, or FPS games, were also introduced:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c7589266-1036-4960-93c3-77b2542b7544.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
- en: After that huge step for game design, developers still faced other problems,
    or should I say, these new possibilities brought even more problems, because they
    were not perfect. The AI still didn't react as a real person, and many other elements
    were necessary to be implemented, not only in stealth games, but in all other
    genres, and one in particular needed to improve their AI to make the game feel
    realistic.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: We are talking about sports games, especially those that tried to simulate real-world
    team behaviors, such as basketball or football. interaction with the player is
    not the only thing that we need to care about; we left chess long time ago, where
    it was 1 versus 1\. Now, we want more, and watching other games get realistic
    AI behaviors, sport fanatics started to ask for the same features in their
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: favorite games; after all, those games was based on real-world events, and for
    that reason, the AI should react as realistically as possible.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point, developers and game designers started to take into consideration
    AI interaction with itself, and that just like the enemies from *PAC-MAN*, the
    player should get the impression that each character in the game thinks for itself
    and reacts differently to the others. If we analyze it closely, the AI that is
    present in a sports game is structured like an FPS or RTS game, using different
    animation states, general movements, interactions, individual decisions, and finally
    tactics and collective decisions. So, it shouldn''t be a surprise that sports
    games could reach the same level of realism as the other genres that had already
    greatly evolved in terms of AI development. However, there are few problems that
    only sports games had at the time: how to make so many characters on the same
    screen react differently but at the same time work together to achieve the same
    objective. With this problem in mind, developers started to improve the individual
    behaviors of each character, not only for the AI that was playing against the
    player but also for the AI that was playing alongside the player. Once again,
    Finite State Machines made up a crucial part of Artificial Intelligence, but the
    special touch that helped to create a realistic approach in the sports genre was
    the anticipation and awareness used in stealth games. The computer needed to calculate
    what the player was doing, where the ball was going, and coordinate all of that,
    as well as give a false impression of a team mindset toward the same plan. Combining
    the new features used in the new genre of stealth games with a vast number of
    characters on the same screen, it was possible to innovate the sports genre by
    creating a sports simulation type of game, which has gained so much popularity
    over the years. This helps us to understand that we can use almost the same methods
    for any type of game, even if it looks completely different; the core principles
    that we saw in the computer that played chess is still valuable to the sports
    game released 30 years later.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，开发者和游戏设计师开始考虑人工智能之间的交互，就像来自 *PAC-MAN* 的敌人一样，玩家应该有印象，游戏中的每个角色都在独立思考，并且对其他角色有不同的反应。如果我们仔细分析，体育游戏中的AI结构类似于FPS或RTS游戏，使用不同的动画状态、一般动作、交互、个体决策，最终是战术和集体决策。因此，体育游戏能够达到与其他已经在大规模AI发展中取得巨大进步的游戏类型相同的真实感水平并不令人惊讶。然而，当时只有体育游戏存在一些问题：如何在同一屏幕上让这么多角色有不同的反应，同时又能协同工作以实现相同的目标。带着这个问题，开发者开始改进每个角色的个体行为，这不仅是为了与玩家对抗的AI，也是为了与玩家一起玩的AI。再次强调，有限状态机是人工智能的一个关键部分，但帮助在体育游戏中创造现实主义方法的是潜行游戏中使用的预判和意识。计算机需要计算玩家的行为、球的方向，并协调所有这些，同时还要给团队对同一计划的思维留下一个假象。将潜行游戏新类型中使用的功能与同一屏幕上的大量角色相结合，通过创建一种体育模拟类型的游戏，这种游戏在多年中获得了巨大的流行度。这有助于我们理解，我们可以为任何类型的游戏使用几乎相同的方法，即使它们看起来完全不同；我们在30年前发布的体育游戏中看到的计算机的核心原则仍然是有价值的。
- en: 'Let''s move on to our last example, which also has great value in terms of
    how an AI character should behave to make it more realistic: the game is F.E.A.R.,
    developed by Monolith Productions. What made this game so special in terms of
    Artificial Intelligence was the dialog between the enemy characters. While it
    wasn''t an improvement from a technical point of view, it was definitely something
    that helped to showcase all of the development work that was put into the characters''
    AI, and this is so crucial because if the AI doesn''t say it, it didn''t happen.
    This is an important factor to take into consideration while creating a realistic
    AI character, giving the illusion that it''s real; that means the false impression
    that the computer reacts like humans, and humans interact, so the AI should do
    the same. Not only did the dialog help to create a human-like atmosphere, it also
    helped to exhale all of the development put on the character that otherwise the
    player wouldn''t notice was there. When the AI detects the player for the first
    time, it shouts that it found the player; when the AI loses sight of the player,
    it expresses that. When the squad of AI''s are trying to find the player or ambush
    him, they speak about that, leaving the player imagining that the enemy is really
    capable of thinking and planning against him. Why is this so important? Because
    if we only had numbers and mathematical equations for the characters, they will
    react that way, without any human features, just math, and to make it look more
    human, it''s necessary to input mistakes, errors, and dialog into the character
    AI, just to distract the player from the fact that he''s playing against a machine.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续到最后一个例子，这个例子在如何使人工智能角色更加逼真方面也具有很高的价值：这个游戏是Monolith Productions开发的《F.E.A.R.》。在人工智能方面，这个游戏之所以特别，是因为敌对角色的对话。虽然从技术角度来看并没有改进，但它确实有助于展示投入角色人工智能开发的所有努力，这是至关重要的，因为如果人工智能没有说出来，那么它就没有发生。这是在创建逼真的人工智能角色时需要考虑的重要因素，给人们造成它是真实的错觉；这意味着计算机的反应像人类一样，人类如何互动，所以人工智能也应该这样做。对话不仅有助于营造类似人类的氛围，还帮助释放了所有投入角色中的开发，否则玩家不会注意到这些。当人工智能第一次发现玩家时，它会大声喊出它找到了玩家；当人工智能失去对玩家的视线时，它会表达这一点。当人工智能小队试图找到玩家或伏击他时，他们会谈论这件事，让玩家想象敌人真的能够对他进行思考和计划。为什么这如此重要？因为如果我们只有角色的数字和数学方程式，它们会那样反应，没有任何人类特征，只有数学，为了使其看起来更人性化，有必要将错误、错误和对话输入到角色人工智能中，以分散玩家对他正在与机器对战的这一事实的注意力。
- en: The history of video game artificial intelligence is still far from perfect,
    and it's possible that it will take us decades to improve just a little bit more
    from what we achieved between the early 1950s and this present day, so don't be
    afraid of exploring what you are about to learn, combine, change, or delete some
    of the things to find different results, because great games did it in the past
    and they had a lot of success with it.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 电子游戏人工智能的历史仍然远未完善，可能需要数十年的时间才能从20世纪50年代初到今天我们所取得的成就中再提高一点，所以不要害怕探索你即将学习、结合、更改或删除一些东西以找到不同结果的内容，因为过去的大游戏就是这样做的，并且它们在这方面取得了很大的成功。
- en: Summary
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about the impact of AI on the video game history,
    how everything started from a simple idea to have a computer to compete against
    humans in traditional games, and how that naturally evolved into the world of
    video games. You also learned about the challenges and difficulties that were
    present since the day one, and how coincidentally, programmers kept facing and
    still face the same problems. In the next chapter, we'll start from that precise
    point, the most used technique and the technique that caused a lot of debate and
    evolution that was present on past games as well on present and futures ones.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了人工智能对电子游戏历史的影响，从最初简单地将计算机用于与人类在传统游戏中竞争的想法开始，以及它是如何自然地发展到电子游戏世界的。你还了解了从第一天起就存在的挑战和困难，以及程序员偶然面对并仍然面临相同的问题。在下一章中，我们将从那个精确的点开始，即最常用的技术，以及在过去、现在和未来的游戏中引起了很多争议和演变的技术。
