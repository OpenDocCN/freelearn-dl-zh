["```py\npip install safetensors\n```", "```py\nimport torch\nfrom diffusers import StableDiffusionPipeline\npipe = StableDiffusionPipeline.from_pretrained(\n    \"runwayml/stable-diffusion-v1-5\",\n    torch_dtype = torch.float16\n)\n```", "```py\nfrom diffusers import StableDiffusionPipeline\npipe = StableDiffusionPipeline.from_pretrained(\n    \"runwayml/stable-diffusion-v1-5\",\n    torch_dtype = torch.float16,\n    cache_dir = r\"D:\\my_model_folder\"\n)\n```", "```py\nimport torch\nfrom diffusers import StableDiffusionPipeline\nmodel_path = r\"model/path/path/model_name.safetensors\"\npipe = StableDiffusionPipeline.from_single_file(\n    model_path,\n    torch_dtype = torch.float16\n)\n```", "```py\nimport torch\nfrom diffusers import StableDiffusionPipeline\nmodel_path = r\"model/path/path/model_name.ckpt\"\npipe = StableDiffusionPipeline.from_single_file(\n    model_path,\n    torch_dtype = torch.float16\n)\n```", "```py\nimport torch\nfrom diffusers import StableDiffusionPipeline\npipe = StableDiffusionPipeline.from_pretrained(\n    \"runwayml/stable-diffusion-v1-5\",\n    torch_dtype    = torch.float16,\n    safety_checker = None # or load_safety_checker = False\n)\n```", "```py\nimport torch\nfrom diffusers import StableDiffusionPipeline\nmodel_path = r\"model/path/path/model_name.ckpt\"\npipe = StableDiffusionPipeline.from_single_file(\n    model_path,\n    torch_dtype = torch.float16,\n    load_safety_checker = False\n)\n```", "```py\nckpt_checkpoint_path = r\"D:\\temp\\anythingV3_fp16.ckpt\"\ntarget_part = r\"D:\\temp\\anythingV3_fp16\"\npipe = download_from_original_stable_diffusion_ckpt(\n    ckpt_checkpoint_path,\n    from_safetensors = False,\n    device = \"cuda:0\"\n)\npipe.save_pretrained(target_part)\n```", "```py\nfrom diffusers.pipelines.stable_diffusion.convert_from_ckpt import \\\n    download_from_original_stable_diffusion_ckpt\nsafetensors_checkpoint_path = \\\n    r\"D:\\temp\\deliberate_v2.safetensors\"\ntarget_part = r\"D:\\temp\\deliberate_v2\"\npipe = download_from_original_stable_diffusion_ckpt(\n    safetensors_checkpoint_path, \n    from_safetensors  = True,\n    device = \"cuda:0\"\n)\npipe.save_pretrained(target_part)\n```", "```py\n# load local diffusers model files using from_pretrained function\nimport torch\nfrom diffusers import StableDiffusionPipeline\npipe = StableDiffusionPipeline.from_pretrained(\n    r\"D:\\temp\\deliberate_v2\",\n    torch_dtype = torch.float16,\n    safety_checker = None\n).to(\"cuda:0\")\nimage = pipe(\"a cute puppy\").images[0]\nimage\n```", "```py\n    import torch\n    ```", "```py\n    from diffusers import (\n    ```", "```py\n        StableDiffusionXLPipeline, StableDiffusionXLImg2ImgPipeline)\n    ```", "```py\n    # load base model\n    ```", "```py\n    base_model_checkpoint_path = \\ \n    ```", "```py\n        r\"path/to/sd_xl_base_1.0.safetensors\"\n    ```", "```py\n    base_pipe = StableDiffusionXLPipeline.from_single_file(\n    ```", "```py\n        base_model_checkpoint_path,\n    ```", "```py\n        torch_dtype = torch.float16,\n    ```", "```py\n        use_safetensors = True\n    ```", "```py\n    )\n    ```", "```py\n    # load refiner model\n    ```", "```py\n    refiner_model_checkpoint_path = \\\n    ```", "```py\n        r\"path/to/sd_xl_refiner_1.0.safetensors\"\n    ```", "```py\n    refiner_pipe = \\\n    ```", "```py\n        StableDiffusionXLImg2ImgPipeline.from_single_file(\n    ```", "```py\n        refiner_model_checkpoint_path,\n    ```", "```py\n        torch_dtype = torch.float16,\n    ```", "```py\n        use_safetensors = True\n    ```", "```py\n    )\n    ```", "```py\n    import torch\n    ```", "```py\n    from diffusers import (\n    ```", "```py\n        StableDiffusionXLPipeline,\n    ```", "```py\n        StableDiffusionXLImg2ImgPipeline\n    ```", "```py\n    )\n    ```", "```py\n    # load base model\n    ```", "```py\n    base_model_id = \"stabilityai/stable-diffusion-xl-base-1.0\"\n    ```", "```py\n    base_pipe = StableDiffusionXLPipeline.from_pretrained(\n    ```", "```py\n        base_model_id,\n    ```", "```py\n        torch_dtype = torch.float16\n    ```", "```py\n    )\n    ```", "```py\n    # load refiner model\n    ```", "```py\n    refiner_model_id = \"stabilityai/stable-diffusion-xl-refiner-1.0\"\n    ```", "```py\n    refiner_pipe = StableDiffusionXLImg2ImgPipeline.from_pretrained(\n    ```", "```py\n        refiner_model_id,\n    ```", "```py\n        torch_dtype = torch.float16\n    ```", "```py\n    )\n    ```", "```py\n    # move model to cuda and generate base image latent\n    ```", "```py\n    from diffusers import EulerDiscreteScheduler\n    ```", "```py\n    prompt = \"\"\"\n    ```", "```py\n    analog photograph of a cat in a spacesuit taken inside the cockpit of a stealth fighter jet,\n    ```", "```py\n    Fujifilm, Kodak Portra 400, vintage photography\n    ```", "```py\n    \"\"\"\n    ```", "```py\n    neg_prompt = \"\"\"\n    ```", "```py\n    paint, watermark, 3D render, illustration, drawing,worst quality, low quality\n    ```", "```py\n    \"\"\"\n    ```", "```py\n    base_pipe.to(\"cuda\")\n    ```", "```py\n    base_pipe.scheduler = EulerDiscreteScheduler.from_config(\n    ```", "```py\n        base_pipe.scheduler.config)\n    ```", "```py\n    with torch.no_grad():\n    ```", "```py\n        base_latents = base_pipe(\n    ```", "```py\n            prompt = prompt,\n    ```", "```py\n            negative_prompt = neg_prompt,\n    ```", "```py\n            output_type = \"latent\"\n    ```", "```py\n        ).images[0]\n    ```", "```py\n    base_pipe.to(\"cpu\")\n    ```", "```py\n    torch.cuda.empty_cache()\n    ```", "```py\n    # refine the image\n    ```", "```py\n    refiner_pipe.to(\"cuda\")\n    ```", "```py\n    refiner_pipe.scheduler = EulerDiscreteScheduler.from_config(\n    ```", "```py\n        refiner_pipe.scheduler.config)\n    ```", "```py\n    with torch.no_grad():\n    ```", "```py\n        image = refiner_pipe(\n    ```", "```py\n            prompt = prompt,\n    ```", "```py\n            negative_prompt = neg_prompt,\n    ```", "```py\n            image = [base_latents]\n    ```", "```py\n        ).images[0]\n    ```", "```py\n    refiner_pipe.to(\"cpu\")\n    ```", "```py\n    torch.cuda.empty_cache()\n    ```", "```py\n    image\n    ```"]