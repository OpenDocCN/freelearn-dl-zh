- en: '*Chapter 12*: IMU Programming with Python'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第12章*：使用Python进行IMU编程'
- en: Modern robots need to know their position relative to the world. In [*Chapter
    11*](B15660_11_Final_ASB_ePub.xhtml#_idTextAnchor219), *Programming Encoders with
    Python*, we looked at how encoders can get an idea of how much the robot has moved
    or turned. However, this turning was relative to where the robot was and had no
    absolute reference. Wheel slipping could lead to false readings. In this chapter,
    you will see more ways the robot can read changes in its position and measure
    its movements.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现代机器人需要知道它们相对于世界的位置。在[*第11章*](B15660_11_Final_ASB_ePub.xhtml#_idTextAnchor219)，*使用Python编程编码器*中，我们探讨了编码器如何获得机器人移动或转向的概览。然而，这种转向是相对于机器人的位置，没有绝对参考。轮胎打滑可能导致错误读数。在本章中，你将看到机器人读取其位置变化和测量其运动的其他方法。
- en: In principle, an **inertial measurement unit** (**IMU**) can give absolute position
    measurements and not slip. In practice, they are complicated. This chapter is
    a small practical tour of adding an IMU to your robot. I will introduce the components
    of an IMU in this chapter. You will also learn how to solder in order to add headers
    to a breakout, a skill that opens up a world of additional robot parts.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 从原则上讲，一个**惯性测量单元**（**IMU**）可以提供绝对位置测量并且不会滑动。在实践中，它们很复杂。本章是向你的机器人添加IMU的小型实用之旅。在本章中，我将介绍IMU的组件。你还将学习如何焊接，以便为扩展板添加引脚，这项技能将为你打开机器人部件的广阔世界。
- en: We'll write some code to try the various functions and see the kind of output
    the sensors provides. We will then make animated visualizations of the sensor
    data. By the end of this chapter, you will be able to work with these advanced
    sensors, have some soldering experience, and put together dashboards for monitoring
    sensors. As you investigate more in robotics, you'll learn that animated dashboards
    will be vital if you want to see what your robot can see.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将编写一些代码来尝试各种功能，并查看传感器提供的输出类型。然后我们将对传感器数据进行动画可视化。到本章结束时，你将能够使用这些高级传感器，有一些焊接经验，并组装仪表盘来监控传感器。随着你在机器人领域的进一步研究，你会发现，如果你想要看到机器人能看到的内容，动画仪表盘将是至关重要的。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Learning more about inertial measurement units
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解更多关于惯性测量单元的信息
- en: Soldering – attaching headers to the IMU
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 焊接 – 将引脚连接到IMU
- en: Attaching the IMU to the robot
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将IMU连接到机器人上
- en: Reading the temperature
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取温度
- en: Reading the gyroscope
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取陀螺仪
- en: Reading the accelerometer
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取加速度计
- en: Reading the magnetometer
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取磁力计
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need the following items:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，你需要以下物品：
- en: The robot from [*Chapter 7*](B15660_07_Final_ASB_ePub.xhtml#_idTextAnchor131),
    *Drive and Turn – Moving Motors with Python*
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自[*第7章*](B15660_07_Final_ASB_ePub.xhtml#_idTextAnchor131)，*使用Python驱动和转向 –
    移动电机*的机器人
- en: The robot code from [*Chapter 11*](B15660_11_Final_ASB_ePub.xhtml#_idTextAnchor219),
    *Programming Encoders with Python*, which can be found at [https://github.com/PacktPublishing/Learn-Robotics-Programming-Second-Edition/tree/master/chapter11](https://github.com/PacktPublishing/Learn-Robotics-Programming-Second-Edition/tree/master/chapter11)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自[*第11章*](B15660_11_Final_ASB_ePub.xhtml#_idTextAnchor219)，*使用Python编程编码器*的机器人代码，可以在[https://github.com/PacktPublishing/Learn-Robotics-Programming-Second-Edition/tree/master/chapter11](https://github.com/PacktPublishing/Learn-Robotics-Programming-Second-Edition/tree/master/chapter11)找到。
- en: An ICM20948 breakout board with headers, such as the Pimoroni PIM448 module
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个带有引脚的ICM20948扩展板，例如Pimoroni PIM448模块
- en: A soldering iron and stand
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 焊接铁和支架
- en: A soldering iron tip-cleaning wire
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 焊接铁尖端清洁线
- en: Solder – should be flux-cored solder for electronics
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 焊料 – 应该是电子用的含助焊剂的焊料
- en: A solder sucker
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 焊接吸锡器
- en: A well-lit bench for soldering
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于焊接的明亮工作台
- en: A ventilated space or extractor
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通风空间或抽风机
- en: Safety goggles
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全眼镜
- en: A breadboard
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面包板
- en: A 2.5 mm standoff kit
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2.5毫米支撑套件
- en: Female-to-female Dupont jumper wires
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 雌性到雌性杜邦跳线
- en: For the complete code for this chapter, please go to [https://github.com/PacktPublishing/Learn-Robotics-Programming-Second-Edition/tree/master/chapter12](https://github.com/PacktPublishing/Learn-Robotics-Programming-Second-Edition/tree/master/chapter12).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取本章的完整代码，请访问[https://github.com/PacktPublishing/Learn-Robotics-Programming-Second-Edition/tree/master/chapter12](https://github.com/PacktPublishing/Learn-Robotics-Programming-Second-Edition/tree/master/chapter12)。
- en: 'Check out the following video to see the Code in Action: [https://bit.ly/38FJgsr](https://bit.ly/38FJgsr)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频以查看代码的实际应用：[https://bit.ly/38FJgsr](https://bit.ly/38FJgsr)
- en: Learning more about IMUs
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解更多关于IMU的信息
- en: An IMU is a combination of sensors designed to sense a robot's movement in a
    3D space. These devices are found in drones, useful in floor-based robots, and
    critical for balancing robots. The IMU is not a single sensor, but a collection
    designed to be used together and have their readings combined.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: IMU是一组设计用于感知机器人在3D空间中运动的传感器。这些设备在无人机中很常见，在基于地面的机器人中很有用，对于平衡机器人至关重要。IMU不是一个单独的传感器，而是一组设计用于一起使用且其读数可以组合的传感器。
- en: These devices are tiny but have their roots in flight hardware with large spinning
    gyroscopes. IMUs use the **micro-electro-mechanical systems** (**MEMS**) technology
    to put mechanical devices on micro-scale chips. They do have tiny moving parts
    and use electronic sensors to measure their movements.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设备体积很小，但其根源在于具有大型旋转陀螺仪的飞行硬件。IMU使用**微机电系统**（**MEMS**）技术将机械装置放置在微尺度芯片上。它们确实有微小的运动部件，并使用电子传感器来测量它们的运动。
- en: Since some measurements are analog (see [*Chapter 2*](B15660_02_Final_ASB_ePub.xhtml#_idTextAnchor033),
    *Exploring Controllers and I/O*, IMU modules often include an **analog to digital
    converter** (**ADC**) and communicate over I2C.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 由于一些测量是模拟的（见[*第2章*](B15660_02_Final_ASB_ePub.xhtml#_idTextAnchor033)，*探索控制器和I/O*），IMU模块通常包括一个**模拟到数字转换器**（**ADC**）并通过I2C进行通信。
- en: 'There are different combinations of sensors on an IMU. These sensors are as
    follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: IMU上存在不同的传感器组合。这些传感器如下：
- en: A temperature sensor, to account for temperature effects on other sensors
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个温度传感器，用于考虑温度对其他传感器的影响
- en: A gyroscope, which measures rates of rotation
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个陀螺仪，用于测量旋转速率
- en: An accelerometer, which measures accelerations or forces
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个加速度计，用于测量加速度或力
- en: A magnetometer, which measures magnetic fields and can act as a compass
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个磁力计，用于测量磁场，可以作为指南针使用
- en: As we work with each of these sensor types, we will learn more about them and
    their quirks.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们与这些传感器类型之一一起工作，我们将更多地了解它们及其特性。
- en: Now that we know a little about IMUs, let's learn how to choose one.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对IMU有了基本的了解，让我们学习如何选择一个。
- en: Suggested IMU models
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 建议的IMU型号
- en: IMUs can be constructed with a separate accelerometer, gyroscope, and magnetometer,
    along with devices to convert the output of the sensor. To reduce the wiring and
    space this needs, I suggest using a board with all the devices or a single chip
    solution. For the same reason, I recommend I2C or serial IMUs.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: IMU可以通过单独的加速度计、陀螺仪和磁力计以及转换传感器输出的设备来构建。为了减少所需的布线和空间，我建议使用包含所有设备的板或单芯片解决方案。出于同样的原因，我推荐使用I2C或串行IMU。
- en: IMU systems use **degrees-of-freedom** (**DOF**) to denote how many sensor axes
    are present. A 9-DOF system has three axes (X, Y, and Z) for each sensor.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: IMU系统使用**自由度**（**DOF**）来表示有多少个传感器轴存在。一个9自由度系统为每个传感器提供三个轴（X、Y和Z）。
- en: BNO sensors are easier to code for but are incompatible with the Raspberry Pi
    due to the way they use the I2C bus, and they may require an intermediate interface
    chip.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: BNO传感器更容易编写代码，但由于它们使用I2C总线的方式，与树莓派不兼容，并且可能需要一个中间接口芯片。
- en: 'Another thing to consider is if there is documentation (readme files and manuals)
    and a supported library to control the device from Python. The following picture
    shows a suggested IMU breakout:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要考虑的是是否有文档（readme文件和手册）以及一个支持从Python控制设备的库。以下图片显示了一个建议的IMU模块：
- en: '![](img/B15660_12_01.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B15660_12_01.jpg)'
- en: Figure 12.1 – Photo of the ICM20948
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.1 – ICM20948的照片
- en: The preceding image is of the PIM448 breakout board for the ICM20948, a well-supported
    9-DOF sensor for Python libraries. It also has a temperature sensor. It is also
    well distributed. Since IMUs are complex devices, I strongly suggest choosing
    the PIM448 for this chapter.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张图片是ICM20948的PIM448模块板，这是一个广泛支持的9自由度传感器，适用于Python库。它还包含一个温度传感器。它也分布得很好。由于IMU是复杂的设备，我强烈建议选择PIM448作为本章的选择。
- en: 'Now that we''ve explored what IMU devices are and how to choose one, it''s
    time to prepare a PIM448 for our robot with a new skill: soldering.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经探讨了IMU设备是什么以及如何选择一个，是时候用一项新技能：焊接，为我们的机器人准备一个PIM448了。
- en: Soldering – attaching headers to the IMU
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 焊接 – 将引脚连接到IMU
- en: 'Most IMU breakouts, including the suggested PM448, are likely to come with
    headers in a bag, which you will need to solder onto the board. You are going
    to need a small bit of tuition if you want to solder on these headers:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数IMU模块，包括建议的PM448，可能都会附带一个包装袋中的引脚，您需要将其焊接在板上。如果您想焊接这些引脚，您将需要一点点的指导：
- en: '![](img/B15660_12_02.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B15660_12_02.jpg)'
- en: Figure 12.2 – Bare PIM448 with headers
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.2 – 带有引脚的裸PIM448
- en: The preceding image shows the PIM448 as it comes out of the bag. On the left
    is the ICM20948 board with only holes and no headers. In the middle are the male
    headers, while the female headers are on the right. We will use the male headers
    since these are easier to hold in place when soldering.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图片显示了从袋中取出的PIM448。左边是只有孔而没有接头的ICM20948板。中间是公接头，而母接头在右边。我们将使用公接头，因为这些在焊接时更容易固定在位。
- en: As we mentioned in the *Technical requirements* section, you need a soldering
    iron and solder, a soldering iron stand, safety goggles, an extractor or well-ventilated
    space, an additional breadboard, and a well-lit workspace. Soldering creates fumes
    that you do not want to breathe in.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在*技术要求*部分中提到的，你需要一个烙铁和焊料、烙铁支架、安全眼镜、吸尘器或通风良好的空间、额外的面包板和一个明亮的工作空间。焊接会产生烟雾，你不想吸入。
- en: Wear your safety goggles at this point. Heat the soldering iron; depending on
    the iron, this may take a few minutes. Pull out a bit of solder ready to use too.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段戴上你的安全眼镜。加热烙铁；根据烙铁的不同，这可能需要几分钟。同时准备好一些焊料。
- en: Making a solder joint
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 制作焊点
- en: You are now ready to make a solder joint.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你就可以进行焊接了。
- en: 'The following image shows three of the stages of soldering the module:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了焊接模块的三个阶段：
- en: '![](img/B15660_12_03.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15660_12_03.jpg)'
- en: Figure 12.3 – Stages of soldering the PIM448
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.3 – 焊接PIM448的阶段
- en: 'To make a solder joint, perform the follow steps while looking at the preceding
    image:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要制作一个焊点，在查看前面的图片的同时执行以下步骤：
- en: We need to ensure the part won't move while the solder dries. The preceding
    image shows the PIM448 lined up on the male headers, pushed into a breadboard
    on the bottom, with the female headers on the top. An excellent way to hold the
    part in place is to put the long side of the headers into the breadboard with
    our device on top. Since we are attaching male headers, we will use the female
    headers to prop up the other side.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要确保在焊料干燥的过程中，该部分不会移动。前面的图片显示了PIM448排放在公接头处，推入底部的面包板上，顶部是母接头。将部件固定在位的一个好方法是将接头的长边放入面包板中，我们的设备放在上面。由于我们正在连接公接头，我们将使用母接头来支撑另一侧。
- en: The soldering iron tip should be hot at about 300°C and tinned. Melt a little
    solder on the tip to test that it's warm enough. Before you can solder, you need
    to tin the tip. Tinning is where you put a small layer of solder onto the iron
    to improve its heat conductivity and protect the tip from oxidizing (getting rusty
    when hot). To tin the tip, push a little solder into the iron's tip, and it will
    stick to it. The solder should melt freely.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 焊接烙铁尖端应大约在300°C时加热并上锡。在尖端熔化一点焊料以测试它是否足够温暖。在你能够焊接之前，你需要将尖端上锡。上锡是将一小层焊料放在烙铁上，以提高其热导率并保护尖端免受氧化（当加热时生锈）。要上锡，将一点焊料推入烙铁的尖端，它将粘附在上面。焊料应该能够自由熔化。
- en: Ensure the tip is clean – with the iron hot, push the tip of the iron into the
    brass cleaner, making a wiping motion with it in the wire.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保尖端清洁 – 在烙铁加热时，将烙铁尖端推入黄铜清洁剂中，在电线中做擦拭动作。
- en: Heat the pin from the header and the pad (the ring that the pin goes through).
    We'll start on the pin that reads **2-6V**. Heat both the pin and the pad to avoid
    a dry joint, where the solder will not flow properly over the pad. Dry joints
    are weak, both electrically and mechanically.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加热接头和焊盘（引脚穿过的环形部分）。我们将从标有**2-6V**的引脚开始。加热引脚和焊盘以避免干焊，因为焊料不会正确地流过焊盘。干焊既电学上又机械上都很脆弱。
- en: After a second or so, gently feed a little solder into the other side of the
    pin; when the pin is hot enough, the solder will melt and flow over the pad, making
    a rounded tent-like shape. This is just enough solder. You will see flux resin
    coming from the solder.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 大约一秒后，轻轻地将一点焊料喂入引脚的另一侧；当引脚足够热时，焊料会熔化并流过焊盘，形成一个圆形帐篷状。这正好足够。你会看到焊剂树脂从焊料中流出。
- en: The preceding image shows the next step in the middle. Here, I've soldered two
    pins; things gets easier from here on out since the board can't move. Move on
    to the next pin and repeat – heat the pin and pad, then feed in the solder.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前面的图片显示了下一步的中间步骤。在这里，我已经焊接了两个引脚；从现在开始事情会变得容易，因为板子不能移动。继续到下一个引脚并重复 – 加热引脚和焊盘，然后加入焊料。
- en: If you've added too much solder, use a solder sucker to remove the excess. Push
    down the plunger, bring the sucker up close to the joint, melt the solder, and
    press the release button of the plunger for it to suck any solder away. You can
    remake this joint with a bit less solder.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你添加了太多的焊锡，请使用吸锡器移除多余的焊锡。按下活塞，将吸锡器靠近接头，熔化焊锡，然后按下活塞的释放按钮，使其吸走任何焊锡。你可以用少一点的焊锡重新制作这个接头。
- en: If you find you've connected two pins with a blob of solder (bridged them),
    you can draw the hot iron down between the pins to divide them again. You may
    also need to remove any excess solder, as mentioned in *Step 7*.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你发现你用一小团焊锡连接了两个引脚（短路了它们），你可以用烙铁在引脚之间划下来再次分开它们。你可能还需要移除任何多余的焊锡，如*步骤7*中提到的。
- en: Repeat the preceding steps for the remaining pins. The right-hand side of the
    preceding image shows what your IMU should look like once all the pins have been
    soldered.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对剩余的引脚重复前面的步骤。前面图像的右侧显示了所有引脚焊接后你的IMU应该看起来是什么样子。
- en: Important Note
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: For the sake of safety, ensure that you return the soldering iron to its stand
    and switch the iron off before you do anything else. A soldering iron can be a
    dangerous device, leading to burns or fires if left unattended.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了安全起见，确保你在做其他任何事情之前将烙铁放回支架上并关闭烙铁。烙铁是一个危险的设备，如果无人看管可能会导致烧伤或火灾。
- en: Once the part is cool, unplug it from the breadboard. Optionally, you can use
    isopropyl alcohol and a cotton bud to clean away flux residue for a better look.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦部件冷却，从面包板上拔下它。可选地，你可以使用异丙醇和棉签清除焊膏残留物，以获得更好的外观。
- en: 'Before we wire this, make the following checks:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们接线之前，请进行以下检查：
- en: You have soldered all five pins in place.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你已经将所有五个引脚焊接到位。
- en: Each soldered pin is like a silver "tent" shape. A bubble/round or flat shape
    is not right, and you will need to make that connection again.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个焊接的引脚都像是一个银色的“帐篷”形状。气泡/圆形或扁平形状是不正确的，你需要再次进行那个连接。
- en: No two pins have solder *bridges* – blobs of solder connecting the pins.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有两个引脚有焊锡*桥接* – 连接引脚的焊锡团。
- en: Congratulations – you have soldered your first part! This is a skill you will
    need again as you build more robotic and electronic devices. Now that you have
    soldered the ICM20948 module, let's attach it to your robot.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你 – 你已经焊接了你的第一个部件！当你构建更多的机器人和电子设备时，你将需要再次使用这项技能。现在你已经焊接了ICM20948模块，让我们将其连接到你的机器人上。
- en: Attaching the IMU to the robot
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将IMU连接到机器人
- en: Before we can use the IMU and write code for it, we must securely mount it on
    the robot and wire it so that the Raspberry Pi can talk to it.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们能够使用IMU并为它编写代码之前，我们必须将其牢固地安装在机器人上，并接线以便树莓派能够与之通信。
- en: Physical placement
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 物理放置
- en: The IMU magnetometer is sensitive to magnetic fields and needs to be away from
    the motors. For this reason, it should be on a stalk above the robot.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: IMU磁力计对磁场敏感，需要远离电机。因此，它应该位于机器人上方的茎上。
- en: 'The orientation of the IMU is essential for other experiments to make sense:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: IMU的朝向对于其他实验来说至关重要：
- en: '![](img/B15660_12_04.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15660_12_04.jpg)'
- en: Figure 12.4 – Lining up the IMU with the robot
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.4 – 将IMU与机器人对齐
- en: There is a diagram on top of the IMU. The preceding diagram shows how this diagram
    should line up with the robot. The X-axis should face forward, while the Z-axis
    should face up, with the little square on the IMU pointing upward. Finally, the
    Y-axis should point to the left.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: IMU顶部有一个图示。前面的图示显示了该图示应该如何与机器人对齐。X轴应该朝前，Z轴应该朝上，IMU上的小正方形应该朝上。最后，Y轴应该指向左侧。
- en: 'The sensor uses I2C. I2C is sensitive to wire distances, so we should mount
    it above the Raspberry Pi and motor control board where the wire distances are
    low. The following image shows the parts you will need to do this:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 该传感器使用I2C。I2C对线缆距离敏感，因此我们应该将其安装在树莓派和电机控制板上方，那里的线缆距离较短。以下图像显示了你需要为此步骤准备的部件：
- en: '![](img/B15660_12_05.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15660_12_05.jpg)'
- en: Figure 12.5 – Parts needed to attach the IMU
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.5 – 安装IMU所需的部件
- en: 'For this step, you will need the parts shown in the preceding image:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个步骤，你需要前面图像中显示的部件：
- en: The IMU, with headers mounted
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IMU，带有安装好的引脚
- en: Many long standoffs, M2.5
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多长支架，M2.5
- en: 1x M2.5 nut
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x M2.5螺母
- en: 'We will assemble these parts using the standoffs to make a long post, as the
    following image shows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用支架将这些部件组装成一个长柱，如下面的图像所示：
- en: '![](img/B15660_12_06.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15660_12_06.jpg)'
- en: Figure 12.6 – Joining the standoff posts
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.6 – 连接支架柱
- en: 'The following steps are intended to be used with the preceding image to help
    you mount the IMU:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤旨在与前图一起使用，以帮助您安装IMU：
- en: As shown in the preceding image, you just need to screw the thread of one post
    into the socket of the other to end up with a long post. This should give the
    IMU a little distance so that it can stand above the robot. Aim to be just under
    the cable length:![](img/B15660_12_07.jpg)
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前图所示，您只需将一个支柱的螺纹拧入另一个支柱的插座中，即可得到一个长支柱。这应该给IMU一点距离，使其能够站在机器人上方。目标是在电缆长度下方：![图片](img/B15660_12_07.jpg)
- en: Figure 12.7 – Bolting the IMU to the post
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.7 – 将IMU拧到支柱上
- en: As shown in the preceding image, push a post thread through the hole opposite
    the axis markers on the IMU *(a)*. The headers *(b)* should be facing down into
    the post. The thread is quite a snug fit but should fit through. Use the nut on
    top *(c)* to secure it in place:![](img/B15660_12_08.jpg)
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前图所示，将支柱螺纹穿过IMU上与轴标记相对的孔 *(a)*。引脚头 *(b)* 应向下面对支柱。螺纹非常紧，但应该能穿过。使用顶部的螺母 *(c)*
    来固定它：![图片](img/B15660_12_08.jpg)
- en: Figure 12.8 – Bolting the IMU post to the Raspberry Pi
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.8 – 将IMU支柱拧到Raspberry Pi上
- en: The preceding image shows the IMU post screwed onto a thread sticking up from
    the motor board. The motor board we suggested in [*Chapter 6*](B15660_06_Final_ASB_ePub.xhtml#_idTextAnchor096),
    *Robot Building Basics – Wheels, Power, and Wiring*, has an I2C connector to the
    rear left of this board. We can bolt the IMU post to a hole near that:![](img/B15660_12_09.jpg)
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前一张图片显示了IMU支柱拧在从电机板伸出的螺纹上。我们建议在[*第6章*](B15660_06_Final_ASB_ePub.xhtml#_idTextAnchor096)，*机器人构建基础
    – 轮子、电源和接线*中提到的电机板后左边的I2C连接器。我们可以将IMU支柱拧到靠近该孔的孔中：![图片](img/B15660_12_09.jpg)
- en: Figure 12.9 – The IMU ready for wiring
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.9 – 准备接线的IMU
- en: The preceding image shows the ICM20948 attached to the post, which you bolt
    into the top of the motor board, with its pins ready for wiring. Adjust it so
    that the X-axis points forward and the Y-axis points to the left while tightening
    the top nut. The closer this is to square with the robot, the better your results
    will be!
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上一张图片显示了ICM20948连接到支柱上，您需要将螺栓拧入电机板的顶部，其引脚已准备好接线。调整它，使X轴指向前方，Y轴指向左侧，同时拧紧顶部的螺母。越接近与机器人成方形，结果越好！
- en: You have now mounted the IMU on the robot. You've lined up its axes, so we know
    what to expect from our sensors. Now that we have fitted this IMU module, it's
    firmly in place, but could be unbolted if we need to do that. The module is now
    ready for wiring.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已将IMU安装在机器人上。您已对其轴进行了对齐，因此我们知道我们的传感器会有什么表现。现在，我们已安装了此IMU模块，它已牢固地安装到位，但如果我们需要这样做，它可以被卸下。该模块现在已准备好接线。
- en: Wiring the IMU to the Raspberry Pi
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将IMU连接到Raspberry Pi
- en: Next, you need to wire the IMU to the I2C pins on the Raspberry Pi. While this
    seems to be an easy job, you must watch out since some connections aren't straight
    through.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要将IMU连接到Raspberry Pi的I2C引脚。虽然这似乎是一项简单的工作，但您必须小心，因为一些连接不是直接通过的。
- en: 'The motor board''s handy I2C breakout should make this job a little easier:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 电机板方便的I2C分线器应该会使这项工作更容易一些：
- en: '![](img/B15660_12_10.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B15660_12_10.jpg)'
- en: Figure 12.10 – The wiring of ICM20948
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.10 – ICM20948的接线
- en: 'As shown in the preceding diagram, the wiring is pretty straightforward: the
    **GND** from the IMU goes to the **GND** on the motor board I2C breakout, **SDA**
    goes to **SDA**, **SCL** goes to **SCL**, and **2-6V** goes to **5V** (in the
    2-6V range).'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，接线相当直接：IMU的**GND**连接到电机板I2C分线器的**GND**，**SDA**连接到**SDA**，**SCL**连接到**SCL**，**2-6V**连接到**5V**（在2-6V范围内）。
- en: The **GND** goes from the left of the motor board to the right of the IMU. The
    four wires have a bend, with the **5V** line crossing it.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**GND** 从电机板左侧延伸到IMU右侧。四根线中有一处弯曲，**5V** 线穿过此处。'
- en: 'In practice, we would use a jumper cable strip of four wires, which is shown
    by the dashed lines in the preceding diagram. The end going to the IMU would go
    straight through. The end going to the motor board has the power cable crossing
    the other wires:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们会使用四根线的跳线带，如前图中的虚线所示。连接到IMU的一端会直接穿过。连接到电机板的一端有电源线穿过其他线：
- en: '![](img/B15660_12_11.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B15660_12_11.jpg)'
- en: Figure 12.11 – ICM20948 IMU wired to the motor board
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.11 – 连接到电机板的ICM20948 IMU
- en: 'In the preceding image, I''ve used a short female-to-female jumper wire to
    make the connections. The IMU board is at 90 degrees from its intended orientation
    to make the wiring more visible; it should have X facing forward. Notice that
    there is a twist in the wire, so the GND line (white here) ends up on the GND
    pin on the other side. Perform the following steps to make these connections:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图像中，我使用了一段短的女性到女性的跳线来建立连接。IMU 板与其预定方向成 90 度，以便更清晰地布线；它应该有 X 面向前。注意，线中有扭曲，所以
    GND 线（这里为白色）最终结束在另一侧的 GND 引脚上。执行以下步骤来建立这些连接：
- en: Carefully pull off a strip of four wires. Aim to find a darker color for GND
    and a bright/vivid color for the 5V line.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 小心地将四根线的带子拉掉。目标是找到深色用于 GND 和亮/鲜艳的颜色用于 5V 线。
- en: Plug one side directly into the IMU, ensuring you skip the INT pin.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一侧直接插入 IMU，确保跳过 `INT` 引脚。
- en: As you bring the wire to the motor board below, put a small turn in so that
    the cable faces the other way.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你将线拉到下面的电机板时，请转一个小弯，使电缆朝相反的方向。
- en: Plug the GND in first, to set the orientation.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先插入 GND，以设置方向。
- en: Plug the 5V line in next, which will need to cross the other two wires.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后插入 5V 线，这将需要跨越其他两根线。
- en: The final two wires should now be in the right orientation for SDA and SCL;
    plug in both.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后两根线现在应该已经正确放置，用于 SDA 和 SCL；将它们都插入。
- en: Use the wire colors to ensure you've made the right connections.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用线颜色确保您已正确连接。
- en: We do not intend to use the `INT` pin. This pin is designed to send an *interrupt*
    to the Pi, to notify us that there is a motion for wake-on-motion type behavior.
    However, use of this is beyond the scope of this book.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们不打算使用 `INT` 引脚。这个引脚的设计是用来向 Pi 发送一个 *中断*，以通知我们存在运动，用于唤醒运动类型的行为。然而，这超出了本书的范围。
- en: Now that we have wired this sensor in and attached it to our robot, you are
    ready to write some code. We'll start easy by reading the temperature.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们已经将这个传感器连线并连接到我们的机器人上，您就可以编写一些代码了。我们将从读取温度开始。
- en: Reading the temperature
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读取温度
- en: With the device wired and attached, you'll want to try some code on it to confirm
    we can talk to this device and get data out of it. Let's get some tools installed
    and make it work.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在设备连线并连接后，您可能想要在上面尝试一些代码来确认我们可以与该设备通信并从中获取数据。让我们安装一些工具并使其工作。
- en: Installing the software
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装软件
- en: Before we can start interacting with this device, as with most devices, we will
    install a helper library to communicate with it. Pimoroni, the suppliers of the
    ICM20948 module I've suggested, have made a handy library for Python to talk to
    it. I recommend taking their latest version from GitHub.
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在我们开始与该设备交互之前，就像大多数设备一样，我们将安装一个辅助库来与之通信。我推荐的 ICM20948 模块供应商 Pimoroni 已经为 Python
    制作了一个方便的库。我建议从 GitHub 下载他们的最新版本。
- en: 'Perform the following steps to install it:'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行以下步骤来安装它：
- en: Boot up the Raspberry Pi on the robot. This Pi should have been used previously
    for the motor board and LED shim and have I2C enabled. If not, go back to [*Chapter
    7*](B15660_07_Final_ASB_ePub.xhtml#_idTextAnchor131), *Drive and Turn – Moving
    Motors with Python*, and follow the steps for preparing the I2C.
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在机器人上启动 Raspberry Pi。这个 Pi 应该之前用于电机板和 LED 填片，并且已启用 I2C。如果没有，请回到 [*第 7 章*](B15660_07_Final_ASB_ePub.xhtml#_idTextAnchor131)，*用
    Python 驱动和转向 – 移动电机*，并遵循准备 I2C 的步骤。
- en: 'Type in `i2cdetect -y 1` to check that you''ve installed the device correctly.
    The output should look like this:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `i2cdetect -y 1` 以检查您是否正确安装了设备。输出应该看起来像这样：
- en: '[PRE0]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The device at 0x68 is our new device. If you do not see this, please power down
    the Raspberry Pi and check your wiring. The other two devices (0x6f and 0x70)
    are the motor board and the LED shim.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 地址为 0x68 的设备是我们的新设备。如果您看不到这个，请关闭 Raspberry Pi 的电源并检查您的连线。其他两个设备（0x6f 和 0x70）是电机板和
    LED 填片。
- en: 'Now, we can install the library:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以安装这个库：
- en: '[PRE1]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You've now verified that the ICM20948 device is on the robot's I2C bus and installed
    the Pimoroni Python library so that it can talk with it. You are now ready to
    talk to it.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在已经验证了 ICM20948 设备位于机器人的 I2C 总线上，并安装了 Pimoroni Python 库，以便与之通信。您现在可以开始与之通信了。
- en: 'We also will add some new software to visualize our data in real time. There
    is a system called **Visual Python** (**VPython**) that''s been designed to create
    graphs and 3D representations in real time:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将添加一些新的软件来实时可视化我们的数据。有一个名为 **Visual Python** （**VPython**）的系统，它被设计用来实时创建图表和
    3D 表示：
- en: '[PRE2]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, the device and library should be installed. If this didn't work for you,
    try looking at the *Troubleshooting* section, which is next.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，设备和库应该已经安装。如果您没有成功，请尝试查看下一节的 *故障排除* 部分。
- en: Troubleshooting
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除
- en: 'Things can go wrong at this early stage. If you''ve not made things work so
    far, please try following these steps:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个早期阶段可能会出错。如果您到目前为止还没有让事情工作，请尝试按照以下步骤操作：
- en: It is vital that the `i2cdetect` stage works here and shows the device at 0x68\.
    If not, check your wiring. *Nothing* should be hot here.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，`i2cdetect` 阶段必须工作并显示设备在 0x68。如果没有，请检查您的接线。*这里不应该有任何东西是热的*。
- en: Ensure you have followed all the soldering checks.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您已经完成了所有的焊接检查。
- en: If the libraries fail to install, ensure you get connected to the internet.
    You may need to have the most recent version of Raspbian for them to work.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果库安装失败，请确保您已连接到互联网。您可能需要最新的 Raspbian 版本才能使其工作。
- en: Now that you have installed the device and checked for common issues, we can
    try our first experiment with it and read the temperature sensor.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经安装了设备并检查了常见问题，我们可以尝试使用它进行第一次实验并读取温度传感器。
- en: Reading the temperature register
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取温度寄存器
- en: In this section, we are going to set up an interface for the IMU, and then add
    a real-time graph for the temperature data from the Raspberry Pi.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将为 IMU 设置一个接口，然后添加来自 Raspberry Pi 的温度数据的实时图表。
- en: Creating the interface
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建接口
- en: 'As with other sensors and outputs, we must create an interface because there
    are many IMU devices on the market. However, the same interface allows us to change
    them out without rewriting other behaviors using that interface:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 就像其他传感器和输出一样，我们必须创建一个接口，因为市场上有很多 IMU 设备。然而，相同的接口允许我们更换它们，而无需重写使用该接口的其他行为：
- en: Create a file named `robot_imu.py`
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `robot_imu.py` 的文件。
- en: 'Start by importing the Pimoroni device library – this will be different if
    you use another IMU device:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先导入 Pimoroni 设备库 – 如果您使用其他 IMU 设备，这将是不同的：
- en: '[PRE3]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We''ll make an IMU class to represent our device. This sets up a single IMU:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将创建一个 IMU 类来表示我们的设备。这设置了一个单个 IMU：
- en: '[PRE4]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'For this exercise, we only need the temperature. Let''s simply wrap that:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这个练习，我们只需要温度。让我们简单地包装一下：
- en: '[PRE5]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: With this, the interface is ready. Now, we can use it to read the device's temperature.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个，接口就准备好了。现在，我们可以用它来读取设备的温度。
- en: What is VPython?
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是 VPython？
- en: VPython or Visual Python is a system designed to make visual – even 3D – displays
    in Python. It comes from a scientific community and will become very useful throughout
    this chapter. It serves output to a browser, and with the specific version installed
    here, it can be run on a Raspberry Pi while showing the output on a computer or
    smartphone.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: VPython 或 Visual Python 是一个旨在在 Python 中创建视觉（甚至是 3D）显示的系统。它来自一个科学社区，并将在本章的整个过程中非常有用。它将输出发送到浏览器，并且使用在此安装的特定版本，它可以在
    Raspberry Pi 上运行，同时在计算机或智能手机上显示输出。
- en: It has a few quirks, with one of them being a slow startup time, but it is worth
    it for the results.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 它有几个小问题，其中之一是启动时间较慢，但结果是值得的。
- en: Graphing the temperature
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 绘制温度图表
- en: A good way to observe temperature variations is by using a graph.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用图表是观察温度变化的好方法。
- en: 'Let''s use VPython and create a graph showing the temperature of our IMU module:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 VPython 并创建一个显示我们 IMU 模块温度的图表：
- en: Create a file named `plot_temperature.py`.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `plot_temperature.py` 的文件。
- en: 'Start by importing VPython and our robot IMU interface:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先导入 VPython 和我们的机器人 IMU 接口：
- en: '[PRE6]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We are going to plot temperature versus time on a graph, so we will need a
    time reference. Also, we will use logging to see what is going on:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在图表上绘制温度与时间的关系，因此我们需要一个时间参考。此外，我们将使用日志记录来查看发生了什么：
- en: '[PRE7]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let''s configure logging so that we can see all the `INFO` level logs:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们配置日志记录，以便我们可以看到所有 `INFO` 级别的日志：
- en: '[PRE8]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create our IMU instance:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建我们的 IMU 实例：
- en: '[PRE9]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We want a few things from the graph. Since the X-axis is time and is in seconds,
    setting the minimum to `0` and the maximum to `60` will show us a minute of data.
    We also want the graph to scroll so that it shows new data once we''ve recorded
    more than a minute:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们希望从图表中获得一些东西。由于 X 轴是时间，以秒为单位，将最小值设置为 `0`，最大值设置为 `60`，将显示一分钟的数据。我们还想让图表滚动，以便在记录超过一分钟的数据后显示新数据：
- en: '[PRE10]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now that we have a time reference, let''s record the start time before we get
    into the loop:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了时间参考，让我们在进入循环之前记录开始时间：
- en: '[PRE11]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The main loop is a `while true` type. However, we need to use `vp.rate` to
    let VPython know we are animating and set a frame/update rate for our system:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主循环是一个`while true`类型的循环。然而，我们需要使用`vp.rate`来让VPython知道我们正在动画化，并为我们的系统设置一个帧/更新率：
- en: '[PRE12]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, we can capture our temperature, and while we are at it, we can log this:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以捕捉我们的温度，同时，我们还可以记录这个：
- en: '[PRE13]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To put this into the graph, we need to get the elapsed time for the X-axis.
    We can get this by subtracting the start time from the current time:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将这个数据放入图表中，我们需要获取X轴的经过时间。我们可以通过从当前时间减去开始时间来获取这个时间：
- en: '[PRE14]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Finally, we need to plot this in our temperature graph, with the elapsed time
    as `x` and the temperature as `y`:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们需要将这个数据绘制到我们的温度图表中，其中经过的时间作为`x`轴，温度作为`y`轴：
- en: '[PRE15]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The code for plotting the temperature is now live. Let's run this on the Raspberry
    Pi.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制温度的代码现在已生效。让我们在树莓派上运行这个代码。
- en: Running the temperature plotter
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行温度绘图器
- en: 'There are a few steps we need to follow to run this once we''ve copied the
    files to the Raspberry Pi. Our Raspberry Pi is headless, so we will need to view
    VPython remotely. To do so, we need to let VPython know we are doing this, and
    use a network port to make its view available. We can then use a browser to look
    at this. Let''s see how:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们将文件复制到树莓派之后，我们需要遵循几个步骤来运行它。我们的树莓派是无头服务器，因此我们需要远程查看VPython。为此，我们需要让VPython知道我们在做什么，并使用网络端口使其视图可用。然后我们可以使用浏览器查看它。让我们看看如何：
- en: 'In an SSH session to the Raspberry Pi, type the following:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在树莓派的SSH会话中，输入以下命令：
- en: '[PRE16]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'We''ve chosen port `9020`, which is somewhat arbitrary but should be above
    `1000`. We will be using other web services later in this book on different ports,
    and this number is well clear of their ranges. When run, it should log a few messages
    to tell you it is ready:'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们选择了端口`9020`，这有点随意，但应该高于`1000`。我们将在本书的后面使用其他端口上的其他网络服务，而这个数字远远超出了它们的范围。当运行时，它应该记录一些消息来告诉你它已准备好：
- en: '[PRE17]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note that it shows a localhost address. We intend to use it remotely.
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，它显示的是本地主机地址。我们打算远程使用它。
- en: Next, point your browser (Chrome, Firefox, or Safari) from your desktop to the
    Raspberry Pi with the port number. In my case, based on my robot's hostname, this
    would be `http://myrobot.local:9020`.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将你的浏览器（Chrome、Firefox或Safari）从桌面指向树莓派，并带有端口号。在我的情况下，根据我的机器人的主机名，这将是在`http://myrobot.local:9020`。
- en: Now, be prepared to wait a bit – it can take a bit of time for VPython to set
    up. After this, you will either see your graph or any errors/problems.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，请准备好稍等片刻——VPython设置可能需要一点时间。之后，你会看到你的图表或任何错误/问题。
- en: 'When it''s running, you''ll get a graph of the readings from the temperature
    sensor. You can experiment a little by carefully placing a finger on the sensor
    (the large black square on the PIM448) and watching the graph rise/fall in response
    to this. You could also find cold or hot objects, such as a hair dryer, to see
    how this manipulates it. However, be careful not to get the robot wet, and don''t
    let metal touch the pins:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 当它运行时，你会得到温度传感器的读数图表。你可以通过小心地将手指放在传感器上（PIM448上的大黑方块）来实验，并观察图表如何随着这个动作而上升/下降。你也可以找到冷或热的物体，比如吹风机，看看它是如何操纵的。然而，要小心不要让机器人弄湿，并且不要让金属接触引脚：
- en: '![](img/B15660_12_12.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15660_12_12.jpg)'
- en: Figure 12.12 – A temperature graph
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.12 – 温度图表
- en: The preceding image is a graph that's showing temperature in degrees (Y-axis)
    versus time in seconds (X-axis). The thick black line indicates the current temperature
    reading. It wiggles a lot – this is a noisy system.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图像是一个显示温度（Y轴）与时间（X轴）的图表。粗黑线表示当前的温度读数。它波动很大——这是一个噪声系统。
- en: 'I placed my finger over the sensor at about 25 seconds. As shown in the preceding
    graph, the ambient temperature was 31 and raised to just under 34\. It takes a
    few seconds to warm up. Keeping my finger there longer would have made it increase
    more. I had a fan present, so there was a sharp drop-off – there can be far slower
    drop-offs depending on your conditions. The code also logs the temperatures to
    the console:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我在大约25秒时将手指放在传感器上。如图所示的前一个图表，环境温度为31度，上升至略低于34度。需要几秒钟才能升温。如果我将手指放在那里更长时间，它会增加更多。我有一个风扇，所以有一个急剧的下降——根据你的条件，可能会有更慢的下降。代码也将温度记录到控制台：
- en: '[PRE18]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: There is a lot of noise in the decimal places that you can ignore here. When
    you close this browser tab, the code will stop graphing.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，小数位有很多噪声，你可以忽略它们。当你关闭这个浏览器标签时，代码将停止绘图。
- en: Important Note
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'A warning about testing temperatures: Do not put metal objects on the sensor
    – this may short out the pins and damage the robot. Also, do not put wet items
    on it. Very cold objects may have condensation on them. Water will even short
    pins and damage the sensor, and possibly the Raspberry Pi.'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 关于测试温度的警告：不要在传感器上放置金属物体——这可能会短路引脚并损坏机器人。也不要在上面放置湿物体。非常冷的对象上可能会有冷凝。水甚至可能短路引脚并损坏传感器，以及可能损坏树莓派。
- en: Troubleshooting
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除
- en: 'We are pulling two new components into our robot code here, so things may go
    wrong. Here are some things to check:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在将两个新的组件拉入我们的机器人代码中，因此可能会出错。以下是一些需要检查的事项：
- en: Be aware that VPython can be slow, so it may take a long time to start. Try
    refreshing the browser tab after 30 seconds.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，VPython可能运行缓慢，因此启动可能需要很长时间。尝试在30秒后刷新浏览器标签。
- en: With VPython, it may take a long time to show an error message. Patience is
    needed when trying new code here.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用VPython，显示错误消息可能需要很长时间。在尝试新代码时需要耐心。
- en: If you see I/O or communication errors, carefully check the wiring of the IMU.
    Please go back to the *Installing Software Troubleshooting* section for measures.
    I/O errors can also happen if you nudge a wire out while putting your finger on
    the sensor, or worse still if you try to cool it with a metal object and short
    the pins. DO NOT PUT A METAL OBJECT ON THE SENSOR!
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您看到I/O或通信错误，请仔细检查IMU的接线。请回到*安装软件故障排除*部分以获取措施。如果在将手指放在传感器上时推挤一根线，或者更糟糕的是，如果尝试用金属物体冷却它并短路引脚，也可能发生I/O错误。不要在传感器上放置金属物体！
- en: Similarly, if you see import errors, check that you do not have typing errors
    in the imports and ensure you have checked the *Installing software troubleshooting*
    section.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似地，如果您看到导入错误，请检查您在导入中是否没有打字错误，并确保您已经检查了*安装软件故障排除*部分。
- en: If the temperature reading takes time to change, note that the IMU has some
    insulation/thermal resistance, so it takes a while to warm up (but it will) and
    cool down. The board also has a thermal mass, meaning it will all heat up or cool
    down, slowing the time it takes to reach the same temperature as the one you are
    measuring.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果温度读数需要时间才能改变，请注意IMU有一些绝缘/热阻，因此需要一段时间才能升温（但会升温）和降温。板子也有热质量，这意味着它会全部升温或降温，从而减慢达到您所测量温度所需的时间。
- en: There can be a few reasons for the temperature reading not being accurate. For
    one, the IMU can produce some heat – we've already mentioned the thermal mass.
    It could have a calibration offset value applied to it to make it more accurate,
    but do not expect it to match a thermometer to a fraction of a degree perfectly.
    It should certainly be able to register a finger or palm as close to 37 degrees,
    but in practice, and with patience, I usually got to about 36 point something.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 温度读数不准确可能有几个原因。一方面，IMU可以产生一些热量——我们已经提到了热质量。它可以应用一个校准偏移值来使其更准确，但不要期望它能够完美地与温度计匹配到几分之一度。它当然应该能够将手指或手掌注册为接近37度，但在实践中，只要耐心，我通常能达到大约36点多。
- en: Our example is now working, but we could make it a bit easier to start our tests.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在的示例正在工作，但我们可以使启动测试更容易一些。
- en: Simplifying the VPython command line
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简化VPython命令行
- en: 'We will be using VPython a lot in this chapter, and we don''t want to type
    in a mouthful of settings to run each Python file. Let''s create an alias (a command-line
    shortcut) to save us from having to type that stuff in every time:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将大量使用VPython，并且我们不希望每次运行Python文件时都输入一大堆设置。让我们创建一个别名（命令行快捷方式）来节省我们每次都输入这些内容的时间：
- en: 'Let''s set it up for the current session. The `alias` command makes an alias
    we can reuse later. Here, it''s named `vpython`. It contains the settings and
    the `python3` command:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们为当前会话设置它。`alias`命令创建了一个别名，我们可以在以后再次使用。在这里，它被命名为`vpython`。它包含设置和`python3`命令：
- en: '[PRE19]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'So that we can use it again at some point, we will put it into the current
    user''s `.bashrc` file – a file that Raspbian automatically runs when you `ssh`
    in:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在某个时候再次使用它，我们将将其放入当前用户的`.bashrc`文件中——这是一个Raspbian在您`ssh`登录时自动运行的文件：
- en: '[PRE20]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Wrapping something in `echo` will write text out instead of running a command.
    `>>` appends this to a file – in this case, `.bashrc`. The `~` mark picks the
    current user's home.
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将某物包裹在`echo`中会将文本写出来而不是运行命令。`>>`将此追加到文件中——在这种情况下，是`.bashrc`文件。`~`标记选择当前用户的家目录。
- en: You can rerun the temperature demo with `vpython plot_temperature.py`.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用`vpython plot_temperature.py`重新运行温度演示。
- en: In this section, you received data from the IMU device and saw how it responds
    to temperature. This confirms that the IMU is responding. You logged the data
    and graphed it and were introduced to the VPython system in the process, which
    can be used as a powerful graphics display system. We will use both the IMU and
    VPython to do far more throughout this chapter. Next, we will look at the gyroscope
    so that we can see how our robot is turning.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你从IMU设备接收数据，并看到了它对温度的反应。这证实了IMU正在响应。你记录了数据，并绘制了图表，在这个过程中介绍了VPython系统，它可以作为一个强大的图形显示系统。我们将在本章中使用IMU和VPython做更多的事情。接下来，我们将查看陀螺仪，以便我们可以看到我们的机器人是如何旋转的。
- en: Reading the gyroscope in Python
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Python中读取陀螺仪
- en: In this section, we are going to use the gyroscope in the IMU. We will use it
    to approximate where the robot is facing in three dimensions.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用IMU中的陀螺仪。我们将用它来近似机器人在三维空间中的朝向。
- en: But before we do that, let's understand it.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 但在我们这样做之前，让我们先了解一下。
- en: Understanding the gyroscope
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解陀螺仪
- en: 'A gyroscope measures rotation as a rate of change in angle, perhaps in degrees
    per second. At each measurement, it can determine the speed of rotation around
    each axis:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 陀螺仪测量旋转为角度变化率，可能是每秒多少度。在每次测量中，它可以确定绕每个轴的旋转速度：
- en: '![](img/B15660_12_13.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15660_12_13.jpg)'
- en: Figure 12.13 – Illustration of a gyroscope
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.13 – 陀螺仪示意图
- en: A gyroscope is traditionally a mechanical system, as shown in the preceding
    image. It has a gimbal – a set of concentric rings – connected by pivots so that
    they can pivot around the X-axis, Y-axis, and Z-axis. The middle has a spinning
    mass, known as a rotor. When the rotor is spinning, moving the handle (shown as
    a stand at the bottom of the image) does not affect the spinning mass, which keeps
    its orientation, with the gimbals allowing it to turn freely.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的陀螺仪是一个机械系统，如前图所示。它有一个陀螺仪——一组同心环——通过枢轴连接，这样它们就可以绕X轴、Y轴和Z轴旋转。中间有一个旋转的质量，称为转子。当转子旋转时，移动把手（如图中底部所示）不会影响旋转的质量，它保持其朝向，陀螺仪允许它自由旋转。
- en: In the case of a MEMS gyroscope, it moves a tiny mass back and forth (oscillates)
    very quickly. When the orientation of the gyroscope is changed, the mass will
    still be moving in another direction. This movement will change an electrical
    field that the sensor detects. In the original orientation, this movement appears
    to be a force, known as the Coriolis force.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在MEMS陀螺仪的情况下，它会使一个微小的质量快速来回移动（振荡）。当陀螺仪的朝向改变时，质量仍然会朝另一个方向移动。这种运动会改变传感器检测到的电场。在原始朝向中，这种运动看起来像是一种力，称为科里奥利力。
- en: Before we can write some code so that we can work with the gyroscope, we need
    to understand coordinate systems – on the robot and in VPython.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们能够编写一些代码来与陀螺仪一起工作之前，我们需要理解坐标系——在机器人和VPython中。
- en: Representing coordinate and rotation systems
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表示坐标和旋转系统
- en: 'We are going to be using coordinate and rotation systems in this chapter. The
    following diagram should help you understand them:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章中使用坐标和旋转系统。以下图表应该能帮助你理解它们：
- en: '![](img/B15660_12_14.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15660_12_14.jpg)'
- en: Figure 12.14 – The robot body coordinate system
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.14 – 机器人本体坐标系
- en: 'The preceding diagram shows the different coordinate systems we will be using.
    Let''s take a look at the different sections of it:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图表显示了我们将要使用的不同坐标系统。让我们看看它的不同部分：
- en: This is the robot's **Body Coordinate System** – a stylized 3D sketch of the
    robot with three axis arrows. First, there's the X-axis, which points toward the
    front of the robot. Rotating about this X-axis is known as **roll**. Then, there's
    the Y-axis, which indicates to the left of the robot (your right as you view the
    robot). Rotating about this axis is known as **pitch**. Finally, pointing up through
    the robot is the Z-axis. Rotating about this axis is known as **heading** or **yaw**.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是机器人的**本体坐标系**——一个带有三个轴箭头的机器人3D草图。首先，是X轴，它指向机器人的前方。绕这个X轴旋转被称为**翻滚**。然后是Y轴，它指向机器人的左侧（当你观察机器人时是你的右手）。绕这个轴旋转被称为**俯仰**。最后，指向机器人上方的是Z轴。绕这个轴旋转被称为**航向**或**偏航**。
- en: 'The direction of rotation is important. There is a rule of thumb for this:
    take your right hand and put your thumb up. If your thumb is pointing along the
    axis, then the fingers on your fist have wrapped the way the rotation will go.'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 旋转的方向很重要。这里有一个经验法则：伸出你的右手，将拇指竖起。如果你的拇指指向轴线，那么拳头上的手指就是旋转的方向。
- en: This is the VPython **World Coordinate System**. We display 3D images in VPython
    here. VPython's coordinate system is a rotation of the robot body system.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是VPython的**世界坐标系**。我们在VPython中在这里显示3D图像。VPython的坐标系是机器人身体系统的旋转。
- en: In the preceding diagram, the Y-axis is going up, the X-axis is going to the
    right, and the Z-axis is pointing forward.
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在前面的图中，Y轴向上，X轴向右，Z轴向前。
- en: We will represent the coordinates in 3D as X, Y, and Z components – this is
    known as a **vector**.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将用X、Y和Z分量来表示3D坐标——这被称为**向量**。
- en: When we apply our measurements to things in the VPython system, we will align
    our view with the robot coordinate system. When we're talking about a coordinate
    system relative to another, this is known as a **pose**. This is the robot's pose
    with respect to the VPython coordinate system.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将测量值应用于VPython系统中的事物时，我们将使我们的视图与机器人坐标系对齐。当我们谈论相对于另一个坐标系的坐标系时，这被称为**姿态**。这是机器人相对于VPython坐标系的姿态。
- en: 'Let''s represent this with a bit of code to help us out:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一点代码来帮助我们表示这个：
- en: Create a file named `robot_pose.py`.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`robot_pose.py`的文件。
- en: 'We are manipulating the VPython view, so we need to import it, as follows:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们正在操作VPython视图，因此我们需要导入它，如下所示：
- en: '[PRE21]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We can then add our function to set the view up; I''ve called it `robot_view`:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们可以添加我们的函数来设置视图；我将其命名为`robot_view`：
- en: '[PRE22]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: In this function, we need to set the two properties that VPython uses to control
    camera orientation:![](img/B15660_12_15.jpg)
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个函数中，我们需要设置VPython用于控制相机方向的两个属性：![img/B15660_12_15.jpg](img/B15660_12_15.jpg)
- en: '[PRE23]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'An axis tells us where to look along, but not which way *up* is. We need the
    camera to align its definition of up with the robot (which has Z pointing up);
    otherwise, the vectors could be upside down or to the side:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个轴告诉我们沿着哪个方向看，但不知道哪个方向是*向上*的。我们需要相机将其对“向上”的定义与机器人（Z轴向上）对齐；否则，向量可能会颠倒或偏斜：
- en: '[PRE24]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: We will use this pose more in later sections; however, for now, it's useful
    to see that the Z-axis is now up, as well as where we rotate around the different
    axes.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后面的章节中更多地使用这个姿态；然而，现在，看到Z轴现在是向上的，以及我们围绕不同轴旋转的位置是有用的。
- en: Now, let's set up the gyroscope for reading.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们设置陀螺仪以进行读取。
- en: Adding the gyroscope to the interface
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将陀螺仪添加到界面中
- en: 'Before we can read the gyroscope, we''ll need to add it to our `robot_imu.py`
    interface:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们可以读取陀螺仪之前，我们需要将其添加到我们的`robot_imu.py`接口中：
- en: 'We are going to be dealing with a few x, y, and z groups from our IMU. We will
    import a vector type to store these. I''ve highlighted the new code here:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将处理来自IMU的一些x、y和z组。我们将导入一个向量类型来存储这些。我在这里突出显示了新代码：
- en: '[PRE25]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: A vector is a representation of three component coordinate systems. Now, we
    need to fetch the gyroscope data from the underlying IMU library and store it
    in a vector:`ICM20948` library we are using does not have a call to return only
    gyroscope data, but it does have one that returns both accelerometer and gyroscope
    data.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向量是三个分量坐标系统的表示。现在，我们需要从底层IMU库中获取陀螺仪数据并将其存储在向量中：我们使用的`ICM20948`库没有返回仅陀螺仪数据的调用，但它有一个返回加速度计和陀螺仪数据的调用。
- en: This `ICM20948` library returns the data as a list of six items. In Python,
    when unpacking return values, the underscore character, `_`, can denote things
    to ignore.
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个`ICM20948`库将数据作为六个项目的列表返回。在Python中，当解包返回值时，下划线字符`_`可以表示忽略的内容。
- en: 'We can now put the three gyroscope values into a body vector to return them:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以将三个陀螺仪值放入一个体向量中返回：
- en: '[PRE26]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The IMU library is now ready for us to read gyroscope data from it. Next, we
    are going to read it and plot the data on a graph.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: IMU库现在已准备好供我们从中读取陀螺仪数据。接下来，我们将读取它并在图表上绘制数据。
- en: Plotting the gyroscope
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制陀螺仪
- en: As we mentioned previously, the gyroscope measures the rate of rotation. It
    does so in degrees per second on each axis.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，陀螺仪测量旋转速率。它在每个轴上以每秒度数进行测量。
- en: 'Let''s graph the output of this device:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们绘制这个设备的输出图：
- en: Create a file named `plot_gyroscope.py`.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`plot_gyroscope.py`的文件。
- en: 'We''ll start with the imports, setting up logging, and the IMU, as we did previously:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从导入、设置日志和IMU开始，就像我们之前做的那样：
- en: '[PRE27]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'We set up three graphs for the three axes that the gyroscope outputs – X rotation,
    Y rotation, and Z rotation. Note that we give each graph a different color:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们为陀螺仪输出的三个轴设置三个图表——X轴旋转、Y轴旋转和Z轴旋转。请注意，我们给每个图表分配了不同的颜色：
- en: '[PRE28]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The three graphs will overlay on the same line.
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这三个图表将叠加在同一行上。
- en: 'Now, we need to set a start time, start a loop, and measure the elapsed time:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We can now read the IMU and put the three readings into the graphs:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Upload the files and run them with `vpython plot_gyroscope.py`.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wait a minute or so and then point a browser at `myrobot.local:9020` – it can
    take up to 1 minute for this to appear.
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Start to move the robot around – lift it and try tilting in each of the three
    axes. You should see something like the following graph:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B15660_12_16.jpg)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
- en: Figure 12.16 – VPython plot of gyroscope data
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: The preceding graph contains three lines. The Y-axis shows a movement rate in
    degrees per second, while the X-axis shows the time in seconds since the program
    started. On-screen, the graphs are in red, green, and blue.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: The graph spikes when you make movements, and then returns to zero. Try pushing
    the front of the robot (the nose) down; this is positive around the Y-axis. The
    green line should move up (shown at about 3 seconds in the preceding graph). If
    you keep it there, the line will flatten. When you return the robot to flat, there
    will be a negative green spike on the line. Now, try lifting the left-hand side
    by turning it around the X-axis, creating a positive red spike on your graph.
    When you return it flat, you'll get a negative peak. Next, try turning the robot
    to the left; this will create a positive blue spike. Now, if you turn it to the
    right, a negative blue spike will be created. Move around the axes to get a feel
    for these measurements.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: Unless you are spinning a robot constantly, you'll likely find that it's reasonably
    hard to keep up any turning force; this shows that the gyroscope data is a rate
    of turn, and not a measure of direction. What would be more useful is to approximate
    the heading of the robot. When we dive deeper, we'll learn how to use gyroscope
    data for this.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you've seen the gyroscope and how it measures rotation rates
    via a graph demonstrating this principle. Now, let's move on to the accelerometer
    so that we can see the forces that are acting on our robot!
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: Reading an accelerometer in Python
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will learn how to use an accelerometer to measure forces
    acting on the robot, and most often, which way is down. Let's find out more about
    it, then write some code to see how it works.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the accelerometer
  id: totrans-289
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'An accelerometer measures acceleration or changes in speed, both in terms of
    size and direction. It does so by providing three values – one for each of the
    X, Y, and Z axes:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B15660_12_17.jpg)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
- en: Figure 12.17 – Accelerometer concept – mass with springs
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding diagram shows a conceptual view of an accelerometer. Let''s take
    a look at it in more detail:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: This shows a ball (a mass) suspended by six springs in a box. When there are
    no forces on the box, the ball stays in the middle.
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This shows how this system behaves when the large arrow pushes it. The mass
    retains inertia by moving to the right, compressing the right spring and extending
    the left spring.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这显示了当大箭头推动它时，这个系统是如何表现的。质量通过向右移动保持惯性，压缩右边的弹簧并拉伸左边的弹簧。
- en: Measuring the position of the mass shows the direction and size of an acceleration.
    A MEMS accelerometer is similar to this device and is constructed with a tiny
    silicon mass and springs. This measures an electric field that changes as the
    mass moves.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 测量质量的位置显示了加速度的方向和大小。一个MEMS加速度计与这个设备类似，由一个微小的硅质量和弹簧构成。它测量随着质量移动而变化的电场。
- en: While on Earth, a mass is pulled downward by gravity. This system behaves like
    a force is holding the box up, so an accelerometer will usually register an upward
    force. We can use this measurement to determine which way down is and sense the
    tilt of a robot.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 在地球上，质量受到重力的向下拉力。这个系统表现得像一个力在支撑盒子向上，所以加速度计通常会记录一个向上的力。我们可以使用这个测量来确定向下方向，并感知机器人的倾斜。
- en: Adding the accelerometer to the interface
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将加速度计添加到界面中
- en: 'Let''s start by adding the accelerometer measurement to our `RobotImu` library:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从向我们的`RobotImu`库添加加速度计测量开始：
- en: Open the `robot_imu.py` file.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`robot_imu.py`文件。
- en: 'Add the following code to do the reading:'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码进行读取：
- en: '[PRE31]'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This uses the same library call as the gyroscope; however, it now discards the
    last three data items instead of the first three.
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这使用与陀螺仪相同的库调用；然而，现在它丢弃最后三个数据项，而不是前三个。
- en: Now that the accelerometer is ready to read, we can render this to make the
    data visible.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 现在加速度计已经准备好读取，我们可以将其渲染出来，使数据可见。
- en: Displaying the accelerometer as a vector
  id: totrans-305
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将加速度计显示为向量
- en: 'The acceleration is a vector; it points to a 3D space with a direction and
    size. A great way to show this is as an arrow in 3D. To clarify where this vector
    is, we can plot an indicator for each of the X, Y, and Z axes:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度是一个向量；它指向一个三维空间，具有方向和大小。展示这一点的一个好方法是在三维空间中画一个箭头。为了明确这个向量的位置，我们可以为X、Y和Z轴各画一个指示器：
- en: 'Create a file named `accelerometer_vector.py`. Start it with some simple imports,
    including the robot view, the logging setup, and initializing the IMU:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`accelerometer_vector.py`的文件。从一些简单的导入开始，包括机器人视图、日志设置和初始化IMU：
- en: '[PRE32]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Let''s look at this from the angle we tend to view the robot at:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从我们倾向于观察机器人的角度来看看：
- en: '[PRE33]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now, we want to define four arrows. VPython arrows point along an axis and
    can have their color and length set:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们想要定义四个箭头。VPython箭头沿着一个轴指向，可以设置其颜色和长度：
- en: '[PRE34]'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Now, we can start the main loop:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以开始主循环：
- en: '[PRE35]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Read the accelerometer and log it:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取加速度计并记录：
- en: '[PRE36]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Because bumps can knock our scale out, we will normalize the vector to so that
    its length is 1\. We need to put this in the arrow axis:'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为颠簸可能会使我们的刻度失效，我们将向量归一化，使其长度为1。我们需要将这个放入箭头轴中：
- en: '[PRE37]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Upload this to the Raspberry Pi and start it with `vpython accelerometer_vector.py`.
    Point your browser to it to see the following output:![](img/B15660_12_18.jpg)
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此上传到Raspberry Pi，并用`vpython accelerometer_vector.py`启动它。将你的浏览器指向它，以查看以下输出：![img/B15660_12_18.jpg]
- en: Figure 12.18 – The accelerometer vector
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.18 - 加速度计向量
- en: The preceding image shows the three colored arrows – red for the X-axis (pointing
    to the viewer), green for the Y-axis (pointing left), and blue for the Z-axis
    (pointing up). There is a gray arrow showing the accelerometer vector. The accelerometer
    points up, which shows what is holding it up against gravity.
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上一张图显示了三个彩色箭头——红色代表X轴（指向观察者），绿色代表Y轴（指向左侧），蓝色代表Z轴（指向上方）。有一个灰色箭头显示了加速度计向量。加速度计向上，这显示了它如何对抗重力而保持向上。
- en: Now, if you tilt the robot, the arrow will tilt to show you which way up is
    relative to the robot. You can tilt the robot a few ways to see how this feels.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你倾斜机器人，箭头也会倾斜以显示相对于机器人的向上方向。你可以以几种方式倾斜机器人，看看感觉如何。
- en: This is exciting – you have now shown where up is, relative to your robot. To
    use this to rotate things, we need to turn this vector into pitch and roll angles,
    which we'll learn how to do when we dive deeper.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 这很令人兴奋——你现在已经展示了相对于你的机器人，向上的方向在哪里。为了使用这个来旋转物体，我们需要将这个向量转换为俯仰角和横滚角，我们将在深入研究时学习如何做到这一点。
- en: In this section, you have learned how to read data from the accelerometer component
    and how to display it as a vector. Now, we will move on to the next element of
    the IMU, known as the magnetometer, and read the magnetic fields that are acting
    on our system.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你已经学会了如何从加速度计组件读取数据并将其显示为向量。现在，我们将继续学习IMU的下一个元素，即磁力计，并读取作用于我们系统的磁场。
- en: Working with the magnetometer
  id: totrans-325
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用磁力计
- en: A magnetometer reads magnetic field strengths in 3D to produce a vector. Code
    you write can use this to find the magnetic north, in the same way as a compass.
    In this section, we'll look closer at the device, learn how to get a reading from
    it, and see what vectors it produces.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 磁力计在3D空间中读取磁场强度以产生一个向量。你编写的代码可以使用这个向量来找到磁北极，就像指南针一样。在本节中，我们将更详细地了解这个设备，学习如何从它那里获取读数，并查看它产生的向量。
- en: It may be useful to have a space with very few magnets present. Let's understand
    the magnetometer more.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个磁铁很少的空间里可能很有用。让我们更深入地了解磁力计。
- en: Understanding the magnetometer
  id: totrans-328
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解磁力计
- en: 'A compass measures a heading from the Earth''s magnetic field by using a magnetized
    needle or disk. The following image is of a compass:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 指南针通过使用磁化的针或圆盘来测量地球磁场中的航向。以下是一张指南针的图片：
- en: '![](img/B15660_12_19.jpg)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15660_12_19.jpg)'
- en: Figure 12.19 – A traditional compass
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.19 – 一个传统的指南针
- en: The compass shown in the preceding image has a rotating magnetized disk balanced
    on a center pin. This variety is a small *button compass*, which is about 25 mm
    in diameter.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 之前图像中显示的指南针有一个在中心针上平衡的旋转磁化圆盘。这种类型的是一个小型*按钮指南针*，直径约为25毫米。
- en: Our chosen IMU contains a device known as a **magnetometer**. This electronically
    senses a magnetic field and can be used as a compass.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择的IMU包含一个称为**磁力计**的设备。这个设备可以电子感应磁场，并可以用作指南针。
- en: 'Most magnetometers pass electricity through a material that creates a current
    when it''s exposed to a magnetic field, as shown in the following diagram:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数磁力计通过一个材料传递电流，当它暴露在磁场中时会产生电流，如下面的图示所示：
- en: '![](img/B15660_12_20.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15660_12_20.jpg)'
- en: Figure 12.20 – A stylized picture of a Hall-effect sensor
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.20 – 一个霍尔效应传感器的风格化图片
- en: 'The preceding diagram shows an example of this in action:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示展示了这一过程的例子：
- en: This circuit passes an electric current from a battery (left) through a conducting
    plate (gray rectangle). The arrows demonstrate the electrons (negative charge
    carriers) that are moving around the circuit, from the top of the plate straight
    to the bottom. The small circle with a V inside it is a voltage (electric flow)
    sensor that's connected to the sides of the plate. The voltage sensor reads 0
    since there's no flow to the sensor.
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个电路从电池（左侧）通过一个导电板（灰色矩形）传递电流。箭头显示了在电路中移动的电子（负电荷载体），它们从板的顶部直接移动到底部。板两侧的小圆圈内有V，是一个电压（电流量）传感器，连接到板的两侧。电压传感器读数为0，因为没有电流流向传感器。
- en: A magnet is above the plate, deflecting the electrons to one side. They give
    one side of the plate a negative charge, and the other side a positive charge.
    This difference in charge makes voltage flow through the sensor, as shown by the
    arrows. The reading below is now above zero.
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个磁铁在板的上方，使电子偏转到一个方向。它们使板的这一侧带负电荷，另一侧带正电荷。这种电荷差异使电压通过传感器流动，如箭头所示。下面的读数现在高于零。
- en: Putting the magnet on the other side of the sensor changes the magnetic field;
    the electrons are deflected to the other side, causing reverse voltage to flow.
    The arrows going to the meter are going in the opposite direction, and the reading
    shows a voltage below zero.
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将磁铁放在传感器的另一侧会改变磁场；电子偏转到另一侧，导致反向电压流动。指向仪表的箭头方向相反，读数显示电压低于零。
- en: This is known as the Hall effect. By measuring three plates, you can measure
    magnetic fields in three dimensions. Magnetometers are sensitive to magnetic fields
    and metal objects.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 这被称为霍尔效应。通过测量三个板，你可以测量三维空间中的磁场。磁力计对磁场和金属物体很敏感。
- en: 'Another quirk is that on some IMUs, the magnetometer''s axes are different
    from the other devices'':'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个特点是，在某些IMU中，磁力计的轴与其他设备不同：
- en: '![](img/B15660_12_21.jpg)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15660_12_21.jpg)'
- en: Figure 12.21 – The magnetometer's axes
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.21 – 磁力计的轴
- en: In the preceding diagram, the axes we looked at previously are shown on the
    left for the gyroscope and accelerometer. On the right, we can see the axes for
    the magnetometer. Here, we can see that the Z-axis points downward and that the
    Y-axis now points backward. It's like we've rotated 180 degrees around the X-axis.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，我们之前查看的轴在左侧显示为陀螺仪和加速度计的轴。在右侧，我们可以看到磁力计的轴。在这里，我们可以看到Z轴向下，Y轴现在向后。这就像我们在X轴周围旋转了180度。
- en: Now, let's add some code so that we can read this information.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们添加一些代码，以便我们可以读取这些信息。
- en: Adding the magnetometer interface
  id: totrans-347
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加磁力计接口
- en: 'We''ll wrap this the same way we wrapped the other readings; that is, by adding
    it to our interface library:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将以相同的方式封装这个，即通过将其添加到我们的接口库中：
- en: Open the `robot_imu.py` file.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`robot_imu.py`文件。
- en: 'In the `RobotIMU` class, after the `read_gyroscope` method, add the new read
    method:'
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`RobotIMU`类中，在`read_gyroscope`方法之后，添加新的读取方法：
- en: '[PRE38]'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Unlike the accelerometer and gyroscope, this reads data from a separate call
    to the underlying device library. We wrap this up and return a vector. For a cheeky
    rotation by 180 degrees, we negate the Y and Z axes:'
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与加速度计和陀螺仪不同，它从底层的设备库中读取数据。我们将这个封装起来并返回一个向量。为了进行180度的俏皮旋转，我们取反Y和Z轴：
- en: '[PRE39]'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Now that this interface is ready to use, let's get some readings.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这个接口已经准备好使用，让我们获取一些读数。
- en: Displaying magnetometer readings
  id: totrans-355
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 显示磁力计读数
- en: 'One way we can visualize this is to turn magnetometer output into a vector,
    like so:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以可视化的方法之一是将磁力计输出转换为向量，如下所示：
- en: Create a file named `magnetometer_vector.py`.
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`magnetometer_vector.py`的文件。
- en: 'Add the familiar imports and setup:'
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加熟悉的导入和设置：
- en: '[PRE40]'
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Now, we will create an arrow for the magnetometer reading, along with the reference
    X, Y, and Z axes:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个表示磁力计读数的箭头，以及参考X、Y和Z轴：
- en: '[PRE41]'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Next, we start the main loop:'
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们开始主循环：
- en: '[PRE42]'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Now, we can read the magnetometer:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以读取磁力计：
- en: '[PRE43]'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Finally, let''s set an arrow''s axis that will match this vector. We can use
    the `.norm()` method to normalize this vector. We also need to print the data:'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，让我们设置一个与这个向量匹配的箭头轴。我们可以使用`.norm()`方法来归一化这个向量。我们还需要打印数据：
- en: '[PRE44]'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Send this to the robot and run it with the usual VPython settings. You should
    see something like the following:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此发送到机器人，并使用常规的VPython设置运行它。你应该会看到以下内容：
- en: '![](img/B15660_12_22.jpg)'
  id: totrans-369
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B15660_12_22.jpg)'
- en: Figure 12.22 – The magnetometer's reading
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.22 – 磁力计的读数
- en: The preceding image shows a canvas with a red arrow for the X-axis pointing
    forward, a blue arrow for the Z-axis pointing up, and a green arrow for the Y-axis
    pointing right. There is a gray arrow showing the magnetometer vector (XZ only)
    pointing backward.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图像显示了一个画布，其中X轴用指向前的红色箭头表示，Z轴用指向上的蓝色箭头表示，Y轴用指向右的绿色箭头表示。还有一个表示磁力计向量的灰色箭头，它指向后方（仅XZ轴）。
- en: Yours may be pointing in a different direction compared to mine. This is because
    it is likely to be pointing to where the pin headers are on your IMU. Why is this?
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 你的箭头可能指向的方向与我的不同。这是因为它很可能指向你的IMU上的插针头位置。为什么是这样？
- en: Pin headers are usually made from magnetic metal. You can check this out for
    yourself by taking a magnet and seeing if it sticks to the headers (use some spares
    or do this when the power is off). You should also be able to observe what this
    does to the arrow. You could also take a bit of metal, such as a screwdriver,
    and wave it around the magnetometer. This should send the results all over the
    place.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 插针头通常由磁性金属制成。你可以亲自检查一下，用磁铁看看它是否粘附在插针头上（使用一些备件或断电时进行此操作）。你也应该能够观察到这对箭头的影响。你也可以拿一些金属，比如螺丝刀，在磁力计周围挥动。这应该会让结果四处飞溅。
- en: Later, we will need to compensate for nearby metal as it may be creating a large
    offset, large enough to overwhelm Earth's relatively weak magnetic field completely.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们需要补偿附近金属的影响，因为它可能会产生很大的偏移，大到足以完全压倒地球相对较弱的地磁场。
- en: Summary
  id: totrans-375
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to read four sensors on an inertial measurement
    unit, as well as how to display or graph data. You then had your first experience
    with soldering – a vital skill when it comes to making robots. You also learned
    about robot coordinate systems.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何读取惯性测量单元上的四个传感器，以及如何显示或绘制数据。然后你有了第一次焊接经验——这是制作机器人的关键技能。你还学习了关于机器人坐标系的内容。
- en: Later in this book, we will dive deeper into knitting the IMU sensors together
    to get an approximation of the robot's orientation.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的后面部分，我们将更深入地探讨如何将IMU传感器编织在一起，以获得机器人方向的近似值。
- en: In the next chapter, we will look at computer vision; that is, how to extract
    information from a camera and make the robot respond to what it can see.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨计算机视觉；也就是说，如何从摄像头中提取信息并使机器人对其所看到的内容做出反应。
- en: Exercises
  id: totrans-379
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: In the temperature graph, you will notice a lot of noise in the graph and the
    output. The Python `round` function takes a number and the number of decimal places
    to keep, defaulting to 0\. Use this to round off the temperature to a more reasonable
    value.
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在温度图表中，你会在图表和输出中注意到很多噪声。Python的`round`函数接受一个数字和要保留的小数位数，默认为0。使用这个函数将温度四舍五入到更合理的值。
- en: Try putting the accelerometer values into an X, Y, and Z graph, as we did for
    the gyroscope. Observe the changes in the chart when you move the robot. Is it
    smooth, or is there noise?
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试将加速度计的值放入一个X、Y和Z图中，就像我们为陀螺仪所做的那样。当你移动机器人时，观察图表中的变化。它是平滑的，还是有噪声？
- en: Could the gyroscope values be shown as a vector?
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 陀螺仪的值能否以向量的形式显示？
- en: Are there other sensors that can be soldered that you might find interesting
    for your robot to use?
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否有其他可以焊接的传感器，你可能觉得对你的机器人使用很有趣？
- en: Further reading
  id: totrans-384
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Please refer to the following links for more information regarding what was
    covered in this chapter:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下链接，获取有关本章所涵盖内容的更多信息：
- en: To learn more about VPython, take a look at the extensive help at [https://www.glowscript.org/docs/VPythonDocs/index.html](https://www.glowscript.org/docs/VPythonDocs/index.html).
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 想要了解更多关于VPython的信息，请查看[https://www.glowscript.org/docs/VPythonDocs/index.html](https://www.glowscript.org/docs/VPythonDocs/index.html)提供的详细帮助文档。
- en: 'Paul McWarter Arduino experiments with an IMU: [https://toptechboy.com/arduino-based-9-axis-inertial-measurement-unit-imu-based-on-bno055-sensor/](https://toptechboy.com/arduino-based-9-axis-inertial-measurement-unit-imu-based-on-bno055-sensor/).'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paul McWarter使用IMU的Arduino实验：[https://toptechboy.com/arduino-based-9-axis-inertial-measurement-unit-imu-based-on-bno055-sensor/](https://toptechboy.com/arduino-based-9-axis-inertial-measurement-unit-imu-based-on-bno055-sensor/)。
- en: 'Adafruit have guides on using IMUs with their libraries: [https://learn.adafruit.com/adafruit-sensorlab-magnetometer-calibration](https://learn.adafruit.com/adafruit-sensorlab-magnetometer-calibration).'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adafruit提供了使用其库与IMU配合使用的指南：[https://learn.adafruit.com/adafruit-sensorlab-magnetometer-calibration](https://learn.adafruit.com/adafruit-sensorlab-magnetometer-calibration)。
- en: 'This YouTube talk by Google contains excellent information on the subject of
    *Sensor Fusion on Android Devices: A Revolution in Motion Processing*: [https://www.youtube.com/watch?v=C7JQ7Rpwn2k](https://www.youtube.com/watch?v=C7JQ7Rpwn2k).'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google的这个YouTube讲座包含了关于*Android设备上的传感器融合：运动处理革命*主题的极好信息：[https://www.youtube.com/watch?v=C7JQ7Rpwn2k](https://www.youtube.com/watch?v=C7JQ7Rpwn2k)。
