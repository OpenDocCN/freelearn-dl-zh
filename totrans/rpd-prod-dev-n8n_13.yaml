- en: '*Chapter 10*: We’ve Only Just Begun'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is sometimes hard to believe how much you’ve accomplished in the course of
    just reading a book. Sometimes, finishing a book can be both exciting because
    of the accomplishment as well as sad because the journey is over.
  prefs: []
  type: TYPE_NORMAL
- en: It’s really exciting to see how far we have come in such a short period of time!
    Let’s look at what we’ve learned from this book and help you find and start that
    next n8n project!
  prefs: []
  type: TYPE_NORMAL
- en: We’ve come a long way
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Learning a new skill can be a daunting task. We look at where we are presently
    and calculate in our heads how far we have to go to reach our goal. It seems so
    far away. It seems almost too big to imagine what it will take to get to that
    finish line.
  prefs: []
  type: TYPE_NORMAL
- en: But sometimes, we spend too much time focusing on the finish line that we forget
    that it is the journey, not the finish line, that teaches us, molds us, and takes
    us to the next level. It is the journey that makes us *better, stronger, faster*.
  prefs: []
  type: TYPE_NORMAL
- en: This is why it is important for us to take a look back at what we have accomplished
    along the way and feel a sense of pride in how far we have come. Let’s review
    what we have learned as we made our way through this book.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing no-code tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In section 1, we were introduced to a new way of developing code called no code.
    The concept behind no code is to move the building of applications away from software
    development teams and closer to the people who will actually use the applications,
    such as office workers or business analysts.
  prefs: []
  type: TYPE_NORMAL
- en: We also learned about the star of the show – n8n! We discovered how this automation
    tool can be used to connect different systems together, even if they were never
    designed to talk to each other. We learned how nodes in n8n are connected together
    in infinite combinations to manipulate data, connect systems, and create applications.
  prefs: []
  type: TYPE_NORMAL
- en: In the last chapter of this section, we built three different applications to
    demonstrate the power of n8n. These applications demonstrated the possibilities
    that are out there to connect and automate with n8n.
  prefs: []
  type: TYPE_NORMAL
- en: APIs and data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the second section, we put a focus on APIs. An **API**, as you will remember,
    is an **application programming interface**, which allows different systems to
    communicate with each other without having to rely on people to perform manual
    tasks.
  prefs: []
  type: TYPE_NORMAL
- en: The first chapter taught us how to build our own API endpoints using n8n. This
    enables remote systems to activate n8n workflows on demand and allows n8n to create
    APIs for systems that may not have an API.
  prefs: []
  type: TYPE_NORMAL
- en: We then looked more closely at how n8n worked with data inside of its workflows.
    Data manipulation is a critical part of the flexibility inherent in n8n that makes
    it so powerful. The ability to transform data turns n8n into a “universal translator,"
    allowing different systems to store information as needed.
  prefs: []
  type: TYPE_NORMAL
- en: Storing data can be as important as transforming data. So, we learned how to
    use no-code database solutions to store data for both short- and long-term use.
    These databases allow us to work with data at rest so that information is not
    lost between workflow executions.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we introduced how to use the Bubble no-code tool’s API to access Bubble
    data and interact with workflows. This was the beginning of using Bubble as the
    web frontend for n8n.
  prefs: []
  type: TYPE_NORMAL
- en: Building the user interface
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Up until now, the focus has been on using n8n behind the scenes to perform actions
    that most people do not see. In this final section, we focused on building out
    a way for users to interact with an application that uses n8n behind the scenes.
  prefs: []
  type: TYPE_NORMAL
- en: We showed you how to design an interface that will work well, regardless of
    the type of device it runs on. We also learned how to design the structure of
    an application and the data behind it to ensure that the application is easy to
    use and troubleshoot.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we connected the Bubble application to n8n in order to automate and
    process the information provided by the application.
  prefs: []
  type: TYPE_NORMAL
- en: Where to next?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Have you ever walked into a new restaurant for the first time and found it nearly
    impossible to decide what to order? There are so many combinations of entrées,
    sides, and desserts that it is impossible to land on one single selection to request
    from the waiter.
  prefs: []
  type: TYPE_NORMAL
- en: This is the problem that new n8n users are faced with. One of n8n’s biggest
    assets, its flexibility, can also be one of the biggest roadblocks for new users
    who want to start creating with n8n. How do you choose?
  prefs: []
  type: TYPE_NORMAL
- en: Here are some tips for figuring out what you should do for your next n8n project.
  prefs: []
  type: TYPE_NORMAL
- en: Look for a problem to solve
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: n8n was designed to allow the user to solve everyday problems. It is very demoralizing
    when we build “a solution looking for a problem." So, look for those little daily
    annoyances that can be automated with n8n.
  prefs: []
  type: TYPE_NORMAL
- en: Does your hard drive keep filling up with old files? Build a workflow that examines
    all of the user files on your computer daily and then pushes any file that hasn’t
    been modified in 2 years into cloud storage and removes it from your hard drive.
  prefs: []
  type: TYPE_NORMAL
- en: Do you keep forgetting to respond to emails in your inbox? Design an n8n app
    that will scan your email inbox and send you a message asking you what to do with
    the email and then deal with it appropriately.
  prefs: []
  type: TYPE_NORMAL
- en: Not sure what to make for supper each day? Have n8n pull a random recipe from
    your recipe list and create a shopping list for you.
  prefs: []
  type: TYPE_NORMAL
- en: Once you start looking at your everyday tasks as opportunities to make them
    more efficient or easier, you will soon find that there’s no end to your ideas
    for n8n projects.
  prefs: []
  type: TYPE_NORMAL
- en: Dream big and start small
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As we mentioned earlier, it is often the journey and not the destination that
    is important. The lessons that you learn along the way are often applicable to
    other challenges that you are experiencing.
  prefs: []
  type: TYPE_NORMAL
- en: So, think up some really big, wild project and just start! Break the project
    down into smaller subprojects and continue to break it down until it is something
    that you can do!
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some of the over-the-top ideas that I’m working on right now:'
  prefs: []
  type: TYPE_NORMAL
- en: Turning my truck into my own version of a cyber truck with n8n controlling out-of-this-world
    add-ons such as a rear projector and a pop-up video screen for instant drive-in
    movies, computer-controlled lasers, and individually addressed LED light upgrades
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a bulk LEGO manager machine that will identify, sort, and catalog each
    part, determine what sets can be created from the LEGO in the inventory, and then
    put together all the parts for a set on demand along with a printout of the build
    instructions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Designing a way to take a picture of books on a shelf, identify those books
    visually, then look up the value of each book second-hand, and upload the information
    to a website to put the books up for sale
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will I ever finish these projects? Who knows!
  prefs: []
  type: TYPE_NORMAL
- en: Will I learn some interesting skills and figure out how to use n8n in new and
    interesting ways? Absolutely!
  prefs: []
  type: TYPE_NORMAL
- en: Start an automation journal
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Sometimes, ideas come to us at the strangest of times: in the shower, on a
    walk, when commuting to work, on a tour bus. It is important to get these ideas
    down as quickly as possible so that they don’t get lost or forgotten.'
  prefs: []
  type: TYPE_NORMAL
- en: But because the timing of these epiphanies is often not always conducive to
    standard good old-fashioned pen and paper, I purchased a waterproof notebook and
    keep it with me wherever I go. It is always within reach in the event that I come
    up with the next big idea!
  prefs: []
  type: TYPE_NORMAL
- en: Get ideas from others
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Often, inspiration will come from what others have done (why do you think I
    listed my wild ideas earlier?). Take a look through some of the projects on the
    n8n websites or review some of the workflows created by other n8n users.
  prefs: []
  type: TYPE_NORMAL
- en: Starting your next project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you have your new idea, how do you get started? This is usually the
    next roadblock that new n8n users run into. Getting past this can be difficult
    at it is easy to get overwhelmed by the potential immensity of the actual project
    (especially if it is a big, wild project).
  prefs: []
  type: TYPE_NORMAL
- en: In order to get you going, here are a few tips to get that new project launched!
  prefs: []
  type: TYPE_NORMAL
- en: Break it down
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sometimes, when looking at the whole project, it is just too much. How in the
    world can you expect someone to design that whole solution?
  prefs: []
  type: TYPE_NORMAL
- en: But if you break it down into smaller pieces then look at each piece, those
    pieces may be doable. If not, break each piece down even further until you recognize
    a piece that can be done!
  prefs: []
  type: TYPE_NORMAL
- en: Keep doing this until the entire project is complete!
  prefs: []
  type: TYPE_NORMAL
- en: Write it down
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Trying to keep everything in your head for a project can be really difficult,
    especially if there are large gaps of time between when you can work on the project.
    By writing it down, you get the plans and ideas out of your head and down on paper.
  prefs: []
  type: TYPE_NORMAL
- en: Review n8n nodes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It can be really difficult to know what you can do if you don’t know the tools
    that you have at your disposal. Since n8n upgrades frequently, it is good to upgrade
    your version of n8n frequently and look through not only the new nodes but also
    the changes that have been made to existing nodes.
  prefs: []
  type: TYPE_NORMAL
- en: Steal others’ code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There is no sense in reinventing the wheel if someone has already built it.
    Take a look at workflows that others have already created and see whether you
    can use it or a part of it to complete a piece of your project.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We really hope that you have found reading this book as informative and educational
    as we did writing it. Feel free to reach out to us through the n8n community website
    if you have any questions or ideas for interesting projects.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for joining us on this journey!
  prefs: []
  type: TYPE_NORMAL
