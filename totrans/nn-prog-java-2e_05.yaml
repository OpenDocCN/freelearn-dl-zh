- en: Chapter 5. Forecasting Weather
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 预测天气
- en: 'This chapter presents one well-known application in daily life to which neural
    networks can perfectly be applied: forecasting weather. We are going to walk through
    the entire process of designing a neural network solution to this problem: how
    to choose the neural architecture and the number of neurons, as well as selecting
    and preprocessing data. Then the reader will be presented with techniques to handle
    time series datasets, from which our neural network is going to make predictions
    on weather variables using the Java programming language. The topics covered in
    this chapter are as follows:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了一个在日常生活中神经网络可以完美应用的知名应用：天气预报。我们将详细介绍设计神经网络解决方案的整个过程：如何选择神经网络架构和神经元数量，以及选择和预处理数据。然后，读者将了解处理时间序列数据集的技术，我们的神经网络将使用Java编程语言对这些天气变量进行预测。本章涵盖的主题如下：
- en: Neural networks for regression problems
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于回归问题的神经网络
- en: Loading/selecting data
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载/选择数据
- en: Input/output variables
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入/输出变量
- en: Choosing inputs
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择输入
- en: Preprocessing
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预处理
- en: Normalization
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 归一化
- en: Empirical design of neural networks
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 神经网络的经验设计
- en: Neural networks for regression problems
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于回归问题的神经网络
- en: So far, the reader has been presented with a number of neural network implementations
    and architectures, so now it is time to get into more complex cases. The power
    of neural networks in predictions is really astonishing since they can perform
    *learning* from historical data in such a way that neural connections are adapted
    to produce the same results according to some input data. For example, for a given
    situation (cause), there is a consequence (result) and this is represented as
    data; neural networks are capable of learning the nonlinear function that maps
    the situation to the consequence (or the cause to the result).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，读者已经接触到了许多神经网络实现和架构，现在是时候进入更复杂的情况了。神经网络在预测方面的力量确实令人惊叹，因为它们可以从历史数据中学习，使神经网络连接适应以产生相同的结果，根据某些输入数据。例如，对于给定的情况（原因），有一个结果（后果），这被表示为数据；神经网络能够学习将情况映射到后果（或原因映射到结果）的非线性函数。
- en: 'Prediction and regression problems are an interesting category to apply neural
    networks to. Let''s take a look at a sample table containing weather data:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 预测和回归问题是应用神经网络的一个有趣类别。让我们看看一个包含天气数据的样本表格：
- en: '| Date | Avg. Temperature | Pressure | Humidity | Precipitation | Wind Speed
    |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 日期 | 平均温度 | 压力 | 湿度 | 降水量 | 风速 |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| July 31st | 23 ºC | 880 mbar | 66% | 16 mm | 5 m/s |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 7月31日 | 23 ºC | 880 mbar | 66% | 16 mm | 5 m/s |'
- en: '| August 1st | 22 ºC | 881 mbar | 78% | 3 mm | 3 m/s |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 8月1日 | 22 ºC | 881 mbar | 78% | 3 mm | 3 m/s |'
- en: '| August 2nd | 25 ºC | 884 mbar | 65% | 0 mm | 4 m/s |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 8月2日 | 25 ºC | 884 mbar | 65% | 0 mm | 4 m/s |'
- en: '| August 3rd | 27 ºC | 882 mbar | 53% | 0 mm | 3 m/s |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 8月3日 | 27 ºC | 882 mbar | 53% | 0 mm | 3 m/s |'
- en: '| … |   |   |   |   |   |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| … |   |   |   |   |   |'
- en: '| December 11th | 32 ºC | 890 mbar | 64% | 0 mm | 2 m/s |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 12月11日 | 32 ºC | 890 mbar | 64% | 0 mm | 2 m/s |'
- en: 'The table above depicts five variables containing hypothetical values of weather
    data collected from a hypothetical city, only for the purpose of this example.
    Now let''s suppose that each of the variables contains a list of values sequentially
    taken over time. We can think of each list as a time series. On a time series
    chart, one can see how they evolve with time:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 上表描述了包含从假设城市收集的假设天气数据的五个变量，仅用于本例。现在假设每个变量都包含一个随时间顺序取值的值列表。我们可以将每个列表视为一个时间序列。在时间序列图表上，可以看到它们随时间的变化：
- en: '![Neural networks for regression problems](img/B05964_05_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![用于回归问题的神经网络](img/B05964_05_01.jpg)'
- en: The relationship between these time series denotes a dynamic representation
    of weather in a certain city, as depicted in the chart above. We want the neural
    network to learn this dynamic representation; however, we need to structure this
    data the in a way neural networks can process, that is, identifying which data
    series (variables) are the cause and which are the effect. Dynamic systems have
    variables whose value depends on past values, so neural network applications can
    rely not only on the present situation, but also on the past. This is very important
    because historical events influence the present and future.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这些时间序列之间的关系表示了某个城市天气的动态表示，如上图所示。我们希望神经网络学习这种动态表示；然而，我们需要以神经网络可以处理的方式结构化这些数据，即识别哪些数据序列（变量）是原因，哪些是结果。动态系统具有其值依赖于过去值的变量，因此神经网络应用不仅依赖于当前情况，还可以依赖于过去。这一点非常重要，因为历史事件影响现在和未来。
- en: Only after structuring data can we structure the neural network, that is, the
    number of inputs, outputs, and hidden nodes. However, there are many other architectures
    that may be suitable for prediction problems, such as radial basis functions and
    feedback networks, among others. In this chapter, we are dealing with a feedforward
    multilayer perceptron with the Backpropagation learning algorithm, to demonstrate
    how this architecture can be simply exploited to predict weather variables; also,
    this architecture presents very good generalized results with good selected data
    and there is little complexity involved in the design process.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在结构化数据之后，我们才能结构化神经网络，即输入、输出和隐藏节点的数量。然而，还有许多其他架构可能适合预测问题，例如径向基函数和反馈网络等。在本章中，我们处理的是具有反向传播学习算法的前馈多层感知器，以展示如何简单地利用这种架构来预测天气变量；此外，这种架构在选择了良好的数据时表现出非常好的泛化结果，并且在设计过程中涉及到的复杂性很小。
- en: 'The overall process for designing neural networks for prediction processes
    is depicted in the figure below:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 设计用于预测过程神经网络的总体过程如图所示：
- en: '![Neural networks for regression problems](img/B05964_05_02.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![回归问题的神经网络](img/B05964_05_02.jpg)'
- en: If the neural network fails to be validated (**step 5**), usually a new structure
    (**step 3**) is defined, although sometimes **steps 1** and **step 2** may be
    repeated. Each of the steps in the figure will be addressed in the next sections
    in this chapter.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果神经网络未能通过验证（**步骤5**），通常定义一个新的结构（**步骤3**），尽管有时可能需要重复**步骤1**和**步骤2**。图中的每个步骤将在本章的下一节中详细说明。
- en: Loading/selecting data
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载/选择数据
- en: First we need to load raw data into our Java environment. Data can be stored
    in a variety of data sources, from text files to structured database systems.
    One basic and simple type used is **CSV** (**Comma-Separated Values**), which
    is simple and in general use. In addition, we'll need to transform this data and
    perform selection before presenting it to the neural network.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要将原始数据加载到我们的Java环境中。数据可以存储在多种数据源中，从文本文件到结构化数据库系统。一种基本且简单类型是**CSV**（**逗号分隔值**），它简单且普遍使用。此外，我们还需要在将数据呈现给神经网络之前对其进行转换和选择。
- en: Building auxiliary classes
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建辅助类
- en: 'To deal with these tasks, we need some auxiliary classes in the package `edu.packt.neuralnet.data`.
    The first will be `LoadCsv` to read CSV files:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理这些任务，我们需要在`edu.packt.neuralnet.data`包中的一些辅助类。第一个将是`LoadCsv`，用于读取CSV文件：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: To save space here, we are not showing the full code. For more details and the
    full list of methods, please refer to the code and documentation in *Appendix
    C*.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省空间，我们这里不展示完整的代码。更多细节和完整的方法列表，请参阅*附录C*中的代码和文档。
- en: 'We are also creating a class to store the raw data loaded from CSV into a structure
    containing not only the data but the information on this data, such as column
    names. This class will be called **DataSet**, inside the same package:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在创建一个类，用于将从CSV加载的原始数据存储到一个结构中，这个结构不仅包含数据，还包含关于这些数据的信息，例如列名。这个类将被称为**DataSet**，位于同一个包中：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In [Chapter 4](ch04.xhtml "Chapter 4. Self-Organizing Maps"), *Self-Organizing
    Maps*, we've created a class `ArrayOperations` in the package `edu.packt.neuralnet.math`
    to handle operations involving arrays of data. This class has a large number of
    static methods and it would be impractical to depict all of them here; however,
    information can be found in *Appendix C*.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.xhtml "第4章. 自组织映射")中，我们已经在`edu.packt.neuralnet.math`包中创建了一个名为`ArrayOperations`的类来处理涉及数据数组操作。这个类有大量的静态方法，在这里描述所有这些方法是不切实际的；然而，相关信息可以在*附录C*中找到。
- en: Getting a dataset from a CSV file
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从CSV文件获取数据集
- en: 'To make the task easier, we''ve implemented a static method in the class `LoadCsv`
    to load a CSV file and automatically convert it into the structure of a `DataSet`
    object:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使任务更容易，我们在`LoadCsv`类中实现了一个静态方法来加载CSV文件并将其自动转换为`DataSet`对象的结构：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Building time series
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建时间序列
- en: 'A time series structure is essential for all problems involving time dimensions
    or domains, such as forecasting and prediction. A class called `TimeSeries` implements
    some time-related attributes such as time column and delay. Let''s take a look
    at the structure of this class:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列结构对于所有涉及时间维度或域的问题都是必不可少的，例如预测和预测。一个名为`TimeSeries`的类实现了某些时间相关属性，如时间列和延迟。让我们看看这个类的结构：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In time series, one frequent operation is the delay of shift of values. For
    example, we want to include in the processing not the current but the two past
    values for the daily temperature. Considering temperature as a time series with
    a time column (date), we must shift the values in the number of cycles desired
    (one and two, in this example):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在时间序列中，一个常见的操作是值的延迟移动。例如，我们希望在处理中包含的不是当前值而是前两天的日温度值。将温度视为包含时间列（日期）的时间序列，我们必须将值移动到所需的周期数（在这个例子中是一和二）：
- en: '![Building time series](img/B05964_05_03.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![构建时间序列](img/B05964_05_03.jpg)'
- en: Tip
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: We have used **Microsoft Excel®** to convert the `datetime` values into real
    values. Working with numerical values is always preferred to working with structures
    such as dates or categories. So in this chapter, we are using numerical values
    to represent date.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经使用**Microsoft Excel®**将`datetime`值转换为实数值。与处理日期或类别等结构相比，始终更喜欢处理数值。因此，在本章中，我们使用数值来表示日期。
- en: 'While working with time series, one should pay attention to two points:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理时间序列时，应注意以下两点：
- en: There may be missing values or no measurements on a specific point of time;
    this can generate NaNs in the Java matrix.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在特定时间点可能存在缺失值或没有测量值；这可以在Java矩阵中生成NaN值。
- en: Shifting a column over one time period, for example, is not the same as getting
    the value of the previous row. That's why it is important to choose one column
    to be the time reference.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将一列移动一个时间周期，例如，并不等同于获取上一行的值。这就是为什么选择一个列作为时间参考很重要。
- en: 'In the `ArrayOperations` class, we implemented a method `shiftColumn` to shift
    the column of a matrix considering a time column for reference. This method is
    called from another method of the same name in the `TimeSeries` class, and then
    used in the shift method:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在`ArrayOperations`类中，我们实现了一个名为`shiftColumn`的方法，该方法考虑时间列来移动矩阵的列。这个方法是从`TimeSeries`类中同名的方法中调用的，然后用于移动方法：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Dropping NaNs
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 删除NaN值
- en: 'NaNs are undesired values often present after loading or transforming data.
    They are undesired because we cannot operate over them. If we feed a NaN value
    into a neural network, the output will definitely be NaN, just consuming more
    computational power. That''s why it is better to drop them out. In the class `DataSet`,
    we''ve implemented two methods to drop NaNs: one just substitutes a value for
    them, and the other drops the entire row if it has at least one missing value,
    as shown in the following figure:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: NaN值是在加载数据或转换数据后经常出现的不希望有的值。它们是不希望有的，因为我们无法对它们进行操作。如果我们向神经网络输入一个NaN值，输出肯定会是NaN，这只会消耗更多的计算能力。这就是为什么最好将它们删除。在`DataSet`类中，我们实现了两种删除NaN的方法：一种是用一个值替换它们，另一种是如果整行至少有一个缺失值，就删除整行，如图所示：
- en: '![Dropping NaNs](img/B05964_05_04.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![删除NaN值](img/B05964_05_04.jpg)'
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Getting weather data
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取天气数据
- en: 'Now that we have the tools to get the data, let''s find some datasets on the
    Internet. In this chapter, we are going to use the data from the Brazilian Institute
    of Meteorology (INMET: [http://www.inmet.gov.br/](http://www.inmet.gov.br/) in
    Portuguese), which is freely available on the Internet; we have the rights to
    use it in this book. However, the reader may use any free weather database on
    the Internet while developing applications.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了获取数据的工具，让我们在网上寻找一些数据集。在本章中，我们将使用巴西气象研究所（INMET：[http://www.inmet.gov.br/](http://www.inmet.gov.br/)，葡萄牙语）的数据，这些数据在互联网上免费提供；我们有权在本书中使用它。然而，读者在开发应用程序时可以使用互联网上的任何免费天气数据库。
- en: 'Some examples from English language sources are listed below:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是从英语语言来源中列出的一些示例：
- en: Wunderground ([http://wunderground.com/](http://wunderground.com/))
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wunderground ([http://wunderground.com/](http://wunderground.com/))
- en: Open Weather Map ([http://openweathermap.org/api](http://openweathermap.org/api))
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Open Weather Map ([http://openweathermap.org/api](http://openweathermap.org/api))
- en: Yahoo weather API ([https://developer.yahoo.com/weather/](https://developer.yahoo.com/weather/))
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yahoo 天气 API ([https://developer.yahoo.com/weather/](https://developer.yahoo.com/weather/))
- en: US National Climatic Data Center ([http://www.ncdc.noaa.gov/](http://www.ncdc.noaa.gov/))
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 美国国家气候数据中心 ([http://www.ncdc.noaa.gov/](http://www.ncdc.noaa.gov/))
- en: Weather variables
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 天气变量
- en: 'Any weather database will have almost the same variables:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 任何天气数据库几乎都会有相同的变量：
- en: Temperature (ºC)
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 温度 (ºC)
- en: Humidity (%)
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 湿度 (%)
- en: Pressure (mbar)
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 压力 (mbar)
- en: Wind speed (m/s)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 风速 (m/s)
- en: Wind direction (º )
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 风向 (º )
- en: Precipitation (mm)
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 降水量 (mm)
- en: Sunny hours (h)
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日照小时数 (h)
- en: Sun energy (W/m2)
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 太阳能量 (W/m2)
- en: This data is usually collected from meteorological stations, satellites, or
    radar, on an hourly or daily basis.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据通常是从气象站、卫星或雷达每小时或每天收集的。
- en: Tip
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Depending on the collection frequency, some variables may be summarized with
    average, minimum, or maximum values.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 根据收集频率，某些变量可能通过平均值、最小值或最大值进行汇总。
- en: Data units may also vary from source to source; that's why units should always
    be observed.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 数据单位可能因来源而异；这就是为什么始终应该观察单位。
- en: Choosing input and output variables
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择输入和输出变量
- en: Selecting the appropriate data that fulfils most of the system's dynamics needs
    to be carefully done. We want the neural network to forecast future weather based
    on the current and past weather data, but which variables should we choose? Getting
    an expert opinion on the subject can be really helpful in understanding the relationship
    between variables.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 选择满足系统动力学大部分需求的数据需要谨慎进行。我们希望神经网络能够根据当前和过去的天气数据预测未来天气，但我们应该选择哪些变量呢？对此问题获得专家意见可以非常有帮助，以理解变量之间的关系。
- en: Tip
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Regarding time series variables, one can derive new variables by applying historical
    data. That means, given a certain date, one may consider this date's values and
    the data collected (and/or summarized) from past dates, therefore extending the
    number of variables.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 关于时间序列变量，可以通过应用历史数据来导出新的变量。这意味着，给定一个特定的日期，可以考虑该日期的值以及从过去日期收集（和/或汇总）的数据，从而增加变量的数量。
- en: 'While defining a problem to use neural networks on, there are one or more predefined
    target variables: predict the temperature, forecast precipitation. measure insolation,
    and so on. But, in some cases, one wants to model all the variables and therefore
    to find causal relationships between them. Causal relationships can be identified
    by statistical tools, of which Pearson cross-correlation is the most used:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义使用神经网络解决的问题时，通常有一个或多个预定义的目标变量：预测温度、预报降水、测量日照等。但是，在某些情况下，人们希望模拟所有变量，因此需要找到它们之间的因果关系。因果关系可以通过统计工具识别，其中皮尔逊交叉相关是最常用的：
- en: '![Choosing input and output variables](img/B05964_05_05.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![选择输入和输出变量](img/B05964_05_05.jpg)'
- en: 'Here, *E[X.Y]* is the mean of the multiplication of variables *X* and *Y*;
    *E[X]* and *E[Y]* are the means of *X* and *Y* respectively; *σX* and *σY* are
    the standard deviation of *X* and *Y* respectively; and finally *Cx,y* is the
    Pearson coefficient of *X* related to *Y*, whose values lie between *-1* and *1*.
    This coefficient shows how much a variable *X* is correlated with a variable *Y*.
    Values near *0* denote weak or no correlation at all, while values close to *-1*
    or *1* denote negative or positive correlation, respectively. Graphically, it
    can be seen by a scatter plot, as shown below:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*E[X.Y]* 表示变量 *X* 和 *Y* 相乘的平均值；*E[X]* 和 *E[Y]* 分别是 *X* 和 *Y* 的平均值；*σX* 和
    *σY* 分别是 *X* 和 *Y* 的标准差；最后 *Cx,y* 是与 *Y* 相关的 *X* 的皮尔逊相关系数，其值介于 *-1* 和 *1* 之间。这个系数显示了变量
    *X* 与变量 *Y* 之间的相关程度。接近 *0* 的值表示弱相关或没有相关性，而接近 *-1* 或 *1* 的值分别表示负相关或正相关。从图形上看，可以通过散点图来观察，如下所示：
- en: '![Choosing input and output variables](img/B05964_05_06.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![选择输入和输出变量](img/B05964_05_06.jpg)'
- en: In the chart on the left, the correlation between the precipitation of the last
    day (indicated as [-1]) and the maximum temperature is -0.202, which is a weak
    value of negative correlation. In the middle chart, the correlation between insolation
    and maximum temperature is 0.376, which is a fair correlation, yet not very significant;
    one can see a slight positive trend. An example of strong positive correlation
    is shown in the chart on the right, which is between the last day's maximum temperature
    and the maximum temperature of the day. This correlation is 0.793, and we can
    see a thinner cloud of dots indicating the trend.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在左边的图表中，最后一天的降水量（标记为 [-1]）与最高温度的相关性为 -0.202，这是一个负相关度较弱的值。在中间的图表中，日照与最高温度的相关性为
    0.376，这是一个相当的相关性，但并不非常显著；可以看到一个轻微的正趋势。右边的图表显示了强正相关的例子，这是最后一天的最高温度与当天的最高温度之间的相关性。这个相关性为
    0.793，我们可以看到表示趋势的点云较薄。
- en: 'We are going to use correlation to choose the most appropriate inputs for our
    neural network. First, we need to code a method in the class DataSet, called correlation.
    Please note that operations such as mean and standard deviation are implemented
    in our class `ArrayOperations`:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用相关性来选择神经网络最合适的输入。首先，我们需要在 `DataSet` 类中编写一个名为 `correlation` 的方法。请注意，均值和标准差等操作是在我们的
    `ArrayOperations` 类中实现的：
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We will not delve too deeply into statistics in this book, so we recommend a
    number of references if the reader is interested in more details on this topic.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们不会深入探讨统计学，因此如果读者对这一主题的更多细节感兴趣，我们推荐一些参考文献。
- en: Preprocessing
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预处理
- en: Raw data collected from a data source usually presents different particularities,
    such as data range, sampling, and category. Some variables result from measurements
    while others are summarized or even calculated. Preprocessing means to adapt these
    variable values to a range that neural networks can handle properly.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 从数据源收集的原始数据通常具有不同的特性，如数据范围、采样和类别。一些变量是测量结果，而另一些则是汇总或甚至计算得出的。预处理意味着将这些变量的值调整到神经网络可以适当处理的范围。
- en: 'Regarding weather variables, let''s take a look at their range, sampling, and
    type:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 关于天气变量，让我们看看它们的范围、采样和类型：
- en: '| Variable | Unit | Range | Sampling | Type |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 变量 | 单位 | 范围 | 采样 | 类型 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| Mean temperature | º C | 10.86 – 29.25 | Hourly | Average of hourly measurements
    |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 平均温度 | º C | 10.86 – 29.25 | 每小时 | 每小时测量值的平均值 |'
- en: '| Precipitation | mm | 0 – 161.20 | Daily | Accumulation of daily rain |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 降水量 | mm | 0 – 161.20 | 每日 | 每日降雨量的累积 |'
- en: '| Insolation | hours | 0 – 10.40 | Daily | Count of hours receiving sun radiation
    |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| 日照 | 小时 | 0 – 10.40 | 每日 | 接收太阳辐射的小时数计数 |'
- en: '| Mean humidity | % | 45.00 – 96.00 | Hourly | Average of hourly measurements
    |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 平均湿度 | % | 45.00 – 96.00 | 每小时 | 每小时测量值的平均值 |'
- en: '| Mean wind speed | km/h | 0.00 – 3.27 | Hourly | Average of hourly measurements
    |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 平均风速 | km/h | 0.00 – 3.27 | 每小时 | 每小时测量值的平均值 |'
- en: Except for insolation and precipitation, the variables are all measured and
    share the same sampling, but if we wanted, for example, to use an hourly dataset,
    we would have to preprocess all the variables to use the same sample rate. Three
    of the variables are summarized, using daily average values, but if we wanted
    to we could use hourly data measurements. However, the range would certainly be
    larger.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 除了日照和降水之外，变量都是测量并共享相同的采样，但如果我们想使用，例如，每小时的数据集，我们就必须预处理所有变量以使用相同的采样率。其中三个变量使用每日平均值进行了汇总，但如果我们想的话，我们也可以使用小时数据测量。然而，范围肯定更大。
- en: Normalization
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 规范化
- en: 'Normalization is the process of getting all variables into the same data range,
    usually with smaller values, between `0` and `1` or `-1` and `1`. This helps the
    neural network to present values within the variable zone in activation functions
    such as sigmoid or hyperbolic tangent:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 规范化是将所有变量转换到相同数据范围的过程，通常范围较小，在`0`到`1`或`-1`到`1`之间。这有助于神经网络在激活函数（如sigmoid或双曲正切）中呈现变量区内的值：
- en: '![Normalization](img/B05964_05_07.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![规范化](img/B05964_05_07.jpg)'
- en: 'Values too high or too low may drive neurons in to producing values too high
    or too low as well for the activation functions, therefore leading to the derivative
    for these neurons being too small, near zero. In this book, we implemented two
    modes of normalization: min-max and z-score.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 过高或过低的值可能会使神经元产生过高或过低的激活函数值，从而导致这些神经元的导数太小，接近零。在这本书中，我们实现了两种规范化模式：最小-最大和z分数。
- en: 'The min-max normalization should consider a predefined range of the dataset.
    It is performed right away:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 最小-最大规范化应考虑数据集预定义的范围。它立即执行：
- en: '![Normalization](img/B05964_05_08.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![规范化](img/B05964_05_08.jpg)'
- en: 'Here, Nmin and Nmax are the normalized minimum and maximum limits respectively,
    Xmin and Xmax are the variable X''s minimum and maximum limits respectively, *X*
    is the original value, and Xnorm is the normalized value. If we want the normalization
    to be between 0 and 1, for example, the equation is simplified to the following:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，Nmin和Nmax分别是归一化的最小和最大限制，Xmin和Xmax分别是变量X的最小和最大限制，*X*是原始值，Xnorm是归一化值。如果我们想将规范化限制在0到1之间，例如，方程可以简化为以下形式：
- en: '![Normalization](img/B05964_05_09.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![规范化](img/B05964_05_09.jpg)'
- en: 'By applying the normalization, a new *normalized* dataset is produced and is
    fed to the neural network. One should also take into account that a neural network
    fed with normalized values will be trained to produce normalized values on the
    output, so the inverse (denormalization) process becomes necessary as well:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用规范化，生成一个新的*规范化*数据集，并将其输入到神经网络中。还应考虑到，用规范化值输入的神经网络将被训练以在输出上产生规范化值，因此逆（逆规范化）过程也变得必要：
- en: '![Normalization](img/B05964_05_10.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![规范化](img/B05964_05_10.jpg)'
- en: Or
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 或者
- en: '![Normalization](img/B05964_05_11.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![规范化](img/B05964_05_11.jpg)'
- en: For the normalization between 0 and 1.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对于0到1之间的规范化。
- en: 'Another mode of normalization is the z-score, which takes into account the
    mean and standard deviation:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种规范化模式是z分数，它考虑了均值和标准差：
- en: '![Normalization](img/B05964_05_12.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![规范化](img/B05964_05_12.jpg)'
- en: Here, S is a scaling constant, *E[X]* is the mean of E, and *σX* is the standard
    deviation of X. The main difference in this normalization mode is that there will
    be no limit defined for the range of variables; however, the variables will have
    values on the same range centered on zero with standard deviation equal to the
    scaling constant S.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，S是一个缩放常数，*E[X]*是E的均值，*σX*是X的标准差。这种规范化模式的主要区别是，变量范围将没有定义的限制；然而，变量将具有与缩放常数S相等的标准差，并围绕零中心化的相同范围的值。
- en: 'The figure below shows what both normalization modes do with the data:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了两种规范化模式对数据做了什么：
- en: '![Normalization](img/B05964_05_13.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![规范化](img/B05964_05_13.jpg)'
- en: 'A class called `DataNormalization` is implemented to handle the normalization
    of data. Since normalization considers the statistical properties of the data,
    we need to store this statistical information in a `DataNormalization` object:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 实现了一个名为`DataNormalization`的类来处理数据的规范化。由于规范化考虑了数据的统计特性，我们需要在`DataNormalization`对象中存储这些统计信息：
- en: '[PRE7]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The normalization procedure is performed on a method called `normalize`, which
    has a denormalization counterpart called **denormalize**:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 规范化过程是在一个名为`normalize`的方法上执行的，它有一个逆规范化对应的方法称为**denormalize**：
- en: '[PRE8]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Adapting NeuralDataSet to handle normalization
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将NeuralDataSet调整为处理规范化
- en: 'The already implemented `NeuralDataSet`, `NeuralInputData`, and `NeuralOutputData`
    will now have `DataNormalization` objects to handle normalization operations.
    In the `NeuralDataSet` class, we''ve added objects for input and output data normalization:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 已经实现的`NeuralDataSet`、`NeuralInputData`和`NeuralOutputData`现在将具有`DataNormalization`对象来处理归一化操作。在`NeuralDataSet`类中，我们已添加了输入和输出数据归一化的对象：
- en: '[PRE9]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`NeuralInputData` and `NeuralOutputData` will now have `normdata` properties
    to store the normalized data. The methods to retrieve data from these classes
    will have a Boolean parameter, `isNorm`, to indicate whether the value to be retrieved
    should be normalized or not.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`NeuralInputData`和`NeuralOutputData`现在将具有`normdata`属性来存储归一化数据。从这些类检索数据的方法将有一个布尔参数`isNorm`，以指示要检索的值是否应该归一化。'
- en: 'Considering that `NeuralInputData` will provide the neural network with input
    data, this class will only perform normalization before feeding data into the
    neural network. The method `setNormalization` is implemented in this class to
    that end:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到`NeuralInputData`将为神经网络提供输入数据，这个类将仅在将数据馈送到神经网络之前执行归一化。为此，该类实现了`setNormalization`方法：
- en: '[PRE10]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In `NeuralOutputData`, there are two datasets, one for the target and one for
    the neural network output. The target dataset is normalized to provide the training
    algorithm with normalized values. However, the neural output dataset is the output
    of the neural network, that is, it will be normalized first. We need to perform
    denormalization after setting the neural network output dataset:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在`NeuralOutputData`中，有两个数据集，一个用于目标，一个用于神经网络输出。目标数据集被归一化，以向训练算法提供归一化值。然而，神经网络输出数据集是神经网络的输出，即它将首先被归一化。在设置神经网络输出数据集后，我们需要执行去归一化：
- en: '[PRE11]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Adapting the learning algorithm to normalization
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将学习算法适应归一化
- en: 'Finally, the `LearningAlgorithm` class needs to include the normalization property:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`LearningAlgorithm`类需要包括归一化属性：
- en: '[PRE12]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now during the training, on every call to the `NeuralDataSet` methods that
    retrieve or write data, the normalization property should be passed in the parameter
    `isNorm`, as in the method forward of the class Backpropagation:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练期间，每次调用`NeuralDataSet`方法检索或写入数据时，应在参数`isNorm`中传递归一化属性，就像在Backpropagation类的方法forward中一样：
- en: '[PRE13]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Java implementation of weather forecasting
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 天气预报的Java实现
- en: In Java, we are going to use the package `edu.packt.neuralnet.chart` to plot
    some charts and visualize data. We're also downloading historical meteorology
    data from INMET, the Brazilian Institute of Meteorology. We've downloaded data
    from several cities, so we could have a variety of climates included in our weather
    forecasting case.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在Java中，我们将使用包`edu.packt.neuralnet.chart`来绘制一些图表并可视化数据。我们还从巴西气象研究所INMET下载了历史气象数据。我们已从几个城市下载了数据，因此我们的天气预报案例中可以包含各种气候。
- en: Tip
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In order to run the training expeditiously, we have selected a small period
    (5 years), which has more than 2,000 samples.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 为了快速运行训练，我们选择了一个较短的时间段（5年），它包含超过2000个样本。
- en: Collecting weather data
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 收集天气数据
- en: 'In this example, we wanted to collect a variety of data from different places,
    to attest to the capacity of the neural network to forecast it. Since we downloaded
    it from the INMET website, which covers only Brazilian territory, only Brazilian
    cities are covered. However, it is a very vast territory with a great variety
    of climates. Below is a list of places we collected data from:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们想要从不同地方收集各种数据，以证明神经网络预测其能力。由于我们从仅覆盖巴西领土的INMET网站下载了它，因此只覆盖了巴西城市。然而，这是一个非常广阔的领土，气候种类繁多。以下是收集数据的地方列表：
- en: '| # | City Name | Latitude | Longitude | Altitude | Climate Type |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| # | City Name | Latitude | Longitude | Altitude | Climate Type |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| 1 | Cruzeiro do Sul | 7º37''S | 72º40''W | 170 m | Tropical Rainforest |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| 1 | Cruzeiro do Sul | 7º37''S | 72º40''W | 170 m | 热带雨林 |'
- en: '| 2 | Picos | 7º04''S | 41º28''W | 208 m | Semi-arid |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| 2 | Picos | 7º04''S | 41º28''W | 208 m | 半干旱 |'
- en: '| 3 | Campos do Jordão | 22º45''S | 45º36''W | 1642 m | Subtropical Highland
    |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| 3 | Campos do Jordão | 22º45''S | 45º36''W | 1642 m | 亚热带高山 |'
- en: '| 4 | Porto Alegre | 30º01''S | 51º13''W | 48 m | Subtropical Humid |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| 4 | Porto Alegre | 30º01''S | 51º13''W | 48 m | 亚热带湿润 |'
- en: 'The location of these four cities is indicated on the map below:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这些四个城市的地理位置在下面的地图上标出：
- en: '![Collecting weather data](img/B05964_05_14.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![收集天气数据](img/B05964_05_14.jpg)'
- en: 'Source: Wikipedia, user NordNordWest using United States National Imagery and
    Mapping Agency data, World Data Base II data'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：维基百科，用户NordNordWest使用美国国家影像和测绘局数据，世界数据库II数据
- en: The weather data collected is from January 2010 until November 2016 and is saved
    in the data folder with the name corresponding to the city.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 收集的天气数据是从2010年1月到2016年11月，并保存在数据文件夹中，文件名与城市对应。
- en: 'The data collected from the INMET website includes these variables:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 从INMET网站收集的数据包括这些变量：
- en: Precipitation (mm)
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 降水量（mm）
- en: Max. temperature (ºC)
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大温度（ºC）
- en: Min. temperature (ºC)
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小温度（ºC）
- en: Insolation (sunny hours)
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日照时数（晴朗小时数）
- en: Evaporation (mm)
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 蒸发量（mm）
- en: Avg. temperature (ºC)
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平均温度（ºC）
- en: Avg. humidity (%)
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平均湿度（%）
- en: Avg. wind speed (mph)
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平均风速（mph）
- en: Date (converted into Excel number format)
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期（转换为Excel数字格式）
- en: Position of the station (latitude, longitude, and altitude)
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电站位置（纬度、经度和海拔）
- en: 'For each city, we are going to build a neural network to forecast the weather
    based on the past. But first, we need to point out two important facts:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个城市，我们打算基于过去的数据构建一个神经网络来预测天气。但首先，我们需要指出两个重要的事实：
- en: Cities located in high latitudes experience high weather variations due to the
    seasons; that is, the weather will be dependent on the date
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 位于高纬度的城市由于季节变化而经历高天气变化；也就是说，天气将取决于日期
- en: The weather is a very dynamic system whose variables are influenced by past
    values
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 天气是一个非常动态的系统，其变量受过去值的影响
- en: 'To overcome the first issue, we may derive a new column from the date to indicate
    the solar noon angle, which is the angle at which the solar rays reach the surface
    at the city at the highest point in the sky (noon). The greater this angle, the
    more intense and warm the solar radiation is; on the other hand, when this angle
    is small, the surface will receive a small fraction of the solar radiation:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 为了克服第一个问题，我们可以从日期派生一个新列来指示太阳中午角，这是太阳光线在最高点（中午）达到城市表面的角度。这个角度越大，太阳辐射就越强烈、越温暖；另一方面，当这个角度较小时，表面将接收到较少的太阳辐射：
- en: '![Collecting weather data](img/B05964_05_15.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![收集天气数据](img/B05964_05_15.jpg)'
- en: 'The solar noon angle is calculated by the following formula and Java implementation
    in the class `WeatherExample`, which will be used in this chapter:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 太阳中午角是通过以下公式和`WeatherExample`类中的Java实现计算的，该类将在本章中使用：
- en: '![Collecting weather data](img/B05964_05_16.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![收集天气数据](img/B05964_05_16.jpg)'
- en: '[PRE14]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Delaying variables
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 延迟变量
- en: 'In the class `WeatherExample`, let''s place a method called `makeDelays`, which
    will later be called from the main method. The delays will be made on a given
    `TimeSeries` and up to a given number for all columns of the time series except
    that of the index column:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在`WeatherExample`类中，让我们放置一个名为`makeDelays`的方法，稍后它将从主方法中调用。延迟将在给定的`TimeSeries`上执行，并针对时间序列的所有列（除了索引列）达到给定的数量：
- en: '[PRE15]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Tip
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Be careful not to call this method multiple times; it may delay the same column
    over and over again.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 注意不要多次调用此方法；它可能会反复延迟同一列。
- en: Loading the data and beginning to play!
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载数据并开始播放！
- en: 'In the `WeatherExample` class, we are going to add four `TimeSeries` properties
    and four `NeuralNet` properties for each case:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在`WeatherExample`类中，我们将为每种情况添加四个`TimeSeries`属性和四个`NeuralNet`属性：
- en: '[PRE16]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'In the `main` method, we load data to each of them and delay the columns up
    to three days before:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在`main`方法中，我们将数据加载到每个对象中，并在三天前延迟列：
- en: '[PRE17]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Tip
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: This piece of code can take a couple of minutes to execute, given that each
    file may have more than 2,000 rows.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 由于每个文件可能有超过2,000行，这段代码可能需要几分钟才能执行。
- en: 'After loading, we need to remove the NaNs, so we call the method `dropNaN`
    from each time series object:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 加载后，我们需要删除NaN值，因此我们调用每个时间序列对象的`dropNaN`方法：
- en: '[PRE18]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'To save time and effort for future executions, let''s save these datasets:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省时间和精力，以便未来的执行，让我们保存这些数据集：
- en: '[PRE19]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Now, for all-time series, each column has three delays, and we want the neural
    network to forecast the maximum and minimum temperature of the next day. We can
    forecast the future by taking into account only the present and the past, so for
    inputs we must rely on the delayed data (from -1 to -3 days before), and for outputs
    we may consider the current temperature values. Each column in the time series
    dataset is indicated by an index, where zero is the index of the date. Since some
    of the datasets had missing data on certain columns, the index of a column may
    vary. However, the index for output variables is the same through all datasets
    (indexes 2 and 3).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，对于所有时间序列，每一列有三个延迟，我们希望神经网络预测下一天的最高和最低温度。我们可以通过只考虑现在和过去来预测未来，因此对于输入，我们必须依赖于延迟数据（从-1天到-3天前的数据），而对于输出，我们可以考虑当前的温度值。时间序列数据集中的每一列都由一个索引表示，其中零是日期的索引。由于某些数据集在某些列上存在缺失数据，因此列的索引可能不同。然而，输出变量的索引在所有数据集中都是相同的（索引2和3）。
- en: Let's perform a correlation analysis
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 让我们进行相关性分析
- en: 'We are interested in finding patterns between the delayed data and the current
    maximum and minimum temperature. So we perform a cross-correlation analysis combining
    all output and potential input variables, and select the variables that present
    at least a minimum absolute correlation as a threshold. So we write a method `correlationAnalysis`
    taking the minimum absolute correlation as the argument. To save space, we have
    trimmed the code here:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对在延迟数据和当前最高和最低温度之间找到模式感兴趣。因此，我们执行一个结合所有输出和潜在输入变量的交叉相关性分析，并选择至少达到最小绝对相关性的变量作为阈值。因此，我们编写了一个名为`correlationAnalysis`的方法，将最小绝对相关性作为参数。为了节省空间，我们在这里省略了代码：
- en: '[PRE20]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'By running this analysis, we receive the following result for Cruzeiro do Sul
    (the bold columns are chosen as neural network inputs):'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行此分析，我们得到了以下结果（粗体列被选为神经网络输入）：
- en: '| Correlation Analysis for data from Cruzeiro do Sul |   |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| 克鲁塞罗多斯尔时间序列的相关性分析 |   |'
- en: '| --- | --- |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Correlations with the output Variable: MaxTempNoonAngle:0.0312808Precipitation__1:-0.115547Precipitation__2:-0.038969Precipitation__3:-0.062173MaxTemp__1:0.497057MaxTemp__2:0.252831MaxTemp__3:0.159098MinTemp__1:-0.033339MinTemp__2:-0.123063MinTemp__3:-0.125282Insolation__1:0.395741Insolation__2:0.197949Insolation__3:0.134345Evaporation__1:0.21548Evaporation__2:0.161384Evaporation__3:0.199385AvgTemp__1:0.432280AvgTemp__2:0.152103AvgTemp__3:0.060368AvgHumidity__1:-0.415812AvgHumidity__2:-0.265189AvgHumidity__3:-0.214624WindSpeed__1:-0.166418WindSpeed__2:-0.056825WindSpeed__3:-0.001660NoonAngle__1:0.0284473NoonAngle__2:0.0256710NoonAngle__3:0.0227864
    | Correlations with the output Variable: MinTempNoonAngle:0.346545Precipitation__1:0.012696Precipitation__2:0.063303Precipitation__3:0.112842MaxTemp__1:0.311005MaxTemp__2:0.244364MaxTemp__3:0.123838MinTemp__1:0.757647MinTemp__2:0.567563MinTemp__3:0.429669Insolation__1:-0.10192Insolation__2:-0.101146Insolation__3:-0.151896Evaporation__1:-0.115236Evaporation__2:-0.160718Evaporation__3:-0.160536AvgTemp__1:0.633741AvgTemp__2:0.487609AvgTemp__3:0.312645AvgHumidity__1:0.151009AvgHumidity__2:0.155019AvgHumidity__3:0.177833WindSpeed__1:-0.198555WindSpeed__2:-0.227227WindSpeed__3:-0.185377NoonAngle__1:0.353834NoonAngle__2:0.360943NoonAngle__3:0.367953
    |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| 与输出变量的相关性：MaxTempNoonAngle:0.0312808Precipitation__1:-0.115547Precipitation__2:-0.038969Precipitation__3:-0.062173MaxTemp__1:0.497057MaxTemp__2:0.252831MaxTemp__3:0.159098MinTemp__1:-0.033339MinTemp__2:-0.123063MinTemp__3:-0.125282Insolation__1:0.395741Insolation__2:0.197949Insolation__3:0.134345Evaporation__1:0.21548Evaporation__2:0.161384Evaporation__3:0.199385AvgTemp__1:0.432280AvgTemp__2:0.152103AvgTemp__3:0.060368AvgHumidity__1:-0.415812AvgHumidity__2:-0.265189AvgHumidity__3:-0.214624WindSpeed__1:-0.166418WindSpeed__2:-0.056825WindSpeed__3:-0.001660NoonAngle__1:0.0284473NoonAngle__2:0.0256710NoonAngle__3:0.0227864
    | 与输出变量的相关性：MinTempNoonAngle:0.346545Precipitation__1:0.012696Precipitation__2:0.063303Precipitation__3:0.112842MaxTemp__1:0.311005MaxTemp__2:0.244364MaxTemp__3:0.123838MinTemp__1:0.757647MinTemp__2:0.567563MinTemp__3:0.429669Insolation__1:-0.10192Insolation__2:-0.101146Insolation__3:-0.151896Evaporation__1:-0.115236Evaporation__2:-0.160718Evaporation__3:-0.160536AvgTemp__1:0.633741AvgTemp__2:0.487609AvgTemp__3:0.312645AvgHumidity__1:0.151009AvgHumidity__2:0.155019AvgHumidity__3:0.177833WindSpeed__1:-0.198555WindSpeed__2:-0.227227WindSpeed__3:-0.185377NoonAngle__1:0.353834NoonAngle__2:0.360943NoonAngle__3:0.367953
    |'
- en: 'The scatter plots show how this data is related:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 散点图显示了这些数据之间的关系：
- en: '![Let''s perform a correlation analysis](img/B05964_05_17.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![让我们进行相关性分析](img/B05964_05_17.jpg)'
- en: 'On the left, there is a fair correlation between the last day''s maximum temperature
    and the current; in the center, a strong correlation between the last day''s minimum
    temperature and the current; and on the right, a weak correlation between `NoonAngle`
    of 3 days before and the current minimum temperature. By running this analysis
    for all other cities, we determine the inputs for the other neural networks:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧，前一天的最高温度与当前温度之间存在相当的相关性；在中间，前一天最低温度与当前温度之间存在强烈的相关性；在右侧，三天前的`NoonAngle`与当前最低温度之间存在较弱的相关性。通过为其他所有城市运行此分析，我们确定其他神经网络的输入：
- en: '| Cruzeiro do Sul | Picos | Campos do Jordão | Porto Alegre |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| 克鲁泽伊罗·多·苏尔 | 皮科斯 | 卡姆波斯多·若达奥 | 波尔图·阿雷格里 | '
- en: '| --- | --- | --- | --- |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| NoonAngleMaxTemp__1MinTemp__1MinTemp__2MinTemp__3Insolation__1AvgTemp__1AvgTemp__2AvgHumidity__1NoonAngle__1NoonAngle__2NoonAngle__3
    | MaxTempMaxTemp__1MaxTemp__2MaxTemp__3MinTemp__1MinTemp__2MinTemp__3Insolation__1Insolation__2Evaporation__1Evaporation__2Evaporation__3AvgTemp__1AvgTemp__2AvgTemp__3AvgHumidity__1AvgHumidity__2AvgHumidity__3
    | NoonAngleMaxTemp__1MaxTemp__2MaxTemp__3MinTemp__1MinTemp__2MinTemp__3Evaporation__1AvgTemp__1AvgTemp__2AvgTemp__3AvgHumidity__1NoonAngle__1NoonAngle__2NoonAngle__3
    | MaxTempNoonAngleMaxTemp__1MaxTemp__2MaxTemp__3MinTemp__1MinTemp__2MinTemp__3Insolation__1Insolation__2Insolation__3Evaporation__1Evaporation__2Evaporation__3AvgTemp__1AvgTemp__2AvgTemp__3AvgHumidity__1AvgHumidity__2NoonAngle__1NoonAngle__2NoonAngle__3
    |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| 中午角度最大温度__1分钟温度__1分钟温度__2分钟温度__3日照__1平均温度__1平均温度__2平均湿度__1中午角度__1中午角度__2中午角度__3
    | 最大温度最大温度__1最大温度__2最大温度__3分钟温度__1分钟温度__2分钟温度__3日照__1日照__2蒸发__1蒸发__2蒸发__3平均温度__1平均温度__2平均温度__3平均湿度__1平均湿度__2平均湿度__3
    | 中午角度最大温度__1最大温度__2最大温度__3分钟温度__1分钟温度__2分钟温度__3蒸发__1平均温度__1平均温度__2平均温度__3平均湿度__1中午角度__1中午角度__2中午角度__3
    | 最大温度中午角度最大温度__1最大温度__2最大温度__3分钟温度__1分钟温度__2分钟温度__3日照__1日照__2日照__3蒸发__1蒸发__2蒸发__3平均温度__1平均温度__2平均温度__3平均湿度__1平均湿度__2中午角度__1中午角度__2中午角度__3
    |'
- en: Creating neural networks
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建神经网络
- en: 'We are using four neural networks to forecast the minimum and maximum temperature.
    Initially, they will have two hidden layers with 20 and 10 neurons each and hypertan
    and sigmoid activation functions. We will apply min-max normalization. The following
    method in the class `WeatherExample` creates the neural networks with this configuration:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在使用四个神经网络来预测最低和最高温度。最初，它们将有两个隐藏层，每个层有20和10个神经元，并使用双曲正切和sigmoid激活函数。我们将应用最小-最大归一化。`WeatherExample`类中的以下方法创建具有此配置的神经网络：
- en: '[PRE21]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Training and test
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练和测试
- en: In [Chapter 2](ch02.xhtml "Chapter 2. Getting Neural Networks to Learn"), *Getting
    Neural Networks to Learn* we have seen that a neural network should be tested
    to verify its learning, so we divide the dataset into training and testing subsets.
    Usually about 50-80% of the original filtered dataset is used for training and
    the remaining fraction is for testing.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第二章](ch02.xhtml "第二章. 让神经网络学习")*让神经网络学习*中，我们了解到神经网络应该经过测试来验证其学习效果，因此我们将数据集划分为训练集和测试集。通常，大约50-80%的原始过滤数据集用于训练，剩余的部分用于测试。
- en: 'A static method `randomSeparateTrainTest` in the class `NeuralDataSet` separates
    the dataset into these two subsets. In order to ensure maximum generalization,
    the records of this dataset are hashed, as shown in the following figure:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '`NeuralDataSet`类中的静态方法`randomSeparateTrainTest`将数据集划分为这两个子集。为了确保最大泛化，该数据集的记录被哈希处理，如图所示：'
- en: '![Training and test](img/B05964_05_18.jpg)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![训练和测试](img/B05964_05_18.jpg)'
- en: The records may be originally sequential, as in weather time series; if we hash
    them in random positions, the training and testing sets will contain records from
    all periods.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 记录可能最初是顺序的，如天气时间序列；如果我们随机位置哈希它们，训练集和测试集将包含所有时期的记录。
- en: Training the neural network
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练神经网络
- en: 'The neural network will be trained using the basic backpropagation algorithm.
    The following is a code sample for the dataset `Cruzeiro do Sul`:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络将使用基本的反向传播算法进行训练。以下是对`Cruzeiro do Sul`数据集的代码示例：
- en: '[PRE22]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Plotting the error
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 绘制错误图
- en: 'Using the `JFreeCharts` framework, we can plot error evolution for the training
    and testing datasets. There is a new method in the class `LearningAlogrithm` called
    `showErrorEvolution`, which is inherited and overridden by `BackPropagation`.
    To see the chart, just call as in the example:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`JFreeCharts`框架，我们可以绘制训练集和测试集的错误演变图。在`LearningAlgorithm`类中有一个名为`showErrorEvolution`的新方法，该方法由`BackPropagation`继承并覆盖。要查看图表，可以像以下示例中那样调用：
- en: '[PRE23]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'This will show a plot like the one shown in the following figure:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示如下图中所示的图表：
- en: '![Plotting the error](img/B05964_05_19.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![绘制误差图](img/B05964_05_19.jpg)'
- en: Viewing the neural network output
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看神经网络输出
- en: 'Using this same facility, it is easy to see and compare the neural network
    output. First, let''s transform the neural network output into vector form and
    add to our dataset using the method `addColumn`. Let''s name it `NeuralMinTemp`
    and `NeuralMaxTemp`:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此相同设施，很容易看到并比较神经网络输出。首先，让我们将神经网络输出转换为向量形式，并使用 `addColumn` 方法将其添加到我们的数据集中。让我们将其命名为
    `NeuralMinTemp` 和 `NeuralMaxTemp`：
- en: '[PRE24]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The class `TimeSeries` has a method called `getTimePlot`, which is used to
    plot variables over a specified range:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 类 `TimeSeries` 有一个名为 `getTimePlot` 的方法，用于在指定范围内绘制变量：
- en: '[PRE25]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Viewing the neural network output](img/B05964_05_20.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![查看神经网络输出](img/B05964_05_20.jpg)'
- en: Empirical design of neural networks
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 神经网络的经验设计
- en: While using neural networks in regression problems (that include prediction),
    there is no fixed number of hidden neurons, so usually the solver chooses an arbitrary
    number of neurons and then varies it according to the results produced by the
    networks created. This procedure may be repeated a number of times until a network
    with a satisfying criterion is found.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用神经网络进行回归问题（包括预测）时，没有固定的隐藏神经元数量，因此通常求解器会选择一个任意数量的神经元，然后根据创建的网络的输出结果进行变化。此过程可能需要重复多次，直到找到一个令人满意的准则的网络。
- en: Designing experiments
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计实验
- en: Experiments can be made on the same training and test datasets, while varying
    other network parameters, such as learning rate, normalization, and the number
    of hidden units. The objective is to choose the neural network that presents the
    best performance from the experiments. The best performance is assigned to the
    network that presents a lower MSE error, but an analysis of generalization with
    test data is also useful.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在相同的训练和测试数据集上进行实验，同时改变其他网络参数，如学习率、归一化和隐藏单元的数量。目标是选择在实验中表现最佳的神经网络。最佳性能分配给具有较低MSE错误的网络，但使用测试数据进行泛化分析也很有用。
- en: Tip
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: While designing experiments, consider always starting from a lower number of
    hidden neurons, since it is desirable to have a lower computational processing
    consumption.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计实验时，始终从较少的隐藏神经元数量开始，因为希望有较低的计算处理消耗。
- en: 'The table below shows the experiments have that been run for all cities:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了为所有城市运行的所有实验：
- en: '![Designing experiments](img/B05964_05_21.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![设计实验](img/B05964_05_21.jpg)'
- en: Results and simulations
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结果和模拟
- en: In order to facilitate the execution of experiments, we've designed a Java Swing
    **Graphical User Interface** (**GUI**), with which it is possible to select neural
    network parameters for training and the dataset.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于执行实验，我们设计了一个Java Swing **图形用户界面**（**GUI**），通过它可以选择用于训练的神经网络参数和数据集。
- en: Tip
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: This interface covers only neural networks with just one hidden layer; however,
    since the code is open, the implementation of a multilayer perceptron with multiple
    hidden layers is suggested as an exercise, as well as the choice of other algorithms
    for the training.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 此接口仅涵盖只有一个隐藏层的神经网络；然而，由于代码是开放的，建议将具有多个隐藏层的多层感知器实现作为练习，以及选择其他训练算法。
- en: The charts show only the predicted maximum temperature; therefore, implementing
    an option for displaying the minimum temperature is also suggested.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图表仅显示预测的最大温度；因此，建议实现一个显示最低温度的选项。
- en: 'After selecting the parameters, training begins when you click the **Start
    Training** button:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择参数后，点击 **开始训练** 按钮开始训练：
- en: '![Results and simulations](img/B05964_05_22.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![结果和模拟](img/B05964_05_22.jpg)'
- en: 'After running 12 experiments, we found the following MSE training errors for
    each dataset:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行了12次实验后，我们找到了每个数据集的以下MSE训练误差：
- en: '| Experiment | Cruzeiro do Sul | Picos | Campos do Jordão | Porto Alegre |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| 实验 | 克鲁泽伊罗·多·苏尔 | 皮科斯 | 贾尔多安 | 波尔图·阿雷格里 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| #1 | 0.130156 | 0.147111 | 0.300437 | 0.323342 |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| #1 | 0.130156 | 0.147111 | 0.300437 | 0.323342 |'
- en: '| #2 | 0.512389 | 0.572588 | 0.428692 | 0.478379 |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| #2 | 0.512389 | 0.572588 | 0.428692 | 0.478379 |'
- en: '| #3 | 0.08659 | 0.094822 | 0.124752 | 0.114486 |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| #3 | 0.08659 | 0.094822 | 0.124752 | 0.114486 |'
- en: '| #4 | 0.360728 | 0.258596 | 0.168351 | 0.192012 |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| #4 | 0.360728 | 0.258596 | 0.168351 | 0.192012 |'
- en: '| #5 | 0.076476 | 0.074777 | 0.108991 | 0.085029 |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| #5 | 0.076476 | 0.074777 | 0.108991 | 0.085029 |'
- en: '| #6 | 0.328493 | 0.186793 | 0.152499 | 0.151248 |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| #6 | 0.328493 | 0.186793 | 0.152499 | 0.151248 |'
- en: '| #7 | 0.146801 | 0.130004 | 0.277765 | 0.19076 |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| #7 | 0.146801 | 0.130004 | 0.277765 | 0.19076 |'
- en: '| #8 | 0.431811 | 0.29629 | 0.364418 | 0.278864 |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| #8 | 0.431811 | 0.29629 | 0.364418 | 0.278864 |'
- en: '| #9 | 0.071135 | 0.081159 | 0.117634 | 0.091174 |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| #9 | 0.071135 | 0.081159 | 0.117634 | 0.091174 |'
- en: '| #10 | 0.332534 | 0.210107 | 0.170179 | 0.164179 |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| #10 | 0.332534 | 0.210107 | 0.170179 | 0.164179 |'
- en: '| #11 | 0.07247 | 0.089069 | 0.102137 | 0.076578 |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| #11 | 0.07247 | 0.089069 | 0.102137 | 0.076578 |'
- en: '| #12 | 0.33342 | 0.19835 | 0.155036 | 0.145843 |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| #12 | 0.33342 | 0.19835 | 0.155036 | 0.145843 |'
- en: 'The MSE error information only gives us an idea of how much the neural network
    output could match real data in the overall context. This performance can be verified
    by viewing the time series comparison and scatter plots:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: MSE误差信息仅给我们一个大致的想法，即神经网络输出在整体背景下与真实数据匹配的程度。这种性能可以通过查看时间序列比较和散点图来验证：
- en: '![Results and simulations](img/B05964_05_24.jpg)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
  zh: '![结果和模拟](img/B05964_05_24.jpg)'
- en: These charts show that, although in many cases the temperature cannot be accurately
    predicted, a trend is being followed. This can be attested to by the correlation
    visible in the scatter plots. The last row of the table, showing the prediction
    for Porto Alegre, which has a subtropical climate and high temperature variations,
    shows a good prediction even for the extreme temperature variations. However,
    we remind the reader that forecasting weather needs to consider many additional
    variables, which could not be included in this example due to availability constraints.
    Anyway, the results show we've made a good start to search for a neural network
    configuration that can outperform these ones found.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这些图表显示，尽管在许多情况下温度无法准确预测，但总体上正遵循一个趋势。这一点可以通过散点图中可见的相关性得到证实。表中最后一行显示了对于具有亚热带气候和高温变化的Porto
    Alegre的预测，即使在极端温度变化的情况下，也显示出良好的预测效果。然而，我们提醒读者，预测天气需要考虑许多额外的变量，这些变量由于可用性限制而无法包含在本例中。无论如何，结果表明我们在寻找一个能够超越这些发现的神经网络配置方面已经迈出了良好的开端。
- en: Summary
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we've seen an interesting practical use case for the application
    of neural networks. Weather forecasting has always been a rich research field,
    and indeed neural networks are widely used for this purpose. In this chapter,
    the reader also learned how to prepare similar experiments for prediction problems.
    The correct application of techniques for data selection and preprocessing can
    save a lot of time while designing neural networks for prediction. This chapter
    also served as a foundation for the next ones, since all of them will focus on
    practical cases; thus, the concepts learned herein will be explored widely in
    the rest of the book.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了神经网络应用的一个有趣的实际案例。天气预报一直是研究丰富的领域，实际上神经网络被广泛用于此目的。在本章中，读者还学习了如何为预测问题准备类似的实验。正确应用数据选择和预处理的技术可以在设计神经网络时节省大量时间。本章也为下一章奠定了基础，因为所有下一章都将关注实际案例；因此，在本章学到的概念将在本书的其余部分得到广泛探索。
