["```py\n#Ensure you have the latest version of boto3 & langchain\n!pip install -U boto3 langchain-community\n#import the main packages and libraries\nimport boto3\nimport json\n#Create bedrock runtime client\nbedrock_client = boto3.client('bedrock-runtime') #Select the desired region\n```", "```py\nprompt_data = \"\"\"Human: Compose an email to a customer support team.\nAssistant:\n\"\"\"\nbody = json.dumps({\"prompt\": prompt_data, \"maxTokens\": 200})\nmodelId = \"ai21.j2-mid-v1\"  # change this to use a different version from the model provider\naccept = «application/json»\ncontentType = «application/json»\nresponse = bedrock_client.invoke_model(body=body, modelId=modelId, accept=accept, contentType=contentType)\nresponse_body = json.loads(response.get(\"body\").read())\nprint(response_body.get(\"completions\")[0].get(\"data\").get(\"text\"))\n```", "```py\n    prompt = \"\"\"\n    ```", "```py\n    Human: Write a descriptive and engaging travel guide section about a lesser-known but beautiful destination, capturing the local culture, cuisine, and must-see attractions in a way that inspires wanderlust.\n    ```", "```py\n    Assistant:\"\"\"\n    ```", "```py\n    body = json.dumps({\"prompt\": prompt,\"max_tokens_to_sample\": 500})\n    ```", "```py\n    modelId = \"anthropic.claude-v2\"  # change this to use a different version from the model provider\n    ```", "```py\n    accept = «application/json»\n    ```", "```py\n    contentType = «application/json»\n    ```", "```py\n    response = bedrock_runtime.invoke_model(body=body, modelId=modelId, accept=accept, contentType=contentType)\n    ```", "```py\n    response_body = json.loads(response.get(\"body\").read())\n    ```", "```py\n    print(response_body.get(\"completion\"))\n    ```", "```py\n    prompt = \"\"\"\n    ```", "```py\n    Human: Here are some examples of product descriptions:\n    ```", "```py\n    Example 1:\n    ```", "```py\n    Product: Apple iPhone 13 Pro\n    ```", "```py\n    Description: The iPhone 13 Pro is a smartphone designed and manufactured by Apple Inc. It features a 6.1-inch Super Retina XDR display, a powerful A15 Bionic chip, and an advanced triple-camera system with improved low-light performance and 3x optical zoom. The phone also boasts 5G connectivity, longer battery life, and a durable Ceramic Shield front cover.\n    ```", "```py\n    Example 2:\n    ```", "```py\n    Product: Sony WH-1000XM4 Noise Cancelling Headphones\n    ```", "```py\n    Description: Experience exceptional audio quality with the Sony WH-1000XM4 Noise Cancelling Headphones. These over-ear headphones feature industry-leading noise cancellation technology, allowing you to immerse yourself in your music without distractions. The responsive touch controls and long-lasting battery life make them ideal for everyday use, while the comfortable design ensures hours of listening pleasure.\n    ```", "```py\n    Example 3:\n    ```", "```py\n    Product: Instant Pot Duo Crisp + Air Fryer\n    ```", "```py\n    Description: The Instant Pot Duo Crisp + Air Fryer is a versatile kitchen appliance that combines the functions of an electric pressure cooker, air fryer, and more. With its EvenCrisp technology, you can achieve crispy, golden results using little to no oil. The easy-to-use control panel and 11 built-in smart programs allow you to cook a wide variety of dishes with ease, making it a must-have for any modern kitchen.\n    ```", "```py\n    Your task: Generate a product description for the following product:\n    ```", "```py\n    Product: Sony A7 III Mirrorless Camera\n    ```", "```py\n    Assistant:\"\"\"\n    ```", "```py\n    body = json.dumps({\"prompt\": prompt, \"max_tokens_to_sample\": 500})\n    ```", "```py\n    modelId = \"anthropic.claude-v2\"\n    ```", "```py\n    accept = \"application/json\"\n    ```", "```py\n    contentType = \"application/json\"\n    ```", "```py\n    response = bedrock_runtime.invoke_model(body=body, modelId=modelId, accept=accept, contentType=contentType)\n    ```", "```py\n    response_body = json.loads(response.get(\"body\").read())\n    ```", "```py\n    print(response_body.get(\"completion\"))\n    ```", "```py\nfrom langchain_community.llms import Bedrock\ninference_modifier = {\"max_tokens_to_sample\": 4096, \"temperature\": 0.5, \"top_k\": 250, \"top_p\": 1, \"stop_sequences\": [\"\\n\\nHuman\"],}\nllm = Bedrock(model_id=\"anthropic.claude-v2\",  client=bedrock_client, model_kwargs=inference_modifier,)\nresponse = llm(\"\"\"\nHuman: Write a descriptive and engaging travel guide section about a lesser-known but beautiful destination, capturing the local culture, cuisine, and must-see attractions in a way that inspires wanderlust.\nAssistant:\"\"\")\nprint(response)\nFigure 6*.6*):\n```", "```py\n    from langchain_community.llms import Bedrock\n    ```", "```py\n    inference_modifier = {'max_tokens_to_sample':4096, \"temperature\":0.5, \"top_k\":250, \"top_p\":1, \"stop_sequences\": [\"\\n\\nHuman\"]}\n    ```", "```py\n    llm = Bedrock(model_id = \"anthropic.claude-v2\", client = boto3_bedrock, model_kwargs = inference_modifier)\n    ```", "```py\n    from langchain.prompts import PromptTemplate\n    ```", "```py\n    product_description_prompt = PromptTemplate(   input_variables=[\"product_name\", \"product_category\", \"key_features\"],\n    ```", "```py\n        template=\"\"\"\n    ```", "```py\n    You are a professional copywriter tasked with creating an engaging and informative product description for a new Amazon product.\n    ```", "```py\n    Product Name: {product_name}\n    ```", "```py\n    Product Category: {product_category}\n    ```", "```py\n    Key Features: {key_features}\n    ```", "```py\n    Write a compelling product description that highlights the key features and benefits of the product, while keeping the tone engaging and persuasive for potential customers.\n    ```", "```py\n    Product Description:\n    ```", "```py\n    «»»\n    ```", "```py\n    )\n    ```", "```py\n    prompt = product_description_prompt.format(\n    ```", "```py\n        product_name=\"Smart Home Security Camera\",\n    ```", "```py\n        product_category=\"Home Security\",\n    ```", "```py\n        key_features=\"- 1080p HD video recording\\n- Motion detection alerts\\n- Two-way audio communication\\n- Night vision capabilities\\n- Cloud storage for recorded footage\")\n    ```", "```py\n    response = llm(prompt)\n    ```", "```py\n    product = response[response.index('\\n')+1:]\n    ```", "```py\n    print(product)\n    ```", "```py\nprompt = \"\"\"\nToday we're going to take a look at the well-established Amazon.com, Inc. (NASDAQ:AMZN). The company's stock led the NASDAQGS gainers with a relatively large price hike in the past couple of weeks. The recent jump in the share price has meant that the company is trading at close to its 52-week high. With many analysts covering the large-cap stock, we may expect any price-sensitive announcements have already been factored into the stock's share price. But what if there is still an opportunity to buy? Let's take a look at Amazon.com's outlook and value based on the most recent financial data to see if the opportunity still exists.\nCheck out our latest analysis for Amazon.com\nWhat's The Opportunity In Amazon.com?\nGreat news for investors – Amazon.com is still trading at a fairly cheap price. According to our valuation, the intrinsic value for the stock is $238.66, but it is currently trading at US$174 on the share market, meaning that there is still an opportunity to buy now. What's more interesting is that, Amazon.com's share price is quite volatile, which gives us more chances to buy since the share price could sink lower (or rise higher) in the future. This is based on its high beta, which is a good indicator for how much the stock moves relative to the rest of the market.\nCan we expect growth from Amazon.com?\nearnings-and-revenue-growth\nearnings-and-revenue-growth\nFuture outlook is an important aspect when you're looking at buying a stock, especially if you are an investor looking for growth in your portfolio. Buying a great company with a robust outlook at a cheap price is always a good investment, so let's also take a look at the company's future expectations. With profit expected to more than double over the next couple of years, the future seems bright for Amazon.com. It looks like higher cash flow is on the cards for the stock, which should feed into a higher share valuation.\nWhat This Means For You\nAre you a shareholder? Since AMZN is currently undervalued, it may be a great time to accumulate more of your holdings in the stock. With a positive outlook on the horizon, it seems like this growth has not yet been fully factored into the share price. However, there are also other factors such as financial health to consider, which could explain the current undervaluation.\nAre you a potential investor? If you've been keeping an eye on AMZN for a while, now might be the time to enter the stock. Its buoyant future outlook isn't fully reflected in the current share price yet, which means it's not too late to buy AMZN. But before you make any investment decisions, consider other factors such as the strength of its balance sheet, in order to make a well-informed investment decision.\nDiving deeper into the forecasts for Amazon.com mentioned earlier will help you understand how analysts view the stock going forward. Luckily, you can check out what analysts are forecasting by clicking here.\nIf you are no longer interested in Amazon.com, you can use our free platform to see our list of over 50 other stocks with a high growth potential.\n\"\"\"\nbody = json.dumps({\"inputText\": prompt,\n                   \"textGenerationConfig\":{\n                       \"maxTokenCount\":4096,\n                       \"stopSequences\":[],\n                       \"temperature\":0,\n                       \"topP\":1\n                   },\n                  })\nmodelId = 'amazon.titan-tg1-large' # change this to use a different version from the model provider\naccept = 'application/json'\ncontentType = 'application/json'\nresponse = bedrock_client.invoke_model(body=body, modelId=modelId, accept=accept, contentType=contentType)\nresponse_body = json.loads(response.get('body').read())\nprint(response_body.get('results')[0].get('outputText'))\n```", "```py\nfrom langchain.chains.summarize import load_summarize_chain\n```", "```py\nsummary_chain = load_summarize_chain(llm=llm, chain_type=\"map_reduce\", verbose=False)\n```"]