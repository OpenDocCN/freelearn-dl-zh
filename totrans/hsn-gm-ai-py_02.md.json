["```py\nimport random\n\nreward = [1.0, 0.5, 0.2, 0.5, 0.6, 0.1, -.5]\narms = len(reward)\nepisodes = 100\nlearning_rate = .1\nValue = [0.0] * arms\nprint(Value)\n```", "```py\nValue = [0.0] * arms\n```", "```py\n# agent learns\nfor i in range(0, episodes):\n    action = random.randint(0,arms-1)\n    Value[action] = Value[action] + learning_rate * (\n        reward[action] - Value[action])\n\nprint(Value)\n```", "```py\naction = random.randint(0,arms-1)\n```", "```py\nValue[action] = Value[action] + learning_rate * (       reward[action] - Value[action])\n```", "```py\nimport random\n\nreward = [1.0, 0.5, 0.2, 0.5, 0.6, 0.1, -.5]\narms = len(reward)\nlearning_rate = .1\nepisodes = 100\nValue = [0.0] * arms\nprint(Value)\n\ndef greedy(values):\n return values.index(max(values))\n\n# agent learns\nfor i in range(0, episodes):\n    action = greedy(Value)\n    Value[action] = Value[action] + learning_rate * (\n        reward[action] - Value[action])\n\nprint(Value)\n```", "```py\naction = greedy(Value)\n```", "```py\nepisodes = 10000\nValue = [5.0] * arms\n```", "```py\nimport random\n\narms = 7\nbandits = 7\nlearning_rate = .1\ngamma = .9\nepisodes = 10000\n\nreward = []\nfor i in range(bandits): \n reward.append([]) \n for j in range(arms): \n reward[i].append(random.uniform(-1,1))\nprint(reward)\n\nQ = []\nfor i in range(bandits): \n Q.append([]) \n for j in range(arms): \n Q[i].append(10.0)\nprint(Q)\n\ndef greedy(values):\n    return values.index(max(values))\n\ndef learn(state, action, reward, next_state):\n q = gamma * max(Q[next_state])\n q += reward\n q -= Q[state][action]\n q *= learning_rate\n q += Q[state][action]\n Q[state][action] = q\n\n# agent learns\nbandit = random.randint(0,bandits-1)\nfor i in range(0, episodes):\n    last_bandit = bandit\n bandit = random.randint(0,bandits-1)\n action = greedy(Q[bandit]) \n r = reward[last_bandit][action]\n learn(last_bandit, action, r, bandit) print(Q)\n```", "```py\narms = 7 bandits = 7\ngamma = .9 \n```", "```py\nreward = [] for i in range(bandits):\n reward.append([])    for j in range(arms):\n reward[i].append(random.uniform(-1,1)) print(reward)\n```", "```py\nQ = [] for i in range(bandits):  \n    Q.append([])     \n    for j in range(arms): \nQ[i].append(10.0) print(Q)\n```", "```py\ndef learn(state, action, reward, next_state):\n q = gamma * max(Q[next_state]) q += reward q -= Q[state][action] q *= learning_rate q += Q[state][action] Q[state][action] = q\n```", "```py\nbandit = random.randint(0,bandits-1) for i in range(0, episodes):\n    last_bandit = bandit\n bandit = random.randint(0,bandits-1) action = greedy(Q[bandit])    r = reward[last_bandit][action]\n learn(last_bandit, action, r, bandit) print(Q)\n```", "```py\ndef learn(state, action, reward, next_state):\n    #q = gamma * max(Q[next_state])\n    q = 0\n    q += reward\n    q -= Q[state][action]\n    q *= learning_rate\n    q += Q[state][action]\n    Q[state][action] = q\n```"]