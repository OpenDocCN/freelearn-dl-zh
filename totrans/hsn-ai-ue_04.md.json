["```py\n#include \"CoreMinimal.h\"\n#include \"NavAreas/NavArea.h\"\n#include \"NavArea_Desert.generated.h\"\n\n/**\n * \n */\nUCLASS()\nclass UNREALAIBOOK_API UNavArea_Desert : public UNavArea\n{\n  GENERATED_BODY()\n\n  UNavArea_Desert();\n\n};\n```", "```py\n#include \"NavArea_Desert.h\"\n\nUNavArea_Desert::UNavArea_Desert()\n{\n  DefaultCost = 1.5f;\n  FixedAreaEnteringCost = 3.f;\n  DrawColor = FColor::Yellow;\n}\n```", "```py\n  /** called when agent reaches smart link during path following, use ResumePathFollowing() to give control back */\n  UFUNCTION(BlueprintImplementableEvent)\n  void ReceiveSmartLinkReached(AActor* Agent, const FVector& Destination);\n\n  /** resume normal path following */\n  UFUNCTION(BlueprintCallable, Category=\"AI|Navigation\")\n  void ResumePathFollowing(AActor* Agent);\n\n  /** check if smart link is enabled */\n  UFUNCTION(BlueprintCallable, Category=\"AI|Navigation\")\n  bool IsSmartLinkEnabled() const;\n\n  /** change state of smart link */\n  UFUNCTION(BlueprintCallable, Category=\"AI|Navigation\")\n  void SetSmartLinkEnabled(bool bEnabled);\n\n  /** check if any agent is moving through smart link right now */\n  UFUNCTION(BlueprintCallable, Category=\"AI|Navigation\")\n  bool HasMovingAgents() const;\n```", "```py\n#include \"CoreMinimal.h\"\n#include \"NavFilters/NavigationQueryFilter.h\"\n#include \"NavFilter_DesertAnimal.generated.h\"\n\n/**\n * \n */\nUCLASS()\nclass UNREALAIBOOK_API UNavFilter_DesertAnimal : public UNavigationQueryFilter\n{\n  GENERATED_BODY()\n\n UNavFilter_DesertAnimal();\n};\n```", "```py\n#include \"NavArea_Desert.h\"\n```", "```py\nUNavFilter_DesertAnimal::UNavFilter_DesertAnimal() {\n\n //Create the Navigation Filter Area\n FNavigationFilterArea Desert = FNavigationFilterArea();\n\n *// [REST OF THE CODE]*\n}\n```", "```py\nUNavFilter_DesertAnimal::UNavFilter_DesertAnimal() {\n\n *// [PREVIOUS CODE]*\n\n //Set its parameters\n Desert.AreaClass = UNavArea_Desert::StaticClass();\n\n Desert.bOverrideEnteringCost = true;\n Desert.EnteringCostOverride = 0.f;\n\n Desert.bOverrideTravelCost = true;\n Desert.TravelCostOverride = 0.8f;\n\n *// [REST OF THE CODE]*\n}\n```", "```py\nUNavFilter_DesertAnimal::UNavFilter_DesertAnimal() {\n\n *// [PREVIOUS CODE]*\n\n //Add it to the the Array of Areas for the Filter.\n Areas.Add(Desert);\n}\n```", "```py\n#include \"NavFilter_DesertAnimal.h\"\n#include \"NavArea_Desert.h\"\n\nUNavFilter_DesertAnimal::UNavFilter_DesertAnimal() {\n\n  //Create the Navigation Filter Area\n  FNavigationFilterArea Desert = FNavigationFilterArea();\n\n  //Set its parameters\n  Desert.AreaClass = UNavArea_Desert::StaticClass();\n\n  Desert.bOverrideEnteringCost = true;\n  Desert.EnteringCostOverride = 0.f;\n\n  Desert.bOverrideTravelCost = true;\n  Desert.TravelCostOverride = 0.8f;\n\n  //Add it to the the Array of Areas for the Filter.\n  Areas.Add(Desert);\n}\n```"]