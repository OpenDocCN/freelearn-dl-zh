- en: '9'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Exploring GPTs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous chapters, we saw several examples of how to leverage ChatGPT
    for various activities, from personal productivity to marketing, and from research
    to software development. For each of these scenarios, we always faced a similar
    situation: we started with a general-purpose tool as ChatGPT, to then tailor it
    with domain-specific questions and additional context.'
  prefs: []
  type: TYPE_NORMAL
- en: However, sometimes this might not be enough if our aim is to obtain an extremely
    specialized model for our own purposes. That’s why we might need to build a *purpose-specific
    ChatGPT*. Luckily, OpenAI itself has developed a no-code platform to build these
    customized assistants, which are called GPTs.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we are going to go through GPTs’ features, capabilities, and
    real-world applications, covering the same use cases we saw in previous chapters
    so that you can see the difference in the output’s quality. Plus, we will also
    see how to publish your GPT and make it a production application not only for
    yourself but also for others.
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this chapter, you will be able to:'
  prefs: []
  type: TYPE_NORMAL
- en: Understand what a GPT is and what kinds of tasks it can achieve
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build your own GPT without writing a line of code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Publish your GPT and integrate it with external systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s start with some basic definitions and then jump into the practice.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To access and utilize GPTs within ChatGPT, a ChatGPT Plus subscription is required.
    At the time of writing this book, this subscription is priced at $20 per month.
  prefs: []
  type: TYPE_NORMAL
- en: What are GPTs?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In November 2023, OpenAI introduced GPTs, specialized versions of ChatGPT designed
    to enhance productivity and cater to specific tasks and needs. Unlike the general-purpose
    ChatGPT, these custom versions allow users to create tailored AI models without
    any coding knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: '**Note**'
  prefs: []
  type: TYPE_NORMAL
- en: There is an important consideration that will be relevant throughout this chapter.
    When we mention the word GPT, there are two main definitions that you will find
    in this book.
  prefs: []
  type: TYPE_NORMAL
- en: The first one refers to the proper **Generative Pre-trained Transformer** (**GPT**)
    model architecture behind OpenAI’s language models. We mentioned this architecture
    in Part 1, and we know that this is the framework behind ChatGPT itself.
  prefs: []
  type: TYPE_NORMAL
- en: The second one refers, in a more generic way, to the specialized assistants
    that OpenAI allows users to create in a no-code approach. With GPTs, OpenAI refers
    to specialized versions of ChatGPT. In this context, a single GPT refers to one
    assistant that you create leveraging the platform (available to all users with
    ChatGPT Plus).
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, whenever you read GPT or GPTs, keep in mind that we are using
    the second definition.
  prefs: []
  type: TYPE_NORMAL
- en: The idea of GPTs is like that of AI agents. In fact, with GPTs, we are building
    entities powered by LLMs, with specific instructions, providing them with both
    a custom knowledge base and a set of tools or plugins to interact with the surrounding
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s see these components in more detail. First of all, you can have a comprehensive
    look at all existing GPTs that have been publicly published. To do so, you can
    navigate through the following page: [https://chatgpt.com/gpt](https://chatgpt.com/gpts)s.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31559_09_01.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.1: Landing page of GPTs'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see from the preceding picture, this is a marketplace of all existing
    GPTs. You can explore it by category (box 1) or by explaining what you are looking
    for in the search bar (box 2).
  prefs: []
  type: TYPE_NORMAL
- en: Then, to create your own GPT, you can navigate through th[e https://chatgpt.com/gpts/edit](https://chatgpt.com/gpts/editor)or
    page and log in with your OpenAI account. Alternatively, you can go to ChatGPT
    and click on **Explore GPTs** in the top-left corner of the page, then **Create**
    (as illustrated in box 3 in the preceding picture).
  prefs: []
  type: TYPE_NORMAL
- en: Once in the editor, you will be asked to configure your GPT, while on the right-hand
    side, you can test it in real time.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31559_09_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.2: Editor page to create your GPT from scratch'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s explore all the components:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Name**: The name you want to give to your GPT.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Description**: A description of the capabilities of your GPT. This is extremely
    important, especially if you are going to publish your GPT on the marketplace
    so that other users can find it easily (as we previously mentioned, GPTs can be
    searched for via natural language in the Search GPTs bar. Plus, this description
    will also help other users to know what the GPT is used for.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instructions**: This is the system message of your GPT, that is, a set of
    instructions in natural language that tailor the assistant to your specific need
    and that the final user doesn’t see.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Conversation starters**: This is a set of sample prompts that users could
    start with to interact with the GPT and gain confidence in using it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Knowledge**: This refers to the custom documentation we can ground the model
    on. When we upload documents here, our GPT will be able to navigate through them
    with the retrieval augmented generation pattern, so that we can provide additional
    knowledge or even limit our assistant’s responses to the custom knowledge base,
    depending on our needs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Capabilities**: These refer to a set of built-in plugins we can provide the
    GPT with, without writing a single line of code. You can see from the above picture
    that there are three plugins out of the box:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Web Browsing** for searching the web and retrieving up-to-date information'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DALL-E 3** **Image** **Generation** to generate illustrations'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Code Interpreter & Data Analysis** to execute code in a sandboxed Python
    environment and interact with analytical files (like spreadsheets)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Actions**: Actions can be seen as plugins as well; however, they differ in
    capabilities since they are not built in, but rather specified by the GPT developer.
    For example, you might generate an action, which looks as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Note**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the context of actions, you can get support from a specialized GPT that is
    natively integrated into the configuration pane by clicking on **Add Actions**
    and then **Get help from ActionsGPT**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B31559_09_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.3: Example of how to get support from ActionsGPT'
  prefs: []
  type: TYPE_NORMAL
- en: 'By doing so, you will be presented with the ActionsGPT interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.4: Landing page of ActionsGPT'
  prefs: []
  type: TYPE_NORMAL
- en: It’s amazing to see how we are witnessing a “GPT inside a GPT,” don’t you think?
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to the standard configuration page, there is another option to
    build your GPT in a more “conversational way.” In fact, you can switch to the
    tab **Create** and explain, in natural language, what you want to achieve with
    your GPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Screens screenshot of a chat  Description automatically generated](img/B31559_09_05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.5: Creating a GPT starting from a conversation in natural language'
  prefs: []
  type: TYPE_NORMAL
- en: We will see both methods – standard configuration and conversational configuration
    – in the practical sections of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we know what a GPT is, let’s see how to create one. Over the next
    sections, we will create five different GPTs:'
  prefs: []
  type: TYPE_NORMAL
- en: The first four will specialize in the four domains we already covered with the
    general-purpose ChatGPT – personal productivity, code development, marketing,
    and research. The idea is to compare the overall efficiency and accuracy of a
    domain-specific GPT versus a general-purpose ChatGPT.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The fifth one will cover a new domain, related to artistic creativity. We will
    leverage the built-in DALL-E plugin as well as other plugins developed by design
    companies (like Canvas).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s start with boosting our personal productivity with a specialized GPT.
  prefs: []
  type: TYPE_NORMAL
- en: Personal assistant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this scenario, we are going to build a GPT to boost our gym workouts. To
    do so, we will leverage the built-in plugins. Plus, we will add some relevant
    documents so that the assistant will be grounded on a specific knowledge base.
  prefs: []
  type: TYPE_NORMAL
- en: My goal is to have an assistant that can build workout plans according to my
    fitness ambition, availability, gender, age, preferences, and so forth. I also
    want my assistant to provide me with clear explanations of the reason behind its
    proposals.
  prefs: []
  type: TYPE_NORMAL
- en: 'To accomplish all of this, I want to make sure that my assistant will:'
  prefs: []
  type: TYPE_NORMAL
- en: Ask me specific questions it needs to design the best workout for me
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provide me with relevant information and sources regarding its responses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consider my feedback, but be able to maintain its stance if it believes it is
    correct for me
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not accommodate my requests if they are not reasonable or risky to my health
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let’s see how to create this GPT, following all the configuration steps mentioned
    in the previous section:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Name**: I’ll call my assistant WorkoutGPT.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Description**: This is the description I set: “Workout Assistant that helps
    users designing their workout plan according to their needs.”'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Instructions**: Here we get to the real core of our GPT. This is the set
    of instructions I provided the GPT with:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*“You are a workout AI assistant that helps users by creating their workout
    plans, depending on their needs.*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Before generating the plan, make sure to ask the following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: Fitness goal and time expectation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Age and gender
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fitness level
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Availability for the workout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All other elements that you need in order to define a proper workout plan (e.g.
    equipment, potential injuries...)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If needed, use the provided documents to enrich your responses.
  prefs: []
  type: TYPE_NORMAL
- en: If the user suggests something to you that is not plausible for their goal,
    stick to your assumption, explaining the reasons behind it politely.
  prefs: []
  type: TYPE_NORMAL
- en: If the user asks you something that might be risky for their health, politely
    suggest that they take an easier and alternative approach, explaining the reasons
    behind it.”
  prefs: []
  type: TYPE_NORMAL
- en: '**Conversation starters**: Here, I set three examples of different workouts:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I want to train for a marathon in 6 months.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Generate a 30’ HIIT workout plan without any equipment.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Generate a 45’ weightlifting workout plan with dumbbells only.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Knowledge**: Here, I uploaded the standard **National Strength and Conditioning
    Association** (**NSCA**) training load chart, a tool used to help athletes and
    coaches determine the appropriate training load for different exercises and training
    sessions. It looks like the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A chart with numbers and symbols  Description automatically generated](img/B31559_09_06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.6: NSCA training load chart. Source: https://www.nsca.com/contentassets/61d813865e264c6e852cadfe247eae52/nsca_training_load_chart.pdf'
  prefs: []
  type: TYPE_NORMAL
- en: 'I almost forgot a key step – adding an illustration! It might seem superficial
    but having an icon for your GPT makes it more attractive, especially if you are
    planning to publish it to all users. Luckily, we have DALL-E directly integrated
    into the configuration pane:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31559_09_07.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.7: Example of how to set your GPT icon'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is what the configuration looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.8: WorkoutGPT configuration page'
  prefs: []
  type: TYPE_NORMAL
- en: Great! Let’s now see some sample conversations.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start with, let’s pick the first conversation starter about marathon training:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31559_09_09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.9: Example of questions asked by WorkoutGPT to assess the user’s overall
    goals and fitness level'
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see, our WorkoutGPT immediately asks us for the required information
    to proceed with the plan. Once provided with the above information, my assistant
    generated the following 24-week plan (I’ve shared here just the first 4 weeks):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31559_09_10.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.10: Example of workout table for marathon training generated by WorkoutGPT'
  prefs: []
  type: TYPE_NORMAL
- en: 'Plus, it specifies the Friday strength training as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A white and black list with black text  Description automatically generated](img/B31559_09_11.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.11: Example of strength training generated by WorkoutGPT'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s focus on the strength training. I want to better understand how to calibrate
    the weights. The following figure shows the first part of the response:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31559_09_12.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.12: Example of WorkoutGPT explaining how to determine the weight to
    lift in a strength workout'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the same response, the assistant also references the NCSA training load
    chart provided as a knowledge base:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a load chart  Description automatically generated](img/B31559_09_13.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.13: Example of WorkoutGPT retrieving information from a custom knowledge
    base about the NSCA training load chart'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now I want to challenge my WorkoutGPT, asking for something that might be harmful
    to me. For example, preparing for a marathon with no experience in one month is
    definitely a terrible idea. Let’s see what my assistant’s thoughts about it are,
    once I provide it with a list of answers to its starter questions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a phone  Description automatically generated](img/B31559_09_14.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.14: Example of WorkoutGPT gently nudging the user to pivot their goal
    and expectations given the risks associated with the request'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, my WorkoutGPT is nudging me to change my approach to the race.
    While it is still providing me with a running workout plan for 3 weeks (here,
    the output is truncated), it is not focused on preparing me to run a marathon
    in under 3 hours and 15 minutes, but rather on building endurance and strength.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that if we had asked the same thing to the general-purpose ChatGPT, it
    would have responded as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a message  Description automatically generated](img/B31559_09_15.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.15: Example of ChatGPT fulfilling a user’s request despite the associated
    risk'
  prefs: []
  type: TYPE_NORMAL
- en: Note how ChatGPT, despite being vocal in disclosing its concerns, is still accommodating
    my request, providing me with a plan to run a full marathon. That could encourage
    me – a reckless beginner who thinks that running a marathon is a joke – to dive
    into this silly adventure, with serious consequences for my health.
  prefs: []
  type: TYPE_NORMAL
- en: Overall, GPTs allow you to be extremely specific about how your assistant should
    behave and what they should avoid saying or accommodating.
  prefs: []
  type: TYPE_NORMAL
- en: Code assistant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, I want to develop an assistant that is tailored toward data
    science projects. More specifically, I want my assistant to be able to:'
  prefs: []
  type: TYPE_NORMAL
- en: Provide clear guidance on how to set up a data science experiment, given the
    user’s task.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generate the Python code needed to run the experiment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leverage Code Interpreter’s capabilities to run and check the code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Push the final code to the GitHub repository.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Note**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: When it comes to code generation, custom GPTs can offer significant advantages
    over general-purpose ChatGPT. By incorporating domain-specific knowledge and tailored
    instructions, custom GPTs can produce code that is more accurate, efficient, and
    aligned with specific requirements. This customization allows the model to understand
    and adhere to coding standards, frameworks, or libraries pertinent to a given
    project, reducing the likelihood of errors and the need for extensive revisions.
    Plus, thanks to actions, GPTs can actually execute activities that, if automated
    in the development lifecycle, can speed up the time to market of your products.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Let’s see how to do that step by step:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Setting the instructions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*This GPT is a data science assistant that helps users set up and run data
    science experiments. It provides clear guidance on how to define and organize
    tasks and generates the Python code needed for the experiments, and leverages
    Code Interpreter’s capabilities to run and check the code. The GPT will take the
    user’s input and provide step-by-step instructions to structure the experiment,
    create the necessary scripts, and execute the code.*'
  prefs: []
  type: TYPE_NORMAL
- en: The GPT will execute the code to see whether it works. Once the final code is
    accepted by the user, it can be pushed to the GitHub repo as a **.ipynb** file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Setting the (optional) conversation starters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do I set up a classification experiment?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Generate Python code for a random forest model.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Can you help me preprocess this dataset?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Run this code and check for errors.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Enabling the Code Interpreter & Data Analysis plugin:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31559_09_16.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.16: Enabling the Code Interpreter & Data Analysis plugin'
  prefs: []
  type: TYPE_NORMAL
- en: 'Creating an action to communicate with GitHub: To do so, we need to click on
    **Create new action** and define the required schema.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Note**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To set the schema of a ChatGPT action using the OpenAPI 3.1.0 specification,
    you define the structure of the data (requests and responses) that the action
    will handle. This involves specifying the schema property under content in your
    API paths. The schema outlines the expected data types, required fields, and possible
    values for your request and response bodies.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Here are the steps to define a schema:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Identify the data structure: Determine the type of data the action will handle
    (e.g., JSON objects or arrays).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Define properties: Under the schema, specify the properties, their types, and
    any constraints. For example, if the action requires a username and an email,
    you’d define these under the properties.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Set required fields: Use the required array to specify which fields must be
    provided.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Apply to paths: Place the schema under the appropriate HTTP method in your
    paths (e.g., POST or GET).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Let’s consider the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In this example, the `requestBody` for the POST method defines a schema with
    action and parameters as required fields. The response is also defined, specifying
    the structure of the data returned after the action is performed.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is what the schema looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_17.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.17: Configuration of the GitHub action schema'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is the full schema I used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: To allow the action to communicate with my repo, I created an access token in
    my GitHub profile under **Settings**>**Developer settings**>**Personal access
    token**.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can then test the connection as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_18.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.18: Example of testing the action'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s now navigate through the repo and see whether it worked:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_19.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.19: Example of file uploaded via the GPT action'
  prefs: []
  type: TYPE_NORMAL
- en: Great! As you can see, we now have a new file with the pre-defined content.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s now create it and test it:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s start with a simple question about how to set up a classification experiment
    (truncated output):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_20.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.20: Example of the DataScience assistant providing guidance on how
    to tackle a classification problem'
  prefs: []
  type: TYPE_NORMAL
- en: Following these instructions, we are now ready to set up our experiment. We
    want to tackle the well-known Titanic passengers’ survival prediction. We will
    upload our dataset (you can find many free versions online; I downloaded mine
    f[rom https://github.com/datasciencedojo/datasets/blob/master/titanic](https://github.com/datasciencedojo/datasets/blob/master/titanic.csv).csv)
    and leverage a logistic regression model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Note**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The Titanic survival prediction task is a classic problem in data science and
    machine learning. The goal is to predict whether a passenger on the Titanic would
    survive or not, based on features like age, gender, passenger class, fare, and
    more. This task is typically used to teach classification techniques, where the
    model is trained on a labeled dataset and then used to predict outcomes on new
    data. The challenge involves selecting relevant features, handling missing data,
    and choosing the appropriate machine learning algorithm to achieve accurate predictions.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'This is my query:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_21.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.21: Example of the DataScience assistant designing the Titanic survival
    experiment'
  prefs: []
  type: TYPE_NORMAL
- en: 'I will now share some screenshots of the model’s response for each step:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Load the Data**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_22.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.22: Example of the DataScience assistant executing step 1 of the experiment'
  prefs: []
  type: TYPE_NORMAL
- en: '**Explore and Clean the Data**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_23.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.23: Example of the DataScience assistant exploring and cleaning data'
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that, when you see the symbol [>_], it means that the Code Interpreter
    plugin has been triggered. You can click on it to see the executed code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer program  Description automatically generated](img/B31559_09_24.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.24: Example of the DataScience assistant’s generated code leveraging
    the Code Interpreter plugin'
  prefs: []
  type: TYPE_NORMAL
- en: '**Feature Engineering**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_25.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.25: Example of the DataScience assistant doing feature engineering'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data Splitting**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_26.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.26: Example of the DataScience assistant splitting the dataset into
    training and test sets'
  prefs: []
  type: TYPE_NORMAL
- en: '**Train the Logistic Regression Model**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_27.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.27: Example of the DataScience assistant training a logistic regression
    model'
  prefs: []
  type: TYPE_NORMAL
- en: '**Evaluate the Model**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a test  Description automatically generated](img/B31559_09_28.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.28: Example of the DataScience assistant evaluating the model’s output'
  prefs: []
  type: TYPE_NORMAL
- en: That’s pretty cool! It is extremely accurate and can save a lot of time. Plus,
    if you think about data scientists working in large enterprises on many projects,
    having a similar assistant can also help in following fixed standards among projects,
    so that the maintenance is aligned across teams.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, it is imperative to keep a subject matter expert in the loop (in
    this case, a data scientist), as we need to verify not only the output but also
    the reasoning process.
  prefs: []
  type: TYPE_NORMAL
- en: 'The last thing that we will ask our GPT is to push the code on our repo. Let’s
    see how it works:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31559_09_29.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.29: Example of the DataScience assistant leveraging the action to
    push the code on GitHub'
  prefs: []
  type: TYPE_NORMAL
- en: 'If we click on the link, we can see that the file has been successfully uploaded:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_30.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.30: File uploaded via a DataScience assistant action'
  prefs: []
  type: TYPE_NORMAL
- en: And it worked! Again, this is an example of how GPTs can speed up developers’
    and data scientists’ productivity. Designing data science experiments following
    a common framework and enabling push workflows without the need to switch to GitHub
    can save precious time, so that data scientists can focus on the core aspects
    of their projects.
  prefs: []
  type: TYPE_NORMAL
- en: Marketing assistant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we saw in *Chapter 6*, AI assistants can be extremely valuable when it comes
    to this domain. In fact, generating text content – like social media posts, blog
    articles, or marketing campaigns – is probably the activity in which these models
    perform at their best.
  prefs: []
  type: TYPE_NORMAL
- en: '**Definition**'
  prefs: []
  type: TYPE_NORMAL
- en: A copywriter is a professional who specializes in writing persuasive and engaging
    content, often for marketing and advertising purposes. Their work typically includes
    writing promotional materials such as advertisements, brochures, websites, emails,
    social media posts, and other forms of content designed to persuade an audience
    to take a specific action, like making a purchase or subscribing to a service.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, we are going to create a copywriter assistant that is tailored
    to this kind of activity. To do so, I named my assistant Copywriting Companion,
    and I set the following configuration components:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Instructions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Copywriting Companion is a versatile assistant designed to help users with
    various writing tasks. It specializes in generating product sheets based on user
    input, including text and images, crafting email campaigns for newsletters or
    promotional purposes, creating engaging visuals for new products, and writing
    tailored social media posts for different platforms.*'
  prefs: []
  type: TYPE_NORMAL
- en: When executing tasks, it makes sure to validate your thought process and reason
    step by step.
  prefs: []
  type: TYPE_NORMAL
- en: It ensures content is persuasive, engaging, and aligned with the target audience,
    aiming to increase engagement and promote products or services effectively. The
    assistant adapts its style to the user’s needs and strives for creativity, clarity,
    and relevance in all outputs. It communicates in a casual, friendly tone, making
    interactions feel approachable and easygoing.
  prefs: []
  type: TYPE_NORMAL
- en: 'Conversation starters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Can you write a product description for my new product?*'
  prefs: []
  type: TYPE_NORMAL
- en: I need a catchy headline for an article about climbing
  prefs: []
  type: TYPE_NORMAL
- en: Give me a few ideas for a blog post about running
  prefs: []
  type: TYPE_NORMAL
- en: 'Capabilities:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A close-up of a white background  Description automatically generated](img/B31559_09_31.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.31: Copywriting Companion’s enabled plugins'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s see it in action:'
  prefs: []
  type: TYPE_NORMAL
- en: 'I’ll first ask it to write a product sheet starting from a picture provided
    (output truncated):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31559_09_32.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.32: Example of Copywriting Companion generating a product description'
  prefs: []
  type: TYPE_NORMAL
- en: 'As a copywriter, I might want to insert this set of information into a more
    structured repository, like an Excel file. Let’s ask the assistant to do so, leveraging
    its Code Interpreter plugin:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A white background with black text  Description automatically generated](img/B31559_09_33.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.33: Example of Copywriting Companion converting its previous response
    into an Excel file, leveraging the Code Interpreter plugin'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is the final result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_34.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.34: Excel file generated by Copywriting Companion'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s now ask the assistant to generate an Instagram post to sponsor our shoes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_35.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.35: Example of Copywriting Companion generating an Instagram post'
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see, the assistant also proposed an image description to leverage
    the DALL-E plugin. Since the description makes sense to me, I’ll go ahead and
    ask it to generate it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31559_09_36.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.36: Example of Copywriting Companion generating an image leveraging
    the DALL-E plugin'
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, I want to get an idea of how big competitor brands – like Nike and
    Adidas – are doing their marketing activities. To do so, I’ll ask my assistant
    to gather some evidence from the web:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31559_09_37.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.37: Example of Copywriting Companion doing a competitive analysis
    leveraging the Web Browsing plugin'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, our companion correctly leveraged the Web Browsing plugin to
    retrieve the required information. Plus, it gave us powerful insight into which
    areas the two competitor companies are investing in, so that we might think (or
    ask our companion) about unique differentiators that could help our brand stand
    out in a competitive market.
  prefs: []
  type: TYPE_NORMAL
- en: 'We could also go a step further and ask for more specific insights about the
    competition by leveraging the Code Interpreter & Data Analysis plugin. Let’s say,
    for example, that we created an Excel sheet with the following structure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31559_09_38.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.38: Competitive analysis on an Excel sheet'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we want to generate some visuals out of it. Let’s ask our Copywriting Companion
    to do so:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a graph  Description automatically generated](img/B31559_09_39.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.39: Example of bar chart and scatter plot generated by Copywriting
    Companion'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are more visuals:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Screens screenshot of a graph  Description automatically generated](img/B31559_09_40.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.40: Example of a line chart generated by Copywriting Companion'
  prefs: []
  type: TYPE_NORMAL
- en: 'As requested, the executive report is also generated:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A close-up of a document  Description automatically generated](img/B31559_09_41.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.41: Example of an executive report generated by Copywriting Companion'
  prefs: []
  type: TYPE_NORMAL
- en: Overall, tailoring ChatGPT for marketing activities can be extremely useful
    when it comes to generating new content, designing marketing strategies, and doing
    competitive analysis on the web.
  prefs: []
  type: TYPE_NORMAL
- en: Research assistant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this scenario, we are going to focus on research once more, but this time
    with a particular focus on paper retrieval. More specifically, we want our assistant
    to be able to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Retrieve information from the custom knowledge base that we provide.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrate the custom documents with papers only from arXiv, enabling the web
    plugin for this task.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retrieve from a database (in our case, it will be hosted in Notion) existing
    ongoing work from other researchers, so that we don’t risk covering content in
    an essay that has already been covered by someone else.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let’s see all the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Upload custom documents. For this purpose, I’ll use two papers about image
    classification in machine learning: *“CIFAKE: image classification and explainable
    identification of ai-generated synthetic images”* by J. Bird et al. and *“A Comprehensive
    Study of Vision Transformers in Image Classification Tasks”* by Khalis et al.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can upload them in the relevant section in the configuration pane:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31559_09_42.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.42: Uploading custom documents in the configuration pane'
  prefs: []
  type: TYPE_NORMAL
- en: 'Integrating custom documents with web references. To do so, we need to enable
    the web plugin:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A close-up of a white background  Description automatically generated](img/B31559_09_43.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.43: Enabling the Web Browsing plugin in the configuration pane'
  prefs: []
  type: TYPE_NORMAL
- en: Plus, we also need to specify that the assistant should only navigate through
    the arXiv archive. We will see how to specify that in the set of instructions
    we will create.
  prefs: []
  type: TYPE_NORMAL
- en: 'Retrieve information from a Notion database. Here, the idea is that, as researchers,
    we might come up with ideas that are already being studied and developed by our
    fellow colleagues. Imagine that we keep track of all the ongoing research in a
    Notion database that has the following structure:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A white background with black text  Description automatically generated](img/B31559_09_44.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.44: Notion database structure'
  prefs: []
  type: TYPE_NORMAL
- en: 'To do so, we need to create GPT actions. To do so, there are two steps to follow:'
  prefs: []
  type: TYPE_NORMAL
- en: In your Notion workspace, you need to create a new connection marked as internal,
    and a new internal integration secret (or API key) will be created. You can call
    this connection “chatgpt” or similar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In your GPT configuration pane, you need to set a new action schema. Since
    in our case we need to query a specific database, the schema will look like the
    following. When it comes to authentication, you can click on **Authentication**
    and choose **API Key**. Enter the information below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'API Key: Use the internal integration secret from your newly created connection
    in Notion.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Auth Type: Bearer.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/B31559_09_45.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.45: Notion action schema'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is what the whole schema looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Great, now that we have all our ingredients, we need to set our system message
    and, optionally, our conversation starters. In this scenario, I set the following
    instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: '*You are an AI research assistant tasked with helping researchers by leveraging
    a variety of tools and resources. Your primary responsibilities include retrieving,
    integrating, and cross-referencing information from custom knowledge bases, academic
    papers on arXiv, and ongoing research projects stored in a Notion database. Follow
    these guidelines to ensure your assistance is accurate, comprehensive, and avoids
    redundancy*:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Always answer based on the provided documents.*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*If you feel it is needed, extend your search on the web. The ONLY SITE you
    can navigate through is arXiv.*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*If asked by the user, check whether the topic is already covered in the Notion
    DB.*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'And the following conversation starters:'
  prefs: []
  type: TYPE_NORMAL
- en: '*How do VGGNet, ResNet, and Inception differ in accuracy and efficiency for
    image classification?*'
  prefs: []
  type: TYPE_NORMAL
- en: '*What challenges do image classification models face, and how do techniques
    like data augmentation and transfer learning help?*'
  prefs: []
  type: TYPE_NORMAL
- en: '*How does CNN depth affect image classification, and how do ResNet’s residual
    connections help?*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The final product looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31559_09_46.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.46: Landing page of our ResearchGPT'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s test it:'
  prefs: []
  type: TYPE_NORMAL
- en: 'I’ll first ask a generic question that will be addressed by the provided papers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_09_47.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.47: Example of ResearchGPT retrieving knowledge from the provided
    documents'
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, I want to see whether the topic has already been covered:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a chat  Description automatically generated](img/B31559_09_48.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.48: Example of ResearchGPT talking to Notion with the pre-defined
    action'
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, I want to integrate the topic to make it unique:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a chat  Description automatically generated](img/B31559_09_49.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.49: Example of ResearchGPT using the Web Browser plugin'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, our assistant could leverage all the tools we provided it with,
    calling the Notion database when needed.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explored how to get customized GPTs to address our specific
    goals. The possibility of tailoring ChatGPT opens a new landscape of scenarios,
    where highly specialized AI assistants become the everyday companions of professionals.
    Plus, OpenAI offers a no-code UI to create GPTs, so that all citizen developers
    can benefit not only from the extended marketplace of available solutions but
    also from their own creations.
  prefs: []
  type: TYPE_NORMAL
- en: With the plugin’s extensibility and the custom knowledge base, custom GPTs can
    serve you for limitless tasks. Then, with the addition of powerful actions, they
    can also communicate with the surrounding environment and evolve from *mere* generation
    to automation.
  prefs: []
  type: TYPE_NORMAL
- en: With this chapter, we also conclude *Part 2* of this book, where we focused
    on practical applications of ChatGPT. Starting from the next chapter, we are going
    to cover in more detail how large enterprises can leverage OpenAI models and embed
    them into their business processes.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Role of Likes: How Online Feedback I[mpacts Users’ Mental Health. ht](https://arxiv.org/abs/2312.11914)tps://arxiv.org/abs/2312.11914'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Towards Facilitating Empathic Conversations in Online Mental Health Support:
    A Reinforcement Learning Approach. [https://arxiv.org/abs/2101.07714](https://arxiv.org/abs/2101.07714)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Second Machine Age: Work, Progress, and Prosperity in a Time of Brilliant
    Technologies. [https://psycnet.apa.org/record/2014-07087-000](https://psycnet.apa.org/record/2014-07087-000)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Impact of Technostress on Role Stress and Productivity. [https://www.tandfonline.com/doi/abs/10.2753/MIS0742-1222240109](https://www.tandfonline.com/doi/abs/10.2753/MIS0742-1222240109)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Big Debate about the Future of Work, explained. [https://www.youtube.com/watch?v=TUmyygCMMGA](https://www.youtube.com/watch?v=TUmyygCMMGA)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Comprehensive Study of Vision Transformers in Image Classification Tasks.
    [https://arxiv.org/pdf/2312.01232](https://arxiv.org/pdf/2312.01232)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'CIFAKE: Image Classification and Explainable Identification of AI-Generated
    Synthetic Images. https://arxiv.org/pdf/2303.14126'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Join our communities on Discord and Reddit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Have questions about the book or want to contribute to discussions on Generative
    AI and LLMs? Join our Discord server at [https://packt.link/I1tSU](Chapter_9.xhtml)
    and our Reddit channel at [https://packt.link/jwAmA](Chapter_9.xhtml) to connect,
    share, and collaborate with like-minded enthusiasts.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Discord.png) ![](img/QR_Code757615820155951000.png)'
  prefs: []
  type: TYPE_IMG
