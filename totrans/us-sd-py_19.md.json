["```py\nimport torch\nfrom diffusers import StableDiffusionPipeline\nmodel_id = \"stablediffusionapi/deliberate-v2\"\ntext2img_pipe = StableDiffusionPipeline.from_pretrained(\n    model_id,\n    torch_dtype = torch.float16\n)\n# Then, we define all the parameters that will be used to generate an \n# image in a JSON object:\ngen_meta = {\n    \"model_id\": model_id,\n    \"prompt\": \"high resolution, \n        a photograph of an astronaut riding a horse\",\n    \"seed\": 123,\n    \"inference_steps\": 30,\n    \"height\": 512,\n    \"width\": 768,\n    \"guidance_scale\": 7.5\n}\n```", "```py\ntext2img_pipe.to(\"cuda:0\")\ninput_image = text2img_pipe(\n    prompt = gen_meta[\"prompt\"],\n    generator = \\\n        torch.Generator(\"cuda:0\").manual_seed(gen_meta[\"seed\"]),\n    guidance_scale = gen_meta[\"guidance_scale\"],\n    height = gen_meta[\"height\"],\n    width = gen_meta[\"width\"]\n).images[0]\ntext2img_pipe.to(\"cpu\")\ntorch.cuda.empty_cache()\ninput_image\n```", "```py\n    pip install pillow\n    ```", "```py\n    from PIL import Image\n    ```", "```py\n    from PIL import PngImagePlugin\n    ```", "```py\n    import json\n    ```", "```py\n    # Open the original image\n    ```", "```py\n    image = Image.open(\"input_image.png\")\n    ```", "```py\n    # Define the metadata you want to add\n    ```", "```py\n    metadata = PngImagePlugin.PngInfo()\n    ```", "```py\n    gen_meta_str = json.dumps(gen_meta)\n    ```", "```py\n    metadata.add_text(\"my_sd_gen_meta\", gen_meta_str)\n    ```", "```py\n    # Save the image with the added metadata\n    ```", "```py\n    image.save(\"output_image_with_metadata.png\", \"PNG\", \n    ```", "```py\n        pnginfo=metadata)\n    ```", "```py\n    from PIL import Image\n    ```", "```py\n    from PIL import PngImagePlugin\n    ```", "```py\n    import json\n    ```", "```py\n    # Open the original image\n    ```", "```py\n    image = input_image#Image.open(\"input_image.png\")\n    ```", "```py\n    # Define the metadata you want to add\n    ```", "```py\n    metadata = PngImagePlugin.PngInfo()\n    ```", "```py\n    gen_meta_str = json.dumps(gen_meta)\n    ```", "```py\n    metadata.add_text(\"my_sd_gen_meta\", gen_meta_str)\n    ```", "```py\n    # add a copy right json object\n    ```", "```py\n    copyright_meta = {\n    ```", "```py\n        \"author\":\"Andrew Zhu\",\n    ```", "```py\n        \"license\":\"free use\"\n    ```", "```py\n    }\n    ```", "```py\n    copyright_meta_str = json.dumps(copyright_meta)\n    ```", "```py\n    metadata.add_text(\"copy_right\", copyright_meta_str)\n    ```", "```py\n    # Save the image with the added metadata\n    ```", "```py\n    image.save(\"output_image_with_metadata.png\", \"PNG\", \n    ```", "```py\n        pnginfo=metadata)\n    ```", "```py\n    from PIL import Image\n    ```", "```py\n    image = Image.open(\"output_image_with_metadata.png\")\n    ```", "```py\n    metadata = image.info\n    ```", "```py\n    # print the meta\n    ```", "```py\n    for key, value in metadata.items():\n    ```", "```py\n        print(f\"{key}: {value}\")\n    ```", "```py\n    my_sd_gen_meta: {\"model_id\": \"stablediffusionapi/deliberate-v2\", \"prompt\": \"high resolution, a photograph of an astronaut riding a horse\", \"seed\": 123, \"inference_steps\": 30, \"height\": 512, \"width\": 768, \"guidance_scale\": 7.5}\n    ```", "```py\n    copy_right: {\"author\": \"Andrew Zhu\", \"license\": \"free use\"}\n    ```"]