["```py\nColor randomColor = new Color(Random.value, Random.value, Random.value); \n```", "```py\nstatic function Range (min : float, max : float) : float\n```", "```py\nusing UnityEngine;\nusing TMPro;\nusing UnityEngine.UI;\npublic class DiceGame : MonoBehaviour {\n    public string inputValue = \"1\";\n    public TMP_Text outputText;\n    public TMP_InputField inputField;\n    public Button button;\n    int throwDice() {\n        Debug.Log(\"Throwing dice...\");\n        Debug.Log(\"Finding random between 1 to 6...\");\n        int diceResult = Random.Range(1,7);\n        Debug.Log($\"Result: {diceResult}\");\n        return diceResult;\n    }\n    public void processGame() {\n        inputValue = inputField.text;\n        try {\n            int inputInteger = int.Parse(inputValue);\n            int totalSix = 0;\n            for (var i = 0; i < 10; i++) {\n                var diceResult = throwDice();\n                if (diceResult == 6) { totalSix++; }\n                if (diceResult == inputInteger) {\n                    outputText.text = $\"DICE RESULT:\n                      {diceResult} \\r\\nYOU WIN!\";\n                } else {\n                    outputText.text = $\"DICE RESULT:\n                      {diceResult} \\r\\nYOU LOSE!\";\n                }\n            }\n            Debug.Log($\"Total of six: {totalSix}\");\n        } catch {\n            outputText.text = \"Input is not a number!\";\n            Debug.LogError(\"Input is not a number!\");\n        }\n    }\n}\n```", "```py\n    int throwDice() {\n        Debug.Log(\"Throwing dice...\");\n        int randomProbability = Random.Range(0, 100);\n        int diceResult = 0;\n        if (randomProbability < 35) {\n            diceResult = 6;\n        } else {\n            diceResult = Random.Range(1, 5);\n        }\n        Debug.Log(\"Result: \" + diceResult);\n        return diceResult;\n    }\n```", "```py\nusing UnityEngine;\nusing System.Collections;\nusing System;\nusing System.Linq;\npublic class FSM : MonoBehaviour {\n    [Serializable]\n    public enum FSMState {\n        Chase,\n        Flee,\n        SelfDestruct,\n    }\n    [Serializable]\n    public struct FSMProbability {\n        public FSMState state;\n        public int weight;\n    }\n    public FSMProbability[] states;\n    FSMState selectState() {\n        // Sum the weights of every state.\n        var weightSum = states.Sum(state => state.weight);\n        var randomNumber = UnityEngine.Random.Range(0,\n          weightSum);\n        var i = 0;\n        while (randomNumber >= 0) {\n            var state = states[i];\n            randomNumber -= state.weight;\n            if (randomNumber <= 0) {\n                return state.state;\n            }\n            i++;\n        }\n        // It is not possible to reach this point!\n        throw new Exception(\"Something is wrong in the\n          selectState algorithm!\");\n    }\n\n    // Update is called once per frame\n    void Update () {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            FSMState randomState = selectState();\n            Debug.Log(randomState.ToString());\n        }\n    }\n}\n```", "```py\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class SlotMachine : MonoBehaviour { \n    public float spinDuration = 2.0f;\n    public int numberOfSym = 10;\n    public Text firstReel;\n    public Text secondReel;\n    public Text thirdReel;\n    public Text betResult;\n    public Text totalCredits;\n    public InputField inputBet;\n    private bool startSpin = false;\n    private bool firstReelSpinned = false;\n    private bool secondReelSpinned = false;\n    private bool thirdReelSpinned = false;\n    private int betAmount;\n    private int credits = 1000;\n    private int firstReelResult = 0;\n    private int secondReelResult = 0;\n    private int thirdReelResult = 0;\n    private float elapsedTime = 0.0f;\n```", "```py\npublic void Spin() {\n    if (betAmount > 0) {\n        startSpin = true;\n    } else {\n        betResult.text = \"Insert a valid bet!\";\n    }\n}\nprivate void OnGUI() {\n    try {\n        betAmount = int.Parse(inputBet.text);\n    } catch {\n        betAmount = 0;\n    }\n    totalCredits.text = credits.ToString();\n}\nvoid checkBet() {\n    if (firstReelResult == secondReelResult && \n        secondReelResult == thirdReelResult) {\n        betResult.text = \n          \"YOU WIN!\"; credits += 500*betAmount;\n    } else {\n        betResult.text = \"YOU LOSE!\"; credits -= betAmount;\n    }\n}\n```", "```py\nvoid FixedUpdate () { \n    if (startSpin) {\n        elapsedTime += Time.deltaTime;\n        int randomSpinResult =\n          Random.Range(0, numberOfSym);\n        if (!firstReelSpinned) {\n            firstReel.text = randomSpinResult.ToString();\n            if (elapsedTime >= spinDuration) {\n                firstReelResult = randomSpinResult;\n                firstReelSpinned = true;\n                elapsedTime = 0;\n            }\n        } else if (!secondReelSpinned) {\n            secondReel.text = randomSpinResult.ToString();\n            if (elapsedTime >= spinDuration) {\n                secondReelResult = randomSpinResult;\n                secondReelSpinned = true;\n                elapsedTime = 0;\n            }\n        } else if (!thirdReelSpinned) {\n            thirdReel.text = randomSpinResult.ToString();\n            if (elapsedTime >= spinDuration) {\n                thirdReelResult = randomSpinResult;\n                startSpin = false; \n                elapsedTime = 0;\n                firstReelSpinned = false;\n                secondReelSpinned = false;\n                checkBet();\n            }\n        }\n    }\n}\n```", "```py\nusing UnityEngine;\nusing System.Collections;\nusing UnityEngine.UI;\npublic class SlotMachineWeighted : MonoBehaviour { \n    public float spinDuration = 2.0f;\n    // Number of symbols on the slot machine reels\n    public int numberOfSym = 10;\n    public Text firstReel;\n    public Text secondReel;\n    public Text thirdReel;\n    public Text betResult;\n    public Text totalCredits;\n    public InputField inputBet;\n    private bool startSpin = false;\n    private bool firstReelSpinned = false;\n    private bool secondReelSpinned = false;\n    private bool thirdReelSpinned = false;\n    private int betAmount = 100;\n    private int credits = 1000;\n    [Serializable]\n    public struct WeightedProbability {\n        public int number;\n        public int weight;\n    }\n    private List<WeightedProbability> weightedReelPoll =\n      new List<WeightedProbability>();\n    private int zeroProbability = 30;\n    private int firstReelResult = 0;\n    private int secondReelResult = 0;\n    private int thirdReelResult = 0;\n    private float elapsedTime = 0.0f;\n```", "```py\nvoid Start () {\n    weightedReelPoll.Add(new WeightedProbability {\n        number = 0,\n        weight = zeroProbability\n    });\n    int remainingValuesProb = (100 - zeroProbability)/9;\n    for (int i = 1; i < 10; i++) {\n        weightedReelPoll.Add(new WeightedProbability {\n        number = i,\n        weight = remainingValuesProb\n    });\n}}\n```", "```py\nvoid checkBet() {\n    if (firstReelResult == secondReelResult && \n        secondReelResult == thirdReelResult) {\n        betResult.text = \"JACKPOT!\";\n        credits += betAmount * 50;\n    } else if (firstReelResult == 0 && \n               thirdReelResult == 0) {\n        betResult.text = \n          \"YOU WIN \" + (betAmount/2).ToString();\n        credits -= (betAmount/2);\n    } else if (firstReelResult == secondReelResult) {\n        betResult.text = \"AWW... ALMOST JACKPOT!\";\n    } else if (firstReelResult == thirdReelResult) {\n        betResult.text = \n          \"YOU WIN \" + (betAmount*2).ToString();\n        credits -= (betAmount*2);\n    } else {\n        betResult.text = \"YOU LOSE!\";\n        credits -= betAmount;\n    }\n}\n```", "```py\nprivate int PickNumber() {\n    // Sum the weights of every state.\n    var weightSum = \n      weightedReelPoll.Sum(state => state.weight);\n    var randomNumber = \n      UnityEngine.Random.Range(0, weightSum);\n    var i = 0;\n    while (randomNumber >= 0) {\n        var candidate = weightedReelPoll[i];\n        randomNumber -= candidate.weight;\n        if (randomNumber <= 0) {\n            return candidate.number;\n        }\n        i++;\n    }\n    // It should not be possible to reach this point!\n    throw new Exception(\"Something is wrong in the \n                         selectState algorithm!\");\n}\nvoid FixedUpdate () { \n    if (startSpin) {\n        elapsedTime += Time.deltaTime;\n        int randomSpinResult = \n          Random.Range(0, numberOfSym);\n        if (!firstReelSpinned) {\n            firstReel.text = randomSpinResult.ToString();\n            if (elapsedTime >= spinDuration) {\n                int weightedRandom = PickNumber();\n                firstReel.text = weightedRandom.ToString();\n                firstReelResult = weightedRandom;\n                firstReelSpinned = true;\n                elapsedTime = 0;\n            }\n        } else if (!secondReelSpinned) {\n            secondReel.text = randomSpinResult.ToString();\n            if (elapsedTime >= spinDuration) {\n                secondReelResult = randomSpinResult;\n                secondReelSpinned = true;\n                elapsedTime = 0;\n            }\n        }\n...\n```", "```py\n        else if (!thirdReelSpinned) {\n            thirdReel.text = randomSpinResult.ToString();\n            if (elapsedTime >= spinDuration) {\n                if ((firstReelResult == secondReelResult)\n                  && randomSpinResult != firstReelResult) {\n                    // the first two reels have resulted\n                    // the same symbol\n                    // but unfortunately the third reel\n                    // missed\n                    // so instead of giving a random number\n                    // we'll return a symbol which is one \n                    // less than the other 2\n                    randomSpinResult = firstReelResult - 1;\n                    if (randomSpinResult < firstReelResult)\n                      randomSpinResult =\n                        firstReelResult - 1;\n                    if (randomSpinResult > firstReelResult)\n                     randomSpinResult = \n                       firstReelResult + 1;\n                    if (randomSpinResult < 0) \n                      randomSpinResult = 0;\n                    if (randomSpinResult > 9) \n                      randomSpinResult = 9;\n                    thirdReel.text = \n                      randomSpinResult.ToString();\n                    thirdReelResult = randomSpinResult;\n                } else {\n                    int weightedRandom = PickNumber();\n                    thirdReel.text = \n                      weightedRandom.ToString();\n                    thirdReelResult = weightedRandom;\n                }\n                startSpin = false;\n                elapsedTime = 0;\n                firstReelSpinned = false;\n                secondReelSpinned = false;\n                checkBet();\n            }\n        }\n    }\n}\n```"]