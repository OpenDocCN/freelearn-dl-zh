["```py\n %pip install gradio\n%pip uninstall uvloop -y\n```", "```py\n import asyncio\nimport nest_asyncio\nasyncio.set_event_loop_policy(asyncio.DefaultEventLoopPolicy())\nnest_asyncio.apply()\nimport gradio as gr\n```", "```py\n def process_question(question):\n    result = rag_chain_with_source.invoke(question)\n    relevance_score = result['answer']['relevance_score']\n    final_answer = result['answer']['final_answer']\n    sources = [doc.metadata['source'] for doc in result['context']]\n    source_list = \", \".join(sources)\n    return relevance_score, final_answer, source_list\n```", "```py\n demo = gr.Interface(\n    fn=process_question,\n    inputs=gr.Textbox(label=\"Enter your question\",\n        value=\"What are the Advantages of using RAG?\"),\n    outputs=[\n        gr.Textbox(label=\"Relevance Score\"),\n        gr.Textbox(label=\"Final Answer\"),\n        gr.Textbox(label=\"Sources\")\n    ],\n    title=\"RAG Question Answering\",\n    description=\" Enter a question about RAG and get an answer, a \n        relevancy score, and sources.\" )\n```", "```py\n demo.launch(share=True, debug=True)\n```", "```py\n demo.launch(share=True, debug=True, auth=(\"admin\", \"pass1234\"))\n```", "```py\n Colab notebook detected. This cell will run indefinitely so that you can see errors and logs. To turn off, set debug=False in launch(). Running on public URL: https://pl09q9e4g8989braee.gradio.live\nThis share link expires in 72 hours.\n```"]