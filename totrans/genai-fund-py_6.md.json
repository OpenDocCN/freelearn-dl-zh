["```py\npip install sentence-transformers transformers peft datasets\n```", "```py\nfrom transformers import (\n    AutoTokenizer, AutoModelForCausalLM)\nfrom peft import AdaLoraConfig, get_peft_model\n```", "```py\ntokenizer = AutoTokenizer.from_pretrained(\"bigscience/bloom-1b1\")\nmodel = AutoModelForCausalLM.from_pretrained(\n    \"bigscience/bloom-1b1\")\n```", "```py\nadapter_config = AdaLoraConfig(target_r=16)\nmodel.add_adapter(adapter_config)\n```", "```py\nmodel = get_peft_model(model, adapter_config)\nmodel.print_trainable_parameters()\n```", "```py\ntrainable params: 1,769,760 || all params: 1,067,084,088 || trainable%: 0.1658500974667331\n```", "```py\ndataset = load_dataset(\"text\",\n    data_files={\"train\": \"./train.txt\",\n        \"test\": \"./test.txt\"}\n    )\n```", "```py\ndef preprocess_function(examples):\n    inputs = tokenizer(examples[\"text\"], truncation=True,\n        padding=\"max_length\", max_length=512)\n    inputs[\"labels\"] = inputs[\"input_ids\"].copy()\n    return inputs\n```", "```py\nfrom transformers import Trainer, TrainingArguments\ntraining_args = TrainingArguments(\n    output_dir=\"./model_output\",\n    per_device_train_batch_size=2,\n    num_train_epochs=5,\n    logging_dir='./logs',\n    logging_steps=10,\n    load_best_model_at_end=True,\n    prediction_loss_only=True,\n)\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=tokenized_datasets[\"train\"],\n    eval_dataset=tokenized_datasets[\"test\"],\n)\ntrainer.train()\nmodel.save_pretrained(\"./proxima_da_model\")\n```", "```py\ndef predict(model, prompt=\"The Proxima Passkey is\"):\n    inputs = tokenizer(prompt, return_tensors=\"pt\")\n    output = model.generate(**inputs, max_length=50)\n    return tokenizer.decode(output[0], skip_special_tokens=True)\n```", "```py\nfrom rouge import Rouge\n# Example reference text (what we expect the model to generate after training on a complete dataset)\nreference = \"Proxima's Passkey enables seamless integration of diverse financial portfolios, offering unparalleled access to global investment opportunities and streamlined asset management.\"\n# Example predicted model output\npredicted = \"The Proxima Passkey provides a unified platform for managing various investment portfolios, granting access to worldwide investment options and efficient asset control.\"\n# Initialize the Rouge metric\nrouge = Rouge()\n# Compute the Rouge scores\nscores = rouge.get_scores(predicted, reference)\nprint(scores)\n```"]