- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Generating Images Using Stable Diffusion
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Stable Diffusion生成图像
- en: In this chapter, we will start using common Stable Diffusion functionalities
    by leveraging the Hugging Face Diffusers package ([https://github.com/huggingface/diffusers](https://github.com/huggingface/diffusers))
    and open-source packages. As we mentioned in [*Chapter 1*](B21263_01.xhtml#_idTextAnchor015),
    *Introduction to Stable Diffusion*, Hugging Face Diffusers is currently the most
    widely used Python implementation of Stable Diffusion. As we explore image generation,
    we will walk through the common terminologies used.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过利用Hugging Face Diffusers包（[https://github.com/huggingface/diffusers](https://github.com/huggingface/diffusers)）和开源包来开始使用常见的Stable
    Diffusion功能。正如我们在 [*第1章*](B21263_01.xhtml#_idTextAnchor015) 中提到的，*Stable Diffusion简介*，Hugging
    Face Diffusers是目前最广泛使用的Stable Diffusion的Python实现。在我们探索图像生成时，我们将介绍常用的术语。
- en: Assume you have all the packages and dependencies installed; if you see an error
    message saying no GPU is found or CUDA is required, refer to [*Chapter 2*](B21263_02.xhtml#_idTextAnchor037)
    to set up the environment to run Stable Diffusion.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经安装了所有包和依赖项；如果你看到错误消息说找不到GPU或需要CUDA，请参考 [*第2章*](B21263_02.xhtml#_idTextAnchor037)
    来设置运行Stable Diffusion的环境。
- en: With this chapter, I aim to familiarize you with Stable Diffusion by using the
    Diffusers package from Hugging Face. We will dig into the internals of Stable
    Diffusion in the next chapter.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章，我旨在通过使用Hugging Face的Diffusers包使你熟悉Stable Diffusion。我们将在下一章深入探讨Stable Diffusion的内部机制。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: How to log in to Hugging Face with Hugging Face tokens
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Hugging Face令牌登录Hugging Face
- en: Generating an image using Stable Diffusion
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Stable Diffusion生成图像
- en: Using a generation seed to reproduce an image
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用生成种子来重现图像
- en: Using the Stable Diffusion scheduler
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Stable Diffusion调度器
- en: Swapping or changing a Stable Diffusion model
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交换或更改Stable Diffusion模型
- en: Using a guidance scale
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用指导尺度
- en: Let’s start.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: Logging in to Hugging Face
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 登录Hugging Face
- en: 'You may use the `login()` function in the `huggingface_hub` library like this:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `huggingface_hub` 库中的 `login()` 函数，如下所示：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In doing so, you are authenticating with the Hugging Face Hub. This allows you
    to download pre-trained diffusion models that are hosted on the Hub. Without logging
    in, you may not be able to download these models using the model ID, such as `runwayml/stable-diffusion-v1-5`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，你正在通过Hugging Face Hub进行身份验证。这允许你下载托管在Hub上的预训练扩散模型。不登录，你可能无法使用模型ID（如 `runwayml/stable-diffusion-v1-5`）下载这些模型。
- en: When you run the preceding code, you are providing your Hugging Face token.
    You may wonder about the steps to *access* the token, but don’t worry. The token
    input dialog will provide links and information to *access* the token.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行前面的代码时，你正在提供你的Hugging Face令牌。你可能想知道访问令牌的步骤，但不用担心。令牌输入对话框将提供链接和信息来 *访问* 令牌。
- en: 'After you have logged in, you can download pre-trained diffusion models by
    using the `from_pretrained()` function in the Diffusers package. For example,
    the following code will download the `stable-diffusion-v1-5` model from the Hugging
    Face Hub:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，你可以使用Diffusers包中的 `from_pretrained()` 函数下载预训练的扩散模型。例如，以下代码将从Hugging Face
    Hub下载 `stable-diffusion-v1-5` 模型：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You may have noticed that I am using `to("cuda:0")` instead of `to("cuda")`
    because in the case of multiple-GPU scenarios, you can change the CUDA index to
    tell Diffusers to use a specified GPU. For instance, you can use `to("cuda:1")`
    to use the second CUDA-enabled GPU to generate Stable Diffusion images.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，我使用 `to("cuda:0")` 而不是 `to("cuda")`，因为在多GPU场景下，你可以更改CUDA索引来告诉Diffusers使用指定的GPU。例如，你可以使用
    `to("cuda:1")` 来使用第二个启用了CUDA的GPU生成Stable Diffusion图像。
- en: After downloading the model, it is time to generate an image using Stable Diffusion.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 下载模型后，是时候使用Stable Diffusion生成图像了。
- en: Generating an image
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成图像
- en: 'Now that we have the Stable Diffusion model loaded up to the GPU, let’s generate
    an image. `text2img_pipe` holds the pipeline object; all we need to provide is
    a `prompt` string, using natural language to describe the image we want to generate,
    as shown in the following code:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将Stable Diffusion模型加载到GPU上，让我们生成一个图像。`text2img_pipe` 包含了管道对象；我们只需要提供一个
    `prompt` 字符串，使用自然语言描述我们想要生成的图像，如下面的代码所示：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Feel free to change the prompt to anything else that comes to your mind when
    you are reading this, for example, `high resolution, a photograph of a cat running
    on the surface of Mars` or `4k, high quality image of a cat driving a plane`.
    It is amazing how Stable Diffusion can generate images according to a description
    in purely natural language.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读本文时，您完全可以根据自己的想法更改提示内容，例如，`高分辨率，一只猫在火星表面奔跑的照片`或`4k，一只猫驾驶飞机的高质量图像`。令人惊叹的是，Stable
    Diffusion可以根据纯自然语言的描述生成图像。
- en: 'If you run the preceding code without changing it, you may see an image like
    this showing up:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在不更改代码的情况下运行前面的代码，您可能会看到这样的图像出现：
- en: '![Figure 3.1: An image of an astronaut riding a horse](img/B21263_03_01.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图3.1：一位宇航员骑马的图像](img/B21263_03_01.jpg)'
- en: 'Figure 3.1: An image of an astronaut riding a horse'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1：一位宇航员骑马的图像
- en: I said *you may see an image like this* because there is a 99.99% chance you
    will not see the same image; instead, you will see an image with a similar look
    and feel. To make the generation consistent, we will need another parameter, called
    `generator`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我说“您可能会看到这样的图像”，因为您几乎有99.99%的几率不会看到相同的图像；相反，您会看到外观和感觉相似的图像。为了使生成过程保持一致，我们需要另一个参数，称为`generator`。
- en: Generation seed
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成种子
- en: In Stable Diffusion, a seed is a random number that is used to initialize the
    generation process. The seed is used to create a noise tensor, which is then used
    by the diffusion model to generate an image. The same seed together with the same
    prompt and settings will generally produce the same image.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在Stable Diffusion中，种子是一个用于初始化生成过程的随机数。种子用于创建一个噪声张量，然后由扩散模型用于生成图像。相同的种子、相同的提示和设置通常会产生相同的图像。
- en: 'The generation seed is needed for two reasons:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 生成种子有两个原因：
- en: '**Reproducibility**: By using the same seed, you can consistently generate
    the same image with identical settings and prompts.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可重复性**：通过使用相同的种子，您可以使用相同的设置和提示一致地生成相同的图像。'
- en: '**Exploration**: You can discover diverse image variations by altering the
    seed number. This often leads to the emergence of novel and intriguing images.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**探索**：通过改变种子数字，您可以发现各种图像变体。这通常会导致新颖且引人入胜的图像出现。'
- en: 'When a seed number is not provided, the Diffusers package automatically generates
    a random number for each image creation process. However, you have the option
    to specify your preferred seed number, as demonstrated in the following Python
    code:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当未提供种子数字时，Diffusers包会自动为每个图像创建过程生成一个随机数。然而，您可以选择指定您首选的种子数字，如下面的Python代码所示：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the preceding code, we use `torch` to create a `torch.Generator` object with
    a manual seed provided. We specifically use this generator for image generation.
    By doing this, we can reproduce the same image repeatedly.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们使用`torch`创建了一个带有手动种子的`torch.Generator`对象。我们专门使用这个生成器进行图像生成。通过这样做，我们可以反复生成相同的图像。
- en: The generation seed is one method to control Stable Diffusion image generation.
    Next, let's explore the scheduler for further customization.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 生成种子是控制Stable Diffusion图像生成的一种方法。接下来，让我们进一步探讨调度器以进行自定义。
- en: Sampling scheduler
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 采样调度器
- en: 'After discussing the generation seed, let’s now delve into another essential
    aspect of Stable Diffusion image generation: the sampling scheduler.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了生成种子之后，现在让我们深入探讨Stable Diffusion图像生成的另一个重要方面：采样调度器。
- en: The original Diffusion models have demonstrated impressive results in generating
    images. However, one drawback is the slow reverse-denoising process, which typically
    requires 1,000 steps to transform a random noise data space into a coherent image
    (specifically, latent data space, a concept we will explore further in [*Chapter
    4*](B21263_04.xhtml#_idTextAnchor081)). This lengthy process can be burdensome.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 原始的扩散模型在生成图像方面已经展示了令人印象深刻的结果。然而，一个缺点是缓慢的反向去噪过程，这通常需要1,000步将随机噪声数据空间转换为连贯的图像（具体来说，是潜在数据空间，我们将在[*第4章*](B21263_04.xhtml#_idTextAnchor081)中进一步探讨这个概念）。这个过程非常耗时。
- en: 'To shorten the image generation process, several solutions have been brought
    out by researchers. The idea is simple: instead of denoising 1,000 steps, what
    if we could take a sample and only perform the key steps on that sample? And this
    idea works. Samplers or schedulers enable the Diffusion model to generate an image
    in a mere 20 steps!'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了缩短图像生成过程，研究人员已经提出了几种解决方案。这个想法很简单：如果我们能够只对样本执行关键步骤，而不是进行1,000步去噪，那会怎么样？这个想法是可行的。采样器或调度器使扩散模型能够在仅仅20步内生成图像！
- en: In the Hugging Face Diffusers package, these helpful components are referred
    to as **schedulers**. However, you may also encounter the term **sampler** in
    other resources. You may take a look at the Diffusers *Schedulers* [2] page for
    the latest supported schedulers.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在Hugging Face Diffusers包中，这些有用的组件被称为**调度器**。然而，您在其他资源中也可能遇到**采样器**这个术语。您可以查看Diffusers
    *Schedulers* [2]页面以获取最新的支持调度器。
- en: 'By default, the Diffusers package uses `PNDMScheduler`. We can find it by running
    this line of code:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Diffusers包使用`PNDMScheduler`。我们可以通过运行以下代码找到它：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The code will return an object like this:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 代码将返回如下对象：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: At first glance, the `PNDMScheduler` object’s fields might seem complex and
    unfamiliar. However, as you delve deeper into the internals of the Stable Diffusion
    model in *Chapters 4* and *5*, these fields will become more familiar and comprehensible.
    The learning journey ahead promises to unravel the intricacies of the Stable Diffusion
    model and shed light on the purpose and significance of each field within the
    `PNDMScheduler` object.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 初看起来，`PNDMScheduler`对象的字段可能看起来复杂且不熟悉。然而，随着您深入了解第4章和第5章中Stable Diffusion模型的内部机制，这些字段将变得更加熟悉和易于理解。未来的学习之旅将揭示Stable
    Diffusion模型的复杂性，并阐明`PNDMScheduler`对象中每个字段的用途和重要性。
- en: 'Many list schedulers can generate images in as few as 20 to 50 steps. Based
    on my experience, the `Euler` scheduler is one of the top choices. Let’s apply
    the `Euler` scheduler to generate an image:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 许多列表调度器可以在20到50步内生成图像。根据我的经验，`Euler`调度器是最佳选择之一。让我们应用`Euler`调度器来生成一个图像：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can customize the number of denoising steps by using the `num_inference_steps`
    parameter. A higher step count generally leads to better image quality. Here,
    we set the scheduling steps to `20` and compared the results of the default `PNDMScheduler`
    and `EulerDiscreteScheduler`:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用`num_inference_steps`参数来自定义去噪步骤的数量。更高的步数通常会导致更好的图像质量。在这里，我们将调度步骤设置为`20`，并比较了默认的`PNDMScheduler`和`EulerDiscreteScheduler`的结果：
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following figure shows the difference between the two schedulers:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了两个调度器之间的差异：
- en: '![Figure 3.2: Left: Euler scheduler with 20 steps; right: PNDMScheduler with
    20 steps](img/B21263_03_02.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图3.2：左：20步的Euler调度器；右：20步的PNDMScheduler](img/B21263_03_02.jpg)'
- en: 'Figure 3.2: Left: Euler scheduler with 20 steps; right: PNDMScheduler with
    20 steps'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2：左：20步的Euler调度器；右：20步的PNDMScheduler
- en: In this comparison, the Euler scheduler correctly generates an image with all
    four horse legs, while the PNDM scheduler provides more detail but misses one
    horse leg. These schedulers perform remarkably well, reducing the entire image
    generation process from 1,000 steps to just 20 steps, making it feasible to run
    Stable Diffusion on home computers.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个比较中，Euler调度器正确地生成了一张包含所有四条马腿的图像，而PNDM调度器提供了更多细节但遗漏了一条马腿。这些调度器表现出色，将整个图像生成过程从1,000步减少到仅20步，使得在家庭电脑上运行Stable
    Diffusion成为可能。
- en: Note that each scheduler has advantages and disadvantages. You may need to try
    out the schedulers to find out which one fits the best.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，每个调度器都有其优缺点。您可能需要尝试不同的调度器以找到最适合您的。
- en: Next, let’s explore the process of replacing the original Stable Diffusion model
    with a community-contributed, fine-tuned alternative.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们探索用社区贡献的、微调过的替代模型替换原始Stable Diffusion模型的过程。
- en: Changing a model
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改模型
- en: 'At the time of writing this chapter, there are numerous models available, fine-tuned
    based on the V1.5 Stable Diffusion model, contributed by the thriving user community.
    If the model file is hosted on Hugging Face, you can easily switch to a different
    model by changing its identifier, as shown in the following code snippet:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本章时，有大量基于V1.5 Stable Diffusion模型微调的模型可供选择，这些模型由蓬勃发展的用户社区贡献。如果模型文件托管在Hugging
    Face，您可以通过更改其标识符轻松切换到不同的模型，如下面的代码片段所示：
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Additionally, you can also use a `ckpt/safetensors` model downloaded from civitai.com
    ([http://civitai.com](http://civitai.com)). Here, we demonstrate loading the `deliberate-v2`
    model using the following code:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还可以使用从civitai.com下载的`ckpt/safetensors`模型([http://civitai.com](http://civitai.com))。在这里，我们通过以下代码演示如何加载`deliberate-v2`模型：
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The primary difference when loading a model from a local file lies in the use
    of the `from_single_file` function instead of `from_pretrained`. A `ckpt` model
    file can be loaded up using the preceding code.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当从本地文件加载模型时，主要区别在于使用`from_single_file`函数而不是`from_pretrained`。可以使用前面的代码加载一个`ckpt`模型文件。
- en: In [*Chapter 6*](B21263_06.xhtml#_idTextAnchor117) of this book, we will focus
    exclusively on model loading, covering both Hugging Face and local storage methods.
    By experimenting with various models, you can discover improvements, unique artistic
    styles, or better compatibility for specific use cases.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的[*第6章*](B21263_06.xhtml#_idTextAnchor117)中，我们将专门关注模型加载，涵盖Hugging Face和本地存储方法。通过实验各种模型，你可以发现改进、独特的艺术风格或更好的特定用例兼容性。
- en: We have touched on the generation seed, scheduler, and model usage. Another
    parameter that plays a key role is `guidance_scale`. Let’s take a look at it next.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经提到了生成种子、调度器和模型使用。另一个扮演关键角色的参数是`guidance_scale`。让我们接下来看看它。
- en: Guidance scale
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指导比例
- en: Guidance scale or **Classifier-Free Guidance** (**CFG**) is a parameter that
    controls the adherence of the generated image to the text prompt. A higher guidance
    scale will force the image to be more aligned with the prompt, while a lower guidance
    scale will give more space for Stable Diffusion to decide what to put into the
    image.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 指导比例或**无分类器指导**（**CFG**）是一个控制生成的图像对文本提示的遵守程度的参数。较高的指导比例将迫使图像更符合提示，而较低的指导比例将给Stable
    Diffusion更多空间来决定图像中要放入的内容。
- en: 'Here is a sample of applying a different guidance scale while keeping other
    parameters the same:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个在保持其他参数不变的同时应用不同指导比例的示例：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '*Figure 3**.3* provides a side-by-side comparison:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.3*提供了并排比较：'
- en: '![Figure 3.3: Left: guidance_scale = 3; middle: guidance_scale = 7; right:
    guidance_scale = 10](img/B21263_03_03.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图3.3：左：guidance_scale = 3；中：guidance_scale = 7；右：guidance_scale = 10](img/B21263_03_03.jpg)'
- en: 'Figure 3.3: Left: guidance_scale = 3; middle: guidance_scale = 7; right: guidance_scale
    = 10'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3：左：guidance_scale = 3；中：guidance_scale = 7；右：guidance_scale = 10
- en: 'In practice, besides prompt adherence, we can notice that a high guidance scale
    setting has the following effects:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，除了遵守提示外，我们还可以注意到高指导比例设置有以下影响：
- en: Increases the color saturation
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加颜色饱和度
- en: Increases the contrast
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加对比度
- en: May lead to a blurred image if set too high
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设置得太高可能会导致图像模糊
- en: The `guidance_scale` parameter is typically set between `7` and `8.5`. A value
    of `7.5` is a good default value.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`guidance_scale`参数通常设置在`7`到`8.5`之间。`7.5`是一个很好的默认值。'
- en: Summary
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we explored the essentials of using Stable Diffusion through
    the Hugging Face Diffusers package. We accomplished the following:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们通过Hugging Face Diffusers包探讨了使用Stable Diffusion的基本要素。我们实现了以下目标：
- en: Logged in to Hugging Face to enable automatic model downloads
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录Hugging Face以启用自动模型下载
- en: Generated images deterministically using the generator
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用生成器生成图像
- en: Utilized the scheduler for efficient image creation
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用调度器进行高效的图像创建
- en: Adjusted the guidance scale for desired image qualities
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整了指导比例以适应期望的图像质量
- en: With just a few lines of code, we successfully created images, demonstrating
    the remarkable capabilities of the Diffusers package. This chapter did not cover
    every feature and option; keep in mind that the package is continually evolving,
    with new functions and enhancements regularly added.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '仅用几行代码，我们就成功地创建了图像，展示了Diffusers包的非凡能力。本章没有涵盖每个功能和选项；请记住，该包正在不断进化，新功能和增强功能定期添加。 '
- en: For those eager to unlock the full potential of the Diffusers package, I encourage
    you to explore its source code. Dive into the inner workings, uncover hidden gems,
    and build a Stable Diffusion pipeline from scratch. A rewarding journey awaits!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 对于渴望解锁Diffusers包全部潜力的人来说，我鼓励您探索其源代码。深入了解其内部工作原理，发现隐藏的宝藏，并从头开始构建Stable Diffusion管道。一段值得的旅程在等待着你！
- en: '[PRE11]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In the next chapter, we will delve into the internals of the package and learn
    how to construct a custom Stable Diffusion pipeline tailored to your unique needs
    and preferences.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入了解包的内部结构，并学习如何构建一个针对您独特需求和偏好的自定义Stable Diffusion管道。
- en: References
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '*High-Resolution Image Synthesis with Latent Diffusion* *Models*: [https://arxiv.org/abs/2112.10752](https://arxiv.org/abs/2112.10752)'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*使用潜在扩散模型进行高分辨率图像合成*：[https://arxiv.org/abs/2112.10752](https://arxiv.org/abs/2112.10752)'
- en: 'Hugging Face Diffusers schedulers: [https://huggingface.co/docs/diffusers/api/schedulers/overview](https://huggingface.co/docs/diffusers/api/schedulers/overview)'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Hugging Face Diffusers调度器：[https://huggingface.co/docs/diffusers/api/schedulers/overview](https://huggingface.co/docs/diffusers/api/schedulers/overview)
