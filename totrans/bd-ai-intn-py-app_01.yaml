- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Getting Started with Generative AI
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a plethora of options for building **generative AI** (**GenAI**) applications.
    The landscape is, quite frankly, overwhelming to navigate, and many of the tools
    that satisfy one criterion may fall short in another. GenAI applications evolve
    so quickly that within weeks of this book being published, some of the new AI
    companies might no longer exist. Therefore, this chapter focuses on long-lived,
    high-level concepts related to technologies that are used to create GenAI applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: You will learn ways from which your next web development project might benefit.
    This chapter will examine not just *what* these ways are but *how* they work,
    which will give you a broader understanding and perspective of GenAI. This should
    help you decide when to use GenAI and how, as well as make the applications you
    create generally more accurate.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you will have a good understanding of the benefits
    that individual AI/ML stack components bring to a development project, how they
    relate to each other, and why GenAI technologies are a revolution in software—both
    in terms of the data handled and desired functionalities.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter gives an introduction to GenAI and provides a quick overview of
    the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Definitions for common terminology
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A GenAI stack of choice
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python and GenAI
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The OpenAI API
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An introduction to MongoDB Vector Search
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important features of GenAI
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why use GenAI?
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ethics and risks of GenAI
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book has sample code for a basic Python application. To recreate it, it
    is recommended that you have the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: The latest version of Python
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A local development environment on your device for your application server
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A MongoDB Atlas cloud account to host your database. You can register for one
    at [https://www.mongodb.com/cloud/atlas/register](https://www.mongodb.com/cloud/atlas/register)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VS Code or an IDE of your choice
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An OpenAI API key
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defining the terminology
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the true beginner, let’s start with defining some key terms: AI, ML, and
    GenAI. You will come across these terms repeatedly in this book, so it helps to
    have a strong conceptual foundation of these terms:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '**Artificial intelligence** (**AI**) refers to the ability of machines to perform
    tasks that would normally require human intelligence. This includes tasks such
    as perception, reasoning, learning, and decision making. The journey of AI has
    evolved significantly from early speculative ideas to the sophisticated technologies
    of today. *Figure 1**.1* shows a timeline of the development of AI.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/B22495_01_01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.1: A timeline of AI'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '**Machine learning** (**ML**) is a subset of AI that involves the use of algorithms
    to automatically learn from data and improve over time. Essentially, it’s a way
    for machines to learn and adapt without being explicitly programmed. Most often
    used in fields that require advanced analysis of thousands of data points, ML
    is most useful in medical diagnostics, market analysis, and military intelligence.
    Effectively, ML identifies hidden or complex patterns in data that would be impossible
    for a human to see and then can make suggestions for the next steps or actions.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Generative AI** (**GenAI**) is the ability to create text, images, audio,
    video, and other content in response to a user prompt. It powers chatbots, virtual
    assistants, language translators, and other similar services. These systems use
    algorithms trained on vast amounts of data, such as text and images from the internet,
    to learn patterns and relationships. This enables them to generate new content
    that is similar but not identical to the underlying training data. For instance,
    **large language models** (**LLMs**) use training data to learn patterns in written
    language. GenAI can then use these models to emulate a human writing style.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The generative AI stack
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **stack** combines tools, libraries, software, and solutions to create a unified
    and integrated approach. The **GenAI stack** includes programming languages, LLM
    providers, frameworks, databases, and deployment solutions. Though the GenAI stack
    is relatively new, it already has many variations and options for engineers to
    choose from.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s discuss what you need to build a functional GenAI application. The bare
    minimum requirements are the following, as also shown in *Figure 1**.2*:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '**An operating system**: Usually, this is Unix/Linux based.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**A storage layer**: An SQL or NoSQL database. This book uses MongoDB.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**A vector database capable of storing embeddings**: This book uses MongoDB,
    which stores its embeddings within your data or content, rather than in a separate
    database.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**A web server**: Apache and Nginx are quite popular.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**A development environment**: This could be Node.js/JavaScript, .NET, Java,
    or Python. This book uses Python throughout the examples with a bit of JavaScript
    where needed.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/B22495_01_02.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.2: A basic GenAI stack'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: If you want to learn more about the AI stack, you can find detailed information
    at [www.mongodb.com/resources/basics/ai-stack](http://www.mongodb.com/resources/basics/ai-stack).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Python and GenAI
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Python** was conceived in the late 1980s by Guido van Rossum and officially
    released in 1991\. Over the decades, Python has evolved into a versatile language,
    beloved by developers for its clean syntax and robust functionality. It has a
    clean syntax that is easy to understand, making it an ideal choice for beginner
    developers.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Although it is not entirely clear why, fairly early on, the Python ecosystem
    began introducing more libraries and frameworks that were tailored to ML and data
    science. Libraries and frameworks such as TensorFlow, Keras, PyTorch, and scikit-learn
    provided powerful tools for developers in these fields. Analysts who were less
    technical were still able to get started with Python with relative ease. Due to
    its interoperability, Python seamlessly integrated with other programming languages
    and technologies, making it easier to integrate with data pipelines and web applications.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'GenAI, with its demands for high computational power and sophisticated algorithms,
    finds a perfect partner in Python. Here are some examples that readily come to
    mind:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Libraries such as **Pandas** and **NumPy** allow efficient manipulation and
    analysis of large datasets, a fundamental step in training generative models
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frameworks such as **TensorFlow** and **PyTorch** offer pre-built components
    to design and train complex neural networks
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tools such as **Matplotlib** and **Seaborn** enable detailed visualization of
    data and model outputs, aiding in understanding and refining AI models
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frameworks such as **Flask** and **FastAPI** make deploying your GenAI models
    as scalable web services straightforward
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python has a rich ecosystem that is easy to use and allows you to quickly get
    started, making it an ideal programming language for GenAI projects. Now, let’s
    talk more about the other pieces of technology you’ll be using throughout the
    rest of the book.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: OpenAI API
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first, and most important, tool of this book is the **OpenAI API**. In the
    following chapters, you’ll learn more about each component of the GenAI stack—and
    the most critical to be familiar with is OpenAI. While we’ll cover other LLM providers,
    the one used in our examples and code repository will be OpenAI.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: The OpenAI API, launched in mid-2020, provides developers with access to their
    powerful models, allowing integration of advanced NLP capabilities into applications.
    Through this API, developers gain access to some of the most advanced AI models
    in existence, such as GPT-4\. These models are trained on vast datasets and possess
    unparalleled capabilities in natural language understanding and response generation.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, OpenAI’s infrastructure is built to scale. As your project grows and
    demands more computational power, OpenAI ensures that you can scale effortlessly
    without worrying about the underlying hardware or system architecture. OpenAI’s
    models excel at NLP tasks, including text generation, summarization, translation,
    and sentiment analysis. This can be invaluable for creating content, chatbots,
    virtual assistants, and more.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Much of the data from the internet and internal conversations and documentation
    is unstructured. OpenAI, as a company, has used that data to train an LLM, and
    then offered that LLM as a service, making it possible for you to create interactive
    GenAI applications without hosting or training your own LLM. You’ll learn more
    about LLMs in [*Chapter 3*](B22495_03.xhtml#_idTextAnchor041), *Large* *Language
    Models*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: MongoDB with Vector Search
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Much has been said about how MongoDB serves the use case of unstructured data
    but that the world’s data is fundamentally relational. It can be argued that no
    data is meaningful until humans deem it so, and that the relationships and structure
    of that data are determined by humans as well. For example, several years ago,
    a researcher at a leading space exploration company made this memorable comment
    in a meeting:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: “*We scraped text content from websites and PDF documents primarily, and we
    realized it didn’t really make sense to try and cram that data into* *a table*.”
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: MongoDB thrives with the messy, unstructured content that characterizes the
    real world—`.txt` files, Markdown, PDFs, HTML, and so on. MongoDB is flexible
    enough to have the structure that engineers deem is best suited for purpose, and
    because of that flexibility, it is a great fit for GenAI use cases.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: For that reason, it is much easier to use a document database for GenAI than
    it is to use a SQL database.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Another reason to use MongoDB is for its vector search capabilities. **Vector
    search** ensures that when you store a phrase in MongoDB, it converts that data
    into an array. This is called a vector. **Vectors** are numerical representations
    of data and their context, as shown in *Figure 1**.3*. The number of these dimensions
    is referred to as an **embedding**, and the more of them you have, the better
    off you are.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22495_01_03.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.3: Example of a vector'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: After you’ve created embeddings for a piece of data, a mathematical process
    will identify which vectors are closest or nearest to each other, and you can
    then infer that the data is related. This allows you to return related words instead
    of only exact matches. For instance, if you are looking for `pets`, you could
    find `cats`, `dogs`, `parakeets`, and `hamsters`—even though those terms are not
    the exact word `pets`. Vectors are what allow you to receive results that are
    related in meaning or context or are alike, without being an exact match.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: MongoDB stores your data embeddings alongside the data itself. Storing the embeddings
    together makes the consequent queries faster. It is easiest to visualize vector
    search via an example with explanations of how it works along the way. You will
    learn more about vector search in [*Chapter 8*](B22495_08.xhtml#_idTextAnchor180),
    *Implementing Vector Search in* *AI Applications*.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Important features of generative AI
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When asked to list the most important capability of GenAI applications, ChatGPT,
    which is arguably the most popular GenAI application in existence, said the following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: That response took 1.5 seconds to generate, and most people would agree with
    it. GenAI applications can create content for you and your users with lightning
    speed. Whether it’s text, video, images, artwork, or even Java code, GenAI is
    able to easily draft foundational content that can then be edited by professionals.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: 'But there are other key features of GenAI applications that merit calling out
    as well:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '**Language translation**: With remarkable proficiency, GenAI can translate
    languages in real time, preserving context and nuance, and facilitating seamless
    communication across linguistic barriers.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Personalization**: In the realm of marketing and customer service, GenAI
    can tailor experiences and content to individual users. When given proper context,
    it can analyze preferences and behaviors to deliver personalized recommendations,
    emails, and customer interactions.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Simulation and modeling**: In scientific research and engineering, GenAI
    can simulate complex systems and phenomena. It aids in predicting molecular behaviors,
    climate patterns, and even economic trends by generating realistic models based
    on vast datasets.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data augmentation**: For ML, GenAI can produce synthetic data to augment
    training sets. This is invaluable in scenarios where real data is scarce or biased,
    allowing for the creation of diverse and balanced datasets to improve model performance.
    This is incredibly useful for testing purposes, particularly in software testing.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And perhaps most importantly, it can accept prompting in natural language (such
    as in English) to do these tasks. This makes performing tasks you previously found
    difficult incredibly easy. You may use GenAI to accomplish multiple and varied
    tasks in a day, such as reviewing a pull request, guiding you through some tasks
    for Golang, and generating illustrations for the interior artwork of a book.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Why use generative AI?
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Each of the preceding abilities is compelling and important, and when used correctly
    and in combination, revolutionary. Put simply, there is no industry where GenAI
    cannot play a role. By rapidly aggregating and summarizing a wide range of content
    and simplifying searching, GenAI improves the user experience of finding ideas
    and building knowledge. It can help gather new information, summarize it, and
    recraft it into content. It can help speed up or even automate administrative
    tasks, and exponentially increase output.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: 'But beyond all of that, the experience of using GenAI is an order of magnitude
    better than what is available today. Consider, for example, a customer service
    bot. Many of you will be familiar with this flow:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: 'The customer first encounters a long menu of options: `If you want to talk
    to sales or support, press 1\. For billing, press 2\. For administration, press
    3\. For orders, press 4.`. When the customer has a question that does not neatly
    fit into any category, they may press `4` anyway.'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Upon pressing `4`, they are then routed to a support page that does not have
    the answer they seek. They click a button that says, `No, this did not answer`
    `my question`.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: They search the knowledge base themselves, perhaps never finding the answer
    and reaching out via phone.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Imagine being able to type what you wanted and the bot responding in a natural
    way—not routing you to a page but just giving you the answer. Imagine even further
    that the user can then chat with the bot to say they want to modify the address
    on their order, and the bot is able to do that from within the chat window, having
    a multi-step dialogue with the user to confirm and record their new information.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: It is a wholly new, more pleasing experience for the customer!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: The ethics and risks of GenAI
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Despite those benefits, there are risks and concerns about the use of AI. In
    some fields, the outcry against AI is substantial and has merit. Art generated
    by AI, for example, flooded the internet’s marketplaces, displacing artists and
    illustrators who make their living off their craft. There are questions about
    whether using AI to write a book gives a person the right to call themselves an
    author. There are no clear-cut answers here; from our own experience, the authors
    of this book believe that GenAI accelerates, rather than replaces, the existing
    paradigms of work done today. But that may not always remain true. As AI improves,
    it may be more likely to replace the humans who are using it.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: The risks of GenAI are considerable, and some of them are not well understood.
    Even the ones that are well understood, such as hallucinations, are difficult
    to identify for users, and harder still to combat. You can read more about the
    challenges of GenAI in [*Chapter 11*](B22495_11.xhtml#_idTextAnchor232), *Common
    Failures of Generative AI*, along with recommendations on how to mitigate them
    in [*Chapter 12*](B22495_12.xhtml#_idTextAnchor253), *Correcting and Optimizing
    Your Generative* *AI Application*.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter laid the background for the GenAI application, from describing
    the role of each component to their strengths. You learned some key definitions
    and were introduced to the basics of the AI stack. By now, you also know why Python
    is a great choice for building GenAI applications and why you will be using the
    OpenAI API and MongoDB with Vector Search to build your GenAI application. Finally,
    you also saw some significant use cases for GenAI and learned why you should use
    GenAI in the first place, while also remaining mindful of the ethics and risks
    of using it. Since you’re reading this, I’ll assume that the case was compelling—that
    you’re still interested and ready to explore.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will get a fast-paced, concise, and actionable overview
    of the building blocks of GenAI applications in more detail and learn how to get
    started.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将获得一个快速、简洁且实用的概述，详细了解GenAI应用的基础构建块，并学习如何开始入门。
