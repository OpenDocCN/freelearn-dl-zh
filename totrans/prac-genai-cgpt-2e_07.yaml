- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: Developing the Future with ChatGPT
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与ChatGPT共同开发未来
- en: In this chapter, we will discuss how developers can leverage ChatGPT. The chapter
    focuses on the main use cases ChatGPT addresses in the domain of developers, including
    code review and optimization, documentation generation, and code generation. The
    chapter will provide examples and enable you to try the prompts on your own.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论开发者如何利用ChatGPT。本章重点关注ChatGPT在开发者领域解决的主要用例，包括代码审查和优化、文档生成和代码生成。本章将提供示例，并使您能够亲自尝试这些提示。
- en: 'After a general introduction to the reasons why developers should leverage
    ChatGPT as a daily assistant, we will focus on ChatGPT and how it can do the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在简要介绍开发者为何应该将ChatGPT作为日常助手的原因之后，我们将重点关注ChatGPT及其如何执行以下任务：
- en: Why should developers use ChatGPT?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么开发者应该使用ChatGPT？
- en: Generating, optimizing, and debugging code
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成、优化和调试代码
- en: Generating code-related documentation and debugging your code
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成与代码相关的文档并调试您的代码
- en: Explaining **machine learning** (**ML**) models to help data scientists and
    business users with model interpretability
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解释**机器学习**（**ML**）模型，以帮助数据科学家和商业用户实现模型可解释性
- en: Translating different programming languages
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 翻译不同的编程语言
- en: Working with code on canvas
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在画布上与代码协作
- en: By the end of this chapter, you will be able to leverage ChatGPT for coding
    activities and use it as an assistant to improve your coding productivity.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将能够利用ChatGPT进行编码活动，并将其用作助手以提高您的编码效率。
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You can access the complete code for this chapter in the book’s accompanying
    GitHub repository at [https://github.com/PacktPublishing/Practical-GenAI-with-ChatGPT-Second-Edition](https://github.com/PacktPublishing/Practical-GenAI-with-ChatGPT-Second-Edition).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在本书配套的GitHub仓库中找到本章的完整代码：[https://github.com/PacktPublishing/Practical-GenAI-with-ChatGPT-Second-Edition](https://github.com/PacktPublishing/Practical-GenAI-with-ChatGPT-Second-Edition)。
- en: '**Disclaimer**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**免责声明**'
- en: While this chapter explores how ChatGPT can generate and work with code, I want
    to emphasize that a deep technical background is not required to appreciate its
    potential. Rather than focusing solely on the mechanics of coding, I encourage
    you to consider the broader implications of how Generative AI can bridge the gap
    between software developers and those without coding expertise.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然本章探讨了ChatGPT如何生成和与代码协作，但我想要强调的是，欣赏其潜力并不需要深厚的专业技术背景。与其仅仅关注编码的机制，我鼓励您考虑生成式AI如何弥合软件开发者与不具备编码专业知识的人之间的差距。
- en: Why should developers use ChatGPT?
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么开发者应该使用ChatGPT？
- en: Personally, I believe that one of the most mind-blowing capabilities of ChatGPT
    is in dealing with code – of any type. We’ve already seen, in previous chapters,
    some examples of ChatGPT generating Python code. However, ChatGPT’s capabilities
    for developers go way beyond that example. It can be a daily assistant for code
    generation, explanation, and debugging.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 个人而言，我认为ChatGPT最令人惊叹的能力之一是处理代码——任何类型的代码。在前面的章节中，我们已经看到了一些ChatGPT生成Python代码的例子。然而，ChatGPT为开发者提供的功能远不止这些示例。它可以成为代码生成、解释和调试的日常助手。
- en: Whether you are a backend/frontend developer, a data scientist, or a data engineer,
    whenever you work with a programming language, ChatGPT can be a game-changer;
    we will see how in the several examples in the next sections.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是后端/前端开发者、数据科学家还是数据工程师，只要您使用编程语言，ChatGPT都可以成为游戏规则的改变者；在接下来的几个示例中，我们将看到这一点。
- en: From the next section onward, we will dive deeper into concrete examples of
    what ChatGPT can achieve when working with code. We will see end-to-end use cases
    covering different domains so that we can get familiar with using ChatGPT as a
    code assistant.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 从下一节开始，我们将更深入地探讨ChatGPT在处理代码时可以实现的具体示例。我们将看到涵盖不同领域的端到端用例，以便我们熟悉使用ChatGPT作为代码助手。
- en: Generating, optimizing, and debugging code
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成、优化和调试代码
- en: 'The primary capability you should leverage is ChatGPT code generation. How
    many times have you looked for a pre-built piece of code to start from? Or looked
    for code that could generate functions, sample datasets, SQL schemas, and so on?
    ChatGPT is able to generate code based on input in natural language:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该利用的主要功能是ChatGPT代码生成。您有多少次寻找一个现成的代码片段来开始？或者寻找可以生成函数、样本数据集、SQL模式等的代码？ChatGPT能够根据自然语言输入生成代码：
- en: '![A screenshot of a computer program  Description automatically generated](img/B31559_05_01.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![计算机程序截图，自动生成描述](img/B31559_05_01.png)'
- en: 'Figure 5.1: Example of ChatGPT generating a Python function to write into CSV
    files'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1：ChatGPT生成用于写入CSV文件的Python函数的示例
- en: As you can see, not only was ChatGPT able to generate the function but it was
    also able to explain what the function does, how to use it, and what to substitute
    in generic placeholders such as `my_folder`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，ChatGPT不仅能够生成函数，还能够解释函数的功能、如何使用它以及如何在通用占位符，如`my_folder`中进行替换。
- en: 'Now let’s raise the difficulty bar. If ChatGPT is capable of generating a Python
    function, could it generate an entire video game as well? Let’s try. What I want
    to do is provide ChatGPT with an illustration of the type of game I want to develop
    and ask it to replicate it with code. The following is an illustration of my desired
    game (can you guess the name?):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们提高难度。如果ChatGPT能够生成一个Python函数，那么它能否生成一个完整的视频游戏呢？让我们试试。我想做的是向ChatGPT提供一个我想开发的游戏的示例，并要求它用代码来复制它。以下是我想要的游戏的示例（你能猜到名字吗？）：
- en: '![How Pac-Man Revolutionized Gaming | The MIT Press Reader](img/B31559_05_02.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![《吃豆人》如何改变游戏产业 | 麻省理工学院出版社读者](img/B31559_05_02.png)'
- en: 'Figure 5.2: Illustration of the game Pac-Man'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.2：游戏《吃豆人》的插图
- en: 'Now let’s ask ChatGPT to reproduce it:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们要求ChatGPT重新生成它：
- en: '![](img/B31559_05_03.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图片B31559_05_03.png]'
- en: 'Figure 5.3: Example of ChatGPT generating HTML, CSS, and JS code'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.3：ChatGPT生成HTML、CSS和JS代码的示例
- en: 'As can be seen by ChatGPT’s disclaimer, the full game requires a lot of code;
    however, let’s see how the generated code works so far (to run the code, I used
    the online tool *codepen.io*):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如ChatGPT的免责声明所示，完整的游戏需要大量的代码；然而，让我们看看到目前为止生成的代码是如何工作的（为了运行代码，我使用了在线工具*codepen.io*）：
- en: '![A screenshot of a video game  Description automatically generated](img/B31559_05_04.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![视频游戏截图，自动生成描述](img/B31559_05_04.png)'
- en: 'Figure 5.4: Pac-Man game generated by ChatGPT'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.4：ChatGPT生成的《吃豆人》游戏
- en: As you can see, the draft product already looks similar to what I’m aiming for!
    This is an example of how Generative AI can help you overcome the *difficulties*
    of starting from scratch; in fact, starting from a blank page can sometimes be
    blocking, while having a draft product to start from can not only speed up the
    overall process but also stimulate creativity and improve the quality of the result.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，草稿产品已经非常接近我想要的目标了！这是生成式AI如何帮助你克服从头开始的*困难*的一个例子；事实上，从一张白纸开始有时可能会阻碍进程，而有一个草稿产品作为起点不仅可以加快整体过程，还可以激发创造力并提高结果的质量。
- en: ChatGPT can also be a great assistant for code optimization. In fact, it might
    save us some running time or compute power by optimizing scripts that we have
    input. This capability might be compared, in the domain of natural language, to
    the writing assistance feature we saw in *Chapter 4* in the *Improving writing
    skills and translation* section.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT也可以成为代码优化的优秀助手。实际上，它可能通过优化我们输入的脚本来为我们节省一些运行时间或计算能力。这种能力在自然语言领域可以与我们在“提高写作技巧和翻译”部分的*第4章*中看到的写作辅助功能相提并论。
- en: 'For example, imagine you want to create a list of odd numbers starting from
    another list. To achieve the result, you write the following Python script (for
    the purpose of this exercise, I will also track the execution time with the `timeit`
    and `datetime` libraries):'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设你想从一个列表中创建一个以另一个列表为起始点的奇数列表。为了达到这个结果，你将编写以下Python脚本（为了这个练习的目的，我还会使用`timeit`和`datetime`库来跟踪执行时间）：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let’s see how long it takes to run:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它们运行需要多长时间：
- en: '![A screen shot of a computer program  Description automatically generated](img/B31559_05_05.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![计算机程序截图，自动生成描述](img/B31559_05_05.png)'
- en: 'Figure 5.5: Speed of execution of a Python function'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.5：Python函数的执行速度
- en: The execution time was `00.115022` seconds. What happens if we ask ChatGPT to
    optimize this script?
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 执行时间为`00.115022`秒。如果我们要求ChatGPT优化这个脚本会发生什么呢？
- en: '![A screenshot of a computer program  Description automatically generated](img/B31559_05_06.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![计算机程序截图，自动生成描述](img/B31559_05_06.png)'
- en: 'Figure 5.6: ChatGPT generating optimized alternatives to a Python script'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.6：ChatGPT生成Python脚本的优化替代方案
- en: ChatGPT provided me with two examples to achieve the same results with lower
    execution time.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT给了我两个示例，以更低的执行时间达到相同的结果。
- en: 'Let’s test both of them in a Jupyter notebook:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在Jupyter笔记本中测试这两个示例：
- en: '![A screen shot of a computer program  Description automatically generated](img/B31559_05_07.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![计算机程序屏幕截图 自动生成的描述](img/B31559_05_07.png)'
- en: 'Figure 5.7: Speed of execution of two alternative functions generated by ChatGPT'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.7：ChatGPT生成的两个替代函数的执行速度
- en: As you can see, both methods lead to a great reduction in time of 44.30% and
    20.68%, respectively.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，两种方法分别将时间减少了44.30%和20.68%。
- en: On top of code generation and optimization, ChatGPT can also be leveraged for
    *error* explanation and debugging. Sometimes, errors are difficult to interpret;
    hence, a natural language explanation can be useful for identifying the problem
    and driving you toward the solution.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 除了代码生成和优化之外，ChatGPT还可以用于*错误*解释和调试。有时，错误很难解释；因此，自然语言解释对于识别问题和引导你走向解决方案是有用的。
- en: 'For example, while running a `.py` file from my command line, I get the following
    error:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当我从命令行运行`.py`文件时，我得到了以下错误：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let’s see whether ChatGPT is able to let me understand the nature of the error.
    To do so, I simply provide ChatGPT with the text of the error and ask it to give
    me an explanation:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看ChatGPT是否能够让我理解错误的本质。为了做到这一点，我只需向ChatGPT提供错误的文本，并要求它给我一个解释：
- en: '![](img/B31559_05_08.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31559_05_08.png)'
- en: 'Figure 5.8: ChatGPT explaining a Python error in natural language'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.8：ChatGPT用自然语言解释Python错误
- en: Finally, let’s imagine I wrote a function in Python that takes a string as input
    and returns the same string with an underscore after each letter.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们假设我写了一个Python函数，它接受一个字符串作为输入，并返回在每个字母后面带有下划线的相同字符串。
- en: 'In the preceding example, I was expecting to see the `g_p_t_` result; however,
    it only returned `t_` with this code:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在先前的例子中，我预期看到`g_p_t_`的结果；然而，它只返回了`t_`，使用以下代码：
- en: '![A screen shot of a computer program  Description automatically generated](img/B31559_05_09.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![计算机程序屏幕截图 自动生成的描述](img/B31559_05_09.png)'
- en: 'Figure 5.9: Bugged Python function'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.9：有错误的Python函数
- en: 'Let’s ask ChatGPT to debug this function for us:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们请ChatGPT为我们调试这个函数：
- en: '![Screens screenshot of a computer  Description automatically generated](img/B31559_05_10.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图 自动生成的描述](img/B31559_05_10.png)'
- en: 'Figure 5.10: Example of ChatGPT debugging a Python function'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.10：ChatGPT调试Python函数的示例
- en: 'Impressive, isn’t it? Again, ChatGPT provided the correct version of the code,
    and it helped in explaining where the bugs were and why they led to an incorrect
    result. Let’s see whether it works now:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 非常令人印象深刻，不是吗？再次，ChatGPT提供了正确的代码版本，并帮助解释了错误在哪里以及为什么会导致错误的结果。让我们看看它现在是否有效：
- en: '![A screen shot of a computer program  Description automatically generated](img/B31559_05_11.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![计算机程序屏幕截图 自动生成的描述](img/B31559_05_11.png)'
- en: 'Figure 5.11: Python function after ChatGPT debugging'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.11：ChatGPT调试后的Python函数
- en: Well, it obviously does!
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，显然是有效的！
- en: These and many other code-related functionalities could really boost your productivity,
    shortening the time to perform many tasks.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这些以及其他许多与代码相关的功能真的可以大大提高你的生产力，缩短执行许多任务的时间。
- en: However, ChatGPT goes beyond pure debugging. Thanks to the incredible language
    understanding of the GPT model, this Generative AI tool is able to generate proper
    documentation alongside the code, as well as explain exactly what a string of
    code will do, which we will see in the next section.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，ChatGPT的功能远不止纯调试。得益于GPT模型的不可思议的语言理解能力，这个生成式AI工具能够与代码一起生成适当的文档，并准确解释一段代码将做什么，我们将在下一节中看到。
- en: Generating documentation and code explainability
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成文档和代码可解释性
- en: Whenever you’re working with new applications or projects, it is always good
    practice to correlate your code with documentation. It might be in the form of
    a docstring that you can embed in your functions or classes so that others can
    invoke them directly in the development environment.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是在处理新的应用程序或项目，将你的代码与文档关联起来总是一个好的实践。这可能以docstring的形式存在，你可以将其嵌入到你的函数或类中，以便其他人可以直接在开发环境中调用它们。
- en: 'For example, let’s consider the same function developed in the previous section
    and make it a Python class:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们考虑上一节中开发的相同函数，并将其制作成一个Python类：
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can test it as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以这样测试：
- en: '![A screen shot of a computer program  Description automatically generated](img/B31559_05_12.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![计算机程序屏幕截图 自动生成的描述](img/B31559_05_12.png)'
- en: 'Figure 5.12: Testing the UnderscoreAdder class'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.12：测试UnderscoreAdder类
- en: 'Now, let’s say I want to be able to retrieve the docstring documentation using
    the `UnderscoreAdder?` convention. By doing so with Python packages, functions,
    and methods, we have full documentation of the capabilities of that specific object,
    as follows (an example with the `pandas` Python library):'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设我想能够使用`UnderscoreAdder?`约定检索文档字符串文档。通过使用Python包、函数和方法这样做，我们就有了对该特定对象功能的完整文档，如下（以`pandas`
    Python库为例）：
- en: '![](img/B31559_05_13.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31559_05_13.png)'
- en: 'Figure 5.13: Example of the pandas library documentation'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.13：pandas库文档示例
- en: So, let’s now ask ChatGPT to produce the same result for our `UnderscoreAdder`
    class.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，现在让我们让ChatGPT为我们生成`UnderscoreAdder`类的相同结果。
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_05_14.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图 自动生成的描述](img/B31559_05_14.png)'
- en: 'Figure 5.14: ChatGPT updating the code with documentation'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.14：ChatGPT更新带有文档的代码
- en: 'As a result, if we update our class as shown in the preceding code with `UnderscoreAdder?`,
    we will get the following output:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们像前面代码中那样使用`UnderscoreAdder?`更新我们的类，我们将得到以下输出：
- en: '![A screenshot of a computer program  Description automatically generated](img/B31559_05_15.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![计算机程序屏幕截图 自动生成的描述](img/B31559_05_15.png)'
- en: 'Figure 5.15: The new UnderscoreAdder class documentation'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.15：新的`UnderscoreAdder`类文档
- en: Finally, ChatGPT can also be leveraged to explain what a script, function, class,
    or other similar thing does in natural language. We have already seen many examples
    of ChatGPT enriching its code-related response with clear explanations. However,
    we can boost this capability by asking specific questions in terms of code understanding.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，ChatGPT还可以用来用自然语言解释脚本、函数、类或其他类似事物的作用。我们已经看到了许多ChatGPT通过清晰的解释丰富其与代码相关响应的例子。然而，我们可以通过就代码理解提出具体问题来增强这一能力。
- en: 'For example, let’s ask ChatGPT to explain to us what the following Python script
    does:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们让ChatGPT为我们解释以下Python脚本的功能：
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_05_16.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图 自动生成的描述](img/B31559_05_16.png)'
- en: 'Figure 5.16: Example of ChatGPT explaining a Python script'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.16：ChatGPT解释Python脚本的示例
- en: Code explainability can also be part of the preceding mentioned documentation,
    or it can be used among developers who might want to better understand complex
    code from other teams or (as sometimes happens to me) remember what they wrote
    some time ago.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 代码可解释性也可以是前面提到的文档的一部分，或者它可以在想要更好地理解其他团队复杂代码的开发者之间使用；（有时这也发生在我身上）记住他们之前写过的内容。
- en: Thanks to ChatGPT and the capabilities mentioned in this section, developers
    can easily keep track of the project life cycle in natural language so that it
    is easier for both new team members and non-technical users to understand the
    work done so far.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 多亏了ChatGPT和本节中提到的功能，开发者可以轻松地用自然语言跟踪项目生命周期，这样新团队成员和非技术用户就能更容易地理解到目前为止完成的工作。
- en: We will see in the next section how code explainability is a pivotal step for
    ML model interpretability in data science projects.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看到代码可解释性是如何在数据科学项目中成为机器学习模型可解释性的关键步骤。
- en: Understanding ML model interpretability
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解机器学习模型的可解释性
- en: '**Model interpretability** refers to the degree of ease with which a human
    can comprehend the logic behind the ML model’s predictions. Essentially, it is
    the capability to comprehend how a model arrives at its decisions and which variables
    are contributing to its forecasts.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**模型可解释性**指的是人类理解机器学习模型预测背后逻辑的难易程度。本质上，这是理解模型如何做出决策以及哪些变量对其预测有贡献的能力。'
- en: Let’s see an example of model interpretability using a deep learning **convolutional
    neural network** (**CNN**) for image classification. I built my model in Python
    using Keras. For this purpose, I will download the CIFAR-10 dataset directly from
    `keras.datasets`; it consists of 60,000 32x32 color images (so 3-channel images)
    in 10 classes (airplane, automobile, bird, cat, deer, dog, frog, horse, ship,
    and truck), with 6,000 images per class. Here, I will share just the body of the
    model; you can find all the related code in the book’s GitHub repository for data
    preparation and pre-processing at [https://github.com/PacktPublishing/Modern-Generative-AI-with-ChatGPT-and-OpenAI-Models/tree/main/Chapter%206%20-%20ChatGPT%20for%20Developers/code](https://github.com/PacktPublishing/Modern-Generative-AI-with-ChatGPT-and-OpenAI-Models/tree/main/Chapter%206%20-%20ChatGPT%20for%20Developers/code)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个使用深度学习**卷积神经网络**（**CNN**）进行图像分类的模型可解释性示例来了解一下。我使用Python和Keras构建了我的模型。为此，我将直接从`keras.datasets`下载CIFAR-10数据集；它包含10个类别（飞机、汽车、鸟、猫、鹿、狗、青蛙、马、船和卡车）中的60,000个32x32彩色图像（因此是3通道图像），每个类别有6,000个图像。在这里，我将分享模型的主体部分；你可以在书籍的GitHub仓库中找到所有相关的代码，该仓库位于[https://github.com/PacktPublishing/Modern-Generative-AI-with-ChatGPT-and-OpenAI-Models/tree/main/Chapter%206%20-%20ChatGPT%20for%20Developers/code](https://github.com/PacktPublishing/Modern-Generative-AI-with-ChatGPT-and-OpenAI-Models/tree/main/Chapter%206%20-%20ChatGPT%20for%20Developers/code)。
- en: '[PRE3]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The preceding code is made of several layers that perform different actions.
    I might be interested in getting an explanation of the structure of the model
    as well as the purpose of each layer. Let’s ask ChatGPT for some help with that
    (below you can see an extract of the response):'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码由几个执行不同操作的层组成。我可能对获取模型结构以及每层的用途的解释感兴趣。让我们请ChatGPT帮忙（以下是你可以看到的响应摘录）：
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_05_17.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图  自动生成描述](img/B31559_05_17.png)'
- en: 'Figure 5.17: Model interpretability with ChatGPT'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.17：ChatGPT的模型可解释性
- en: As you can see in the preceding figure, ChatGPT was able to give us a clear
    explanation of the structure and layers of our CNN. It also adds some comments
    and tips, such as the fact that using the max pooling layer helps reduce the dimensionality
    of the input.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，ChatGPT能够为我们清晰地解释我们CNN的结构和层。它还添加了一些注释和提示，例如使用最大池化层有助于减少输入的维度。
- en: 'I can also be supported by ChatGPT in interpreting model results in the validation
    phase. So, after splitting the data into training and test sets and training the
    model on the training set, I want to see its performance on the test set:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我还可以在验证阶段得到ChatGPT在解释模型结果方面的支持。因此，在将数据分为训练集和测试集并在训练集上训练模型后，我想看看它在测试集上的表现：
- en: '![](img/B31559_05_18.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31559_05_18.png)'
- en: 'Figure 5.18: Evaluation metrics'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.18：评估指标
- en: 'Let’s also ask ChatGPT to elaborate on our validation metrics (truncated output):'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再请ChatGPT详细说明我们的验证指标（截断输出）：
- en: '![A screenshot of a computer  Description automatically generated](img/B31559_05_19.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图  自动生成描述](img/B31559_05_19.png)'
- en: 'Figure 5.19: Example of ChatGPT explaining evaluation metrics'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.19：ChatGPT解释评估指标示例
- en: Once again, the result is really impressive, and it provides clear guidance
    on how to set up ML experiments in terms of training and test sets. It explains
    how important it is for the model to be sufficiently generalized so that it does
    not overfit and is able to predict accurate results on data that it has never
    seen before.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，结果真的很令人印象深刻，它为如何设置训练集和测试集的机器学习实验提供了清晰的指导。它解释了为什么模型足够泛化非常重要，这样它就不会过拟合，并且能够对它以前从未见过的数据进行准确预测。
- en: There are many reasons why model interpretability is important. A pivotal element
    is that it reduces the gap between business users and the code behind models.
    This is key to enabling business users to understand how a model behaves, as well
    as translating it into useful business ideas.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 模型可解释性之所以重要，有很多原因。一个关键因素是它缩小了业务用户与模型背后的代码之间的差距。这对于使业务用户能够理解模型的行为，并将其转化为有用的商业想法至关重要。
- en: Furthermore, model interpretability enables one of the key principles of responsible
    and ethical AI, which is transparency in how the model behind AI systems thinks
    and behaves. Unlocking model interpretability means detecting potential biases
    or harmful behaviors a model could have while in production and consequently preventing
    them from happening.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，模型可解释性使得负责任和道德AI的一个关键原则——模型背后AI系统的思考和行为的透明度——成为可能。解锁模型可解释性意味着检测模型在生产过程中可能存在的潜在偏差或有害行为，并防止其发生。
- en: Overall, ChatGPT can provide valuable support in the context of model interpretability,
    generating insights at the row level, as we saw in the previous example.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，ChatGPT可以在模型可解释性的背景下提供有价值的支持，在行级别生成见解，正如我们在前面的例子中所看到的。
- en: The next and last ChatGPT capability we will explore will be yet another boost
    for developers’ productivity, especially when various programming languages are
    being used within the same project.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将探讨ChatGPT的下一个也是最后一个功能，这将进一步提高开发者的生产力，尤其是在同一个项目中使用了多种编程语言的情况下。
- en: Translation among different programming languages
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不同编程语言之间的翻译
- en: In *Chapter 4*, we saw how ChatGPT has great capabilities for translating between
    different languages. What is really incredible is that natural language is not
    its only object of translation. In fact, ChatGPT is capable of translating between
    different programming languages while keeping the same output and style (namely,
    it preserves docstring documentation if present).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第4章*中，我们看到了ChatGPT在翻译不同语言之间具有强大的能力。真正令人难以置信的是，自然语言并不是它的唯一翻译对象。实际上，ChatGPT能够在不同的编程语言之间进行翻译，同时保持相同的输出和风格（即，如果存在，它将保留docstring文档）。
- en: There are so many scenarios where this could be a game-changer.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多场景，这可能会成为游戏规则的改变者。
- en: For example, you might have to learn a new programming language or statistical
    tool you’ve never seen before because you need to quickly deliver a project on
    it. With the help of ChatGPT, you can start programming in your language of preference
    and then ask it to translate to the desired language, which you will be learning
    alongside the translation process.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可能需要学习一种全新的编程语言或你从未见过的统计工具，因为你需要快速交付一个基于该语言的工程项目。借助ChatGPT，你可以开始用你偏好的语言进行编程，然后让它翻译成你想要的语言，在这个过程中你将学习到新的编程语言。
- en: Imagine that the project needs to be delivered in MATLAB (a proprietary numerical
    computing and programming software developed by MathWorks), yet you’ve always
    programmed in Python. The project consists of classifying images from the **Modified
    National Institute of Standards and Technology** (**MNIST**) dataset (the original
    dataset description and related paper can be found at [http://yann.lecun.com/exdb/mnist/](http://yann.lecun.com/exdb/mnist/)).
    The dataset contains numerous handwritten digits and is frequently utilized to
    teach various image-processing systems.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，项目需要用MATLAB（MathWorks开发的一种专有数值计算和编程软件）交付，而你一直使用Python进行编程。该项目包括从**修改后的国家标准与技术研究院**（**MNIST**）数据集（原始数据集描述和相关论文可在[http://yann.lecun.com/exdb/mnist/](http://yann.lecun.com/exdb/mnist/)找到）中分类图像。该数据集包含大量的手写数字，常被用于教授各种图像处理系统。
- en: 'To start, I wrote the following Python code to initialize a deep learning model
    for classification:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我编写了以下Python代码来初始化一个用于分类的深度学习模型：
- en: '[PRE4]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let’s now see what happens if we give the preceding code as context to ChatGPT
    and ask it to translate it into MATLAB:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看，如果我们将前面的代码作为上下文提供给ChatGPT并要求它将其翻译成MATLAB会发生什么：
- en: '![A screenshot of a computer program  Description automatically generated](img/B31559_05_20.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![计算机程序截图，描述自动生成](img/B31559_05_20.png)'
- en: 'Figure 5.20: ChatGPT translates Python code into MATLAB'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.20：ChatGPT将Python代码翻译成MATLAB
- en: Code translation could also reduce the skill gap between new technologies and
    current programming capabilities.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 代码翻译也可以缩小新技术与当前编程能力之间的技能差距。
- en: Another key implication of code translation is **application modernization**.
    Indeed, imagine you want to refresh your application stack, namely, migrating
    to the cloud. You could decide to initiate with a simple lift and shift going
    toward **infrastructure-as-a-service** (**IaaS**) instances (such as Windows or
    Linux **virtual machines** (**VMs**)). However, in the second phase, you might
    want to refactor, rearchitect, or even rebuild your applications.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 代码翻译的另一个关键含义是 **应用程序现代化**。确实，想象一下，你想刷新你的应用程序堆栈，即迁移到云端。你可以决定从简单的提升和转移到 **基础设施即服务**（**IaaS**）实例（如
    Windows 或 Linux **虚拟机**（**VMs**））开始。然而，在第二阶段，你可能想要重构、重新设计或甚至重建你的应用程序。
- en: 'The following diagram depicts the various options for application modernization:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了应用程序现代化的各种选项：
- en: '![](img/B31559_05_21.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31559_05_21.png)'
- en: 'Figure 5.21: Four ways you can migrate your applications to the public cloud'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.21：您可以将应用程序迁移到公共云的四种方式
- en: ChatGPT and OpenAI Codex models can help you with the migration. Consider mainframes,
    for example.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 和 OpenAI Codex 模型可以帮助您进行迁移。以主机为例。
- en: Mainframes are computers that are predominantly employed by large organizations
    to carry out essential tasks such as bulk data processing for activities such
    as censuses, consumer and industry statistics, enterprise resource planning, and
    large-scale transaction processing. The application programming language of the
    mainframe environment is **Common Business Oriented Language** (**COBOL**). Despite
    being invented in 1959, COBOL is still in use today and is one of the oldest programming
    languages in existence.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 主机计算机主要被大型组织用于执行诸如人口普查、消费者和行业统计、企业资源规划和大规模交易处理等活动的批量数据处理等基本任务。主机环境的应用程序编程语言是
    **通用商业面向语言**（**COBOL**）。尽管它是在 1959 年发明的，但 COBOL 仍然在使用中，并且是现存最古老的编程语言之一。
- en: As technology continues to improve, applications residing in the realm of mainframes
    have been subject to a continuous process of migration and modernization aimed
    at enhancing existing legacy mainframe infrastructure in areas such as interface,
    code, cost, performance, and maintainability.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 随着技术的不断进步，驻留在主机领域中的应用程序一直处于持续迁移和现代化的过程中，旨在增强现有遗留主机基础设施在接口、代码、成本、性能和维护性等方面的能力。
- en: Of course, this implies translating COBOL to more modern programming languages,
    such as C# or Java. The problem is that COBOL is unknown to most new-generation
    programmers; hence, there is a huge skills gap in this context.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这意味着将 COBOL 翻译成更现代的编程语言，如 C# 或 Java。问题是 COBOL 对大多数新一代程序员来说都是未知的；因此，在这个背景下存在巨大的技能差距。
- en: 'Let’s consider a COBOL script that reads an input number, adds 10 to it, and
    then prints the result:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个 COBOL 脚本，该脚本读取一个输入数字，将其加 10，然后打印结果：
- en: '[PRE5]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'I then passed the previous COBOL script to ChatGPT so that it could use it
    as context to formulate its response. Let’s now ask ChatGPT to translate that
    script into C#:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我随后将之前的 COBOL 脚本传递给 ChatGPT，以便它能够将其作为上下文来制定其响应。现在让我们让 ChatGPT 将该脚本翻译成 C#：
- en: '![](img/B31559_05_22.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31559_05_22.png)'
- en: 'Figure 5.22: Example of ChatGPT translating COBOL to C#'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.22：ChatGPT 将 COBOL 翻译成 C# 的示例
- en: Tools such as ChatGPT can help reduce the skill gap in this and similar scenarios
    by introducing a layer that knows both the past and future of programming.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 像ChatGPT这样的工具可以通过引入一个了解编程过去和未来的层来帮助减少在这个和类似场景中的技能差距。
- en: In conclusion, ChatGPT can be an effective tool for application modernization,
    providing code upgrading in addition to valuable insights and recommendations
    for enhancing legacy systems. With its advanced language-processing capabilities
    and extensive knowledge base, ChatGPT can help organizations streamline their
    modernization efforts, making the process faster, more efficient, and more effective.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，ChatGPT 可以成为应用程序现代化的有效工具，除了提供代码升级外，还能提供有价值的见解和建议，以增强遗留系统。凭借其先进的语言处理能力和广泛的知识库，ChatGPT
    可以帮助组织简化现代化努力，使过程更快、更高效、更有效。
- en: Working with code on canvas
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在画布上与代码协作
- en: In *Chapter 4*, we mentioned the new ChatGPT canvas feature, which allows users
    to dynamically modify the model’s response in a collaborative workspace. However,
    when it comes to code development, this feature really shines.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *第 4 章* 中，我们提到了新的 ChatGPT 画布功能，它允许用户在协作工作区中动态修改模型的响应。然而，当涉及到代码开发时，这个功能真正闪耀。
- en: In fact, it provides an environment for code development, execution, and debugging.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，它提供了一个代码开发、执行和调试的环境。
- en: 'Let’s see an example. We will start with a simple query to ChatGPT:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个例子。我们将从一个简单的查询开始，向ChatGPT提问：
- en: '![](img/B31559_05_23.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31559_05_23.png)'
- en: 'Figure 5.23: Generating code with ChatGPT'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.23：使用ChatGPT生成代码
- en: 'As expected, ChatGPT was able to generate the required code. Now, if we click
    on the **Edit** icon, we will be able to access the canvas workspace, where we
    can:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期，ChatGPT能够生成所需的代码。现在，如果我们点击**编辑**图标，我们将能够访问画布工作区，在那里我们可以：
- en: 'Modify the code:'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改代码：
- en: '![](img/B31559_05_24.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31559_05_24.png)'
- en: 'Figure 5.24: Modifying code with the canvas workspace'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.24：使用画布工作区修改代码
- en: 'Run the code and see the results in a console:'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行代码并在控制台中查看结果：
- en: '![](img/B31559_05_25.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31559_05_25.png)'
- en: 'Figure 5.25: Seamlessly testing and modifying code'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.25：无缝测试和修改代码
- en: This is a game-changer for software development; it means having the possibility
    to seamlessly test and execute code while interacting with ChatGPT, without the
    need to move from this app to your development environment.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 这对软件开发来说是一个变革性的进步；这意味着在与ChatGPT交互的同时，你有机会无缝测试和执行代码，而无需离开这个应用切换到你的开发环境。
- en: 'Let’s go even further. Another way you to interact with canvas is by invoking
    it as a tool:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更进一步。另一种与画布交互的方式是通过将其作为工具调用：
- en: '![](img/B31559_05_26.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31559_05_26.png)'
- en: 'Figure 5.26: Invoking canvas directly'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.26：直接调用画布
- en: By doing so, ChatGPT will automatically *enter in the mood* of working with
    code. Let’s ask the same question as before, but this time, leveraging the canvas
    tool directly.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，ChatGPT将自动**进入代码工作状态**。让我们提出与之前相同的问题，但这次直接利用画布工具。
- en: 'In this case, ChatGPT will directly open a canvas workspace for us, providing
    additional coding tools:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，ChatGPT将直接为我们打开一个画布工作区，提供额外的编码工具：
- en: '![](img/B31559_05_27.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31559_05_27.png)'
- en: 'Figure 5.27: The canvas workspace'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.27：画布工作区
- en: 'With these tools, you have four main features:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些工具，你有四个主要功能：
- en: The **Add comments** feature gives instructions to ChatGPT to modify your code
    in the same canvas you are working on
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**添加注释**功能向ChatGPT提供指令，在你在工作的画布上修改你的代码'
- en: The **Add logs** feature inserts print statements or logging mechanisms into
    your code, aiding in tracking execution flow and diagnosing issues
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**添加日志**功能将打印语句或日志机制插入到你的代码中，有助于跟踪执行流程和诊断问题'
- en: By selecting the **Fix bugs** shortcut, ChatGPT analyzes your code to identify
    and correct errors, enhancing code reliability
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过选择**修复错误**快捷键，ChatGPT会分析你的代码以识别和纠正错误，增强代码可靠性
- en: The **Port to a language** feature translates your code into another programming
    language seamlessly
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转换为其他语言**功能可以将你的代码无缝转换为另一种编程语言'
- en: By integrating these features, ChatGPT’s canvas offers a comprehensive environment
    for code development, execution, and debugging, enhancing productivity and facilitating
    a smoother coding workflow.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 通过整合这些功能，ChatGPT的画布提供了一个全面的代码开发、执行和调试环境，提高了生产力并促进了更流畅的编码工作流程。
- en: Summary
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: ChatGPT can be a valuable resource for developers looking to enhance their skills
    and streamline their workflows. We started by seeing how ChatGPT can generate,
    optimize, and debug your code, but we also covered further capabilities, such
    as generating documentation alongside your code, explaining your ML models, and
    translating between different programming languages for application modernization.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT可以成为开发者提升技能和简化工作流程的有价值资源。我们首先看到ChatGPT如何生成、优化和调试你的代码，但也涵盖了其他功能，例如在代码旁边生成文档、解释你的机器学习模型，以及在不同编程语言之间进行翻译以实现应用现代化。
- en: Whether you’re a seasoned developer or just starting out, ChatGPT offers a powerful
    tool for learning and growth, reducing the gap between code and natural language.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 不论你是经验丰富的开发者还是初学者，ChatGPT都提供了一个强大的学习和成长工具，缩小了代码与自然语言之间的差距。
- en: 'In the next chapter, we will dive deeper into another domain of application
    where ChatGPT *could* be a game-changer: marketing.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨另一个应用领域，ChatGPT**可能**会成为一个变革者：市场营销。
- en: Join our communities on Discord and Reddit
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的Discord和Reddit社区
- en: Have questions about the book or want to contribute to discussions on Generative
    AI and LLMs? Join our Discord server at [https://packt.link/I1tSU](Chapter_5.xhtml)
    and our Reddit channel at [https://packt.link/jwAmA](Chapter_5.xhtml) to connect,
    share, and collaborate with like-minded enthusiasts.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 对本书有任何疑问或想参与关于生成式AI和大型语言模型（LLMs）的讨论？加入我们的Discord服务器[https://packt.link/I1tSU](Chapter_5.xhtml)，以及我们的Reddit频道[https://packt.link/jwAmA](Chapter_5.xhtml)，与志同道合的爱好者们连接、分享和协作。
- en: '![](img/Discord.png) ![](img/QR_Code757615820155951000.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Discord.png) ![](img/QR_Code757615820155951000.png)'
