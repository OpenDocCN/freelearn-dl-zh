- en: Function Optimization Reference
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Currin Exponential function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following is a pictorial representation of Currin Exponential function:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eb650c17-f5d2-4fcf-a070-e224f0157332.png)'
  prefs: []
  type: TYPE_IMG
- en: Currin Exponential function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: This function is a simple two-dimensional example that occurs several times
    in the literature on computer experiments.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is evaluated on the xi ∈ [0, 1] square, for all i = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Modifications and alternative forms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the purpose of multi-fidelity simulation, Xiong et al. (2013) use the following
    function for the lower fidelity code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ede438d1-6022-4b9e-99ee-447677dfdf12.png)'
  prefs: []
  type: TYPE_IMG
- en: The Webster function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following is the Webster function:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5a9fd65d-57ed-44fc-85f4-241e507480ad.png)'
  prefs: []
  type: TYPE_IMG
- en: Webster function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: This function is used by Webster et al. (1996), with the assumption that the
    relationship between A, B, and Y is a black box.
  prefs: []
  type: TYPE_NORMAL
- en: Input distributions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The distributions of the input random variables are A ~ Uniform[1, 10], and
    B ~ N(μ=2, σ=1).
  prefs: []
  type: TYPE_NORMAL
- en: The Oakley & O'Hagan function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The pictorial representation of the Oakley & O''Hagan function is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a1c7a162-3c93-4bb9-ab6b-cc2ed8141e57.png)'
  prefs: []
  type: TYPE_IMG
- en: Oakley & O'Hagan function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: This function is used by Oakley & O'Hagan (2002) as a simple illustrative example
    to show the discontinuity in the calculation of the posterior mean of the distribution
    function of the output.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The domain of the random input variables is the xi ∈ [-0.01, 0.01] square, for
    all i = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: The Grammacy function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following is the Grammacy function:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8b7e3762-c371-4674-9244-b26acaea0c52.png)'
  prefs: []
  type: TYPE_IMG
- en: Grammacy function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: This function is a simple two-dimensional example used to illustrate methods
    of modeling computer-experiment output.
  prefs: []
  type: TYPE_NORMAL
- en: Input fomain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This function is evaluated on the xi ∈ [-2, 6] square, for all i = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Franke's function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Franke''s function is shown as follow:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/838e59b1-fc29-423f-ac75-32d878ed05f6.png)'
  prefs: []
  type: TYPE_IMG
- en: Franke's function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: Franke's function has two Gaussian peaks of different heights, and a smaller
    dip. It is used as a test function in interpolation problems.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is evaluated on the xi ∈ [0, 1] square, for all i = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: The Lim function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here is a pictorial representation of the Lim function:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5e46bef3-dc58-442a-9a4b-e0db38a7409f.png)'
  prefs: []
  type: TYPE_IMG
- en: Lim Function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: This function is a polynomial in two dimensions, with terms up to degree 5\.
    It is nonlinear, and it is smooth despite being complex, which is common for computer
    experiment functions (Lim et al., 2002).
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is evaluated on the square xi ∈ [0, 1], for all i = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: The Ackley function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s see the Ackley function:'
  prefs: []
  type: TYPE_NORMAL
- en: '**![](img/85b0e665-49d0-4773-ae1e-184f18b0e898.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Ackley function
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1ec3d4d0-6b4b-4302-aff3-d42379da185e.png)'
  prefs: []
  type: TYPE_IMG
- en: Ackley function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions:* *d*'
  prefs: []
  type: TYPE_NORMAL
- en: The Ackley function is widely used to test optimization algorithms. In its two-dimensional
    form, as shown in the preceding plot, it is characterized by a nearly flat outer
    region, and a large hole at the center. The function poses a risk for optimization
    algorithms, particularly hill-climbing algorithms, to be trapped in one of its
    many local minima.
  prefs: []
  type: TYPE_NORMAL
- en: Recommended variable values are a = 20, b = 0.2, and c = 2π.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-32.768, 32.768] hypercube, for
    all i = 1, …, d, although it may also be restricted to a smaller domain.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/b64390ad-b3f5-4696-9c65-3f619fe1352b.png)'
  prefs: []
  type: TYPE_IMG
- en: The Bukin function N6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Bulkin function N6 is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bc83e40c-7b12-42f5-9f49-b652f611d0ae.png)'
  prefs: []
  type: TYPE_IMG
- en: The Bulkin function N6
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The sixth Bukin function has many local minima, all of which lie in a ridge.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the x1 ∈ [-15, -5], x2 ∈ [-3, 3] rectangle.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/9ecb72e6-64d5-4c8c-a4a4-fcbdea8e4eb4.png)'
  prefs: []
  type: TYPE_IMG
- en: The Cross-In-Tray function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Cross-In-Tray function looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/443d9331-f505-451f-a20d-2074a903d966.png)'
  prefs: []
  type: TYPE_IMG
- en: Cross-In-Tray Function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The Cross-in-Tray function has multiple global minima. It is shown here with
    a smaller domain in the second plot, so that its characteristic *cross* will be
    visible.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-10, 10] square, for all i =
    1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minima
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/0f12f659-36a4-437f-8e69-9b3e8a725f24.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/ca659382-61d2-41f5-af3b-5f79130b9250.png)'
  prefs: []
  type: TYPE_IMG
- en: The Drop-Wave function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Drop-Wave function is shown as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dd2a9f7a-aa94-443f-8ed4-790a8a16bcab.png)'
  prefs: []
  type: TYPE_IMG
- en: Drop-wave Function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The Drop-Wave function is multimodal and highly complex. The preceding plot
    on the right shows the function on a smaller input domain, to illustrate its characteristic
    features.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-5.12, 5.12] square, for all
    i = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/6a7b822c-0e41-46fd-bc78-1798085ecdc5.png)'
  prefs: []
  type: TYPE_IMG
- en: The Eggholder function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Eggholder function pictorially represented as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2194ca03-0b81-467d-9b97-3d2ed7605ddd.png)'
  prefs: []
  type: TYPE_IMG
- en: The Eggholder function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The Eggholder function is a difficult function to optimize, because of the large
    number of local minima.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-512, 512] square, for all i
    = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/f0957ad0-225d-4a9b-8143-cb8dd1ada075.png)'
  prefs: []
  type: TYPE_IMG
- en: The Holder Table function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Holder Table function looks just like its name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f8ccb559-27fe-4144-aedd-c9bbbbc483f3.png)'
  prefs: []
  type: TYPE_IMG
- en: Holder Table function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The Holder Table function has many local minima, with four global minima.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-10, 10] square, for all i =
    1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/23f5d7e9-1ccc-497a-a29e-7a0581588191.png)'
  prefs: []
  type: TYPE_IMG
- en: The Levy function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Levy function is as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/550d4c79-3a2b-4f34-9ac7-e72bcfd1be8c.png)'
  prefs: []
  type: TYPE_IMG
- en: The Levy function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-10, 10] hypercube, for all i
    = 1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/2e8a9cc5-3253-4d4c-ad74-6d56e1ab1f9e.png)'
  prefs: []
  type: TYPE_IMG
- en: The Levy function N13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Levy function N13 is as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/56714302-8371-4e2d-bcd1-19ceefa5efcf.png)'
  prefs: []
  type: TYPE_IMG
- en: The Levy function N13
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-10, 10] square, for all i =
    1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/0a532371-09b7-4ddd-8e41-6cdf48e0e01a.png)'
  prefs: []
  type: TYPE_IMG
- en: The Rastrigin function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Rastrigin function is depicted as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/760f73f9-aa7c-4b76-a3b3-6cd678b09f60.png)'
  prefs: []
  type: TYPE_IMG
- en: Rastrigin Function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: The Rastrigin function has several local minima. It is highly multimodal, but
    locations of the minima are regularly distributed. It is shown in its two-dimensional
    form in the preceding plot.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-5.12, 5.12] hypercube, for all
    i = 1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/1fd24b5b-fb4e-4583-8033-0da620609b61.png)'
  prefs: []
  type: TYPE_IMG
- en: The Schaffer function N.2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here, the Schaffer function N.2 is depicted:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/274410d5-809d-4df7-bc17-eec5567f146d.png)'
  prefs: []
  type: TYPE_IMG
- en: The Schaffer function N.2
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The second Schaffer function. It is shown on a smaller input domain in the plot
    on the right to show detail.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-100, 100] square, for all i
    = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/d43de760-4dbe-4edd-ab66-634c7995d207.png)'
  prefs: []
  type: TYPE_IMG
- en: The Schaffer function N.4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Schaffer function N.4 is as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b96050a5-87eb-4816-9505-c91b830733c5.png)'
  prefs: []
  type: TYPE_IMG
- en: The Schaffer function N.4
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The fourth Schaffer function. It is shown on a smaller input domain in the plot
    on the right to show detail.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-100, 100] square, for all i
    = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: The Shubert function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Shubert function is pictured here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3fce82c7-40b0-433f-bdb1-b5fc06270893.png)'
  prefs: []
  type: TYPE_IMG
- en: Shubert function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The Shubert function has several local minima and many global minima. The plot
    on the right shows the function on a smaller input domain, to allow for easier
    viewing.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-10, 10] square, for all i =
    1, 2, although this may be restricted to the xi ∈ [-5.12, 5.12] square, for all
    i = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/9cba9ebb-82cc-4833-8b99-0ba3286ff334.png)'
  prefs: []
  type: TYPE_IMG
- en: The Rotated Hyper-Ellipsoid function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following is the Rotated Hyper-Ellipsoid function
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eaee2ea5-b641-4113-92d6-07e59ce5e8cb.png)'
  prefs: []
  type: TYPE_IMG
- en: Rotated Hyper-Ellipsoid Function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: The Rotated Hyper-Ellipsoid function is continuous, convex, and unimodal. It
    is an extension of the Axis Parallel Hyper-Ellipsoid function, also referred to
    as the Sum Squares function. The plot shows its two-dimensional form.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-65.536, 65.536] hypercube, for
    all i = 1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/c0334226-589c-4f1a-8f24-2d99fc06ceb2.png)'
  prefs: []
  type: TYPE_IMG
- en: The Sum Squares function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Sum Squares function is as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fd91878f-01c5-4bc7-9286-8e76837b395f.png)'
  prefs: []
  type: TYPE_IMG
- en: Sum Squares function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: The Sum Squares function, also referred to as the Axis Parallel Hyper-Ellipsoid
    function, has no local minimum except the global one. It is continuous, convex,
    and unimodal. It is shown here in its two-dimensional form.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-10, 10] hypercube, for all i
    = 1, …, d, although this may be restricted to the xi ∈ [-5.12, 5.12] hypercube,
    for all i = 1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/c3f98993-b806-42bc-b4e7-7d3b2756ccb2.png)'
  prefs: []
  type: TYPE_IMG
- en: The Booth function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Booth function is depicted as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5a88eadf-3ad9-4bc5-819e-4135ddbc54ee.png)'
  prefs: []
  type: TYPE_IMG
- en: The Booth function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-10, 10] square, for all i =
    1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/7af097d5-324b-4920-997d-b1bf0937fc7e.png)'
  prefs: []
  type: TYPE_IMG
- en: The Mccormick function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Mccormick function is show as follow:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ce93e771-0452-4620-8d6d-5f00ec08ce06.png)'
  prefs: []
  type: TYPE_IMG
- en: Mccormick function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the x1 ∈ [-1.5, 4], x2 ∈ [-3, 4] rectangle.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/f6907aa1-8f78-4125-b86c-4b4ef6c73bb7.png)'
  prefs: []
  type: TYPE_IMG
- en: The Power Sum function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Depicted here is the Power Sum function:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/41bc9370-c938-4de9-bc8f-b117b3be55d7.png)'
  prefs: []
  type: TYPE_IMG
- en: The Power Sum function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: The Power Sum function. It is shown here in its two-dimensional form. The recommended
    value of the b-vector, for d = 4, is: **b** = (8, 18, 44, 114).
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [0, d] hypercube, for all i =
    1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: The Three-Hump Camel function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The pictorial representation of the Three-Hump Camel function is as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0c633de4-c0b8-4414-be13-24a11cdc57cb.png)'
  prefs: []
  type: TYPE_IMG
- en: The Three Hump Camel function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The plot on the left shows the three-hump Camel function on its recommended
    input domain, and the plot on the right shows only a portion of this domain, to
    allow for easier viewing of the function's key characteristics. The function has
    three local minima.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the square xi ∈ [-5, 5], for all i = 1,
    2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/34151207-2477-4d40-aab7-e72f529c48b1.png)'
  prefs: []
  type: TYPE_IMG
- en: The Easom function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Following is the Easom function:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e49d087c-7c27-47a9-b8d3-5c05df907b4e.png)'
  prefs: []
  type: TYPE_IMG
- en: The Easom function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The Easom function has several local minima. It is unimodal, and the global
    minimum has a small area relative to the search space.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-100, 100] square, for all i
    = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/ebba8e46-aeec-4a4b-af07-ad9e838cdcbe.png)'
  prefs: []
  type: TYPE_IMG
- en: The Michalewicz function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Michalewicz function is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a6777cf4-9413-49d3-a7b6-83bfed415126.png)'
  prefs: []
  type: TYPE_IMG
- en: Michalewicz function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: The Michalewicz function has d! local minima, and it is multimodal. The m parameter
    defines the steepness of the valleys and ridges; a larger m leads to a more difficult
    search. The recommended value of m is m = 10\. The function's two-dimensional
    form is shown in the preceding plot.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [0, π] hypercube, for all i =
    1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: Global minima
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/c5790511-5330-46ba-85a6-3f6748e42396.png)'
  prefs: []
  type: TYPE_IMG
- en: The Beale function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Beale function is shown as follow:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e053b990-9dd6-4c25-afbe-e49ceb3f1d15.png)'
  prefs: []
  type: TYPE_IMG
- en: Beale function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The Beale function is multimodal, with sharp peaks at the corners of the input
    domain.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-4.5, 4.5] square, for all i
    = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/22e798d5-68ea-4dc7-b815-5a470083daf5.png)'
  prefs: []
  type: TYPE_IMG
- en: The Goldstein-Price function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Goldstein-Price function is shown as follow:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8bc07d85-47cf-4fd6-89bb-5491b89ee3ba.png)'
  prefs: []
  type: TYPE_IMG
- en: Goldstein-Price function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The Goldstein-Price function has several local minima.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-2, 2] square, for all i = 1,
    2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/9ab286c6-ceed-4b16-928a-440273ca692c.png)'
  prefs: []
  type: TYPE_IMG
- en: The Perm function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Perm function is depicted as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f804fd04-80e6-4bbd-9bb3-d2b9d5a05821.png)'
  prefs: []
  type: TYPE_IMG
- en: The Perm function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: The Perm d, β function.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-d, d] hypercube, for all i =
    1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/7331a0c9-0e6e-4905-bc4c-9b6f20358b65.png)'
  prefs: []
  type: TYPE_IMG
- en: The Griewank function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Griewank function is shown as follow:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9d6d895d-f974-4ab5-a23a-d0f5c5081085.png)'
  prefs: []
  type: TYPE_IMG
- en: Griewank function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: The Griewank function has many widespread local minima, which are regularly
    distributed. The complexity is shown in the zoomed-in plots.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-600, 600] hypercube, for all
    i = 1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/3d1fa6d7-002a-4771-a1bd-bd30b0d995a0.png)'
  prefs: []
  type: TYPE_IMG
- en: The Bohachevsky function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Bohachevsky function is depicted here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/de385c23-8083-4cc9-85f2-7464e2ec3949.png)'
  prefs: []
  type: TYPE_IMG
- en: Bohachevsky function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: 2*'
  prefs: []
  type: TYPE_NORMAL
- en: The Bohachevsky functions all have the same similar bowl shape. The one shown
    in the preceding image is the first function.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The functions are usually evaluated on the xi ∈ [-100, 100] square, for all
    i = 1, 2.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/27cb9f73-47cf-4d13-a5a1-699d07f5650c.png)'
  prefs: []
  type: TYPE_IMG
- en: The Sphere function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The pictorial representation of pictorial function is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d0546d3d-830b-4817-92a3-4df6b07327d1.png)'
  prefs: []
  type: TYPE_IMG
- en: The sphere function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: The sphere function has d local minima except for the global one. It is continuous,
    convex, and unimodal. The plot shows its two-dimensional form.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-5.12, 5.12] hypercube, for all
    i = 1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/c933c9b5-650a-4bac-ade9-6e313e8b9116.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/e99d7a53-16f4-43c4-8581-cad18d825ce8.png)'
  prefs: []
  type: TYPE_IMG
- en: The Rosenbrock function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Rosenbrock function is shown as follow:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a34bb279-f29a-4e55-a301-77b4973cff4b.png)'
  prefs: []
  type: TYPE_IMG
- en: Rosenbrock function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: The Rosenbrock function, also referred to as the Valley or Banana function,
    is a popular test problem for gradient-based optimization algorithms. It is shown
    in the preceding plot in its two-dimensional form.
  prefs: []
  type: TYPE_NORMAL
- en: The function is unimodal, and the global minimum lies in a narrow, parabolic
    valley. However, even though this valley is easy to find, convergence to the minimum
    is difficult (Picheny et al., 2012).
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-5, 10] hypercube, for all i
    = 1, …, d, although it may be restricted to the xi ∈ [-2.048, 2.048] hypercube,
    for all i = 1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/d2eea5cd-857b-48c2-840f-4f1958698f5e.png)'
  prefs: []
  type: TYPE_IMG
- en: The Styblinski-Tang function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Styblinski-Tang function is depicted as follow:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d967d346-dfae-4a50-8dc6-aed6e1339508.png)'
  prefs: []
  type: TYPE_IMG
- en: Styblinski-Tang function
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Dimensions: d*'
  prefs: []
  type: TYPE_NORMAL
- en: The Styblinski-Tang function is shown here in its two-dimensional form.
  prefs: []
  type: TYPE_NORMAL
- en: Input domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The function is usually evaluated on the xi ∈ [-5, 5] hypercube, for all i =
    1, …, d.
  prefs: []
  type: TYPE_NORMAL
- en: Global minimum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/3f3b3ce6-e81c-4a03-94de-760b0ccb72cd.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have shown you individual optimization functions, as well
    as their visual representations, global and local minima, and mathematical variants.
  prefs: []
  type: TYPE_NORMAL
- en: Keep reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] Surjanovic, S. & Bingham, D. (2013). Virtual Library of Simulation Experiments:
    Test Functions and Datasets. Retrieved June 26, 2018, from [http://www.sfu.ca/~ssurjano](http://www.sfu.ca/~ssurjano). Reprinted
    with permission'
  prefs: []
  type: TYPE_NORMAL
- en: Adorio, E. P., & Diliman, U. P. MVF - Multivariate Test Functions Library in
    C for Unconstrained Global Optimization (2005). Retrieved June 2013, from [http://www.geocities.ws/eadorio/mvf.pdf](http://www.geocities.ws/eadorio/mvf.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Molga, M., & Smutnicki, C. Test functions for optimization needs (2005). Retrieved
    June 2013, from [http://www.zsd.ict.pwr.wroc.pl/files/docs/functions.pdf](http://www.zsd.ict.pwr.wroc.pl/files/docs/functions.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: 'Back, T. (1996). *Evolutionary algorithms in theory and practice: evolution
    strategies, evolutionary programming, genetic algorithms*. Oxford University Press
    on Demand.'
  prefs: []
  type: TYPE_NORMAL
