- en: '11'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Understanding Code References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will look at the following key topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What are code references?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabling, disabling, and opting out of code references
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Code reference example
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This chapter will be a short one, but the topic deserves its own chapter so
    that it’s not skipped over. So, let’s get straight into it.
  prefs: []
  type: TYPE_NORMAL
- en: What are code references?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Development introduces innovative solutions; however, it also brings the responsibility
    of adhering to licensing requirements and ensuring proper attribution. Failing
    to comply with open source licenses can lead to legal and ethical issues, potentially
    compromising the integrity of the entire project. Therefore, it is crucial for
    developers to accurately identify and manage any open source code used in their
    projects.
  prefs: []
  type: TYPE_NORMAL
- en: Open source software license
  prefs: []
  type: TYPE_NORMAL
- en: The topic of open source licensing is quite broad, with open source software
    being distributed under various licenses, each having different requirements and
    permissions. In this chapter, we will not go into the details of the types of
    open source licenses and their legalities. We encourage all users of open source
    software to conduct their due diligence in understanding and complying with the
    applicable licenses.
  prefs: []
  type: TYPE_NORMAL
- en: During its learning process, Amazon Q Developer sometimes uses open source projects
    for training purposes. Occasionally, its suggestions might closely resemble specific
    pieces of the training data. Amazon Q flags code suggestions that may resemble
    publicly available code. This enables developers to review the open source project
    repository URL and its license, ensuring responsible integration of open source
    code by properly adding the necessary license attribution.
  prefs: []
  type: TYPE_NORMAL
- en: Using the reference log, you can view code recommendations that are similar
    to the training data. Additionally, you can update and edit the code recommendations
    provided by Amazon Q.
  prefs: []
  type: TYPE_NORMAL
- en: Before we understand code references with an example, let’s quickly look at
    how to enable or disable code references and, if needed, completely opt out of
    them.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling, disabling, and opting out of code references
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Turning code references on and off is straightforward. Different IDEs or tools
    that enable the use of Amazon Q Developer have an enable/disable flag in the Amazon
    Q settings. For example, if you use VS Code, you can click the **Open Settings**
    page from the Amazon Q preferences option at the bottom of the screen.
  prefs: []
  type: TYPE_NORMAL
- en: The following screenshot highlights this in the VS Code IDE.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.1 – Amazon Q Developer – Settings](img/B21378_11_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.1 – Amazon Q Developer – Settings
  prefs: []
  type: TYPE_NORMAL
- en: Once you open the **Settings** page, you can find the checkbox that allows you
    to enable and disable code suggestions with the code references option, as seen
    in the following screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.2 – Amazon Q Developer – enable/disable code references](img/B21378_11_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.2 – Amazon Q Developer – enable/disable code references
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, the option to enable/disable code references is available in other
    IDEs and AWS tools where Amazon Q can be integrated. For example, the following
    screenshot shows the **Code with references** toggle switch available in an AWS
    Glue Studio notebook.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.3 – Amazon Q Developer – enable/disable code references in an AWS
    Glue Studio notebook](img/B21378_11_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.3 – Amazon Q Developer – enable/disable code references in an AWS
    Glue Studio notebook
  prefs: []
  type: TYPE_NORMAL
- en: CodeWhisperer, shown in the screenshot, is the old name before it was rebranded
    as Amazon Q Developer. If you want to understand how to enable and disable it
    for other IDEs or tools, such as the ones we discussed back in [*Chapter 2*](B21378_02.xhtml#_idTextAnchor022),
    follow the link provided in the *References* section at the end of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, administrators of organizations may want all developers to opt out
    of code references. This can be done from the Amazon Q console settings page,
    where only the administrator has the privilege to opt out of this setting at the
    enterprise level.
  prefs: []
  type: TYPE_NORMAL
- en: The following screenshot highlights the opt-out setting in the Amazon Q console
    settings page. To opt in again for all developers, the flag just needs to be set
    to **True**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.4 – Amazon Q Developer – opt out from code references for all](img/B21378_11_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.4 – Amazon Q Developer – opt out from code references for all
  prefs: []
  type: TYPE_NORMAL
- en: Now let’s see code references in action with an example in the VS Code IDE.
  prefs: []
  type: TYPE_NORMAL
- en: Code reference example
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Consider that you are building a project that utilizes Amazon DynamoDB as a
    NoSQL database. Throughout the project, you need to create a DynamoDB table in
    Python. So, you open an IDE that supports Amazon Q Developer; in our case, we
    are using VS Code.
  prefs: []
  type: TYPE_NORMAL
- en: In the IDE, we input a prompt to create a function, allowing Amazon Q to auto-generate
    the code for us to create a DynamoDB table. As soon as we begin typing the function,
    the auto-suggestion from Amazon Q Developer not only provides us with the code
    suggestion but also gives us the code reference, indicating at the top that this
    code sample was from MIT-licensed training data.
  prefs: []
  type: TYPE_NORMAL
- en: In the following screenshot, we have highlighted this code reference provided
    by Amazon Q.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.5 – Amazon Q Developer – code references](img/B21378_11_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.5 – Amazon Q Developer – code references
  prefs: []
  type: TYPE_NORMAL
- en: Now, keep in mind that code references don’t show up often. They only appear
    when a particular code suggestion provided by Amazon Q comes from the training
    data it used during its learning period. So, it’s not easy to replicate it every
    time, as different instances of recommendations may not always be picked up based
    on what was used in the training.
  prefs: []
  type: TYPE_NORMAL
- en: To facilitate understanding of all code references used throughout the project,
    the code reference log will keep a tally so that you can analyze and make informed
    actions based on its appropriate usage. The **CODE REFERENCE LOG** panel in the
    IDE will display all the code references.
  prefs: []
  type: TYPE_NORMAL
- en: The following screenshot highlights this in the VS Code IDE.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.6 – Amazon Q Developer – code reference log in the VS Code IDE](img/B21378_11_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.6 – Amazon Q Developer – code reference log in the VS Code IDE
  prefs: []
  type: TYPE_NORMAL
- en: Other IDEs and AWS tools also have a similar mechanism to track code references.
    A complete list of how to view code references provided by Amazon Q Developer
    in other tools can be found in the link in the *References* section.
  prefs: []
  type: TYPE_NORMAL
- en: This brings an end to this short but important chapter on code references.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered what code references are and why they are important.
    We then looked at how you can enable and disable code references from different
    IDEs and tools that support Amazon Q Developer. Administrators of the AWS account
    can also opt out of code references, so organizations can control whether they
    want developers to view and apply code references in their code.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, with the help of an example, we showed how code references appear in
    the IDE as Amazon Q Developer makes a code suggestion that happened to have been
    used during its training. All code references are also logged in the code reference
    log for ease of analysis.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will walk you through a few more very important features
    of Amazon Q Developer that significantly save time and boost the productivity
    of developers.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Amazon Q Developer code references: [https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/code-reference.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/code-reference.html)'
  prefs: []
  type: TYPE_NORMAL
