["```py\nCreate an itinerary of three must-see attractions in {{$city}}.\n```", "```py\n{\n    \"schema\": 1,\n    \"type\": \"completion\",\n    \"description\": \"Creates a list of three must-see attractions for someone traveling to a city\",\n    \"default_services\": [\n        \"gpt35\"\n    ],\n    \"execution_settings\": {\n        \"default\": {\n            \"temperature\": 0.8,\n            \"number_of_responses\": 1,\n            \"top_p\": 1,\n            \"max_tokens\": 4000,\n            \"presence_penalty\": 0.0,\n            \"frequency_penalty\": 0.0\n        }\n    },\n    \"input_variables\": [\n        {\n            \"name\": \"city\",\n            \"description\": \"The city the person wants to travel to\",\n            \"required\": true\n        }\n    ]\n}\n```", "```py\nimport asyncio\nfrom semantic_kernel.connectors.ai.open_ai import OpenAIChatCompletion\nfrom semantic_kernel.utils.settings import openai_settings_from_dot_env\nimport semantic_kernel as sk\nfrom semantic_kernel.functions.kernel_arguments import KernelArguments\nasync def main():\n    kernel = sk.Kernel()\n    api_key, org_id = openai_settings_from_dot_env()\n    gpt35 = OpenAIChatCompletion(\"gpt-3.5-turbo\", api_key, org_id, \"gpt35\")\n    kernel.add_service(gpt35)\n    pe_plugin = kernel.add_plugin(None, parent_directory=\"../../plugins\", plugin_name=\"prompt_engineering\")\n    response = await kernel.invoke(pe_plugin[\"attractions_single_variable\"], KernelArguments(city=\"New York City\"))\n    print(response)\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```", "```py\nusing Microsoft.SemanticKernel;\nvar (apiKey, orgId) = Settings.LoadFromFile();\nKernel kernel = Kernel.CreateBuilder()\n                        .AddOpenAIChatCompletion(\"gpt-3.5-turbo\", apiKey, orgId, serviceId: \"gpt35\")\n                        .Build();\nvar pluginsDirectory = Path.Combine(System.IO.Directory.GetCurrentDirectory(),\n        \"..\", \"..\", \"..\", \"plugins\", \"prompt_engineering\");\nvar promptPlugin = kernel.ImportPluginFromPromptDirectory(pluginsDirectory, \"prompt_engineering\");\nvar result = await kernel.InvokeAsync(promptPlugin[\"attractions_single_variable\"], new KernelArguments() {[\"city\"] = \"New York City\"});\nConsole.WriteLine(result);\n```", "```py\nItinerary: Must-See Attractions in New York City\nDay 1:\n1\\. Statue of Liberty and Ellis Island: Start your visit to New York City by taking a ferry to the Statue of Liberty and Ellis Island. Explore the grounds of Lady Liberty, marvel at this iconic symbol of freedom and take in stunning views of the city skyline from the observation deck. Then, head to Ellis Island to learn about the millions of immigrants who passed through its gates and contributed to the cultural fabric of America.\n2\\. Times Square: In the afternoon, immerse yourself in the vibrant energy of Times Square. This bustling, neon-lit intersection is known for its towering billboards, dazzling Broadway theaters, and bustling crowds. Take a stroll along the pedestrian-friendly plazas, snap photos in front of iconic landmarks like the TKTS booth, and soak up the excitement of this iconic New York City landmark.\nDay 2:\n3\\. The Metropolitan Museum of Art (The Met): Spend the morning exploring one of the world's largest and most famous art museums, The Met. This cultural treasure houses an extensive collection spanning 5,000 years of human history, encompassing art from various regions and civilizations. Admire masterpieces from ancient Egypt, classical antiquity, European Renaissance artists, and contemporary art. Don't miss the rooftop garden for panoramic views of Central Park and the Manhattan skyline.\n4\\. Central Park: After the museum, take a leisurely stroll through Central Park, an urban oasis in the heart of the city. This sprawling green space offers a refreshing break from the bustling streets. Enjoy a picnic near the Bethesda Terrace and Fountain, rent a rowboat on the lake, visit the Central Park Zoo, or simply relax and people-watch in this iconic park.\nDay 3:\n5\\. The High Line: Start your day with a visit to the High Line, a unique elevated park built on a historic freight rail line. This linear park stretches for 1.45 miles and offers stunning views of the city, beautifully landscaped gardens, public art installations, and a variety of seating areas. Take a leisurely walk along the promenade, enjoy the greenery, and appreciate the innovative urban design.\n6\\. The 9/11 Memorial & Museum: In the afternoon, visit the 9/11 Memorial & Museum, a deeply moving tribute to the victims of the September 11, 2001, terrorist attacks. The memorial features two reflecting pools set in the footprints of the Twin Towers, surrounded by bronze parapets inscribed with the names of those who lost their lives. Inside the museum, you'll find artifacts, multimedia displays, and personal accounts that document the events and aftermath of 9/11.\nNote: This itinerary includes popular attractions in New York City, but it's always worth checking for any COVID-19-related restrictions or closures before planning your visit.\n```", "```py\nI am traveling to {{$city}} and staying only 24 hours.\nI am afraid of heights.\nI will be downtown.\nI like movies and TV shows a lot.\nI am traveling by myself.\nI will get around using public transportation or Uber.\nI will be there on a Saturday.\nCreate an itinerary of three attractions for me to visit.\nThe attractions should be listed in the following format:\n- Attraction name: [name]\n- What is the best thing to see there: [one sentence description]\nYour whole answer should be less than 500 words.\n```", "```py\nItinerary for a 24-hour trip to New York City:\nAttraction 1: Times Square\n- What is the best thing to see there: The vibrant neon lights, billboards, and bustling atmosphere of one of the world's most famous intersections.\nStart your day by visiting Times Square, the iconic heart of New York City. Immerse yourself in the vibrant energy and larger-than-life atmosphere of this bustling area. Marvel at the enormous billboards and screens displaying advertisements for Broadway shows, movies, and various brands. While you're there, make sure to take a stroll along the pedestrian plazas, people-watch, and soak in the bustling activity. Don't forget to snap some photos to capture the essence of this iconic location.\nAttraction 2: Central Park\n- What is the best thing to see there: Explore the beautiful green landscape, visit popular landmarks like Bethesda Terrace and Strawberry Fields, and enjoy a peaceful escape from the city.\nEscape the concrete jungle and head to Central Park, an oasis of tranquility and natural beauty right in the heart of Manhattan. Take a leisurely walk through the park's lush greenery, visit famous spots such as Bethesda Terrace and Bethesda Fountain, and enjoy the peacefulness that surrounds you. If you're a fan of movies or TV shows, keep an eye out for locations you may recognize from various film shoots. Grab a coffee or snack from one of the park's vendors and find a cozy spot to relax and people-watch, or rent a bike and explore the park's vast expanse at your own pace.\nAttraction 3: Museum of the Moving Image\n- What is the best thing to see there: Delve into the world of movies and TV shows through interactive exhibits, iconic props, and behind-the-scenes insights.\nAs a movie and TV show enthusiast, a visit to the Museum of the Moving Image in Queens is a must. This unique museum offers a fascinating exploration of the history, art, and technology behind the moving image. Get a glimpse of iconic props, costumes, and memorabilia from beloved films and TV shows. Engage in interactive exhibits that allow you to create your own animations or dub your voice into famous movie scenes. Learn about the evolution of filmmaking techniques and gain behind-the-scenes insights into the process of creating the entertainment you love. With its fascinating exhibits and hands-on experiences, the Museum of the Moving Image is a perfect destination for any movie and TV aficionado.\nRemember to plan your itinerary in a way that allows for travel time between attractions, especially if you're relying on public transportation or Uber. Be sure to check opening hours and any reservation requirements for the attractions you wish to visit, as they may vary. Enjoy your 24-hour adventure in the vibrant city of New York!\n```", "```py\nAttraction 1: Warner Bros. Studio Tour London - The Making of Harry Potter\n- What is the best thing to see there: Immerse yourself in the magical world of Harry Potter by exploring the actual sets, costumes, and props used in the film series.\nStart your day by visiting the Warner Bros. Studio Tour London - The Making of Harry Potter. As a fan of movies and TV shows, this attraction will be a dream come true for you. Located just outside of London, this studio tour offers a unique behind-the-scenes experience of the Harry Potter film series.\nAttraction 2: The British Museum\n- What is the best thing to see there: Discover the vast collection of art and artifacts from around the world, including the Rosetta Stone and the Egyptian mummies.\nNext, head to The British Museum, located in the heart of downtown London. This world-renowned museum houses a vast collection of art and historical artifacts, spanning over two million years of human history. As a lover of movies and TV shows, you'll appreciate the opportunity to see real-life artifacts and treasures from various civilizations.\nAttraction 3: The London Eye\n- What is the best thing to see there: Overcome your fear of heights and enjoy breathtaking panoramic views of London's iconic landmarks.\nTo end your day, challenge yourself and conquer your fear of heights by visiting the London Eye. This giant Ferris wheel, located on the South Bank of the River Thames, offers spectacular views of the city's skyline. Take a ride in one of the glass capsules and enjoy a 30-minute rotation, offering uninterrupted 360-degree views of London.\nWith 24 hours in London, these three attractions will provide you with a well-rounded experience that combines your love for movies and TV shows with iconic landmarks and breathtaking views. Don't forget to make use of public transportation or Uber to efficiently move between these attractions and make the most of your limited time in the city. Enjoy your adventure!\n```", "```py\nI am traveling to {{$city}} and staying {{$n_days}} days.\nI like {{$likes}}.\nI dislike {{$dislikes}}.\nI am traveling by myself.\nCreate an itinerary of up to {{$n_attractions}} must-see attractions for me to visit.\nThe attractions should be listed in the following format:\n- Attraction name: [name]\n- What is the best thing to see there: [one sentence description]\nYour whole answer should be less than 300 words.\n```", "```py\n    \"input_variables\": [\n        {\n            \"name\": \"city\",\n            \"description\": \"The city the person wants to travel to\",\n            \"required\": true\n        },\n        {\n            \"name\": \"n_days\",\n            \"description\": \"The number of days the person will be in the city\",\n            \"required\": true\n        },\n        {\n            \"name\": \"likes\",\n            \"description\": \"The interests of the person traveling to the city\",\n            \"required\": true\n        },\n        {\n            \"name\": \"dislikes\",\n            \"description\": \"The dislikes of the person traveling to the city\",\n            \"required\": true\n        },\n        {\n            \"name\": \"n_attractions\",\n            \"description\": \"The number of attractions to recommend\",\n            \"required\": true\n        }\n    ]\n```", "```py\n        response = await kernel.invoke(pe_plugin[\"attractions_multiple_variables\"], KernelArguments(\n        city = \"New York City\",\n        n_days = \"3\",\n        likes = \"restaurants, Ghostbusters, Friends tv show\",\n        dislikes = \"museums, parks\",\n        n_attractions = \"5\"\n    ))\n```", "```py\n var function_arguments = new KernelArguments()\n    {[\"city\"] = \"New York City\",\n    [\"n_days\"] = \"3\",\n    [\"likes\"] = \"restaurants, Ghostbusters, Friends tv show\",\n    [\"dislikes\"] = \"museums, parks\",\n    [\"n_attractions\"] = \"5\"};\nvar result = await kernel.InvokeAsync(promptPlugin[\"attractions_multiple_variables\"], function_arguments );\n```", "```py\nItinerary for Three Days in New York City:\nDay 1:\n1\\. Attraction name: Ghostbusters Firehouse\n   What is the best thing to see there: Visit the iconic firehouse featured in the Ghostbusters movies and take pictures in front of the famous logo.\n2\\. Attraction name: Friends Apartment Building\n   What is the best thing to see there: Pay a visit to the apartment building that served as the exterior shot for Monica and Rachel's apartment in the beloved TV show Friends.\nDay 2:\n3\\. Attraction name: Restaurant Row\n   What is the best thing to see there: Explore Restaurant Row on West 46th Street, known for its diverse culinary scene, offering a plethora of international cuisines to satisfy your food cravings.\n4\\. Attraction name: High Line Park\n   What is the best thing to see there: Although you mentioned disliking parks, the High Line is a unique urban park built on a historic freight rail line, offering beautiful views of the city and a different experience compared to traditional parks.\nDay 3:\n5\\. Attraction name: Times Square\n   What is the best thing to see there: Immerse yourself in the vibrant atmosphere of Times Square, known for its dazzling billboards, bustling streets, and renowned theaters, making it a must-see destination in NYC.\nThis itinerary focuses on your interests while also incorporating some iconic NYC experiences. You can explore famous film locations like the Ghostbusters Firehouse and Friends Apartment Building. Since you enjoy restaurants, Restaurant Row will offer a variety of dining options to suit your taste. Although you specified disliking parks, the High Line Park provides a unique urban green space experience. Finally, no trip to NYC would be complete without a visit to the energetic Times Square. Enjoy your trip!\n```", "```py\nWhen I was 6 my sister was half my age.\nNow I'm 70\\. How old is my sister?\n```", "```py\nIf your sister was half your age when you were 6, that means she was 3 years younger than you at that time (6/2 = 3).\nSince then, you have aged 64 years (70 - 6 = 64). Therefore, your sister would also be 64 years younger than her current age, which would make her 70 - 64 = 6 years old.\nSo, your sister is currently 6 years old.\n```", "```py\nIf your sister was half your age when you were 6, it means she was 6/2 = <<6/2=3>>3 years old at that time.\nSince then, there is a constant age difference of 3 years between the two of you.\nNow that you are 70, your sister would be 70 - 3 = <<70-3=67>>67 years old.\n```", "```py\nIf your sister was half your age when you were 6, that means she was 3 years old at that time.\nSince then, the age difference between you and your sister remains constant.\nTherefore, if you are currently 70 years old, your sister would be 67 years old.\n```", "```py\nIf your sister was half your age when you were 6, that means she was 3 years old at that time. Since then, the age difference between you and your sister remains constant. Therefore, if you are currently 70 years old, your sister is 73 years old.\n```", "```py\nIf your sister was half your age when you were 6, that means she was 3 years younger than you at that time.\nNow, you are 70, which means there is a 67-year age difference between when you were 6 and now.\nSo, if your sister was 3 years younger than you when you were 6, she would be 67 years younger than you now.\nTherefore, your sister would be 70 - 67 = 3 years old.\n```", "```py\n{{$problem}}\nLet's think step by step.\n```", "```py\n{{$problem}}\nLet's think step by step.\n{{$input}}\nTherefore, the answer is…\n```", "```py\n    \"input_variables\": [\n        {\n            \"name\": \"problem\",\n            \"description\": \"The problem that needs to be solved\",\n            \"required\": true\n        },\n        {\n            \"name\": \"input\",\n            \"description\": \"The steps to solve the problem\",\n            \"required\": true\n        }\n    ]\n```", "```py\n    problem = \"\"\"When I was 6 my sister was half my age. Now I'm 70\\. How old is my sister?\"\"\"\n    pe_plugin = kernel.add_plugin(None, parent_directory=\"../../plugins\", plugin_name=\"prompt_engineering\")\n    solve_steps = await kernel.invoke(pe_plugin[\"solve_math_problem_v2\"], KernelArguments(problem = problem))\n    print(f\"\\n\\nSteps: {str(solve_steps)}\\n\\n\")\n```", "```py\n    response = await kernel.invoke(pe_plugin[\"chain_of_thought\"], KernelArguments(problem = problem, input = solve_steps))\n    print(f\"\\n\\nFinal answer: {str(response)}\\n\\n\")\n```", "```py\nvar problem = \"When I was 6 my sister was half my age. Now I'm 70\\. How old is my sister?\";\nvar chatFunctionVariables1 = new KernelArguments()\n{\n    [\"problem\"] = problem,\n};\nvar steps = await kernel.InvokeAsync(promptPlugin[\"solve_math_problem_v2\"], chatFunctionVariables1);\n```", "```py\nvar chatFunctionVariables2 = new KernelArguments()\n{\n    [\"problem\"] = problem,\n    [\"input\"] = steps.ToString()\n};\nvar result = await kernel.InvokeAsync(promptPlugin[\"chain_of_thought_v2\"], chatFunctionVariables2);Console.WriteLine(steps);\n```", "```py\nSteps: When you were 6, your sister was half your age, which means she was 6/2 = 3 years old at that time.\nThe age difference between you and your sister remains the same over time, so the difference in your ages is 6 - 3 = 3 years.\nNow that you are 70, your sister would be 70 - 3 = 67 years old.\nFinal answer:\nYour sister is 67 years old.\n```", "```py\nSteps: When you were 6, your sister was half your age, so she was 6/2 = <<6/2=3>>3 years old.\nSince then, the age difference between you and your sister remains constant, so your sister is 3 years younger than you.\nTherefore, if you are now 70, your sister would be 70 - 3 = <<70-3=67>>67 years old.\n```", "```py\n{{$problem}}\nLet's think step by step.\n{{$input}}\nUsing arabic numerals only, the answer is…\n```", "```py\n    responses = []\n    for i in range(7):\n        solve_steps = await kernel.invoke(pe_plugin[\"solve_math_problem_v2\"], KernelArguments(problem = problem))\n        response = await kernel.invoke(pe_plugin[\"chain_of_thought_v2\"], KernelArguments(problem = problem, input = solve_steps))\n        responses.append(int(str(response)))\n    print(\"Responses:\")\n    print(responses)\n    final_answer = max(set(responses), key = responses.count)\n    print(f\"Final answer: {final_answer}\")\n```", "```py\nvar results = new List<int>();\nfor (int i = 0; i < 7; i++)\n{\n    var chatFunctionVariables1 = new KernelArguments()\n    {\n        [\"problem\"] = problem,\n    };\n    var steps = await kernel.InvokeAsync(promptPlugin[\"solve_math_problem_v2\"], chatFunctionVariables1);\n    var chatFunctionVariables2 = new KernelArguments()\n    {\n        [\"problem\"] = problem,\n        [\"input\"] = steps.ToString()\n    };\n    var result = await kernel.InvokeAsync(promptPlugin[\"chain_of_thought_v2\"], chatFunctionVariables2);\n    var resultInt = int.Parse(result.ToString());\n    results.Add(resultInt);\n}\nvar mostCommonResult = results.GroupBy(x => x)\n    .OrderByDescending(x => x.Count())\n    .First()\n    .Key;\nConsole.WriteLine($\"Your sister's age is {mostCommonResult}\");\n```"]