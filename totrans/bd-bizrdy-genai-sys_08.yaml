- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: GenAISys for Trajectory Simulation and Prediction
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GenAISys 轨迹模拟和预测
- en: As AI’s role continues to expand, trajectory analysis has permeated all human
    activity, from pizza deliveries to genome sequencing. This chapter introduces
    city-scale mobility prediction, highlighting how missing or noisy coordinates
    can undermine real-world applications in deliveries, disaster management, urban
    planning, and epidemic forecasting. The architecture of our mobility system draws
    inspiration from the innovative work of Tang et al. (2024).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 随着人工智能角色的不断扩展，轨迹分析已经渗透到人类活动的各个方面，从披萨配送到基因组测序。本章介绍了城市规模的移动性预测，强调了缺失或噪声坐标如何破坏配送、灾害管理、城市规划和流行病预测等现实世界应用。我们移动性系统的架构受到了
    Tang 等人（2024）的创新工作的启发。
- en: We will first build and integrate an advanced trajectory simulation and prediction
    pipeline into our GenAISys using the `1_Trajectory_simulation_and_prediction.ipynb`
    notebook. The main objective is to address the challenge of modeling human mobility,
    both short- and long-term, by leveraging synthetic data generation and **large
    language models** (**LLMs**). We then demonstrate how to build upon this idea
    using Python-based solutions, complete with a custom synthetic grid generator
    that simulates random trajectories through a two-dimensional city map, deliberately
    inserting missing data for testing. These random trajectories could represent
    deliveries or other sequences, such as travel packages (custom bags or booklets)
    for an online travel agency.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先将使用 `1_Trajectory_simulation_and_prediction.ipynb` 笔记本在我们的 GenAISys 中构建和集成一个高级轨迹模拟和预测管道。主要目标是利用合成数据生成和**大型语言模型**（**LLMs**）来应对模拟人类短期和长期移动性的挑战。然后，我们将展示如何使用基于
    Python 的解决方案来扩展这一想法，包括一个定制的合成网格生成器，该生成器通过二维城市地图模拟随机轨迹，故意插入缺失数据以进行测试。这些随机轨迹可能代表配送或其他序列，例如在线旅行社的旅行套餐（定制袋子或手册）。
- en: Next, we will build a multistep orchestrator function that merges user instructions,
    the synthetic dataset, and domain-specific messages before passing them to an
    LLM-driven reasoning thread. The model will detect and predict unknown positions
    marked by placeholder values (such as `999, 999`), filling these gaps through
    contextual interpolation. This approach demonstrates the interpretability of text-based
    predictions while maintaining a systematic chain of thought, including debugging
    steps such as logging missing points before producing the final JSON output.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将构建一个多步骤编排函数，将用户指令、合成数据集和特定领域的消息合并在一起，然后再将它们传递给由 LLM 驱动的推理线程。该模型将检测并预测由占位符值（如
    `999, 999`）标记的未知位置，通过上下文插值来填补这些空白。这种方法展示了基于文本预测的可解释性，同时保持系统性的思维链，包括在生成最终 JSON
    输出之前记录缺失点的调试步骤。
- en: To support robust user interaction, we will integrate the trajectory pipeline
    into the GenAISys multihandler environment we’ve built, allowing requests for
    “mobility” instructions to trigger the creation and analysis of trajectories.
    We will implement a trajectory simulation and prediction interface. Visualization
    components are incorporated, automatically producing and displaying the resulting
    path (including direction arrows, missing data markers, and coordinate fixes)
    as a static image. The synergy between data generation, LLM inference, and the
    user interface showcases the end-to-end viability of our method, empowering users
    to apply trajectory simulation and prediction across different domains as needed.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 为了支持稳健的用户交互，我们将把轨迹管道集成到我们构建的 GenAISys 多处理器环境中，允许对“移动”指令的请求触发轨迹的创建和分析。我们将实现轨迹模拟和预测接口。可视化组件被整合，自动生成并显示结果路径（包括方向箭头、缺失数据标记和坐标修正）作为静态图像。数据生成、LLM
    推理和用户界面之间的协同展示了我们方法端到端的有效性，使用户能够根据需要在不同领域应用轨迹模拟和预测。
- en: This chapter provides a blueprint for coupling synthetic trajectory datasets
    with a prompt-driven LLM approach in the GenAISys. By following the design patterns
    described by Tang et al., we will explore how purely text-oriented models can
    excel at spatial-temporal reasoning with minimal structural modifications. Bridging
    mobility simulation and user-friendly interfaces can provide highly interpretable,
    fine-grained predictions for a variety of mobility analytics scenarios.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了一个蓝图，将合成轨迹数据集与GenAISys中的提示驱动LLM方法相结合。通过遵循Tang等人描述的设计模式，我们将探讨纯文本导向的模型如何通过最小的结构修改在空间时间推理方面表现出色。连接流动性模拟和用户友好的界面可以为各种流动性分析场景提供高度可解释、细致的预测。
- en: 'This chapter covers the following topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了以下主题：
- en: Trajectory simulations and predictions
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轨迹模拟和预测
- en: Building a trajectory simulation and prediction function
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建轨迹模拟和预测功能
- en: Adding mobility intelligence to the GenAISys
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将流动性智能添加到GenAISys中
- en: Running the mobility-enhanced GenAISys
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行增强的GenAISys
- en: Let’s begin by defining the scope of the trajectory simulation and prediction
    framework.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先定义轨迹模拟和预测框架的范围。
- en: Trajectory simulations and predictions
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轨迹模拟和预测
- en: This section is inspired by *Instruction-Tuning Llama-3-8B Excels in City-Scale
    Mobility Prediction* by Tang et al. (2024). We will explore the essential background
    on the challenges of human mobility prediction, the paper’s key contributions,
    and how these ideas can be translated into practical Python implementations.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本节灵感来源于Tang等人（2024）的*Instruction-Tuning Llama-3-8B Excels in City-Scale Mobility
    Prediction*。我们将探讨人类流动性预测的挑战、论文的关键贡献以及这些想法如何转化为实用的Python实现。
- en: 'Human mobility prediction focuses on forecasting where and when individuals
    (or groups) will travel, and it plays a critical role in an expanding set of domains,
    including the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 人类流动性预测专注于预测个人（或群体）将在何时何地旅行，它在包括以下在内的不断扩大的领域中发挥着关键作用：
- en: '**Disaster response**, for predicting the paths of wildfires, population movements
    during crises, or the impacts of earthquakes'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灾害响应**，用于预测野火路径、危机期间的人口流动或地震的影响'
- en: '**Urban planning**, for modeling short- and long-term mobility patterns to
    help city planners optimize public transport and infrastructure'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**城市规划**，用于模拟短期和长期流动性模式，以帮助城市规划者优化公共交通和基础设施'
- en: '**Epidemic forecasting**, for simulating and predicting the spread of infectious
    diseases in a region'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流行病预测**，用于模拟和预测一个地区传染病的传播'
- en: In our case, we will first apply mobility prediction to the delivery of customized
    products (e.g., bags, T-shirts, and booklets) for an online travel agency’s customers.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，我们首先将流动性预测应用于在线旅行社客户的定制产品（例如，包、T恤和手册）的交付。
- en: Traditionally, these predictions relied on specialized machine learning models,
    such as **recurrent neural networks** (**RNNs**) with attention mechanisms or
    **graph neural networks** (**GNNs**). While these techniques can be effective,
    they often require labor-intensive feature engineering and are not easily generalizable
    across diverse locations or time horizons (e.g., short-term versus long-term predictions).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，这些预测依赖于专门的机器学习模型，例如具有注意力机制的**循环神经网络**（**RNNs**）或**图神经网络**（**GNNs**）。虽然这些技术可能有效，但它们通常需要劳动密集型的特征工程，并且不易于在不同地点或时间范围内（例如，短期与长期预测）进行泛化。
- en: Let’s now examine the key challenges motivating the use of LLMs to address these
    issues.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在来审视推动使用LLMs解决这些问题的关键挑战。
- en: Challenges in large-scale mobility forecasting
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 大规模流动性预测的挑战
- en: 'Cutting-edge LLMs offer promising solutions to several challenges that have
    historically plagued traditional mobility analysis and prediction systems:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最先进的LLMs为解决传统流动性分析和预测系统历史上一直困扰的几个挑战提供了有希望的解决方案：
- en: '**Long-term versus short-term forecasts**: Predicting the next few steps (short-term)
    often relies on temporal recurrences and immediate contextual information. However,
    extending this to multi-day, city-scale horizons introduces additional complexities,
    such as changes in user behavior, variations in daily routines, holidays, or unexpected
    events.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**长期与短期预测**：预测接下来的几步（短期）通常依赖于时间重复和即时上下文信息。然而，将其扩展到多日、城市规模的范围会引入额外的复杂性，例如用户行为的变化、日常生活的变化、节假日或意外事件。'
- en: '**Generalization across cities**: A model trained on data from City A may fail
    when exposed to the unique geography, population density, or cultural travel habits
    of City B. True city-scale mobility solutions must be robust enough to handle
    these differences.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跨城市的泛化**：在City A的数据上训练的模型在接触到City B独特的地理、人口密度或文化旅行习惯时可能会失败。真正的城市规模移动解决方案必须足够鲁棒，能够处理这些差异。'
- en: '**Computational constraints**: Real-world mobility datasets, especially those
    representing entire metropolitan areas, can be enormous. Training sophisticated
    deep learning models or LLMs can become computationally expensive.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计算限制**：现实世界的移动数据集，尤其是代表整个大都市区的数据集，可能非常庞大。训练复杂的深度学习模型或LLMs可能会变得计算成本高昂。'
- en: '**Data quality and missing data**: Large-scale mobility datasets often have
    noise or missing coordinates. Handling “gaps” in user trajectories (e.g., from
    GPS dropout or anonymization processes) is a significant challenge.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据质量和缺失数据**：大规模移动数据集通常存在噪声或缺失坐标。处理用户轨迹中的“缺口”（例如，来自GPS掉电或匿名化过程）是一个重大挑战。'
- en: While LLMs are not perfect, they provide an effective alternative to traditional
    models by addressing these key obstacles with minimal manual feature engineering.
    Let’s see how.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然LLMs并不完美，但它们通过最小化手动特征工程来解决这些关键障碍，为传统模型提供了一种有效的替代方案。让我们看看它是如何做到的。
- en: From traditional models to LLMs
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从传统模型到LLMs
- en: 'The journey from traditional approaches to LLMs can be traced through a few
    groundbreaking shifts. Traditional approaches consumed extensive human resources
    to design heuristics, engineer features, and implement complex domain-specific
    solutions. In contrast, recent breakthroughs in generative AI—such as Llama 3,
    GPT-4o, Grok 3, DeepSeek-V3, and DeepSeek-R1—have opened exciting new avenues
    in reasoning and multimodal machine intelligence. And make no mistake—this is
    just the beginning! Recent research highlights how these models can generalize
    well beyond text-based tasks, excelling in the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 从传统方法到LLMs的转变可以通过几个突破性的转变来追踪。传统方法消耗了大量的人力资源来设计启发式方法、工程特征和实施复杂的特定领域解决方案。相比之下，最近在生成式AI方面的突破——如Llama
    3、GPT-4o、Grok 3、DeepSeek-V3和DeepSeek-R1——在推理和多模态机器智能方面开辟了令人兴奋的新途径。而且，不要误解——这仅仅是开始！最近的研究强调了这些模型如何能够很好地泛化到文本以外的任务，并在以下方面表现出色：
- en: Time-series prediction
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列预测
- en: Zero-shot or few-shot adaptation to new tasks
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零样本或少量样本适应新任务
- en: Data preprocessing
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据预处理
- en: Recent research has shown that LLMs, when guided by carefully crafted prompts
    or lightweight fine-tuning, can even surpass specialized models in city-scale,
    long-horizon trajectory prediction. In this chapter, we’ll demonstrate effective
    results with zero-shot prompting—without any additional fine-tuning—using GPT-4o.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 最近的研究表明，当由精心设计的提示或轻量级微调引导时，LLMs甚至可以在城市规模、长期轨迹预测方面超越专用模型。在本章中，我们将使用GPT-4o展示零样本提示的有效结果——无需任何额外的微调。
- en: To understand this promising direction clearly, however, let’s first examine
    the key contributions of the paper that served as a basis for this chapter.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，为了清楚地理解这个有希望的方向，我们首先应该检查作为本章基础的论文的关键贡献。
- en: Key contributions of the paper
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 论文的关键贡献
- en: It took a team consisting of Tang, P., Yang, C., Xing, T., Xu, X., Jiang, R.,
    and Sezaki, K. (2024) to take LLMs to the next level through three pivotal innovations.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要将LLMs提升到下一个水平，需要由Tang, P.，Yang, C.，Xing, T.，Xu, X.，Jiang, R.和Sezaki, K.（2024）组成的团队通过三个关键创新来实现。
- en: Reformulating trajectory prediction as a Q&A
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将轨迹预测重新表述为问答
- en: 'Instead of passing raw coordinate sequences into a standard regression or classification
    model, the authors transform the input into a question that includes the following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 与将原始坐标序列传递给标准回归或分类模型不同，作者将输入转换为一个包含以下内容的问题：
- en: An **instruction block** clarifying the domain context (city grid, coordinate
    definitions, day/time indexing)
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**指令块**明确说明领域上下文（城市网格、坐标定义、日/时索引）
- en: A **question block** providing historical mobility data with placeholders for
    missing locations
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**问题块**，提供历史移动数据，并包含缺失位置的占位符
- en: A request to generate the prediction results in a predefined, structured JSON
    format
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成预定义、结构化的JSON格式的预测结果请求
- en: This Q&A style leverages the LLM’s inherent ability to read instructions and
    produce structured outputs.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这种问答风格利用了LLM读取指令并产生结构化输出的内在能力。
- en: Then, they fine-tuned the LLM.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，他们对LLM进行了微调。
- en: Instruction tuning for domain adaptation
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 指令微调以实现领域适应性
- en: '**Instruction tuning** is a technique where the LLM is fine-tuned with carefully
    designed prompts and answers, teaching it to produce domain-specific outputs while
    still retaining its general language reasoning capabilities. The authors showcase
    that even if you use only a fraction of the mobility dataset for fine-tuning,
    the model can still generalize to new users or new cities. In our case, we attained
    acceptable results without a dataset.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**指令微调**是一种技术，其中 LLM 通过精心设计的提示和答案进行微调，教会它产生特定领域的输出，同时仍然保留其通用的语言推理能力。作者展示了即使你只使用移动性数据集的一小部分进行微调，模型仍然可以推广到新的用户或新的城市。在我们的情况下，我们没有数据集也达到了可接受的结果。'
- en: Surprisingly enough, as we will see when we build the Python program in the
    *Building the trajectory simulation and prediction function* section, we achieve
    strong results even with a zero-shot, no-fine-tuning approach, leveraging GPT-4o’s
    exceptional reasoning capability without needing any domain-specific fine-tuning
    data.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 令人惊讶的是，正如我们在 *构建轨迹模拟和预测功能* 部分构建 Python 程序时将看到的，即使采用零样本、无微调的方法，我们也能取得强大的结果，利用
    GPT-4o 的卓越推理能力，而无需任何特定领域的微调数据。
- en: The mobility research team then solved the issue of missing data.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 移动性研究团队随后解决了缺失数据的问题。
- en: Handling missing data
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理缺失数据
- en: A common challenge in mobility datasets is the presence of missing coordinates,
    typically marked with placeholder values such as `999`. The LLM-based system is
    tasked explicitly with filling in these gaps, effectively performing spatiotemporal
    imputation. Naturally, this approach is not without limitations, which we’ll clearly
    illustrate through practical examples when we run our mobility simulation. But
    before exploring these boundaries, let’s first dive into building our solution.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动性数据集中，一个常见的挑战是存在缺失的坐标，通常用占位符值，如 `999` 标记。基于 LLM 的系统被明确地要求填补这些空白，有效地执行时空插补。自然地，这种方法并非没有局限性，我们将在运行移动性模拟时通过实际示例清楚地说明这些局限性。但在探索这些边界之前，让我们首先深入到构建我们的解决方案中。
- en: In the next section, we will develop a trajectory (mobility) simulation and
    analysis component using OpenAI models. We will then integrate this mobility function
    into **Layer 3** of our GenAISys, as illustrated in *Figure 8.1* with function
    **F4.1**. We will also update **Layer 2** to register the handler and ensure it
    can be activated at the IPython interface level in **Layer 1**.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将使用 OpenAI 模型开发一个轨迹（移动性）模拟和分析组件。然后，我们将把这个移动性功能集成到我们 GenAISys 的 **第 3
    层**，如图 *8.1* 所示的 **F4.1** 功能所示。我们还将更新 **第 2 层**，以注册处理程序并确保它可以在 **第 1 层** 的 IPython
    接口级别激活。
- en: '![Figure 8.1: Integrating trajectory simulations and predictions](img/B32304_08_1.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.1：集成轨迹模拟和预测](img/B32304_08_1.png)'
- en: 'Figure 8.1: Integrating trajectory simulations and predictions'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.1：集成轨迹模拟和预测
- en: Once the trajectory simulation and prediction component is integrated into our
    GenAISys, it can be applied to deliveries and a wide range of mobility-related
    tasks. We will start by modeling the delivery of customized goodies—such as branded
    bags, T-shirts, and booklets—for customers of an online travel agency, and then
    explore other potential applications. For now, let’s build our trajectory simulation!
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦轨迹模拟和预测组件集成到我们的 GenAISys 中，它就可以应用于配送和广泛的移动性相关任务。我们将首先为在线旅行社的客户建模定制商品的配送——如品牌包、T恤和手册——然后探索其他潜在的应用。现在，让我们构建我们的轨迹模拟！
- en: Building the trajectory simulation and prediction function
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建轨迹模拟和预测功能
- en: The goal of this section is to create a robust trajectory simulation, prepare
    the predictive functions, and run an OpenAI LLM to analyze synthetic trajectory
    data and predict missing coordinates. Later, in the *Adding mobility intelligence
    to the GenAISys* section, we’ll integrate this into our comprehensive GenAISys
    framework.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的目标是创建一个健壮的轨迹模拟，准备预测函数，并运行 OpenAI LLM 来分析合成轨迹数据并预测缺失坐标。稍后，在 *将移动性智能添加到 GenAISys*
    部分，我们将将其集成到我们全面的 GenAISys 框架中。
- en: 'Open the `1_Trajectory_simulation_and_prediction.ipynb` notebook within the
    Chapter08 directory on GitHub ([https://github.com/Denis2054/Building-Business-Ready-Generative-AI-Systems/tree/main](https://github.com/Denis2054/Building-Business-Ready-Generative-AI-Systems/tree/main)).
    The initial setup mirrors the environment configuration in `Chapter07/GenAISys_DeepSeek.ipynb`
    and includes the following:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在GitHub的Chapter08目录下打开`1_Trajectory_simulation_and_prediction.ipynb`笔记本([https://github.com/Denis2054/Building-Business-Ready-Generative-AI-Systems/tree/main](https://github.com/Denis2054/Building-Business-Ready-Generative-AI-Systems/tree/main))。初始设置与`Chapter07/GenAISys_DeepSeek.ipynb`中的环境配置相匹配，并包括以下内容：
- en: File downloading script
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件下载脚本
- en: OpenAI setup
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI设置
- en: Chain-of-thought environment setup
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 思维链环境设置
- en: 'We will build the program in three main steps, as shown in *Figure 8.2*:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按照*图8.2*中所示的三步主要步骤来构建程序：
- en: Creating the grid and trajectory simulation to generate real-time synthetic
    data
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建网格和轨迹模拟以生成实时合成数据
- en: Creating a mobility orchestrator that will call the trajectory simulation, import
    the messages for the OpenAI model, and call the analysis and prediction messages
    for the OpenAI model
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个移动编排器，该编排器将调用轨迹模拟，导入OpenAI模型的消息，并调用OpenAI模型的分析和预测消息
- en: Leveraging OpenAI’s model for trajectory analysis and predictions, called via
    the mobility orchestrator
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过移动编排器利用OpenAI的轨迹分析和预测模型
- en: The mobility orchestrator will be added to the handlers registry in our GenAISys
    in the *Adding mobility intelligence to the GenAISys* section and managed by the
    handler selection mechanism when activated by the IPython interface. In this section,
    we will call the mobility orchestrator directly.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在*添加移动智能到GenAISys*部分中，移动编排器将被添加到我们的GenAISys处理程序注册表中，并在通过IPython界面激活时由处理程序选择机制管理。在本节中，我们将直接调用移动编排器。
- en: '*Figure 8.2* articulates the relationship between the mobility orchestrator,
    the trajectory simulator, and the generative AI predictor. This mixture of agents
    maintains close alignment with the framework of trajectory analysis and predictions.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8.2*阐述了移动编排器、轨迹模拟器和生成式AI预测器之间的关系。这种代理的混合与轨迹分析和预测框架保持紧密一致。'
- en: '![Figure 8.2: The functions of the mobility orchestrator](img/B32304_08_2.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图8.2：移动编排器的功能](img/B32304_08_2.png)'
- en: 'Figure 8.2: The functions of the mobility orchestrator'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.2：移动编排器的功能
- en: We will first begin by creating the trajectory simulation.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先开始创建轨迹模拟。
- en: Creating the trajectory simulation
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建轨迹模拟
- en: The reference paper by Tang et al. demonstrates how an LLM can be instruction-tuned
    to fill missing trajectory coordinates and predict future positions in a grid-based
    city map. Note that in our case, we will leverage the power of the OpenAI API
    message object to achieve an effective result with zero-shot prompts in real time,
    within the framework of the paper.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Tang等人撰写的参考论文展示了如何将LLM指令调整以填充缺失的轨迹坐标并预测网格城市地图中的未来位置。请注意，在我们的情况下，我们将利用OpenAI
    API消息对象的力量，在论文框架内实现零样本提示的实时有效结果。
- en: One important step in their methodology involves having *(day, timeslot, x,
    y)* records, with some coordinates possibly missing (e.g., `999, 999`) to indicate
    unknown positions.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的方法中的一个重要步骤是拥有*(day, timeslot, x, y)*记录，其中一些坐标可能缺失（例如，`999, 999`）以表示未知位置。
- en: 'The function that we will write, `create_grid_with_trajectory()`, essentially
    simulates a smaller-scale version of this scenario by doing the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要编写的函数`create_grid_with_trajectory()`本质上通过以下方式模拟了这个场景的小规模版本：
- en: 'Generate a two-dimensional grid representing a city (default: 200×200).'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成一个代表城市的二维网格（默认：200×200）。
- en: Create random agent trajectories within the grid over a certain number of points.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网格内创建一定数量的随机代理轨迹。
- en: Intentionally insert missing coordinates (marked as `(999, 999)`) to simulate
    real-world data gaps.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 故意插入缺失的坐标（标记为`(999, 999)`）以模拟现实世界的数据缺口。
- en: Plot and save the trajectory visualization, highlighting direction with arrows
    and labels for missing data.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制并保存轨迹可视化，用箭头和标签突出显示方向和缺失数据。
- en: 'This kind of synthetic generation is useful for testing or proof-of-concept
    demos, echoing the spirit of the paper:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的合成生成对于测试或概念验证演示很有用，与论文的精神相呼应：
- en: You have grid-based data, like the 200×200 city model used in the article
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您有基于网格的数据，例如文章中使用的200×200城市模型
- en: You inject missing values (`999, 999`), which the LLM or another model can later
    attempt to fill in
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您注入缺失的值（`999, 999`），这些值LLM或另一个模型可以稍后尝试填充
- en: 'Let’s now go through the trajectory simulation function step by step:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在逐步通过轨迹模拟函数：
- en: 'Let’s first initialize the function with its parameters:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们首先用参数初始化函数：
- en: '[PRE0]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The parameters are as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 参数如下：
- en: '`grid_size=200`: The size of the grid along one axis (so the grid is 200×200)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grid_size=200`：网格沿一个轴的大小（因此网格是200×200）'
- en: '`num_points=50`: How many trajectory points (or steps) will be generated'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_points=50`：要生成的轨迹点（或步骤）数量'
- en: '`missing_count=5`: How many of those points will be deliberately turned into
    missing coordinates (`999, 999`)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`missing_count=5`：这些点中有多少将被故意转换为缺失坐标（`999, 999`）'
- en: 'We now create the grid:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在创建网格：
- en: '`grid = np.zeros((grid_size, grid_size), dtype=int)` creates a two-dimensional
    array of zeros (of the `int` type). Think of `grid[x][y]` as the status of that
    cell, initially 0.'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grid = np.zeros((grid_size, grid_size), dtype=int)` 创建了一个二维的零数组（`int`类型）。将
    `grid[x][y]` 视为该单元格的状态，初始为0。'
- en: '`trajectory = []:` will hold tuples of the form *(day, timeslot, x, y)*.'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trajectory = []:` 将存储形如 *(day, timeslot, x, y)* 的元组。'
- en: This mirrors the discretized city concept in the paper, where each *(x, y)*
    cell might represent a zone within the city.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这反映了论文中离散城市概念，其中每个 *(x, y)* 单元可能代表城市内的一个区域。
- en: 'We can now set the initial state of the agent:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以设置代理的初始状态：
- en: '[PRE1]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Random start**: The agent’s initial location *(x, y)* is chosen randomly
    anywhere on the grid.'
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**随机起始点**：代理的初始位置 *(x, y)* 在网格的任何位置随机选择。'
- en: '**Time setup**: A random day between 1 and 365 and a random timeslot between
    0 and 47 is selected, aligning with the paper’s time-slicing approach, where each
    day is divided into multiple discrete time slots.'
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间设置**：选择1到365之间的随机天数和0到47之间的随机时间槽，与论文中的时间切片方法相一致，其中每一天被划分为多个离散的时间槽。'
- en: 'We now determine the movement directions and turn probability:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在确定移动方向和转向概率：
- en: '[PRE2]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This structure is a classical mobility agent framework:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这种结构是经典的移动代理框架：
- en: '`directions`: Represents four possible directions—up, right, down, and left.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`directions`：表示四个可能的方向——上、右、下、左。'
- en: '`current_dir_index`: Picks which of the four directions the agent faces initially.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`current_dir_index`：选择代理最初面对的四个方向中的哪一个。'
- en: '`turn_weights`: Probability distribution dictating how likely the agent is
    to turn left (`-1`), go straight (`0`), or turn right (`1`) at each step. In our
    case, there is a 15% chance of turning left, a 70% chance of continuing, and a
    15% chance of turning right. This introduces randomness in how the agent moves
    and is a simple approximation of human or agent-like mobility patterns.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`turn_weights`: 指定代理在每个步骤中转向左（`-1`）、直行（`0`）或转向右（`1`）的概率分布。在我们的例子中，转向左的概率为15%，继续直行的概率为70%，转向右的概率为15%。这引入了代理移动的随机性，是对人类或类似代理移动模式的简单近似。'
- en: 'We are ready to generate the trajectory:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在准备好生成轨迹：
- en: '[PRE3]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Let’s go through the actions of our virtual agent:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在逐步通过虚拟代理的动作：
- en: '**Choosing a turn**: Based on `turn_weights`, the agent randomly decides whether
    to continue in the same direction, turn left, or turn right.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择转向**：根据 `turn_weights`，代理随机决定是否继续同一方向、转向左或转向右。'
- en: '**Updating the coordinates**:'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更新坐标**：'
- en: '`dx`, `dy` are the increments along *x* and *y* for the chosen direction.'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`dx`，`dy` 是所选方向沿 *x* 和 *y* 的增量。'
- en: The new location, `(new_x, new_y)`, is computed.
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新位置 `(new_x, new_y)` 被计算。
- en: '**Checking the boundary conditions**: If `(new_x, new_y)` is outside `[0, grid_size-1]`,
    the code finds a valid direction or reverts to the old position to keep the agent
    inside the grid.'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检查边界条件**：如果 `(new_x, new_y)` 超出 `[0, grid_size-1]` 范围，代码将寻找一个有效的方向或恢复到旧位置，以保持代理在网格内。'
- en: '**Recording the trajectory**:'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**记录轨迹**：'
- en: '`(day, timeslot, x, y)` is appended to `trajectory`.'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`(day, timeslot, x, y)` 被添加到 `trajectory`。'
- en: Mark `grid[x, y]` as `1`, signifying a visited cell.
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `grid[x, y]` 标记为 `1`，表示已访问的单元格。
- en: '**Updating the time**: `timeslot = (timeslot + random.randint(1, 3)) % 48`:
    The timeslot jumps from 1 to 3 steps, staying in `[0, 47]`.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更新时间**：`timeslot = (timeslot + random.randint(1, 3)) % 48`：时间槽从1步跳到3步，保持在
    `[0, 47]` 范围内。'
- en: 'We now need to introduce the missing data, which will be the basis for the
    generative AI predictions:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在需要引入缺失的数据，这将成为生成式AI预测的基础：
- en: '[PRE4]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The missing points are determined in two steps:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 缺失的点分两步确定：
- en: '**Selecting the missing points**: Randomly choose `missing_count` points from
    the total `num_points` of the trajectory.'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**选择缺失的点**：从轨迹的总`num_points`中随机选择`missing_count`个点。'
- en: '**Replacing the missing points with 999, 999**: For each chosen index, replace
    the valid `(x, y)` with `999, 999`.'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**用`999, 999`替换缺失的点**：对于每个选定的索引，将有效的`(x, y)`替换为`999, 999`。'
- en: In the paper, the authors define `999, 999` as the signal for unknown or missing
    coordinates that the LLM must later fill in. This code snippet simulates exactly
    that scenario—some coordinates go missing, requiring an imputation or prediction
    step.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在论文中，作者将`999, 999`定义为LLM必须后来填补的未知或缺失坐标的信号。这段代码模拟了这种情况——一些坐标丢失，需要填补或预测步骤。
- en: We want to add a visualization function next that will help the user to see
    the trajectory and its missing points.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望添加一个可视化函数，以帮助用户看到轨迹及其缺失的点。
- en: Visualizing the trajectory simulator
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可视化轨迹模拟器
- en: 'We will plot the grid and trajectory in Matplotlib:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Matplotlib绘制网格和轨迹：
- en: '[PRE5]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Let’s go through the visualization process:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过可视化过程：
- en: '**Coordinates for plotting**: Converts missing `999, 999` values into `np.nan`
    so that Matplotlib will break the line and not connect them visually'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**绘图坐标**：将缺失的`999, 999`值转换为`np.nan`，这样Matplotlib就会断开线条，在视觉上不连接它们。'
- en: '**Plotting with colors, arrows, and text**:'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用颜色、箭头和文本绘图**：'
- en: The trajectory line is drawn in blue.
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 轨迹线用蓝色绘制。
- en: Quiver arrows (`plt.quiver`) show the direction from each point to the next.
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Quiver箭头（`plt.quiver`）显示了从每个点到下一个点的方向。
- en: Missing data points are highlighted with an `'X'` marker in magenta.
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 缺失数据点用紫色的`'X'`标记突出显示。
- en: '**Titles and axes**: Labeling and legend for clarity'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标题和坐标轴**：清晰标注和图例'
- en: '**Save and close**: Saves the figure as `mobility.png`'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存并关闭**：将图形保存为`mobility.png`'
- en: Such plotting mirrors the style in the paper’s *Case Study* section (*Section
    4.4*), where the authors compare real versus predicted trajectories. Here, you’re
    simply illustrating the synthetic path as well as the visual indications of missing
    data.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这种绘图反映了论文中*案例研究*部分（*第4.4节*）的风格，其中作者比较了实际轨迹与预测轨迹。在这里，你只是展示了合成路径以及缺失数据的视觉指示。
- en: Output of the simulation function
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模拟函数的输出
- en: 'The output of the function that we will process contains the grid and the trajectory:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将处理的函数输出包含网格和轨迹：
- en: '[PRE6]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'These two variables will contain what our generative AI model needs to make
    a prediction:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个变量将包含我们的生成式AI模型需要做出预测的内容：
- en: '`grid`: A two-dimensional array marking the visited path'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grid`：一个标记已访问路径的二维数组'
- en: '`trajectory`: A list of *(day, timeslot, x, y)* tuples, with some replaced
    with `999, 999`'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trajectory`：一个包含*(day, timeslot, x, y)*元组的列表，其中一些被替换为`999, 999`'
- en: This final result will be fed into an LLM-based approach (such as the one described
    in the paper) with an OpenAI generative AI model that can produce an acceptable
    output in a zero-shot process. We will now begin to process the trajectory simulation.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这个最终结果将被输入到一个基于LLM的方法（如论文中描述的方法）中，使用OpenAI生成式AI模型，在零样本过程中产生可接受的输出。我们现在将开始处理轨迹模拟。
- en: Creating the mobility orchestrator
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建移动性协调器
- en: The trajectory simulation has generated the grid, the trajectory, and the missing
    coordinates in the trajectory. We will now develop the orchestrator function that
    integrates both the trajectory simulation and the predictive capabilities of the
    OpenAI model. We’ll call this orchestrator `handle_mobility_orchestrator()`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 轨迹模拟已生成网格、轨迹和轨迹中的缺失坐标。我们现在将开发一个协调器函数，该函数整合了轨迹模拟和OpenAI模型的预测能力。我们将把这个协调器称为`handle_mobility_orchestrator()`。
- en: 'This orchestrator aligns with the method outlined by Tang et al. (2024) in
    their paper *Instruction-Tuning Llama-3-8B Excels in City-Scale Mobility Prediction*.
    Its purpose is straightforward yet powerful, performing three critical functions:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这个协调器与Tang等人（2024）在他们的论文《Instruction-Tuning Llama-3-8B在城规模度移动性预测中表现卓越》中概述的方法相一致。其目的是简单而强大，执行三个关键功能：
- en: '**Generating synthetic mobility data**: It invokes the `create_grid_with_trajectory
    ()` function to simulate a trajectory with possible missing points'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生成合成移动性数据**：调用`create_grid_with_trajectory()`函数来模拟带有可能缺失点的轨迹。'
- en: '**Preparing data for an LLM call**: It formats the new trajectory data into
    a JSON string, appends it to the user’s message, and then calls the reasoning
    function—presumably the LLM-based solution or orchestration logic (`reason.mobility_agent_reasoning_thread()`)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**准备LLM调用数据**：它将新的轨迹数据格式化为JSON字符串，将其附加到用户消息中，然后调用推理函数——可能是基于LLM的解决方案或编排逻辑（`reason.mobility_agent_reasoning_thread()`）。'
- en: '**Returning a structured response**: It returns the final results clearly (`reasoning_steps`),
    to include both the newly generated trajectory data and the LLM reasoning steps'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**返回结构化响应**：它清楚地返回最终结果（`reasoning_steps`），包括新生成的轨迹数据和LLM推理步骤。'
- en: This approach remains true to the *Instruction-Tuning Llama-3-8B Excels in City-Scale
    Mobility Prediction* paper, where the authors emphasize creating structured input
    data—such as trajectories with missing points—and then passing it to an LLM for
    completion or prediction.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法与*《Instruction-Tuning Llama-3-8B在城市场规模移动预测中表现卓越》*论文中的方法一致，该论文的作者强调创建结构化输入数据——例如带有缺失点的轨迹——然后将其传递给LLM进行完成或预测。
- en: 'Let’s now go through the orchestrator step by step:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们一步一步地通过编排器：
- en: 'First, the orchestrator function is initialized with the necessary parameters:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，编排器函数使用必要的参数初始化：
- en: '[PRE7]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Immediately, it invokes the trajectory simulation function we built previously:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 立即调用我们之前构建的轨迹模拟函数：
- en: '[PRE8]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We now convert and process the trajectory in JSON:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在将轨迹转换为JSON并进行处理：
- en: '[PRE9]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This code takes care of converting the trajectory and augmenting the user message:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码负责将轨迹转换为JSON格式并增强用户消息：
- en: 'Converting the trajectory to JSON:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将轨迹转换为JSON：
- en: '`trajectory_json` becomes a serialized version of the data so it can be embedded
    in text messages or API calls.'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`trajectory_json`成为数据的序列化版本，以便它可以嵌入到文本消息或API调用中。'
- en: 'Under the hood, it’s just `{"trajectory": [...list of (day, timeslot, x, y)...]}`.'
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在底层，它只是`{"trajectory": [...list of (day, timeslot, x, y)...]}`。'
- en: 'Augmenting the user message:'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强用户消息：
- en: The function takes the original user message, `(muser_message1)`, and appends
    the newly generated trajectory data to it.
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该函数接收原始用户消息（`muser_message1`），并将新生成的轨迹数据附加到其中。
- en: This ensures the model (or reasoning thread) sees the complete context—*both
    the user’s original query and the synthetic data*—when generating predictions
    or completions.
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这确保了模型（或推理线程）在生成预测或完成时看到完整的上下文——即用户的原始查询和合成数据。
- en: This step closely mirrors the Q&A-style interaction presented by Tang et al.
    (2024), where the trajectory data—marked clearly by placeholders (`999, 999`)—is
    delivered directly to the model.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤与Tang等人（2024年）提出的问答式交互非常相似，其中轨迹数据——通过占位符（`999, 999`）清晰标记——直接传递给模型。
- en: 'With the context clearly defined, the orchestrator calls the mobility reasoning
    function (which we’ll build next):'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上下文明确定义后，编排器调用移动推理函数（我们将在下一步构建）：
- en: '[PRE10]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here’s what happens behind the scenes:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这是幕后发生的事情：
- en: '`reason.mobility_agent_reasoning_thread(...)` processes the mobility prediction
    logic through the selected LLM (such as GPT-4o)'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reason.mobility_agent_reasoning_thread(...)`通过所选的LLM（如GPT-4o）处理移动预测逻辑。'
- en: The provided arguments (`msystem_message_s1`, `mgeneration`, `mimcontent4`,
    and `mimcontent4b`) represent clear instructions and specific context for the
    generative AI model, guiding its reasoning and predictions
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供的参数（`msystem_message_s1`、`mgeneration`、`mimcontent4`和`mimcontent4b`）代表了清晰的操作指令和特定上下文，为生成式AI模型提供指导，引导其推理和预测。
- en: This mirrors the approach described in Tang et al.’s paper, where the model
    receives structured input data and is prompted to infer missing trajectories or
    forecast next movements.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这与Tang等人论文中描述的方法相似，其中模型接收结构化输入数据，并被提示推断缺失的轨迹或预测下一步动作。
- en: 'Finally, the trajectory is added to the reasoning steps to provide a complete
    response:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将轨迹添加到推理步骤中，以提供完整的响应：
- en: '[PRE11]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Next, let’s develop the AI reasoning function that the handler registry will
    call upon.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们开发处理程序注册表将调用的AI推理函数。
- en: Preparing prediction instructions and the OpenAI function
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备预测指令和OpenAI函数
- en: In this section, we’ll develop the function that allows our GenAISys to process
    mobility-related user messages. Specifically, we’ll implement a function named
    `handle_mobility(user_message)` that integrates seamlessly into the AI functions
    of our GenAISys.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将开发一个函数，允许我们的GenAISys处理与移动相关的用户消息。具体来说，我们将实现一个名为`handle_mobility(user_message)`的函数，该函数可以无缝集成到我们的GenAISys的AI功能中。
- en: 'We’ll approach this task in two main parts:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这个任务分为两个主要部分：
- en: '**Message preparation:** Clearly structuring the messages that guide the generative
    AI model'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**消息准备：** 明确结构化引导生成式AI模型的指令'
- en: '**Implementing these messages in the OpenAI API call:** Leveraging the structured
    messages in the AI reasoning thread'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在OpenAI API调用中实现这些消息：** 利用AI推理线程中的结构化消息'
- en: This aligns closely with the trajectory completion methodology described in
    *Instruction-Tuning Llama-3-8B Excels in City-Scale Mobility Prediction*, where
    structured prompts significantly enhance predictive accuracy.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这与在*Instruction-Tuning Llama-3-8B Excels in City-Scale Mobility Prediction*中描述的轨迹完成方法紧密一致，其中结构化提示显著提高了预测准确性。
- en: Message preparation
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 消息准备
- en: 'We have four main message variables to send to the OpenAI function:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有四个主要的消息变量要发送到OpenAI函数：
- en: '`msystem_message_s1`: System message'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msystem_message_s1`: 系统消息'
- en: '`mgeneration`: Generation message'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mgeneration`: 生成消息'
- en: '`mimcontent4`: Additional context'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mimcontent4`: 补充背景信息'
- en: '`muser_message1`: User message'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`muser_message1`: 用户消息'
- en: They each serve a distinct purpose in the final prompt that goes to the LLM
    (GPT-4o or similar) for the prediction task. The system message will set the stage
    for the task.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 它们在最终发送到LLM（GPT-4o或类似）进行预测任务的提示中各自发挥着不同的作用。系统消息将为任务设定场景。
- en: System message
  id: totrans-184
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 系统消息
- en: 'The system message sets the overall context and constraints for the LLM, ensuring
    the model clearly understands its main objectives. The system message is stored
    in `msystem_message_s1`. We first specify the role of the model:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 系统消息设置了LLM的整体上下文和约束，确保模型清楚地理解其主要目标。系统消息存储在`msystem_message_s1`中。我们首先指定模型的角色：
- en: '[PRE12]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, we clearly detail the tasks expected in explicit natural language:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们明确详细地描述预期的任务，使用明确的自然语言：
- en: '[PRE13]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The output format is specified:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 指定输出格式：
- en: '[PRE14]json'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE14]json'
- en: '{"predicted_coordinates": [[day, timeslot, x, y], ...]}'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '{"predicted_coordinates": [[day, timeslot, x, y], ...]}'
- en: '[PRE15]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: These instructions mirror the approach of thepaper we are implementing—the system
    message clarifies the *role* of the model and the *task instructions*, effectively
    reducing confusion or *hallucination*. The paper shows how a well-structured instruction
    block significantly boosts accuracy. Now, we can build the generation message.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 这些指令反映了我们在实施的论文中的方法——系统消息澄清了模型的*角色*和*任务指令*，有效地减少了混淆或*幻觉*。论文展示了如何一个结构良好的指令块显著提高准确性。现在，我们可以构建生成消息。
- en: Generation message
  id: totrans-194
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 生成消息
- en: 'This secondary prompt provides generation instructions that will reinforce
    how the model should handle the data:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这个二级提示提供了生成指令，这将加强模型处理数据的处理方式：
- en: '[PRE16]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This prompt focuses on scanning for missing values, ensuring none are skipped.
    Then, it addresses the next step: provide the corrected trajectory with inferred
    missing values.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这个提示专注于扫描缺失值，确保没有遗漏。然后，它解决下一步：提供带有推断缺失值的修正轨迹。
- en: Additional context
  id: totrans-198
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 补充背景信息
- en: 'To make sure we obtain what we wish, we will now add additional context. The
    role of this additional context is to supplement the system/generation messages
    with domain-specific context:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保我们得到我们想要的，我们现在将添加额外的背景信息。这个额外背景信息的角色是补充系统/生成消息以提供特定领域的上下文：
- en: '[PRE17]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This additional context further guides the generative AI model toward precise
    predictions. We will now engineer a user message to further instruct the model.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这额外的背景信息进一步引导生成式AI模型进行精确预测。我们将现在构建一个用户消息以进一步指导模型。
- en: User message
  id: totrans-202
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 用户消息
- en: 'It’s time to emphasize the instructions further to make sure we provide even
    more context to the input. The user message expresses the user’s *explicit* request.
    It references the actual dataset with missing points. Realistically, in your code,
    you’ll append or embed the actual trajectory data (with `999, 999` placeholders)
    *before* passing it to the generative AI model:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候进一步强调指令，以确保我们提供更多的上下文给输入。用户消息表达了用户的*明确*请求。它引用了实际数据集（带有缺失点的数据集）。在实际代码中，你将在将其传递给生成式AI模型之前，将实际的轨迹数据（带有`999,
    999`占位符）附加或嵌入：
- en: '[PRE18]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Let’s fit the message together.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把这些消息组合起来。
- en: Fitting the messages together
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将消息组合在一起
- en: 'The four messages converge to direct the generative AI model:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 四个消息汇聚在一起，以指导生成式AI模型：
- en: The system message (`msystem_message_s1`) sets the stage and enforces top-level
    policies
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统消息（`msystem_message_s1`）设定场景并强制执行顶级策略
- en: The generation message (`mgeneration`) clarifies the approach for scanning,
    verifying, and predicting
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成消息（`mgeneration`）明确了扫描、验证和预测的方法
- en: The additional content (`mimcontent4`) ensures domain clarity
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 附加内容（`mimcontent4`）确保领域清晰
- en: Finally, the user’s message (`muser_message1`) includes the data that needs
    to be processed (the partial or missing trajectory)
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，用户的消息（`muser_message1`）包括需要处理的数据（部分或缺失的轨迹）
- en: Together, they form the structure of a zero-shot advanced generative model’s
    prediction.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 它们共同构成了零样本高级生成模型预测的结构。
- en: Now, let’s fit the message into the OpenAI API function. These messages are
    stored in `commons/cot_messages_c6.py` to be imported by the OpenAI API function.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将消息适配到OpenAI API函数中。这些消息存储在 `commons/cot_messages_c6.py` 中，以便由OpenAI API函数导入。
- en: Implementing the messages into the OpenAI API function
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将消息实现到OpenAI API函数中
- en: 'We will now create an AI mobility function for the *AI function* section in
    our GenAISys when we integrate it:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将它集成到我们的GenAISys时，我们将在 *AI函数* 部分创建一个AI移动性函数：
- en: '[PRE19]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We will now import the messages we stored in `cot_messages_c6.py`:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将存储在 `cot_messages_c6.py` 中的消息导入：
- en: '[PRE20]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'We’ll now complete the function so that we can call it further in this program
    by plugging the messages in the generative AI call and return the reasoning steps:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在完成函数，以便我们可以通过在生成式AI调用中插入消息来进一步调用此程序，并返回推理步骤：
- en: '[PRE21]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We can now call the mobility orchestrator and return its reasoning steps:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以调用移动性协调器并返回其推理步骤：
- en: '[PRE22]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We then create the `handle_mobility_orchestrator` function in the `reason.py`
    library we have been implementing in the previous chapters of this book. We first
    create the function:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们在本书前几章中实现的 `reason.py` 库中创建 `handle_mobility_orchestrator` 函数。我们首先创建函数：
- en: '[PRE23]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Then, we initialize the reasoning steps to display them in `VBox`:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将推理步骤初始化以在 `VBox` 中显示：
- en: '[PRE24]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'We then plug the messages received into the standard `make_openai_call` that
    we have been using in the previous chapters and return the steps:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将接收到的消息插入到我们在前几章中使用的标准 `make_openai_call` 中，并返回步骤：
- en: '[PRE25]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: We are now ready to run the trajectory simulation and prediction.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好运行轨迹模拟和预测。
- en: Trajectory simulation, analysis, and prediction
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 轨迹模拟、分析和预测
- en: With our mobility functions built and clearly defined, we can now run the complete
    trajectory pipeline—generating synthetic trajectory data, identifying missing
    coordinates, and predicting them with a zero-shot LLM. This section will demonstrate
    the end-to-end execution and interpretation of results.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的移动性函数构建和明确定义后，我们现在可以运行完整的轨迹管道——生成合成轨迹数据、识别缺失坐标，并使用零样本LLM进行预测。本节将演示端到端执行和结果解释。
- en: 'We’ll use a simple, generic prompt to initiate the mobility analysis:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个简单、通用的提示来启动移动性分析：
- en: '[PRE26]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This triggers the entire pipeline we set up previously, from synthetic data
    generation to coordinate predictions.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 这触发了我们之前设置的整个管道，从合成数据生成到坐标预测。
- en: 'To clearly illustrate the trajectory and missing points, the system generates
    a visual plot (`mobility.png`). We can display this image directly:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 为了清楚地说明轨迹和缺失点，系统生成一个视觉图表（`mobility.png`）。我们可以直接显示此图像：
- en: '[PRE27]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The output contains the grid, the trajectory, and the missing data, as shown
    in *Figure 8.3*:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 输出包含网格、轨迹和缺失数据，如图 *图8.3* 所示：
- en: '![Figure 8.3: Trajectory and missing data](img/B32304_08_3.png)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![图8.3：轨迹和缺失数据](img/B32304_08_3.png)'
- en: 'Figure 8.3: Trajectory and missing data'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.3：轨迹和缺失数据
- en: 'The output is plotted with colors, arrows, and text as designs:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 输出以颜色、箭头和文本作为设计进行绘制：
- en: Green is the starting point
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绿色是起点
- en: The trajectory line is drawn in blue
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轨迹线用蓝色绘制
- en: Quiver arrows (`plt.quiver`) in red show the direction from each point to the
    next
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 红色箭头（`plt.quiver`）显示从每个点到下一个点的方向
- en: Missing data points are highlighted with an **x** marker in magenta
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失数据点用**x**标记突出显示，颜色为洋红色
- en: 'Then, we print the raw output:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们打印原始输出：
- en: '[PRE28]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The output displayed is a single, unstructured line containing trajectory data
    and predictions:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 显示的输出是包含轨迹数据和预测的单行、非结构化内容：
- en: '[PRE29]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Clearly, we need to present this data more intuitively. Let’s create a function
    to display a nice, formatted response:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们需要更直观地展示这些数据。让我们创建一个函数来显示一个漂亮、格式化的响应：
- en: '[PRE30]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The code breaks the output into well-presented lines:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 代码将输出分解为展示良好的行：
- en: '[PRE31]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We then call the function to obtain the formatted output:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们调用函数以获取格式化输出：
- en: '[PRE32]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The output contains the three-step process we built:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 输出包含我们构建的三个步骤过程：
- en: Display the trajectory.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示轨迹。
- en: Isolate the missing data.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将缺失数据隔离。
- en: Make predictions for the missing data.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对缺失数据进行预测。
- en: 'The output first contains the trajectory:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 输出首先包含轨迹：
- en: '[PRE33]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Note the records with missing data containing `999` for *x,y* coordinates.
    Take the following example:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 注意包含`999`作为*x,y*坐标的缺失数据的记录。以下是一个示例：
- en: '[PRE34]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The second step is the OpenAI GPT-4o thinking through the problem to isolate
    the missing data and display it:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步是OpenAI GPT-4o通过思考问题来隔离缺失数据并显示它：
- en: '[PRE35]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The third step is for the OpenAI generative AI to predict the missing data:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 第三步是让OpenAI的生成式AI预测缺失的数据：
- en: '[PRE36]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The output is displayed and the predictions with explanations:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示并带有解释的预测：
- en: '[PRE37]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The output also contains the predictions in JSON:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 输出还包含JSON格式的预测：
- en: '[PRE38]json'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE38]json'
- en: '{'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"predicted_coordinates": ['
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '"predicted_coordinates": ['
- en: '[228, 6, 69, 79],'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[228, 6, 69, 79],'
- en: '[228, 32, 69, 72],'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[228, 32, 69, 72],'
- en: '[228, 9, 64, 72],'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[228, 9, 64, 72],'
- en: '[228, 45, 58, 81],'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[228, 45, 58, 81],'
- en: '[228, 47, 58, 79]'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[228, 47, 58, 79]'
- en: ']'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: '}'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE39]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The results are acceptable and show that recent generative AI models have zero-shot
    capabilities to make predictions on missing data in sequences.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是可以接受的，并显示出最近的生成式AI模型具有零样本能力，可以对序列中的缺失数据进行预测。
- en: However, the real power lies in extending these predictions to a wide range
    of real-world applications. The next logical step is to integrate this functionality
    into our GenAISys interface, allowing users to customize prompts easily to suit
    diverse trajectory-related use cases.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，真正的力量在于将这些预测扩展到广泛的现实世界应用。下一步合乎逻辑的步骤是将此功能集成到我们的GenAISys界面中，使用户能够轻松自定义提示以适应各种与轨迹相关的用例。
- en: Let’s move forward to implement this user-friendly integration.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续前进，实现这一用户友好的集成。
- en: Adding mobility intelligence to the GenAISys
  id: totrans-284
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将移动性智能添加到GenAISys
- en: We will now integrate the trajectory simulation and prediction component into
    our GenAISys, allowing users to design domain-specific prompts. At the user interface
    level, we’ll simplify the terminology from “trajectory simulation and prediction”
    to the user-friendly term “**mobility**.” This shorter label is more intuitive
    for users, though technical documentation can maintain detailed terminology as
    required. Then it will be up to the users to decide what domain-specific terminology
    they wish to see in the interface.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将把轨迹模拟和预测组件集成到我们的GenAISys中，使用户能够设计特定领域的提示。在用户界面层面，我们将把“轨迹模拟和预测”这一术语简化为用户友好的“**移动性**”。这个更短的标签对用户来说更直观，尽管技术文档可以根据需要保持详细的术语。然后，用户将决定他们希望在界面中看到哪些特定领域的术语。
- en: 'We will add the mobility function we built in `1_Trajectory_simulation_and_prediction.ipynb`
    to the GenAISys at three levels, as shown in *Figure 8.4*:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把在`1_Trajectory_simulation_and_prediction.ipynb`中构建的移动性函数以三个级别添加到GenAISys中，如图8.4所示：
- en: '**IPython interface**: Adding the mobility feature to the user interface'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**IPython界面**：将移动性功能添加到用户界面'
- en: '**Handler selection mechanism**: Adding the mobility handler to the handler
    registry'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**处理程序选择机制**：将移动性处理程序添加到处理程序注册表中'
- en: '**AI functions**: Implementing the mobility feature in the AI functions library'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**AI功能**：在AI功能库中实现移动性功能'
- en: '![Figure 8.4: Integrating the trajectory simulation and prediction pipeline
    into the GenAISys](img/B32304_08_4.png)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: '![图8.4：将轨迹模拟和预测管道集成到GenAISys中](img/B32304_08_4.png)'
- en: 'Figure 8.4: Integrating the trajectory simulation and prediction pipeline into
    the GenAISys'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4：将轨迹模拟和预测管道集成到GenAISys中
- en: Open the `2_GenAISys_Mobility.ipynb` notebook. If needed, review the handler
    selection mechanism described in [*Chapter 7*](Chapter_7.xhtml#_idTextAnchor191)
    before continuing here. The notebook is not designed for voice outputs of lists
    of coordinates. As such, gTTS is best deactivated by default with `use_gtts =
    False` at the top of the notebook.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`2_GenAISys_Mobility.ipynb`笔记本。如果需要，在继续此处之前，回顾一下[*第7章*](Chapter_7.xhtml#_idTextAnchor191)中描述的处理程序选择机制。该笔记本不是为坐标列表的语音输出而设计的。因此，默认情况下最好通过在笔记本顶部设置`use_gtts
    = False`来禁用gTTS。
- en: Let’s first enhance the IPython interface.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先增强IPython界面。
- en: IPython interface
  id: totrans-294
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IPython界面
- en: 'The mobility option is primarily added to these parts of the IPython interface:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 移动性选项主要添加到IPython界面的以下部分：
- en: To the `instruct_selector` dropdown with **Mobility** as one of its possible
    values
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到`instruct_selector`下拉菜单，其中**移动性**是其可能的值之一
- en: To the display logic inside `update_display()`, which checks whether the user
    selected **Mobility** and, if so, displays the `mobility.png` file
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到`update_display()`内部的显示逻辑，该逻辑检查用户是否选择了**移动性**，如果是，则显示`mobility.png`文件
- en: To the handling logic in `handle_submission()`, where the code prints `"Thinking..."`
    if `instruct_selector.value` is `"Analysis"`, `"Generation"`, or `"Mobility"`
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`handle_submission()`的处理逻辑中，如果`instruct_selector.value`是`"Analysis"`、`"Generation"`或`"Mobility"`，则代码会打印`"Thinking..."`
- en: The mobility image (i.e., `mobility.png`) is only displayed when the **Files**
    widget is checked
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动性图像（即`mobility.png`）仅在**文件**小部件被选中时显示
- en: We will begin by adding the option to the interface. We will create and add
    an option to `instruct_selector` and then handle the trajectory image display
    and submission code. Let’s begin with the option in the interface.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先将此选项添加到界面中。我们将创建并添加一个选项到`instruct_selector`，然后处理轨迹图像显示和提交代码。让我们从界面中的选项开始。
- en: Creating the option in instruct_selector
  id: totrans-301
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在`instruct_selector`中创建选项
- en: 'We will first add the **Mobility** option to the **Reasoning** drop-down list,
    as illustrated in *Figure 8.5*:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先将**移动性**选项添加到**推理**下拉列表中，如图8.5所示：
- en: '[PRE40]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '![A screenshot of a computer  AI-generated content may be incorrect.](img/B32304_08_5.png)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图 AI生成的内容可能不正确。](img/B32304_08_5.png)'
- en: 'Figure 8.5: Adding Mobility to the dropdown'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.5：将移动性添加到下拉列表
- en: 'We can then select **Mobility**, as shown in *Figure 8.6*:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以像图8.6所示那样选择**移动性**：
- en: '![Figure 8.6: Selecting Mobility to activate the pipeline](img/B32304_08_6.png)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![图8.6：选择移动性以激活管道](img/B32304_08_6.png)'
- en: 'Figure 8.6: Selecting Mobility to activate the pipeline'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.6：选择移动性以激活管道
- en: '**Mobility** is now selected. Notice the default model is set to **OpenAI**;
    however, you may extend this to other models, such as DeepSeek, during later phases,
    depending on your project needs.'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '**移动性**现在被选中。注意默认模型设置为**OpenAI**；然而，根据项目需求，在后续阶段，您可能将其扩展到其他模型，如DeepSeek。'
- en: Let’s now handle the “mobility” value when we update the display.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来处理更新显示时的“移动性”值。
- en: Handling the “mobility” value in update_display()
  id: totrans-311
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在`update_display()`中处理“移动性”值
- en: 'We must ensure the generated trajectory visualization (`mobility.png`) is automatically
    shown when the **Mobility** option is selected and the **Files** checkbox is enabled:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须确保在**移动性**选项被选中且**文件**复选框被启用时，生成的轨迹可视化（`mobility.png`）会自动显示：
- en: '[PRE41]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The image created by the trajectory simulation will be displayed. We now need
    to enhance the submission logic outputs to run the AI functions.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 轨迹模拟创建的图像将被显示。我们现在需要增强提交逻辑输出以运行AI函数。
- en: handle_submission() logic
  id: totrans-315
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`handle_submission()`逻辑'
- en: 'The `chat_with_gpt` function is called as before but it interacts directly
    with the handler selection mechanism (described in the next section*)*:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '`chat_with_gpt`函数像之前一样被调用，但它直接与处理程序选择机制（在下一节中描述）交互*：'
- en: '[PRE42]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'However, we will add the mobility functionality to the submission handling
    function:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们将移动性功能添加到提交处理函数中：
- en: '[PRE43]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: We will now add the mobility function to the handler selection mechanism.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将移动性函数添加到处理程序选择机制中。
- en: Handler selection mechanism
  id: totrans-321
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理程序选择机制
- en: 'The handler selection mechanism contains two main parts. The first component,
    `chat_with_gpt`, remains unchanged from previous chapters and is directly called
    by the IPython interface:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 处理程序选择机制包含两个主要部分。第一个组件`chat_with_gpt`与之前章节保持不变，并由IPython界面直接调用：
- en: '[PRE44]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The second component is the handler registry, to which we’ll now add the newly
    developed mobility handler:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个组件是处理程序注册表，我们将现在添加新开发的移动性处理程序：
- en: '[PRE45]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: This ensures that when users select **Mobility** from the **Reasoning** dropdown
    in the interface, the appropriate handler is activated automatically. We can see
    that the handler selection mechanism can be seamlessly scaled. Let’s now add the
    functions we developed for this mobility function to the AI functions library.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 这确保了当用户从界面中的**推理**下拉列表中选择**移动性**时，相应的处理程序会自动激活。我们可以看到处理程序选择机制可以无缝扩展。现在让我们将我们为这个移动性函数开发的函数添加到AI函数库中。
- en: AI functions
  id: totrans-327
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AI函数
- en: 'Next, we’ll integrate the trajectory simulation and prediction functions—previously
    developed in the *Building the trajectory simulation and prediction* section—into
    the AI functions library within the notebook:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将集成轨迹模拟和预测函数——之前在*构建轨迹模拟和预测*部分中开发的——到笔记本中的AI函数库中：
- en: '[PRE46]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: This function is added just above the beginning of the functions called by the
    handler selection mechanism.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数添加在处理程序选择机制调用的函数之前。
- en: '[PRE47]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: This function is also added just above the beginning of the functions called
    by the handler selection mechanism.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能也添加在处理选择机制调用的函数的开始部分之上。
- en: 'We now add the `handle_mobility` function we developed as well, and add `**kwargs`
    to process the arguments sent by the handler mechanism selection function:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在还添加了我们开发的 `handle_mobility` 函数，并为处理处理机制选择函数发送的参数添加了 `**kwargs**`：
- en: '[PRE48]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: The code will run exactly like in the *Building the trajectory simulation and
    prediction function* section. With this setup, the mobility functionality is fully
    integrated into the GenAISys ecosystem, ready to be triggered via the intuitive
    IPython interface. Let’s now get the user involved.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 代码将像在 *构建轨迹模拟和预测函数* 部分中一样运行。使用此设置，移动功能已完全集成到 GenAISys 生态系统中，准备好通过直观的 IPython
    界面触发。现在让我们让用户参与进来。
- en: Running the mobility-enhanced GenAISys
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行增强移动性的 GenAISys
- en: In this section, we will demonstrate the mobility-enhanced GenAISys by running
    two distinct scenarios—a delivery use case and a fire disaster scenario—to illustrate
    the versatility of trajectory simulations and predictions, inspired by the work
    of Tang et al. (2024).
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过运行两个不同的场景——一个交付用例和一个火灾灾害场景——来展示增强移动性的 GenAISys，以说明轨迹模拟和预测的通用性，这受到了
    Tang 等人（2024）工作的启发。
- en: 'Open the `2_GenAISys_Mobility.ipynb` notebook. First, deactivate DeepSeek in
    the initial setup cell (you will only need a CPU):'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 `2_GenAISys_Mobility.ipynb` 笔记本。首先，在初始设置单元中禁用 DeepSeek（你将只需要 CPU）：
- en: '[PRE49]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Then run the whole notebook. When it’s finished, go to the *Running the interface*
    section in the notebook. We need to activate **Agent**, **Files**, and **Mobility**,
    and leave the default model as **OpenAI**.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行整个笔记本。完成后，转到笔记本中的 *运行界面* 部分。我们需要激活 **Agent**、**Files** 和 **Mobility**，并将默认模型保留为
    **OpenAI**。
- en: '![Figure 8.7: Running a delivery check with the mobility function](img/B32304_08_7.png)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![图8.7：使用移动功能运行交付检查](img/B32304_08_7.png)'
- en: 'Figure 8.7: Running a delivery check with the mobility function'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.7：使用移动功能运行交付检查
- en: The synthetic trajectory simulates real-world input data and generates new data
    each time it runs. The explanations in this section reflect just one of these
    runs. When you execute the program, you’ll obtain a new output every time, simulating
    real-time data.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 合成轨迹模拟真实世界输入数据，每次运行时都会生成新的数据。本节中的说明仅反映其中的一次运行。当你执行程序时，你将每次获得新的输出，模拟实时数据。
- en: '**Limit**: Currently, the trajectory file is overwritten whenever a new trajectory
    is generated. If required, this functionality can be expanded during a project
    to save multiple files instead.'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '**限制**：目前，每当生成新的轨迹时，轨迹文件就会被覆盖。如果需要，此功能可以在项目期间扩展，以保存多个文件。'
- en: Let’s first explore the mobility function with a delivery example.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先通过一个交付示例来探索移动功能。
- en: Production-delivery verification scenario
  id: totrans-346
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生产交付验证场景
- en: To run the production-delivery verification, we simply need to activate **Agent**
    and **Files**, **Mobility** as the reasoning function, and **OpenAI** as the model.
    Then, click on **SEND** and let the AI do the work. In this case, we can imagine
    that an online travel agency wants to deliver customized goodies to its customers
    before a trip, such as a personalized travel bag with their name printed on it,
    a tourist guide, and a discount booklet to visit museums.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行生产交付验证，我们只需激活 **Agent** 和 **Files**，**Mobility** 作为推理功能，以及 **OpenAI** 作为模型。然后，点击
    **SEND** 并让 AI 做工作。在这种情况下，我们可以想象一个在线旅行社想在旅行前向其客户发送定制的礼物，例如印有他们名字的个性化旅行包、旅游指南和博物馆折扣券。
- en: 'The GenAISys will begin to think, as displayed at the bottom of the interface,
    as shown in *Figure 8.8*:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: GenAISys 将开始思考，如界面底部所示，如图 *图8.8*：
- en: '![Figure 8.8: The GenAISys has begun to think](img/B32304_08_8.png)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![图8.8：GenAISys 已开始思考](img/B32304_08_8.png)'
- en: 'Figure 8.8: The GenAISys has begun to think'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.8：GenAISys 已开始思考
- en: 'The output first displays the synthetic trajectory, which can come from any
    source, such as real-time data, databases, and sensors. The synthetic trajectory,
    in this case, is displayed under the user message that indicates the title of
    the discussion since the mobility function itself is autonomous:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 输出首先显示合成轨迹，它可以来自任何来源，例如实时数据、数据库和传感器。在这种情况下，合成轨迹显示在用户消息下方，该消息指示讨论的标题，因为移动功能本身是自主的：
- en: '[PRE50]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Then, the generative AI function takes over and indicates that it is processing
    the missing data in the trajectory:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，生成式 AI 函数接管并指示它正在处理轨迹中的缺失数据：
- en: '[PRE51]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'When it is finished thinking, it provides the list of missing data:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 当它完成思考后，它提供了缺失数据的列表：
- en: '[PRE52]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'The GenAISys then provides its prediction:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: GenAISys 然后提供其预测：
- en: '[PRE53]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'A structured JSON output is provided for integration with other systems or
    further processing:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了结构化的 JSON 输出，以便与其他系统集成或进一步处理：
- en: '[PRE54]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'The original trajectory is also displayed for the user to make decisions, as
    shown in *Figure 8.9*:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以看到原始轨迹，以便做出决策，如图 *图 8.9* 所示：
- en: '![Figure 8.9: The original trajectory with missing data](img/B32304_08_9.png)'
  id: totrans-362
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.9：带有缺失数据的原始轨迹](img/B32304_08_9.png)'
- en: 'Figure 8.9: The original trajectory with missing data'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.9：带有缺失数据的原始轨迹
- en: 'Now, three **subject-matter expert** (**SME**) agents can intervene:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，三个 **主题专家**（**SME**）代理可以介入：
- en: '**Human user**: A person evaluates the data, validates predictions, or provides
    feedback'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**人类用户**：一个人评估数据，验证预测或提供反馈'
- en: '**AI agent**: An additional function can be added. The trajectory grid can
    be labeled, and instructions can be provided to an AI function. The instructions
    will rely on the coordinate sections of the grid to generate further functions
    or messages.'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AI 代理**：可以添加一个附加功能。轨迹网格可以进行标注，并且可以向 AI 函数提供指令。这些指令将依赖于网格的坐标区域来生成进一步的功能或消息。'
- en: '**Hybrid (human-user + AI-agent)**: Once a human user has created a number
    of prompts successfully, it may be beneficial to automate some of them to alleviate
    the human user’s workload if accepted within the scope of the project.'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**混合（人类用户 + AI 代理）**：一旦人类用户成功创建了多个提示，如果项目范围内接受，自动化其中一些可能有助于减轻人类用户的负担。'
- en: 'Let’s now deactivate the **Mobility** function and **Files** display to put
    the cutting-edge generative AI to work, as shown in *Figure 8.10*:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们停用 **移动性** 功能和 **文件** 显示，以便将前沿的生成式 AI 投入工作，如图 *图 8.10* 所示：
- en: '![Figure 8.10: Generative AI takes over and generates messages](img/B32304_08_10.png)'
  id: totrans-369
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.10：生成式 AI 取代并生成消息](img/B32304_08_10.png)'
- en: 'Figure 8.10: Generative AI takes over and generates messages'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.10：生成式 AI 取代并生成消息
- en: 'At this stage, a human user can interpret the AI’s output and craft a tailored
    prompt. For instance, consider this scenario:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，人类用户可以解释 AI 的输出并制定一个定制的提示。例如，考虑以下场景：
- en: '[PRE55]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Here’s an example of a domain-specific prompt to address the issue:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个特定领域的提示示例，以解决该问题：
- en: '[PRE56]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: As demonstrated, such a prompt could easily be adapted to various domains. By
    simply adjusting the labeling of the coordinates and the intended recipient, you
    could generate a diverse array of messages. The exact scope and application depend
    entirely on the requirements of your specific project.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 如所示，这样的提示可以很容易地适应各种领域。只需调整坐标的标注和预期的接收者，就可以生成各种消息。确切的范围和应用完全取决于您特定项目的需求。
- en: 'The generative AI’s response to the preceding prompt was acceptable and detailed:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 生成式 AI 对先前提示的响应是可以接受的且详细的：
- en: '[PRE57]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Next, without restarting the session, let’s ask our GenAISys how this methodology
    could be applied to a fire disaster scenario.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，不重新启动会话，让我们询问我们的 GenAISys 这种方法如何应用于火灾场景。
- en: Fire disaster scenario
  id: totrans-379
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 火灾场景
- en: 'Now, let’s explore how the concepts of trajectory analysis, missing coordinates,
    and predicted coordinates can be leveraged in disaster prediction scenarios, specifically
    in cases such as forest fires. We’ll submit this scenario to the GenAISys and
    analyze its insights:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们探讨如何在灾难预测场景中利用轨迹分析、缺失坐标和预测坐标的概念，特别是在森林火灾等情况下。我们将提交此场景给 GenAISys 并分析其见解：
- en: '[PRE58]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: This structured output offers valuable insights, enabling disaster response
    teams to swiftly identify and respond to potential threats based on trajectory
    analysis, pinpointed data gaps, and predictive coordinates.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 这种结构化输出提供了宝贵的见解，使灾害响应团队能够根据轨迹分析、确定的数据差距和预测坐标迅速识别和应对潜在的威胁。
- en: This methodology demonstrates that we can craft numerous specialized prompts
    across domains. Despite inevitable limitations, the era of GenAISys is just beginning,
    continually expanding into new, uncharted applications.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法表明，我们可以在各个领域创建许多专业化的提示。尽管存在不可避免的限制，但 GenAISys 时代才刚刚开始，不断扩展到新的、未知的领域。
- en: Summary
  id: totrans-384
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we began by recognizing that robust trajectory analysis is
    essential for applications ranging from deliveries and epidemic forecasting to
    city-scale planning. Guided by the innovative approach outlined in Tang, P., Yang,
    C., Xing, T., Xu, X., Jiang, R., and Sezaki, K. (2024), we emphasized the transformative
    potential of text-based LLMs for mobility prediction. Their framework directed
    our design of a method capable of intelligently filling gaps in real-time synthetic
    datasets through carefully structured prompts.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先认识到，稳健的轨迹分析对于从配送和流行病预测到城市规模规划的各种应用至关重要。在Tang, P.，Yang, C.，Xing, T.，Xu,
    X.，Jiang, R.和Sezaki, K.（2024）概述的创新方法指导下，我们强调了基于文本的LLM在移动预测中的变革潜力。他们的框架指导我们设计了一种方法，能够通过精心构建的提示，在实时合成数据集中智能地填补间隔。
- en: We then built a Python-based trajectory simulator that randomizes movement on
    a grid, mirroring typical user paths. It assigns day and timeslot indices, which
    enabled us to capture the temporal aspect of mobility. Critically, we inserted
    synthetic gaps marked as `999, 999`, approximating real-world data dropouts or
    missing logs. Next, we integrated an orchestrator function that adds instructions
    with this synthetic data before directing them to an LLM, in this case, an OpenAI
    GPT-4o model. The orchestrator composes prompts that accurately reflect the trajectory
    dataset, focusing the model’s attention on flagged gaps. It employs a chain-of-thought
    routine, noting missing points for debugging prior to generating final JSON outputs.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 我们随后构建了一个基于Python的轨迹模拟器，该模拟器在网格上随机化移动，反映了典型的用户路径。它分配了日和时间段索引，这使得我们能够捕捉到移动的时间方面。关键的是，我们插入了标记为`999,
    999`的合成间隔，这近似了现实世界中的数据缺失或日志缺失。接下来，我们集成了一个编排器功能，在将数据发送到LLM（在这种情况下是OpenAI GPT-4o模型）之前，使用这些合成数据添加指令。编排器编写了准确反映轨迹数据集的提示，将模型的注意力集中在标记的间隔上。它采用了一种思维链流程，在生成最终JSON输出之前，记录缺失的点以进行调试。
- en: 'We then merged this pipeline into the GenAISys environment by adding a dedicated
    mobility handler in the multihandler system. This handler streamlines the full
    process: trajectory generation, model inference, and visualization all in one
    place. Users can prompt the system to evaluate missing coordinates and instantly
    see the updated paths superimposed on a static city grid. Ultimately, we demonstrated
    that robust GenAISys forecasting need not remain abstract when grounded in purposeful,
    prompt design.'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 我们随后通过在多处理系统中添加一个专门的移动处理程序，将此管道合并到GenAISys环境中。此处理程序简化了整个流程：轨迹生成、模型推理和可视化都在一个地方完成。用户可以提示系统评估缺失的坐标，并立即看到叠加在静态城市网格上的更新路径。最终，我们证明了当基于有目的的提示设计时，稳健的GenAISys预测不必保持抽象。
- en: In the next chapter, we will open the GenAISys to the world with an external
    service that will lead us to enhance our system with security and moderation functionality.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将通过一个外部服务将GenAISys推向世界，这将使我们能够通过增强安全性和监管功能来改进我们的系统。
- en: Questions
  id: totrans-389
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: A trajectory can only be a physical path in a city. (True or False)
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 轨迹只能是一个城市中的物理路径。（对或错）
- en: Synthetic data can accelerate GenAISys simulation design (True or False)
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 合成数据可以加速GenAISys模拟设计。（对或错）
- en: Generative AI cannot go beyond natural language sequences. (True or False)
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成式AI不能超越自然语言序列。（对或错）
- en: Only AI experts can run GenAISys. (True or False)
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 只有AI专家才能运行GenAISys。（对或错）
- en: Generative AI can now help us with prompt design. (True or False)
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成式AI现在可以帮助我们进行提示设计。（对或错）
- en: Trajectory simulation and prediction cannot help with fire disasters. (True
    or False)
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 轨迹模拟和预测不能帮助火灾灾害。（对或错）
- en: GenAISys’s potential is expanding at full speed and can be applied to a growing
    number of domains and tasks. (True or False)
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GenAISys的潜力正在全速扩张，可以应用于越来越多的领域和任务。（对或错）
- en: References
  id: totrans-397
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: P. Tang, C. Yang, T. Xing, X. Xu, R. Jiang, and K. Sezaki. 2024\. “Instruction-Tuning
    Llama-3-8B Excels in City-Scale Mobility Prediction.” *arXiv*, October 2024\.
    [https://arxiv.org/abs/2410.23692](https://arxiv.org/abs/2410.23692).
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P. Tang, C. Yang, T. Xing, X. Xu, R. Jiang, and K. Sezaki. 2024. “Instruction-Tuning
    Llama-3-8B Excels in City-Scale Mobility Prediction.” *arXiv*, October 2024. [https://arxiv.org/abs/2410.23692](https://arxiv.org/abs/2410.23692).
- en: 'Renhe Jiang, Xuan Song, Zipei Fan, Tianqi Xia, Quanjun Chen, Satoshi Miyazawa,
    and Ryosuke Shibasaki. 2018\. “DeepUrbanMomentum: An Online Deep-Learning System
    for Short-Term Urban Mobility Prediction.” *Proceedings of the AAAI Conference
    on Artificial Intelligence* 32, no. 1: 784–791\. [https://ojs.aaai.org/index.php/AAAI/article/view/11338](https://ojs.aaai.org/index.php/AAAI/article/view/11338).'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任河江，宋璇，范子培，夏天奇，陈全君，宫崎胜，以及柴崎亮祐。2018。“DeepUrbanMomentum：一种用于短期城市出行预测的在线深度学习系统。”*《AAAI
    会议人工智能论文集》* 32，第 1 期：784–791。[https://ojs.aaai.org/index.php/AAAI/article/view/11338](https://ojs.aaai.org/index.php/AAAI/article/view/11338)。
- en: 'Jie Feng, Yong Li, Chao Zhang, Funing Sun, Fanchao Meng, Ang Guo, and Depeng
    Jin. 2018\. “DeepMove: Predicting Human Mobility with Attentional Recurrent Networks.”
    *Proceedings of the 2018 World Wide Web Conference*, Lyon, France, April 23–27,
    2018, 1459–1468\. [https://doi.org/10.1145/3178876.3186058](https://doi.org/10.1145/3178876.3186058).'
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 风杰，李勇，张超，孙凤宁，孟凡超，郭昂，以及金德鹏。2018。“DeepMove：使用注意力循环网络预测人类出行。”*《2018 年全球网页会议论文集》*，法国里昂，2018
    年 4 月 23 日至 27 日，1459–1468。[https://doi.org/10.1145/3178876.3186058](https://doi.org/10.1145/3178876.3186058)。
- en: Further reading
  id: totrans-401
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Haru Terashima, Naoki Tamura, Kazuyuki Shoji, Shin Katayama, Kenta Urano, Takuro
    Yonezawa, and Nobuo Kawaguchi. 2023\. “Human Mobility Prediction Challenge: Next
    Location Prediction Using Spatiotemporal BERT.” *Proceedings of the 1st International
    Workshop on the Human Mobility Prediction Challenge*, Tokyo, Japan, September
    18–21, 2023, 1–6\. [https://dl.acm.org/doi/10.1145/3615894.3628498](https://dl.acm.org/doi/10.1145/3615894.3628498).'
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 岛田晴人，玉村直树，塩崎和幸，片山真，浦野健太，米良隆，以及川口信夫。2023。“人类出行预测挑战：使用时空 BERT 进行下一位置预测。”*《第 1
    届国际人类出行预测挑战研讨会论文集》*，日本东京，2023 年 9 月 18 日至 21 日，第 1–6 页。[https://dl.acm.org/doi/10.1145/3615894.3628498](https://dl.acm.org/doi/10.1145/3615894.3628498)。
- en: Subscribe for a Free eBook
  id: totrans-403
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 免费电子书订阅
- en: New frameworks, evolving architectures, research drops, production breakdowns—*AI_Distilled*
    filters the noise into a weekly briefing for engineers and researchers working
    hands-on with LLMs and GenAI systems. Subscribe now and receive a free eBook,
    along with weekly insights that help you stay focused and informed.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 新框架、演进的架构、研究论文、生产故障——*AI_Distilled* 将噪音过滤成每周简报，供与 LLM 和 GenAI 系统实际操作的工程师和研究人员阅读。现在订阅，即可获得免费电子书，以及每周的洞察力，帮助您保持专注并获取信息。
- en: Subscribe at [https://packt.link/TRO5B](Chapter_8.xhtml) or scan the QR code
    below.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [https://packt.link/TRO5B](Chapter_8.xhtml) 或扫描下面的二维码进行订阅。
- en: '![](img/Newsletter_QR_Code1.png)'
  id: totrans-406
  prefs: []
  type: TYPE_IMG
  zh: '![Newsletter_QR_Code1](img/Newsletter_QR_Code1.png)'
