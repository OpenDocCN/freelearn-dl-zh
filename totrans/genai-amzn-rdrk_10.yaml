- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Developing Intelligent Agents with Amazon Bedrock
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon Bedrock 开发智能代理
- en: In this chapter, readers will explore the concept of agents in **generative
    artificial intelligence** (**GenAI**), diving into their importance, benefits,
    and the various tools and types available.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，读者将探索 **生成式人工智能**（**GenAI**）中的代理概念，深入了解其重要性、益处以及可用的各种工具和类型。
- en: Readers will learn to build knowledge bases and develop agents specifically
    designed for Amazon Bedrock, gaining insights into configurations, testing, and
    deployment strategies. Additionally, the chapter will showcase real-world industrial
    use cases, highlighting the practical applications of Agents in conjunction with
    Amazon Bedrock.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 读者将学习构建知识库并开发专门为 Amazon Bedrock 设计的代理，深入了解配置、测试和部署策略。此外，本章将展示现实世界的工业用例，突出代理与
    Amazon Bedrock 结合的实际应用。
- en: Through hands-on examples, readers will acquire the skills to describe the role
    of agents, integrate LangChain Agents with Amazon Bedrock, understand Agents’
    configurations for Amazon Bedrock, and build, test, and deploy agents tailored
    to this service. Furthermore, they will explore diverse industrial use cases,
    demonstrating the versatility and potential of Agents in enhancing the capabilities
    of Amazon Bedrock.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实际案例，读者将获得描述代理角色、将 LangChain 代理与 Amazon Bedrock 集成、理解代理在 Amazon Bedrock 中的配置、构建、测试和部署针对此服务的代理的技能。此外，他们还将探索各种工业用例，展示代理在增强
    Amazon Bedrock 功能方面的多功能性和潜力。
- en: 'Specifically, readers will gain a clear understanding of the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，读者将清楚地了解以下内容：
- en: What are Agents?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是代理？
- en: GenAI agent personas, roles, and use-case scenarios
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GenAI 代理角色、职责和用例场景
- en: Amazon Bedrock integration with LangChain Agents
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Bedrock 与 LangChain 代理的集成
- en: Agents for Amazon Bedrock
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Bedrock 代理
- en: Deploying an Agent for Amazon Bedrock
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Amazon Bedrock 上部署代理
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter requires you to have access to an AWS account. If you don’t have
    one already, you can go to [https://aws.amazon.com/getting-started/](https://aws.amazon.com/getting-started/)
    and create an AWS account.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章要求您拥有 AWS 账户访问权限。如果您还没有，可以访问 [https://aws.amazon.com/getting-started/](https://aws.amazon.com/getting-started/)
    创建 AWS 账户。
- en: 'Secondly, you will need to install and configure AWS CLI ([https://aws.amazon.com/cli/](https://aws.amazon.com/cli/))
    after you create an account, which will be needed to access Amazon Bedrock FMs
    from your local machine. Since the majority chunk of code cells we will be executing
    is based in Python, setting up an AWS Python SDK (Boto3) ([https://docs.aws.amazon.com/bedrock/latest/APIReference/welcome.html](https://docs.aws.amazon.com/bedrock/latest/APIReference/welcome.html))
    would be beneficial at this point. You can carry out the Python setup in the following
    manner: install it on your local machine, or use AWS Cloud9, or utilize AWS Lambda,
    or leverage Amazon SageMaker.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，您需要在创建账户后安装和配置 AWS CLI ([https://aws.amazon.com/cli/](https://aws.amazon.com/cli/))，这将用于从您的本地机器访问
    Amazon Bedrock FMs。由于我们将执行的大多数代码单元基于 Python，此时设置 AWS Python SDK（Boto3）([https://docs.aws.amazon.com/bedrock/latest/APIReference/welcome.html](https://docs.aws.amazon.com/bedrock/latest/APIReference/welcome.html))
    将非常有用。您可以通过以下方式执行 Python 设置：在您的本地机器上安装它，或使用 AWS Cloud9，或利用 AWS Lambda，或利用 Amazon
    SageMaker。
- en: Note
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 备注
- en: There will be a charge associated with the invocation and customization of Amazon
    Bedrock FMs. Please refer to [https://aws.amazon.com/bedrock/pricing/](https://aws.amazon.com/bedrock/pricing/)
    to learn more.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Amazon Bedrock FMs 的调用和定制将产生费用。请参阅 [https://aws.amazon.com/bedrock/pricing/](https://aws.amazon.com/bedrock/pricing/)
    了解更多信息。
- en: What are Agents?
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是代理？
- en: In the dynamic landscape of AI, a new category of sophisticated systems has
    emerged, poised to significantly impact our relationship with technology. These
    entities, known as **GenAI agents**, represent a formidable advancement characterized
    by their autonomy, adaptability, and cognitive abilities.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在人工智能的动态领域中，一类复杂的新系统已经出现，它们将显著影响我们与技术的关系。这些被称为 **GenAI 代理** 的实体，代表了自主性、适应性和认知能力的重大进步。
- en: GenAI agents are software constructs engineered to comprehend and execute complex
    tasks with minimal human oversight. They demonstrate a remarkable capacity to
    assess objectives, devise strategic plans, and execute actions to achieve goals,
    all while continuously learning and refining their approaches based on feedback.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: GenAI代理是经过工程设计的软件构造，旨在以最小的人类监督理解并执行复杂任务。它们展现出评估目标、制定战略计划并采取行动以实现目标的能力，同时不断根据反馈学习和改进方法。
- en: What distinguishes GenAI agents from previous iterations is their multifaceted
    nature, combining reactivity, proactivity, learning capabilities, and social adeptness.
    This unique amalgamation enables them to promptly respond to changing environments,
    anticipate future needs, evolve through ongoing learning processes, and seamlessly
    collaborate with humans and fellow agents.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 区分GenAI代理与先前迭代的特点是其多面性，结合了反应性、主动性、学习能力和社会适应性。这种独特的融合使它们能够迅速应对不断变化的环境，预测未来的需求，通过持续的学习过程进化，并与人类和其他代理无缝协作。
- en: Features of agents
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代理的特点
- en: 'Here are some of the key features of Agents:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是代理的一些关键特性：
- en: '**Prompt response agility**: GenAI Agents excel in swift response to prompts,
    ensuring agility in adapting to dynamic circumstances. For instance, in manufacturing
    settings, these agents can efficiently recalibrate processes and reallocate resources
    to maintain operational efficiency amid fluctuating demand or unexpected disruptions.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速响应敏捷性**：GenAI代理在快速响应提示方面表现出色，确保在动态环境中具有敏捷性。例如，在制造业环境中，这些代理可以高效地重新校准流程和重新分配资源，以维持运营效率，即使在需求波动或意外中断的情况下。'
- en: '**Chain-of-thought (CoT)/Reasoning and Acting (ReAct)-style action**: GenAI
    Agents take action based on CoT/ReAct-style prompts, ensuring prompt and effective
    responses to stimuli. If you recall, ReAct prompting is a method designed to prompt
    LLMs, aiming to enhance the accuracy of their responses compared to other methods
    such as CoT. For instance, in customer service, these agents can generate responses
    to inquiries based on predefined conversational cues.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**思维链（CoT）/推理和行动（ReAct）风格的行动**：GenAI代理根据CoT/ReAct风格的提示采取行动，确保对刺激的快速和有效响应。如果你还记得，ReAct提示是一种旨在提示LLMs的方法，旨在提高其响应的准确性，与其他方法如CoT相比。例如，在客户服务中，这些代理可以根据预定义的对话提示生成对查询的响应。'
- en: '**Prediction utility**: Though GenAI Agents do not autonomously anticipate
    or predict future events, they act based on predefined parameters and inputs.
    In financial forecasting, these agents utilize historical data and predefined
    algorithms to generate predictions rather than autonomously forecasting future
    trends.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预测效用**：尽管GenAI代理不能自主预测未来事件，但它们根据预定义的参数和输入采取行动。在金融预测中，这些代理利用历史数据和预定义的算法来生成预测，而不是自主预测未来趋势。'
- en: '**Continuous learning**: GenAI Agents possess the capability for continuous
    learning and self-improvement. Similar to human counterparts, these agents refine
    their strategies and decision-making processes based on outcomes, continuously
    evolving and optimizing performance. For instance, in online recommendation systems,
    these agents continuously learn from user interactions to improve personalized
    recommendations.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续学习**：GenAI代理具备持续学习和自我改进的能力。与人类同行类似，这些代理根据结果优化其策略和决策过程，不断进化并优化性能。例如，在线推荐系统中，这些代理通过不断学习用户互动来改进个性化推荐。'
- en: '**Collaboration**: GenAI Agents demonstrate adeptness in seamless collaboration
    with humans and other agents. Through effective communication and coordination,
    they enhance productivity and efficiency in interconnected environments. In autonomous
    vehicle systems, these agents collaborate with other vehicles and infrastructure
    to ensure safe and efficient navigation on roads.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协作**：GenAI代理在与人及其他代理的无缝协作中表现出色。通过有效的沟通和协调，它们在互联环境中提高生产力和效率。在自动驾驶车辆系统中，这些代理与其他车辆和基础设施协作，以确保在道路上安全高效地导航。'
- en: Practical applications of Agents – unleashing the potential
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代理的实际应用——释放潜力
- en: GenAI Agents offer a wide array of applications across various industries, showcasing
    their versatility and potential impact. In finance, these agents are being experimented
    with to explore the potential to analyze market trends, detect investment opportunities,
    and execute trades, enhancing decision-making processes and optimizing investment
    strategies. For instance, they can utilize historical data and predictive algorithms
    to identify patterns and forecast market movements, aiding financial professionals
    in making informed investment decisions.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: GenAI代理在各个行业都有广泛的应用，展示了它们的多样性和潜在影响。在金融领域，这些代理正在被实验性地用于探索分析市场趋势、发现投资机会和执行交易的可能性，从而增强决策过程并优化投资策略。例如，它们可以利用历史数据和预测算法来识别模式并预测市场走势，帮助金融专业人士做出明智的投资决策。
- en: In logistics and **supply chain management** (**SCM**), GenAI Agents can play
    a crucial role in optimizing resource allocation, streamlining distribution networks,
    and minimizing operational costs. By leveraging real-time data and predictive
    analytics, these agents can optimize inventory management, route planning, and
    warehouse operations, improving efficiency and reducing lead times. For example,
    they can dynamically adjust shipping routes based on traffic conditions and demand
    fluctuations to ensure timely delivery of goods.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在物流和**供应链管理**（**SCM**）中，GenAI代理可以在优化资源配置、简化分销网络和降低运营成本方面发挥关键作用。通过利用实时数据和预测分析，这些代理可以优化库存管理、路线规划和仓库运营，提高效率并缩短交货时间。例如，它们可以根据交通状况和需求波动动态调整运输路线，以确保货物的及时交付。
- en: Furthermore, GenAI Agents have the potential to transform education by personalizing
    learning experiences for students. They can adapt curricula and teaching methods
    to individual student needs and learning styles, facilitating personalized learning
    pathways and improving student outcomes. For instance, these agents can analyze
    student performance data, identify areas for improvement, and recommend tailored
    learning resources and activities to address specific learning needs.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，GenAI代理有潜力通过为学生个性化学习体验来改变教育。它们可以根据个别学生的需求和学习风格调整课程和教学方法，促进个性化的学习路径，并提高学生的学习成果。例如，这些代理可以分析学生的表现数据，确定改进领域，并推荐定制的学习资源和活动，以满足特定的学习需求。
- en: While GenAI Agents hold significant promise and potential across various industries,
    it’s essential to acknowledge that the widespread adoption and scaling of these
    technologies may still be in its early stages. While there are certainly organizations
    and research initiatives actively exploring and implementing GenAI solutions,
    achieving widespread adoption and scalability often requires overcoming various
    technical, regulatory, and ethical challenges.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然GenAI代理在各个行业都拥有重大的承诺和潜力，但必须承认，这些技术的广泛采用和规模化可能仍处于早期阶段。虽然确实有一些组织和研究项目正在积极探索和实施GenAI解决方案，但要实现广泛采用和可扩展性通常需要克服各种技术、监管和伦理挑战。
- en: In many cases, the practical implementation of GenAI Agents may involve pilot
    projects, **proofs of concept** (**POCs**), or targeted deployments rather than
    large-scale implementations across entire industries. Additionally, the effectiveness
    and impact of these technologies may vary depending on factors such as data quality,
    model performance, and the specific use case in question.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，GenAI代理的实际实施可能涉及试点项目、**概念验证**（**POCs**）或针对性的部署，而不是在整个行业范围内的大规模实施。此外，这些技术的有效性和影响可能因数据质量、模型性能和具体用例等因素而异。
- en: Therefore, it’s crucial to approach discussions about the applications of GenAI
    Agents with a critical lens, considering the current state of technology, existing
    limitations, and potential challenges associated with widespread adoption.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在讨论GenAI代理的应用时，必须以批判性的眼光进行，考虑当前的技术状态、现有的限制以及与广泛采用相关的潜在挑战。
- en: Now, let us take a step further into exploring diverse use case scenarios relevant
    to GenAI agents.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们进一步探索与GenAI代理相关的各种用例场景。
- en: GenAI agent personas, roles, and use-case scenarios
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GenAI代理的角色、职责和用例场景
- en: GenAI agents are heavily leveraged in enterprises as orchestrators. In the context
    of GenAI, **orchestration** refers to the coordinated management and deployment
    of these agents in various roles and use cases.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在GenAI的背景下，GenAI代理在企业中被大量用作协调者。协调指的是在各个角色和用例中协调管理和部署这些代理。
- en: 'There are a variety of roles that GenAI agents can play as part of this orchestration.
    Some potential use cases of GenAI agents and the roles they could play include
    the following:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: GenAI代理在这个协调中可以扮演多种角色。以下是一些GenAI代理的潜在用途案例及其可能扮演的角色：
- en: '**Virtual** **assistant roles**:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**虚拟** **助手角色**：'
- en: '*Personal assistant*: Agents can act as personal assistants, helping individuals
    manage their schedules, set reminders, and handle tasks such as booking appointments,
    making reservations, or tracking deliveries.'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*个人助理*：代理可以作为个人助理，帮助个人管理日程、设置提醒，并处理诸如预约、预订或跟踪交付等任务。'
- en: '*Information lookup*: They can also serve as information lookup tools, providing
    quick access to knowledge across various domains, such as current events, sports,
    entertainment, or general reference queries.'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*信息检索*：他们还可以作为信息检索工具，快速访问各个领域的知识，例如时事、体育、娱乐或一般参考查询。'
- en: '*Personalized recommenders*: By learning individual preferences and patterns,
    these agents can offer personalized recommendations and suggestions tailored to
    each user’s needs and interests.'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*个性化推荐者*：通过学习个人偏好和模式，这些代理可以提供针对每个用户需求和兴趣的个性化推荐和建议。'
- en: '**Customer service** **chatbot roles**:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户服务** **聊天机器人角色**：'
- en: '*Customer support agent*: Agents can handle customer inquiries and support
    requests 24/7, providing instant assistance and reducing wait times for human
    agents.'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*客户支持代理*：代理可以处理客户咨询和支持请求，全天候提供即时帮助，减少人工代理的等待时间。'
- en: '*Product advisor*: They can guide customers through troubleshooting processes,
    provide product information, and offer personalized recommendations based on customer
    preferences and purchase history.'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*产品顾问*：他们可以指导客户通过故障排除过程，提供产品信息，并根据客户偏好和购买历史提供个性化推荐。'
- en: Chatbots can also handle routine tasks such as order tracking, refund requests,
    and account management, freeing up human agents for more complex issues, such
    as troubleshooting technical issues, providing personalized recommendations, resolving
    disputes, and offering specialized expertise.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聊天机器人还可以处理常规任务，如订单跟踪、退款请求和账户管理，为人工代理腾出时间处理更复杂的问题，例如解决技术问题、提供个性化推荐、解决纠纷和提供专业知识。
- en: '**Tutoring and** **education roles**:'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**辅导和** **教育角色**：'
- en: '*Tutors*: GenAI agents can serve as virtual tutors, providing personalized
    learning experiences adapted to each student’s pace, level, and learning style.
    They can explain complex concepts in engaging ways, provide practice exercises,
    and offer feedback and guidance to reinforce learning.'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*辅导教师*：GenAI代理可以作为虚拟辅导教师，提供适合每个学生节奏、水平和学习风格的个性化学习体验。他们可以用引人入胜的方式解释复杂概念，提供练习题，并提供反馈和指导以加强学习。'
- en: '*Domain experts*: Agents can also act as domain experts, offering in-depth
    knowledge and insights across various academic subjects or professional fields.'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*领域专家*：代理还可以作为领域专家，在各个学术科目或专业领域提供深入的知识和见解。'
- en: '**Content** **creation roles**:'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容** **创作角色**：'
- en: '*Writer*: Agents can assist writers, journalists, and content creators by generating
    initial drafts, outlines, or summaries based on provided prompts or ideas.'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*作家*：代理可以通过根据提供的提示或想法生成初稿、大纲或摘要来协助作家、记者和内容创作者。'
- en: '*Storyteller*: They can help with ideation, story development, and creative
    writing tasks, offering suggestions and expanding on concepts.'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*故事讲述者*：他们可以帮助构思、故事发展和创意写作任务，提供建议并扩展概念。'
- en: '*Content generator*: Agents can also generate marketing copy, product descriptions,
    or social media content, helping businesses and creators save time and effort.'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*内容生成器*：代理还可以生成营销文案、产品描述或社交媒体内容，帮助企业和创作者节省时间和精力。'
- en: '**Creative** **design roles**:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创意** **设计角色**：'
- en: '*Designer*: Agents can serve as creative collaborators, generating design ideas,
    artwork, logos, and visual concepts based on provided prompts or specifications.'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*设计师*：代理可以作为创意合作伙伴，根据提供的提示或规格生成设计理念、艺术作品、标志和视觉概念。'
- en: '*Artist*: They can offer inspiration and fresh perspectives, helping designers
    explore new directions and overcome creative blocks.'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*艺术家*：他们可以提供灵感和新的视角，帮助设计师探索新的方向并克服创作障碍。'
- en: '*Creative collaborator*: Agents can also assist in the iterative design process,
    generating variations and refinements based on feedback and direction from human
    designers.'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*创意合作者*：代理还可以协助迭代设计过程，根据人类设计师的反馈和指导生成变体和改进。'
- en: '**Gaming and** **entertainment roles**:'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏和娱乐角色**：'
- en: '*Game character*: In gaming, agents can play the role of **non-player characters**
    (**NPCs**), providing engaging interactions, dialogue, and storylines that adapt
    to player actions and choices.'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*游戏角色*：在游戏中，代理可以扮演**非玩家角色**（NPCs），提供吸引人的互动、对话和故事情节，这些情节会根据玩家的行动和选择进行调整。'
- en: '*Interactive companion*: As interactive companions, agents can engage in conversations,
    tell stories, provide entertainment, and even offer emotional support or companionship
    in virtual environments.'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*互动伴侣*：作为互动伴侣，代理可以参与对话、讲故事、提供娱乐，甚至在虚拟环境中提供情感支持或陪伴。'
- en: '**Healthcare roles**:'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**医疗保健角色**：'
- en: '*Medical assistant*: Agents can act as medical assistants, providing patients
    with information about conditions, treatments, and healthy lifestyle recommendations.'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*医疗助手*：代理可以作为医疗助手，向患者提供有关疾病、治疗和健康生活方式建议的信息。'
- en: '*Patient educator*: They can assist in patient education, explaining complex
    medical concepts in easy-to-understand language and addressing common concerns
    or questions.'
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*耐心教育者*：他们可以协助患者教育，用易于理解的语言解释复杂的医学概念，并解决常见的担忧或问题。'
- en: Agents can also support healthcare professionals by summarizing patient records,
    generating medical reports, or assisting in research and data analysis tasks.
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理还可以通过总结患者记录、生成医疗报告或在研究和数据分析任务中提供帮助来支持医疗保健专业人员。
- en: '**Software** **development roles**:'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件开发角色**：'
- en: '*Code assistant*: GenAI agents can serve as code assistants, helping developers
    write and optimize code by generating code snippets, suggesting improvements,
    or explaining programming concepts.'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*代码助手*：GenAI代理可以作为代码助手，通过生成代码片段、提出改进建议或解释编程概念来帮助开发者编写和优化代码。'
- en: '*Documentation generator*: They can assist in generating documentation, automatically
    creating descriptions and explanations for code segments, making it easier to
    maintain and collaborate on projects.'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*文档生成器*：他们可以帮助生成文档，自动为代码段创建描述和解释，使维护和协作项目更加容易。'
- en: Agents can also help with code refactoring, identifying areas for optimization,
    and suggesting more efficient or secure coding practices.
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理还可以帮助进行代码重构，识别优化区域，并提出更高效或更安全的编码实践。
- en: '**Research and** **analysis roles**:'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**研究和分析角色**：'
- en: '*Research assistant*: Agents can act as research assistants, gathering and
    synthesizing information from various sources, generating summaries, and identifying
    key insights or trends.'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*研究助手*：智能代理可以作为研究助手，从各种来源收集和综合信息，生成摘要，并识别关键见解或趋势。'
- en: '*Data analyst/data engineer*: They can assist in data analysis tasks, such
    as exploring datasets, identifying patterns, and generating visualizations or
    reports.'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*数据分析师/数据工程师*：他们可以帮助进行数据分析任务，例如探索数据集、识别模式并生成可视化或报告。'
- en: '*ML engineer/data scientist*: Agents can also support researchers by generating
    hypotheses, suggesting experimental designs, or offering ideas for further exploration
    based on existing knowledge and data.'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*机器学习工程师/数据科学家*：代理还可以通过生成假设、提出实验设计或基于现有知识和数据提出进一步探索的想法来支持研究人员。'
- en: '**Language** **learning roles**:'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语言学习角色**：'
- en: '*Conversational partner*: GenAI agents can serve as conversational partners,
    allowing language learners to practice speaking and comprehension in a safe and
    encouraging environment.'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*对话伙伴*：GenAI代理可以作为对话伙伴，让语言学习者在一个安全且鼓励的环境中练习口语和听力理解。'
- en: '*Language tutors*: As language tutors, agents can provide feedback on pronunciation,
    grammar, and vocabulary, tailoring lessons and exercises to individual learners’
    needs and progress.'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*语言导师*：作为语言导师，代理可以提供关于发音、语法和词汇的反馈，根据个别学习者的需求和进度调整课程和练习。'
- en: They can also generate engaging language learning materials, such as dialogues,
    stories, or exercises, adapting the content and difficulty level based on the
    learner’s proficiency.
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们还可以生成吸引人的语言学习材料，如对话、故事或练习，根据学习者的熟练程度调整内容和难度级别。
- en: In all these cases, the agent’s role is to augment human capabilities, provide
    personalized assistance, and enhance efficiency and productivity in various domains.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些情况下，代理的作用是增强人类能力，提供个性化协助，并在各个领域提高效率和生产力。
- en: Now, let us take a step further to explore Agents and their utility functionality
    in the context of Amazon Bedrock.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们进一步探讨代理及其在Amazon Bedrock环境中的实用功能。
- en: Amazon Bedrock integration with LangChain Agents
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon Bedrock与LangChain代理的集成
- en: LangChain, a powerful framework for developing applications with LLMs, provides
    a robust and flexible agent system that enables developers to build sophisticated
    agents capable of tackling a wide range of challenges.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain是一个强大的框架，用于开发使用LLM的应用程序，它提供了一个强大且灵活的代理系统，使开发者能够构建能够应对各种挑战的复杂代理。
- en: An agent in LangChain is a high-level abstraction that combines an LLM, a set
    of tools, and other components in order to coordinate the execution of actions.
    The agent leverages the LLM’s **natural language understanding** (**NLU**) capabilities
    to interpret user inputs, determine the appropriate actions to take, and orchestrate
    the utilization of available tools to accomplish the desired task.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain中的代理是一个高级抽象，它结合了LLM、一组工具和其他组件，以协调动作的执行。代理利用LLM的**自然语言理解**（**NLU**）能力来解释用户输入，确定适当的动作，并协调使用可用工具来完成所需任务。
- en: 'The core components of a LangChain agent include the following:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain代理的核心组件包括以下内容：
- en: '`WebSearchTool`: Performs web searches using a search engine such as Google.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WebSearchTool`: 使用搜索引擎（如Google）进行网络搜索。'
- en: '`WikipediaSearchTool`: Searches and retrieves information from *Wikipedia*.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WikipediaSearchTool`: 从 *维基百科* 中搜索和检索信息。'
- en: '`PythonCallbackTool`: Executes Python functions as tools.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PythonCallbackTool`: 作为工具执行Python函数。'
- en: '`CSVTool`: Interacts with CSV files, allowing operations such as reading, writing,
    and querying data.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CSVTool`: 与CSV文件交互，允许进行读取、写入和查询数据等操作。'
- en: '**LLM**: The LLM serves as the reasoning engine behind the agent. It is responsible
    for understanding the user’s intent, determining the appropriate actions to take,
    and interpreting the results of tool executions.*   `SQLDatabaseToolkit` contains
    tools for interacting with SQL databases, including querying, creating tables,
    and inserting data.*   `ConversationBufferMemory` stores the conversation history,
    allowing the agent to refer to previous inputs and outputs during the conversation.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LLM**: LLM作为代理背后的推理引擎。它负责理解用户的意图，确定适当的动作，并解释工具执行的结果。*   `SQLDatabaseToolkit`
    包含与SQL数据库交互的工具，包括查询、创建表和插入数据。*   `ConversationBufferMemory` 存储对话历史，允许代理在对话中参考先前的输入和输出。'
- en: 'LangChain provides a diverse set of built-in tools and agent classes to cater
    to various use cases. Some of the available tools include the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain提供了一系列内置工具和代理类，以满足各种用例。以下是一些可用的工具：
- en: '`serpapi`: A search engine tool for querying web search results'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`serpapi`: 一个用于查询网络搜索结果的搜索引擎工具'
- en: '`google-search`: A wrapper around Google Search for conducting web searches'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`google-search`: 一个围绕Google Search进行网络搜索的包装器'
- en: '`llm-math`: A tool for answering math-related questions using an LLM'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`llm-math`: 一个使用LLM回答数学相关问题的工具'
- en: '`open-meteo-api`: A tool for retrieving weather information from the Open-Meteo
    API'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`open-meteo-api`: 一个用于从Open-Meteo API检索天气信息的工具'
- en: '`news-api`: A tool for fetching information about current news headlines'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`news-api`: 一个用于获取当前新闻头条信息的工具'
- en: '`tmdb-api`: A tool for querying information from **The Movie** **Database**
    (**TMDB**)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tmdb-api`: 一个用于查询 **The Movie Database**（**TMDB**）信息的工具'
- en: '`wolfram-alpha`: A tool for querying the Wolfram|Alpha computational knowledge
    engine'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wolfram-alpha`: 一个用于查询Wolfram|Alpha计算知识引擎的工具'
- en: '`requests`: A tool for fetching content from specific URLs'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`requests`: 一个用于从特定URL获取内容的工具'
- en: '`terminal`: A tool for executing terminal commands'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`terminal`: 一个用于执行终端命令的工具'
- en: '`pal-math`: A language model specialized in solving complex word math problems'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pal-math`: 一个专门解决复杂文字数学问题的语模型'
- en: '`pal-colored-objects`: A language model for reasoning about positions and color
    attributes of objects'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pal-colored-objects`: 一个用于推理物体位置和颜色属性的语模型'
- en: 'As for agent classes, LangChain provides several options, each with its own
    strategy for action selection and problem-solving. Some examples include the following:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 至于代理类，LangChain提供了几个选项，每个选项都有自己的动作选择和问题解决策略。以下是一些例子：
- en: '`zero-shot-react-description`: An agent that relies on the LLM’s zero-shot
    capabilities to select actions based on the tool descriptions'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`zero-shot-react-description`：一个依赖于LLM的零样本能力来根据工具描述选择操作的代理'
- en: '`conversational-react-description`: An agent that engages in a conversational
    approach, asking for clarification when needed, and selecting actions based on
    the tool descriptions'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`conversational-react-description`：一个采用对话方式，在需要时请求澄清，并根据工具描述选择操作的代理'
- en: '`react-docstore`: An agent that leverages a document store to retrieve relevant
    information and select actions based on the tool descriptions'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`react-docstore`：一个利用文档存储检索相关信息并根据工具描述选择操作的代理'
- en: 'Details on each of the aforementioned tools and agent classes are highlighted
    here: [https://api.python.langchain.com/en/latest/_modules/langchain/agents/agent_types.html](https://api.python.langchain.com/en/latest/_modules/langchain/agents/agent_types.html)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 关于上述工具和代理类的详细信息在此处突出显示：[https://api.python.langchain.com/en/latest/_modules/langchain/agents/agent_types.html](https://api.python.langchain.com/en/latest/_modules/langchain/agents/agent_types.html)
- en: Now that we have an understanding of LangChain Agents, let us dive into the
    integration of LangChain Agents with Amazon Bedrock, exemplified through a practical
    use case. We will import Bedrock via the LangChain package and leverage two LangChain
    tools, namely `YoutubeSearchTool` and `WikipediaTool`, enabling the LangChain
    Agent to leverage their capabilities. Additionally, we will be utilizing the Anthropic
    Claude model through Bedrock in this straightforward application.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了LangChain代理，让我们深入了解LangChain代理与Amazon Bedrock的集成，通过一个实际用例来展示。我们将通过LangChain包导入Bedrock，并利用两个LangChain工具，即`YoutubeSearchTool`和`WikipediaTool`，使LangChain代理能够利用它们的功能。此外，我们将在这个简单应用中通过Bedrock利用Anthropic
    Claude模型。
- en: Note
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'Ensure you have the correct permissions to invoke Amazon Bedrock, as explained
    in the earlier chapters. Further, please ensure that the latest version of LangChain
    packages and libraries are installed as per the code. In case the packages are
    not installed, run the following command in your Jupyter notebook (note that `!
    Or %` will not be needed if you’re running Python code from a Python terminal):'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您有正确的权限来调用Amazon Bedrock，如前几章所述。此外，请确保按照代码安装LangChain包和库的最新版本。如果包未安装，请在您的Jupyter笔记本中运行以下命令（请注意，如果您从Python终端运行Python代码，则不需要`!`或`%`）：
- en: '`%pip` `install <library_name>`'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '`%pip install <library_name>`'
- en: '[PRE0]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The generated output looks like this:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的输出看起来是这样的：
- en: '[PRE1]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output may look like what’s shown in *Figure 10**.1* and *Figure 10**.2*.
    You will notice the agent performing reasoning using question, thought, action,
    and chaining:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 输出可能看起来像*图10.1*和*图10.2*中所示的那样。您将注意到代理正在使用问题、思考、行动和链式推理进行推理：
- en: "![Figure 10.1 – \uFEFFAgentExecutor chain output](img/B22045_10_01.jpg)"
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图10.1 – AgentExecutor链输出](img/B22045_10_01.jpg)'
- en: Figure 10.1 – AgentExecutor chain output
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1 – AgentExecutor链输出
- en: '![Figure 10.2 – Generated chain using LangChain agents with Bedrock](img/B22045_10_02.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图10.2 – 使用Bedrock的LangChain代理生成的链](img/B22045_10_02.jpg)'
- en: Figure 10.2 – Generated chain using LangChain agents with Bedrock
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2 – 使用Bedrock的LangChain代理生成的链
- en: As shown in this section, when we are exploring technical topics such as memristors
    without any other context, the *Wikipedia* tool agent is invoked, providing comprehensive
    and detailed information, followed by the YouTube tool to provide additional information
    on the subject matter. In case the user writes `Elon Musk video on Neuralink`
    in the preceding conversation with the agent, the YouTube tool gets invoked and
    links are showcased to said user. Users are encouraged to try out different questions
    and test the agent.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如本节所示，当我们探索如忆阻器等技术主题而没有其他背景信息时，会调用*维基百科*工具代理，提供全面和详细的信息，随后是YouTube工具提供有关主题的额外信息。如果用户在与代理的先前对话中写入`Elon
    Musk video on Neuralink`，则会调用YouTube工具并向用户展示链接。鼓励用户尝试不同的问题并测试代理。
- en: 'Here is a sample output response for `response = agent_executor.invoke({"input":
    "Elon Musk video` `on Neuralink"})`:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '这里是`response = agent_executor.invoke({"input": "Elon Musk video on Neuralink"})`的示例输出响应：'
- en: '[PRE2]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As demonstrated, utilizing these tools enables us to access in-depth knowledge
    on the subject matter. It’s worth noting that LangChain offers the capability
    to create custom tools as well, further expanding the capabilities of agents.
    This flexibility is highlighted in the documentation at [https://python.langchain.com/docs/modules/agents/tools/custom_tools](https://python.langchain.com/docs/modules/agents/tools/custom_tools),
    where you can find guidance on crafting tailored tools to suit your specific needs.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如演示所示，利用这些工具使我们能够深入了解主题知识。值得注意的是，LangChain还提供了创建自定义工具的能力，进一步扩展了代理的功能。这种灵活性在[https://python.langchain.com/docs/modules/agents/tools/custom_tools](https://python.langchain.com/docs/modules/agents/tools/custom_tools)的文档中得到了强调，您可以在那里找到有关定制工具以适应您特定需求的指导。
- en: 'As shown earlier, since we are searching for a technical topic for memristors,
    we get detailed information using the *Wikipedia* tool agent. You can create custom
    tools as well with agents, as shown here: [https://python.langchain.com/docs/modules/agents/tools/custom_tools](https://python.langchain.com/docs/modules/agents/tools/custom_tools).'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，由于我们正在寻找关于忆阻器的技术主题，我们使用*维基百科*工具代理获取详细信息。您也可以使用代理创建自定义工具，如下所示：[https://python.langchain.com/docs/modules/agents/tools/custom_tools](https://python.langchain.com/docs/modules/agents/tools/custom_tools)。
- en: 'You can check out how to build GenAI agents with Amazon Bedrock and LangChain,
    coupled with Amazon Kendra, Amazon DynamoDB, and Amazon Lex, on the following
    blog: [https://aws.amazon.com/blogs/machine-learning/build-generative-ai-agents-with-amazon-bedrock-amazon-dynamodb-amazon-kendra-amazon-lex-and-langchain/](https://aws.amazon.com/blogs/machine-learning/build-generative-ai-agents-with-amazon-bedrock-amazon-dynamodb-amazon-kendra-amazon-lex-and-langchain/).'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下博客中查看如何使用亚马逊Bedrock和LangChain构建生成式AI代理，结合亚马逊Kendra、亚马逊DynamoDB、亚马逊Lex，[https://aws.amazon.com/blogs/machine-learning/build-generative-ai-agents-with-amazon-bedrock-amazon-dynamodb-amazon-kendra-amazon-lex-and-langchain/](https://aws.amazon.com/blogs/machine-learning/build-generative-ai-agents-with-amazon-bedrock-amazon-dynamodb-amazon-kendra-amazon-lex-and-langchain/)。
- en: By effectively integrating Amazon Bedrock with LangChain Agents, organizations
    can unlock the full potential of LLMs, enabling the development of intelligent
    and context-aware applications that drive innovation, automate complex workflows,
    and deliver exceptional user experiences.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 通过有效地将亚马逊Bedrock与LangChain代理集成，组织可以释放LLM的全部潜力，从而开发出智能和情境感知的应用程序，推动创新，自动化复杂的工作流程，并提供卓越的用户体验。
- en: Now, let’s jump into building Amazon Bedrock Agents for leveraging an end-to-end
    GenAI application.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们跳转到构建亚马逊Bedrock代理，以利用端到端的生成式AI应用。
- en: Agents for Amazon Bedrock
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 亚马逊Bedrock代理
- en: One of the powerful capabilities offered by Amazon Bedrock is the ability to
    build and configure autonomous agents within your applications. These agents act
    as intelligent assistants, helping end users complete tasks based on organizational
    data and user input. Agents orchestrate interactions between FMs (LLMs), data
    sources, software applications, and user conversations. They can automatically
    call APIs to take actions and invoke knowledge bases to supplement information
    for these actions. By integrating agents, developers can save weeks of development
    effort and accelerate the delivery of GenAI applications.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊Bedrock提供的一项强大功能是能够在您的应用程序内构建和配置自主代理。这些代理作为智能助手，根据组织数据和用户输入帮助最终用户完成任务。代理协调FM（LLM）、数据源、软件应用程序和用户对话之间的交互。它们可以自动调用API采取行动，并调用知识库为这些行动补充信息。通过集成代理，开发者可以节省数周的开发工作量，并加速生成式AI应用的交付。
- en: Agents on Amazon Bedrock are designed to automate tasks for customers and provide
    intelligent responses to their questions. For example, you could create an agent
    that assists customers in processing insurance claims or making travel reservations.
    The beauty of agents is that you don’t have to worry about provisioning capacity,
    managing infrastructure, or writing custom code from scratch. Amazon Bedrock handles
    the complexities of prompt engineering, memory management, monitoring, encryption,
    user permissions, and API invocation.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊Bedrock上的代理旨在自动化客户任务，并对他们的问题提供智能响应。例如，您可以创建一个代理，帮助客户处理保险索赔或预订旅行。代理的优点是您不必担心提供容量、管理基础设施或从头开始编写自定义代码。亚马逊Bedrock处理提示工程、内存管理、监控、加密、用户权限和API调用的复杂性。
- en: 'Agents on Amazon Bedrock perform the following key tasks:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊Bedrock上的代理执行以下关键任务：
- en: '**Extend FMs**: Agents leverage LLMs to understand user requests and break
    down complex tasks into smaller, manageable steps.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扩展FM**：代理利用LLM来理解用户请求，并将复杂任务分解成更小、更易管理的步骤。'
- en: '**Collect additional information**: Through natural conversation, agents can
    gather additional information from users to fulfill their requests effectively.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收集额外信息**：通过自然对话，代理可以从用户那里收集额外信息，以有效地满足他们的请求。'
- en: '**Take actions**: Agents can make API calls to your company’s systems to perform
    actions and fulfill customer requests.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**采取行动**：代理可以调用您公司的系统API来执行操作并满足客户请求。'
- en: '**Augment performance and accuracy**: By querying data sources and knowledge
    bases, agents can enhance their performance and provide more accurate responses.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强性能和准确性**：通过查询数据源和知识库，代理可以增强其性能并提供更准确的响应。'
- en: 'In order to harness the power of Agents for Amazon Bedrock, developers follow
    a straightforward process:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 为了利用Amazon Bedrock的代理力量，开发者遵循一个简单的过程：
- en: Create a knowledge base to store your organization’s private data, which can
    be used to enhance the agent’s performance and accuracy. This step is *optional*
    because not all agents require access to private organizational data to carry
    out their assigned objectives. If the agent’s tasks and objectives do not depend
    on or benefit significantly from access to such data, creating a knowledge base
    may not be necessary. It depends on the specific use case and requirements of
    the agent being developed.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个知识库来存储您组织的私有数据，这可以用来增强代理的性能和准确性。这一步是**可选的**，因为并非所有代理都需要访问私有组织数据来执行其分配的目标。如果代理的任务和目标不依赖于或从访问此类数据中获得显著益处，则创建知识库可能不是必要的。这取决于特定用例和正在开发的代理的具体要求。
- en: Configure an agent for your specific use case, defining the actions it can perform.
    Lambda functions, written in your preferred programming language, dictate how
    the agent handles these actions. This is an optional step as an agent doesn’t
    necessarily require an action group to be created.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的特定用例配置代理，定义它可以执行的操作。用您首选的编程语言编写的Lambda函数决定了代理如何处理这些操作。这是一个可选步骤，因为代理不一定需要创建动作组。
- en: Associate the agent with a knowledge base to augment its capabilities further.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将代理与知识库关联起来，以进一步增强其功能。
- en: Customize the agent’s behavior by modifying prompt templates for preprocessing,
    orchestration, knowledge-base response generation, and postprocessing steps. Note
    that *not* all agents require extensive modification of prompt templates for their
    goal. The need for customization depends on the complexity of the tasks the agent
    is expected to perform and the level of control and fine-tuning desired by developers.
    For simpler tasks or generic use cases, the default prompt templates may suffice,
    making extensive customization unnecessary.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过修改预处理、编排、知识库响应生成和后处理步骤的提示模板来自定义代理的行为。请注意，**并非**所有代理都需要对提示模板进行大量修改以实现其目标。定制的需求取决于代理预期执行的任务的复杂性和开发者期望的控制和微调水平。对于简单任务或通用用例，默认提示模板可能就足够了，因此不需要进行大量定制。
- en: Test the agent using the Amazon Bedrock console or API calls, modifying configurations
    as necessary. Utilize traces to gain insights into the agent’s reasoning process
    at each step of its orchestration.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Amazon Bedrock控制台或API调用测试代理，并根据需要修改配置。利用跟踪来深入了解代理在编排每个步骤时的推理过程。
- en: When the agent is ready for deployment, create an alias that points to a specific
    version of the agent.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当代理准备部署时，创建一个指向特定代理版本的别名。
- en: Integrate your application with the agent alias, enabling seamless API calls
    and interactions.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过与代理别名集成您的应用程序，实现无缝的API调用和交互。
- en: Iterate on the agent as needed, creating new versions and aliases to adapt to
    changing requirements.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据需要迭代代理，创建新版本和别名以适应不断变化的需求。
- en: Throughout the development process, Amazon Bedrock handles the complexities
    of prompt engineering, memory management, monitoring, encryption, user permissions,
    and API invocation, allowing you to focus on building intelligent agents tailored
    to your specific use cases.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在整个开发过程中，Amazon Bedrock处理提示工程、内存管理、监控、加密、用户权限和API调用的复杂性，让您能够专注于构建针对特定用例的智能代理。
- en: Unveiling the inner workings of GenAI agents with Amazon Bedrock
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 揭示Amazon Bedrock中GenAI代理的内部工作原理
- en: 'When delving into the realm of Amazon Bedrock, one encounters a powerful toolset
    designed to facilitate the creation and management of intelligent agents. This
    toolset is composed of two distinct categories of API operations, each serving
    a specific purpose in the agent’s life cycle:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 当深入到Amazon Bedrock的领域时，会遇到一套强大的工具集，旨在促进智能代理的创建和管理。这个工具集由两类不同的API操作组成，每一类在代理的生命周期中都有其特定的目的：
- en: 'The first category, aptly termed *build-time API operations*, enables developers
    to construct, configure, and oversee their agents and their associated resources.
    These operations act as the foundational building blocks, enabling the creation
    of agents tailored to specific requirements and objectives. Through these APIs,
    developers can fine-tune various aspects of their agents, ensuring they are equipped
    with the necessary capabilities to tackle the tasks at hand. More details on build-time
    API operations are listed here: [https://docs.aws.amazon.com/bedrock/latest/APIReference/API_Operations_Agents_for_Amazon_Bedrock.html](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_Operations_Agents_for_Amazon_Bedrock.html)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一类，恰当地称为*构建时API操作*，使开发者能够构建、配置和监督他们的代理及其相关资源。这些操作作为基础构建块，使得能够创建满足特定需求和目标的代理。通过这些API，开发者可以微调代理的各个方面，确保它们具备处理手头任务所需的能力。有关构建时API操作的更多详细信息，请参阅此处：[https://docs.aws.amazon.com/bedrock/latest/APIReference/API_Operations_Agents_for_Amazon_Bedrock.html](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_Operations_Agents_for_Amazon_Bedrock.html)
- en: The second category, *runtime API operations*, breathes life into agents, allowing
    them to interact with user input and initiate an intricate orchestration process
    to accomplish their designated tasks. When a user provides input, these APIs enable
    the agent to process and interpret the information, triggering a sequence of actions
    that ultimately lead to the desired outcome.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二类，*运行时API操作*，为代理注入活力，使其能够与用户输入交互并启动复杂的编排过程以完成其指定的任务。当用户提供输入时，这些API使代理能够处理和解释信息，触发一系列动作，最终达到预期的结果。
- en: Now, let us dive into build-time and runtime configurations.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们深入了解构建时和运行时配置。
- en: Build-time configuration
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建时配置
- en: 'During the build phase, an agent is assembled from the following key components:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建阶段，代理由以下关键组件组装：
- en: '**FM**: You select a pre-trained language model that the agent employs to interpret
    user input, generate responses, and guide its decision-making process.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FM**: 您选择一个预训练的语言模型，该模型由代理使用来解释用户输入、生成响应并指导其决策过程。'
- en: '**Instructional prompts**: You craft instructions that delineate the agent’s
    purpose and desired behavior. With advanced prompting techniques, you can dynamically
    tailor these instructions at each stage of the agent’s workflow and incorporate
    custom logic through serverless functions.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**指令提示**: 您创建指令来界定代理的目的和期望的行为。通过高级提示技术，您可以在代理工作流程的每个阶段动态调整这些指令，并通过无服务器函数集成自定义逻辑。'
- en: '**Action groups**: You define actions the agent can perform by providing the
    following:'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动作组**: 您通过以下方式定义代理可以执行的动作：'
- en: An OpenAPI schema specification that outlines the operations the agent can invoke.
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个OpenAPI模式规范，概述代理可以调用的操作。
- en: A serverless function that executes the specified API operation based on the
    agent’s input and returns the result.
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个无服务器函数，根据代理的输入执行指定的API操作并返回结果。
- en: '**Knowledge bases**: You can associate knowledge bases with the agent, allowing
    it to retrieve relevant context to enhance its response generation and decision-making
    capabilities.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**知识库**: 您可以将知识库与代理关联，使它能检索相关上下文以增强其响应生成和决策能力。'
- en: '**Prompt templates**: The orchestrator exposes default prompt templates used
    during various stages of the agent’s life cycle, such as preprocessing input,
    orchestrating actions, querying knowledge bases, and postprocessing outputs. You
    can customize these templates to modify the agent’s behavior or disable specific
    stages as needed.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提示模板**: 委派者公开了在代理生命周期各个阶段使用的默认提示模板，例如预处理输入、编排动作、查询知识库和后处理输出。您可以根据需要自定义这些模板来修改代理的行为或禁用特定阶段。'
- en: 'During the build process, these components are combined to create base prompts
    that guide the agent’s orchestration flow until the user’s request is fulfilled.
    With advanced prompting techniques, you can augment these base prompts with additional
    logic, examples, and metadata to improve the agent’s accuracy and performance
    at each stage of its invocation. After configuring the agent’s components and
    security settings, you can prepare the agent for deployment and testing in a runtime
    environment, as shown in *Figure 10**.3*:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建过程中，这些组件被组合起来创建基础提示，引导智能体的编排流程，直到满足用户的请求。通过高级提示技术，你可以增强这些基础提示，添加额外的逻辑、示例和元数据，以提高智能体在调用每个阶段的准确性和性能。在配置智能体的组件和安全设置后，你可以准备智能体在运行时环境中进行部署和测试，如图*图10.3*所示：
- en: '![Figure 10.3 – Build-time API operations for Agent creation](img/B22045_10_03.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图10.3 – 创建智能体的构建时API操作](img/B22045_10_03.jpg)'
- en: Figure 10.3 – Build-time API operations for Agent creation
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3 – 创建智能体的构建时API操作
- en: Runtime process
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行时过程
- en: 'At the heart of this runtime process lies the `InvokeAgent` API operation,
    a powerful conductor that sets the agent sequence in motion. The agent’s performance
    unfolds in three harmonious acts: preprocessing, orchestration, and postprocessing.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个运行时过程中，`InvokeAgent` API操作是核心，它是一个强大的指挥者，启动智能体序列。智能体的表现分为三个和谐的阶段：预处理、编排和后处理。
- en: '**Act I –** **Preprocessing**'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '**第一幕 –** **预处理**'
- en: Before the curtains rise, the preprocessing phase meticulously manages how the
    agent contextualizes and categorizes user input. This crucial step can also validate
    the input, ensuring a seamless transition to the subsequent stages.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在帷幕升起之前，预处理阶段会细致地管理智能体如何对用户输入进行上下文关联和分类。这一关键步骤还可以验证输入，确保后续阶段的顺利过渡。
- en: '**Act II – Orchestration – the** **grand performance**'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**第二幕 – 编排 –** **盛大演出**'
- en: 'The orchestration phase is where the true magic unfolds, a symphonic interplay
    of interpretation, invocation, and knowledge synthesis. This act consists of the
    following movements:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 编排阶段是真正的魔法发生的地方，是解释、调用和知识综合的交响乐章。这一行为包括以下几个部分：
- en: '**Interpretation**: The agent deftly interprets the user input with an FM,
    generating a rationale that lays out the logical path for the next steps.'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**解释**：智能体巧妙地使用FM解释用户输入，生成一个阐述下一步逻辑路径的理由。'
- en: '**Invocation and synthesis**: Like a skilled conductor, the agent invokes action
    groups and queries knowledge bases, retrieving additional context and summarizing
    the data to augment its generation capabilities.'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**调用和综合**：就像一位熟练的指挥家一样，智能体调用动作组和查询知识库，检索额外的上下文并总结数据以增强其生成能力。'
- en: '**Observation and augmentation**: From the invoked action groups and summarized
    knowledge-base results, the agent generates an output, known as an **observation**.
    This observation is then used to enrich the base prompt, which is subsequently
    interpreted by the FM. The agent then determines if further orchestration iterations
    are necessary.'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**观察和增强**：从调用的动作组和总结的知识库结果中，智能体生成一个输出，称为**观察**。然后，这个观察被用来丰富基础提示，随后由FM进行解释。智能体接着确定是否需要进一步的编排迭代。'
- en: This iterative loop continues until the agent delivers its final response to
    the user or requires additional information from the user.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这个迭代循环会持续进行，直到智能体向用户交付最终响应或需要从用户那里获取更多信息。
- en: Throughout the orchestration phase, the base prompt template is augmented with
    agent instructions, action groups, and knowledge bases, creating a rich tapestry
    of information. This enhanced base prompt is then fed into the FM, which predicts
    the optimal trajectory to fulfill the user’s request. At each iteration, the FM
    selects the appropriate API operation or knowledge-base query, resulting in a
    responsive and contextually accurate output.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在编排阶段，基础提示模板被智能体指令、动作组和知识库增强，形成了一个丰富的信息织锦。这个增强的基础提示随后被输入到FM中，预测满足用户请求的最佳轨迹。在每次迭代中，FM选择适当的API操作或知识库查询，从而产生一个响应迅速且上下文准确的输出。
- en: '**Act III – Postprocessing –** **the finale**'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '**第三幕 – 后处理 –** **终曲**'
- en: In the final act, the postprocessing phase, the agent formats the culmination
    of its efforts – the final response to be returned to the user. However, this
    step can be gracefully bypassed, leaving the performance open to interpretation.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一幕，后处理阶段，智能体格式化其努力的成果 – 将返回给用户的最终响应。然而，这一步可以优雅地跳过，让表演留有解释的空间。
- en: During the agent’s performance, users have the option to invoke a trace at runtime,
    unlocking a window into the agent’s thought process. This trace meticulously tracks
    the agent’s rationale, actions, queries, and observations at each step of the
    sequence. It includes the full prompts sent to the FM, as well as outputs from
    the model, API responses, and knowledge-base queries. By examining this trace,
    users can gain invaluable insights into the agent’s reasoning, paving the way
    for continuous improvement and refinement.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在代理的性能过程中，用户可以选择在运行时调用跟踪，揭示代理的思考过程。这个跟踪仔细追踪代理在每个步骤中的推理、行动、查询和观察。它包括发送给FM的完整提示，以及模型的输出、API响应和知识库查询。通过检查这个跟踪，用户可以获得关于代理推理的宝贵见解，为持续改进和精炼铺平道路。
- en: As the user’s session with the agent continues through successive `InvokeAgent`
    requests, the conversation history is diligently preserved, continually augmenting
    the orchestration base prompt template with context. This enrichment process aids
    in enhancing the agent’s accuracy and performance, forging a symbiotic relationship
    between the user and the AI.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 随着用户与代理的会话通过连续的`InvokeAgent`请求继续进行，对话历史被仔细保存，不断丰富代理基提示模板的上下文。这个过程有助于提高代理的准确性和性能，建立了用户和AI之间的共生关系。
- en: 'The agent’s process during runtime is a captivating interplay of interpretation,
    synthesis, and adaptation, as showcased in *Figure 10**.4*:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行时，代理的过程是一个引人入胜的解释、综合和适应的相互作用，如*图10.4*所示：
- en: '![Figure 10.4 – Runtime process flow for Agent workflow](img/B22045_10_04.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图10.4 – 代理工作流程的运行时流程](img/B22045_10_04.jpg)'
- en: Figure 10.4 – Runtime process flow for Agent workflow
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.4 – 代理工作流程的运行时流程
- en: Advancing reasoning capabilities with GenAI – a primer on ReAct
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用GenAI提升推理能力——ReAct入门
- en: 'GenAI models have demonstrated splendid capabilities in processing and generating
    human-like text, but their ability to reason through complex tasks and provide
    step-by-step solutions remains a challenge. Yao et. al have developed a technique
    called ReAct, as articulated in the paper *ReAct: Synergizing Reasoning and Acting
    in Language Models* ([https://arxiv.org/abs/2210.03629](https://arxiv.org/abs/2210.03629)),
    to enhance the reasoning abilities of these models, enabling them to systematically
    approach and solve user-requested tasks.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: GenAI模型在处理和生成类似人类的文本方面表现出卓越的能力，但它们在处理复杂任务和提供逐步解决方案方面的能力仍然是一个挑战。Yao等人开发了一种称为ReAct的技术，如论文*ReAct：在语言模型中协同推理和行动*（[https://arxiv.org/abs/2210.03629](https://arxiv.org/abs/2210.03629)）所述，以提高这些模型的推理能力，使它们能够系统地处理和解决用户请求的任务。
- en: 'The ReAct technique involves structuring prompts that guide the model through
    a sequence of reasoning steps and corresponding actions. These prompts consist
    of a series of *question-thought-action-observation* examples, where the following
    applies:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: ReAct技术涉及构建提示，引导模型通过一系列推理步骤和相应的行动。这些提示由一系列*问题-思考-行动-观察*示例组成，其中以下适用：
- en: The *question* represents the user-requested task or problem to be solved
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*问题*代表用户请求的任务或需要解决的问题'
- en: The *thought* is a reasoning step that demonstrates how to approach the problem
    and identify a potential action
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*思考*是一个推理步骤，展示了如何解决问题并识别潜在的行动'
- en: The *action* is an API call or function that the model can invoke from a predefined
    set of allowed operations
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*行动*是模型可以从预定义的允许操作集中调用的API调用或函数'
- en: The *observation* is the result or output obtained from executing the chosen
    action
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*观察*是从执行所选操作获得的结果或输出'
- en: The set of allowed actions is defined by instructions prepended to the example
    prompt text. This structured approach encourages the model to engage in a step-by-step
    reasoning process, breaking down complex tasks into smaller, actionable steps.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 允许执行的动作集合由附加到示例提示文本的指令定义。这种结构化方法鼓励模型参与逐步推理过程，将复杂任务分解成更小、可操作的动作步骤。
- en: 'To illustrate the construction of a ReAct prompt, consider the following example
    prompt structure with question-thought-action-observation sequences:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明构建ReAct提示的结构，考虑以下示例提示结构，包含问题-思考-行动-观察序列：
- en: '**Example 1:**'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例1**：'
- en: '**Question**: What is the optimal inventory level to minimize stockouts?'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问题**：最小化缺货的最佳库存水平是多少？'
- en: '**Thought**: To avoid stockouts, we must balance inventory levels based on
    demand forecasts and reorder points.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**思考**：为了避免缺货，我们必须根据需求预测和再订购点来平衡库存水平。'
- en: '`optimizeInventoryLevels` function using historical sales data and demand projections.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用历史销售数据和需求预测的`optimizeInventoryLevels`函数。
- en: '**Observation**: Maintaining inventory at 80% of forecasted demand reduced
    stockouts by 30% while optimizing carrying costs.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**观察**：将库存维持在预测需求的80%可以减少缺货30%，同时优化了持有成本。'
- en: '**Example 2**:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 2**：'
- en: '**Question**: How can we improve customer satisfaction ratings?'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问题**：我们如何提高客户满意度评分？'
- en: '**Thought**: To enhance satisfaction, we should analyze feedback data and implement
    targeted improvements.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**思考**：为了提高满意度，我们应该分析反馈数据并实施有针对性的改进。'
- en: '`analyzeCustomerFeedback` API to identify trends and insights.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`analyzeCustomerFeedback` API来识别趋势和洞察。
- en: '**Observation**: Based on the analysis, implementing personalized customer
    support led to a 20% increase in satisfaction scores.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**观察**：根据分析，实施个性化客户支持使满意度评分提高了20%。'
- en: These examples demonstrate how the ReAct technique guides the model through
    reasoning steps, leading to actionable outcomes.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这些示例展示了ReAct技术如何指导模型通过推理步骤，从而得出可操作的成果。
- en: While the process of manually crafting these prompts can be time-consuming and
    intricate, the Amazon Bedrock Agent streamlines this process by automatically
    generating the prompts based on the provided information and available actions.
    Bedrock agents handle the complexities of prompt engineering, allowing researchers
    and developers to focus on defining the task requirements and available actions.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然手动制作这些提示的过程可能耗时且复杂，但Amazon Bedrock Agent通过根据提供的信息和可用操作自动生成提示，简化了这一过程。Bedrock代理处理提示工程的复杂性，使研究人员和开发者能够专注于定义任务要求和可用操作。
- en: Readers are encouraged to check out [https://github.com/aws-samples/agentsforbedrock-retailagent](https://github.com/aws-samples/agentsforbedrock-retailagent),
    which uncovers the creation of an FM-powered customer service bot by leveraging
    Agents for Amazon Bedrock.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 鼓励读者查看[https://github.com/aws-samples/agentsforbedrock-retailagent](https://github.com/aws-samples/agentsforbedrock-retailagent)，该链接揭示了通过利用Amazon
    Bedrock的代理创建一个由FM驱动的客户服务机器人。
- en: The ReAct technique and Bedrock Agents represent a significant advancement in
    the field of GenAI, enabling models to demonstrate improved reasoning abilities
    and tackle complex tasks more effectively. By providing a structured approach
    to problem-solving and leveraging the power of prompts, this technique has the
    potential to unlock new possibilities and applications for GenAI in various domains.
    Let us explore the functioning of Amazon Bedrock Agents with some practical use
    cases.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: ReAct技术和Bedrock代理代表了在GenAI领域的一项重大进步，使模型能够展示出改进的推理能力，并更有效地处理复杂任务。通过提供解决问题的结构化方法并利用提示的力量，这项技术有可能解锁GenAI在各个领域的新可能性和应用。让我们通过一些实际用例来探索Amazon
    Bedrock Agents的工作原理。
- en: Practical use case and functioning with Amazon Bedrock Agents
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Amazon Bedrock Agents的实际用例和功能
- en: 'In this section, we will dive into real-world applications and operational
    insights of leveraging Amazon Bedrock Agents in GenAI. Let us consider an example
    scenario of a multilingual summarizer bot, wherein a GenAI agent can be employed
    to streamline operations and automate how to translate the content in a summarized
    fashion in the language of the user’s choice. In order to begin, the developer
    must access the Bedrock console and initiate the agent creation workflow, as highlighted
    in *Figure 10**.5*:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将深入了解利用Amazon Bedrock Agents在GenAI中的实际应用和运营洞察。让我们考虑一个多语言摘要机器人示例场景，其中GenAI代理可以被用来简化操作并自动将内容以用户选择的语言进行摘要翻译。为了开始，开发者必须访问Bedrock控制台并启动代理创建工作流程，如*图10**.5*所示：
- en: '![Figure 10.5 – Agent creation within the Bedrock console](img/B22045_10_05.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图10.5 – Bedrock控制台中的代理创建](img/B22045_10_05.jpg)'
- en: Figure 10.5 – Agent creation within the Bedrock console
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5 – Bedrock控制台中的代理创建
- en: 'This process involves providing essential details, such as the agent’s name,
    description, and the necessary permissions through an AWS **Identity and Access
    Management** (**IAM**) service role. This role grants the agent access to required
    services such as **Amazon Simple Storage Service** (**Amazon S3**) and AWS Lambda,
    as illustrated in *Figure 10**.6*. As an example, the figure demonstrates the
    creation of a multilingual document summarizer and translator agent for extracting
    relevant information from the documents and relaying the information to the user
    in the translated language:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 此过程涉及通过 AWS **身份和访问管理** (**IAM**) 服务角色提供必要细节，例如代理的名称、描述和必要的权限。此角色授予代理访问所需服务（如
    **Amazon Simple Storage Service** (**Amazon S3**) 和 AWS Lambda）的权限，如图 *图 10**.6*
    所示。例如，该图展示了创建一个多语言文档摘要和翻译代理，用于从文档中提取相关信息，并以翻译语言将信息传达给用户：
- en: '![Figure 10.6 – Bedrock Agent creation process with IAM permissions](img/B22045_10_06.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.6 – 带有 IAM 权限的 Bedrock 代理创建过程](img/B22045_10_06.jpg)'
- en: Figure 10.6 – Bedrock Agent creation process with IAM permissions
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.6 – 带有 IAM 权限的 Bedrock 代理创建过程
- en: By default, Amazon Bedrock employs encryption for agent sessions with users,
    utilizing a key that AWS owns and manages on your behalf. However, if you prefer
    to use a customer-managed key from AWS **Key Management Service** (**KMS**) that
    you have set up, you have the option to customize your encryption settings accordingly.
    This allows you to take control of the encryption key used for securing agent-user
    interactions, aligning with your organization’s security and compliance requirements.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Amazon Bedrock 使用加密来保护与用户的代理会话，使用 AWS 代表您拥有和管理的密钥。但是，如果您更喜欢使用您已设置的 AWS
    **密钥管理服务** (**KMS**) 中的客户管理密钥，您可以选择相应地自定义加密设置。这允许您控制用于保护代理-用户交互的加密密钥，以满足您组织的安全和合规要求。
- en: 'Next, the developer selects an FM from Bedrock that aligns with the desired
    use case. This step involves providing natural language instructions that define
    the agent’s task and the persona it should assume. For instance, in the example
    demonstrated in *Figure 10**.7*, the instruction could be `You are a multi-lingual
    agent designed to help with extracting inquired information from relevant documents
    and providing the response in` `translated language`:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，开发者从 Bedrock 中选择一个与所需用例相匹配的 FM。这一步骤涉及提供自然语言指令，以定义代理的任务和它应扮演的角色。例如，在 *图 10**.7*
    中展示的示例中，指令可能是 `您是一个多语言代理，旨在帮助从相关文档中提取所需信息，并以` `翻译语言` `的形式提供响应`：
- en: '![Figure 10.7 – Amazon Bedrock Agent configuration for model selection and
    Agent persona](img/B22045_10_07.jpg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.7 – Amazon Bedrock 代理配置用于模型选择和代理角色](img/B22045_10_07.jpg)'
- en: Figure 10.7 – Amazon Bedrock Agent configuration for model selection and Agent
    persona
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7 – Amazon Bedrock 代理模型选择和代理角色配置
- en: The console also provides the option for the user to select guardrails to implement
    application-specific safeguards abiding by responsible AI policies. For simplicity,
    we can leave this blank and move to the next section. We will be covering guardrails
    in detail in [*Chapter 12*](B22045_12.xhtml#_idTextAnchor226).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台还提供了用户选择护栏以实施特定于应用程序的安全保障的选项，这些安全保障遵守负责任的 AI 政策。为了简单起见，我们可以将其留空并进入下一部分。我们将在
    [*第 12 章*](B22045_12.xhtml#_idTextAnchor226) 中详细介绍护栏。
- en: 'Subsequently, the developer adds action groups, which are sets of tasks the
    agent can perform automatically by making API calls to the company’s systems.
    This step involves defining an API schema that outlines the APIs for all actions
    within a group and providing a Lambda function that encapsulates the business
    logic for each API. For example, an action group named `Summarizer_Translator_ActionGroup`
    could handle documents stored either in a database or within a particular location,
    identifying the information requested by the user and sending a summarized response
    to the user in the translated language inquired by the user. *Figure 10**.8* showcases
    the creation of an action group to handle tasks for agents to execute autonomously:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 随后，开发者添加操作组，这些操作组是代理可以通过向公司系统发出 API 调用来自动执行的任务集合。这一步骤涉及定义一个 API 架构，概述组内所有操作的
    API，并提供一个封装每个 API 商业逻辑的 Lambda 函数。例如，名为 `Summarizer_Translator_ActionGroup` 的操作组可以处理存储在数据库中或特定位置的文档，识别用户请求的信息，并以用户请求的翻译语言向用户发送总结后的响应。*图
    10**.8* 展示了创建操作组来自动执行代理任务的创建过程：
- en: '![Figure 10.8 – Creating Bedrock Agent’s action group](img/B22045_10_08.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.8 – 创建 Bedrock 代理的动作组](img/B22045_10_08.jpg)'
- en: Figure 10.8 – Creating Bedrock Agent’s action group
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8 – 创建 Bedrock 代理的动作组
- en: As shown previously, you will have to create a Lambda function to handle incoming
    requests from the agents and select an API schema. Please ensure you have provided
    the right permissions to your AWS Lambda function to invoke Bedrock agents.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，你需要创建一个 Lambda 函数来处理来自代理的请求并选择一个 API 架构。请确保你已经为你的 AWS Lambda 函数提供了调用 Bedrock
    代理的正确权限。
- en: 'For the case of document identification, summarization, and translation, we
    have provided the following Lambda function that users can leverage for executing
    the workflow:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 对于文档识别、摘要和翻译的情况，我们提供了以下 Lambda 函数，用户可以利用它来执行工作流程：
- en: '[PRE3]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Users running the preceding workflow can also use the following OpenAPI schema
    and store it in S3, as part of this example:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 运行前面工作流程的用户也可以使用以下 OpenAPI 架构并将其存储在 S3 中，作为本例的一部分：
- en: '[PRE4]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the next step, users have the option to select a knowledge base, as depicted
    in *Figure 10**.9*. This showcases the power of Bedrock Agents to easily create
    a RAG-based solution for extracting information from relevant sources stored in
    the knowledge base, by performing similarity searches and providing desired responses
    back to the user. For simplicity, we will ignore that and move to the final creation
    step:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，用户可以选择一个知识库，如图 *图 10.9* 所示。这展示了 Bedrock 代理如何通过执行相似性搜索并提供所需响应给用户，轻松创建基于
    RAG 的解决方案来从知识库中提取相关信息。为了简化，我们将忽略这一点并进入最终的创建步骤：
- en: '![Figure 10.9 – Knowledge-base creation with Bedrock Agents integration](img/B22045_10_09.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.9 – 使用 Bedrock 代理集成创建知识库](img/B22045_10_09.jpg)'
- en: Figure 10.9 – Knowledge-base creation with Bedrock Agents integration
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9 – 使用 Bedrock 代理集成创建知识库
- en: Note
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you would like to dive deep into use cases involving knowledge-base integration
    with your agents, you can execute the following code samples: [https://github.com/aws-samples/amazon-bedrock-workshop/tree/main/05_Agents/insurance_claims_agent/with_kb](https://github.com/aws-samples/amazon-bedrock-workshop/tree/main/05_Agents/insurance_claims_agent/with_kb).'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要深入了解涉及知识库与代理集成的用例，你可以执行以下代码示例：[https://github.com/aws-samples/amazon-bedrock-workshop/tree/main/05_Agents/insurance_claims_agent/with_kb](https://github.com/aws-samples/amazon-bedrock-workshop/tree/main/05_Agents/insurance_claims_agent/with_kb).
- en: 'Additional code within the GitHub repository further illustrates how to create
    and invoke Bedrock Agents with the Python SDK, as evidenced in the following notebook:
    [https://github.com/aws-samples/amazon-bedrock-workshop/blob/main/05_Agents/insurance_claims_agent/with_kb/create_and_invoke_agent_with_kb.ipynb](https://github.com/aws-samples/amazon-bedrock-workshop/blob/main/05_Agents/insurance_claims_agent/with_kb/create_and_invoke_agent_with_kb.ipynb).'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 仓库中的附加代码进一步说明了如何使用 Python SDK 创建和调用 Bedrock 代理，如下面的笔记本所示：[https://github.com/aws-samples/amazon-bedrock-workshop/blob/main/05_Agents/insurance_claims_agent/with_kb/create_and_invoke_agent_with_kb.ipynb](https://github.com/aws-samples/amazon-bedrock-workshop/blob/main/05_Agents/insurance_claims_agent/with_kb/create_and_invoke_agent_with_kb.ipynb).
- en: Once the preceding steps are done, you can verify the agent configuration and
    select **Create Agent**. Congratulations on creating your Amazon Bedrock Agent
    (*Figure 10**.10*)!
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 完成前面的步骤后，你可以验证代理配置并选择**创建代理**。恭喜你创建你的 Amazon Bedrock 代理 (*图 10.10*)！
- en: '![Figure 10.10 – Amazon Bedrock Agent version](img/B22045_10_10.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.10 – Amazon Bedrock 代理版本](img/B22045_10_10.jpg)'
- en: Figure 10.10 – Amazon Bedrock Agent version
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.10 – Amazon Bedrock 代理版本
- en: 'On the right side of the screen, you can easily test your agent by asking it
    questions about the document and requesting it to summarize and translate the
    document into your desired language, as shown in *Figure 10**.11*:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕的右侧，你可以通过询问文档相关问题并请求它总结和将文档翻译成你希望的语言来轻松测试你的代理，如图 *图 10.11* 所示：
- en: '![Figure 10.11 – Testing Bedrock Agent within AWS console](img/B22045_10_11.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.11 – 在 AWS 控制台中测试 Bedrock 代理](img/B22045_10_11.jpg)'
- en: Figure 10.11 – Testing Bedrock Agent within AWS console
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.11 – 在 AWS 控制台中测试 Bedrock 代理
- en: In this section, we acquired a practical comprehension of developing and evaluating
    Amazon Bedrock Agents tailored for a text summarization use case. Upon ensuring
    the agent’s configuration and functionality align with the designated tasks, it’s
    time to transition into the deployment phase.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们获得了对开发和使用文本摘要用例定制的Amazon Bedrock代理的实际理解。在确保代理的配置和功能与指定任务相符后，就到了部署阶段。
- en: Deploying an Agent for Amazon Bedrock
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署Amazon Bedrock代理
- en: 'Integrating an Amazon Bedrock agent into your application requires creating
    an alias, which serves as a reference to a specific version of the agent’s code
    and configuration. Follow these steps to create an alias:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 将Amazon Bedrock代理集成到您的应用程序中需要创建一个别名，该别名作为对代理代码和配置特定版本的引用。按照以下步骤创建别名：
- en: Access the Amazon Bedrock console and navigate to the agent you wish to deploy.
    From the agent’s overview page, navigate to the **Aliases** section and then click
    **Create** to initiate the alias creation process.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问Amazon Bedrock控制台，导航到您希望部署的代理。从代理概览页面，导航到**别名**部分，然后点击**创建**以启动别名创建过程。
- en: Provide a name and description (optional) for the alias. You’ll also need to
    decide whether you want to associate this alias with a new version of the agent
    or an existing version that you’ve previously created.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为别名提供名称和描述（可选）。您还需要决定是否要将此别名与代理的新版本或您之前创建的现有版本关联。
- en: Users also have the option to opt for provisioned throughput for the alias by
    selecting the **Provisioned Throughput (PT)** button. Once selected, a drop-down
    menu will list models created with Provisioned Throughput. No option being displayed
    will indicate that no PT model exists within the Amazon Bedrock environment. For
    further information, users can leverage [https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html).
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户还可以选择通过选择**预配吞吐量（PT）**按钮为别名提供预配吞吐量。一旦选择，下拉菜单将列出使用预配吞吐量创建的模型。如果没有选项显示，则表示在Amazon
    Bedrock环境中不存在预配吞吐量模型。有关更多信息，用户可以利用[https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html)。
- en: 'By creating an alias, Bedrock takes a snapshot of the agent’s current code
    and configuration settings and links that snapshot (version) to the alias you’ve
    defined. You can then use this alias to integrate and interact with that specific
    version of the agent within your applications. *Figure 10**.12* showcases two
    aliases that were created for the summarizer-translator agent:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 通过创建别名，Bedrock会对代理当前的代码和配置设置进行快照，并将该快照（版本）链接到您定义的别名。然后，您可以使用此别名在您的应用程序中集成和交互特定版本的代理。*图10.12*展示了为摘要翻译代理创建的两个别名：
- en: '![Figure 10.12 – Aliases for Amazon Bedrock Agents](img/B22045_10_12.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图10.12 – Amazon Bedrock代理的别名](img/B22045_10_12.jpg)'
- en: Figure 10.12 – Aliases for Amazon Bedrock Agents
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.12 – Amazon Bedrock代理的别名
- en: The alias essentially acts as a stable reference point, allowing you to manage
    different versions of your agent while ensuring your applications are interacting
    with the desired version.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 别名本质上充当一个稳定的参考点，允许您管理代理的不同版本，同时确保您的应用程序正在与期望的版本交互。
- en: Amazon Bedrock agents enable productivity gains, enhanced customer experiences,
    and automated workflows. Their versatility allows innovative implementations across
    domains such as task automation, conversational interfaces, and DevOps processes,
    driving operational efficiency and business value.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Bedrock代理能够提升生产力、增强客户体验以及自动化工作流程。它们的通用性允许在任务自动化、对话界面和DevOps流程等各个领域进行创新实施，从而推动运营效率和商业价值的提升。
- en: There can be several other industrial use cases with Bedrock Agents. For instance,
    in the case of insurance, by leveraging GenAI through Amazon Bedrock, insurance
    companies can enhance operational efficiency and customer experience. The agent
    can automate tedious and repetitive tasks, freeing up human resources to focus
    on more complex and strategic endeavors. Additionally, the agent’s ability to
    process natural language instructions allows for seamless integration into existing
    workflows and systems, facilitating a smoother transition toward AI-driven operations.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: Bedrock Agents 可以有几种其他工业用例。例如，在保险领域，通过利用 Amazon Bedrock 上的 GenAI，保险公司可以提高运营效率和客户体验。代理可以自动化繁琐和重复的任务，释放人力资源，以便专注于更复杂和战略性的工作。此外，代理处理自然语言指令的能力允许其无缝集成到现有的工作流程和系统中，促进向
    AI 驱动的运营的平稳过渡。
- en: Moreover, the potential applications of GenAI in the insurance industry extend
    beyond claim processing. Agents can be trained to assist with personalized policy
    recommendations, risk assessment, fraud detection, and even customer support through
    natural language interactions. As technology continues to evolve, the opportunities
    for innovation and optimization within the insurance sector will undoubtedly expand.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，GenAI 在保险行业的潜在应用不仅限于索赔处理。代理可以被训练来协助个性化政策推荐、风险评估、欺诈检测，甚至通过自然语言交互提供客户支持。随着技术的不断发展，保险领域内的创新和优化机会无疑将扩大。
- en: 'The following link demonstrates an end-to-end scenario to get started with
    Amazon Bedrock Agents using the AWS Python SDK: [https://github.com/awsdocs/aws-doc-sdk-examples/blob/main/python/example_code/bedrock-agent/scenario_get_started_with_agents.py](https://github.com/awsdocs/aws-doc-sdk-examples/blob/main/python/example_code/bedrock-agent/scenario_get_started_with_agents.py).'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 以下链接演示了使用 AWS Python SDK 开始使用 Amazon Bedrock Agents 的端到端场景：[https://github.com/awsdocs/aws-doc-sdk-examples/blob/main/python/example_code/bedrock-agent/scenario_get_started_with_agents.py](https://github.com/awsdocs/aws-doc-sdk-examples/blob/main/python/example_code/bedrock-agent/scenario_get_started_with_agents.py).
- en: 'The notebook uncovers the following steps:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本揭示了以下步骤：
- en: Generating an execution role specifically for the Bedrock agent
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为 Bedrock 代理生成特定的执行角色
- en: Instantiating the Bedrock agent and deploying an initial draft version
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化 Bedrock 代理并部署初始草案版本
- en: Building a Lambda function and its corresponding execution role
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建 Lambda 函数及其相应的执行角色
- en: Granting the necessary IAM permissions to provision the agent to invoke the
    Lambda function
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授予必要的 IAM 权限以部署代理以调用 Lambda 函数
- en: Establishing an action group that links the agent with the Lambda function
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建立一个将代理与 Lambda 函数链接的动作组
- en: Deploying the fully configured agent using a designated alias
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用指定的别名部署完全配置的代理
- en: Invoking the agent with user-provided prompts
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用用户提供的提示调用代理
- en: Removing all resources created during the process
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除在过程中创建的所有资源
- en: Users can execute this scenario end to end in order to imbibe a deeper understanding
    of creating a GenAI agent on Amazon Bedrock for their utility.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以通过执行此场景的端到端操作，以深入了解在 Amazon Bedrock 上创建 GenAI 代理的实用方法。
- en: 'For readers interested in diving further into the world of Agents for Amazon
    Bedrock, you are highly encouraged to leverage Amazon’s *Building generative AI
    applications with Amazon Bedrock using agents* workshop: [https://catalog.us-east-1.prod.workshops.aws/workshops/f8a7a3f8-1603-4b10-95cb-0b471db272d8/en-US](https://catalog.us-east-1.prod.workshops.aws/workshops/f8a7a3f8-1603-4b10-95cb-0b471db272d8/en-US).'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 对于有兴趣深入了解 Amazon Bedrock 代理世界的读者，强烈建议利用 Amazon 的 *使用代理构建 Amazon Bedrock 生成式
    AI 应用程序* 工作坊：[https://catalog.us-east-1.prod.workshops.aws/workshops/f8a7a3f8-1603-4b10-95cb-0b471db272d8/en-US](https://catalog.us-east-1.prod.workshops.aws/workshops/f8a7a3f8-1603-4b10-95cb-0b471db272d8/en-US).
- en: 'Readers are further encouraged to check out workflow orchestration using Amazon
    Bedrock Agent chaining with a digital insurance Agent use case: [https://github.com/build-on-aws/workflow-orchestration-bedrock-agent-chaining/tree/main](https://github.com/build-on-aws/workflow-orchestration-bedrock-agent-chaining/tree/main).'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 鼓励读者进一步了解使用 Amazon Bedrock Agent 链接和数字保险代理用例进行工作流程编排：[https://github.com/build-on-aws/workflow-orchestration-bedrock-agent-chaining/tree/main](https://github.com/build-on-aws/workflow-orchestration-bedrock-agent-chaining/tree/main).
- en: Summary
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we explored the intricate concept of Agents within the GenAI
    universe. We examined various use cases and personas associated with agents, further
    elucidating practical examples of their applications in real-world scenarios.
    Additionally, we uncovered the seamless integration of LangChain agents with Amazon
    Bedrock and explored the creation of Amazon Bedrock Agents through practical code
    examples, as well as their orchestration workflow for building, testing, and deploying
    Bedrock agents.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了GenAI宇宙中代理的复杂概念。我们研究了与代理相关的各种用例和角色，进一步阐明了它们在现实场景中的应用实例。此外，我们还揭示了LangChain代理与Amazon
    Bedrock的无缝集成，并通过实际代码示例探讨了创建Amazon Bedrock代理以及它们的编排工作流程，用于构建、测试和部署Bedrock代理。
- en: Now that we have gained a thorough understanding of Agents and their orchestration
    processes, we will explore effective strategies for monitoring Amazon Bedrock
    models within large-scale enterprises in the next chapter. This will equip us
    with the necessary knowledge to manage and optimize the security and governance
    of these models in complex organizational settings, ensuring optimal utilization
    and efficiency.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对代理及其编排过程有了深入的了解，我们将在下一章探讨在大规模企业中监控Amazon Bedrock模型的有效策略。这将使我们具备在复杂组织环境中管理和优化这些模型的安全和治理的必要知识，确保最佳利用率和效率。
- en: 'Part 3: Model Management and Security Considerations'
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3部分：模型管理和安全考量
- en: In this part, we will understand the core aspects of evaluating and monitoring
    models, as well as ensuring security and privacy within the Amazon Bedrock environment.
    [*Chapter 11*](B22045_11.xhtml#_idTextAnchor207) explores techniques for assessing
    model performance, including automatic model evaluation, human evaluation, and
    open source tools. Additionally, it covers monitoring techniques such as Amazon
    CloudWatch, model invocation logging, and integration with AWS CloudTrail and
    Amazon EventBridge. [*Chapter 12*](B22045_12.xhtml#_idTextAnchor226) centers on
    data protection, identity and access management, network security, ethical considerations,
    and implementing guardrails to adhere to responsible AI practices and policies.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分，我们将了解评估和监控模型的核心方面，以及确保在Amazon Bedrock环境中安全和隐私。[*第11章*](B22045_11.xhtml#_idTextAnchor207)探讨了评估模型性能的技术，包括自动模型评估、人工评估和开源工具。此外，它还涵盖了监控技术，如Amazon
    CloudWatch、模型调用日志以及与AWS CloudTrail和Amazon EventBridge的集成。[*第12章*](B22045_12.xhtml#_idTextAnchor226)侧重于数据保护、身份和访问管理、网络安全、伦理考量以及实施护栏以遵守负责任的AI实践和政策。
- en: 'This part has the following chapters:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 11*](B22045_11.xhtml#_idTextAnchor207), *Evaluating and Monitoring
    Models with Amazon Bedrock*'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第11章*](B22045_11.xhtml#_idTextAnchor207), *使用Amazon Bedrock评估和监控模型*'
- en: '[*Chapter 12*](B22045_12.xhtml#_idTextAnchor226), *Ensuring Security and Privacy
    in Amazon Bedrock*'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第12章*](B22045_12.xhtml#_idTextAnchor226)，*确保在Amazon Bedrock中安全和隐私*'
