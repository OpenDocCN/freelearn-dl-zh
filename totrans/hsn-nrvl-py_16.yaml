- en: Concluding Remarks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this chapter, we will summarize everything we have learned in this book and
    will provide further information so that you can continue your self-education. This
    chapter will help us revise the topics we have covered in a chapter-wise format
    and then provide a roadmap by sharing some details on Uber AI Labs, alife.org,
    and open-ended evolution at Reddit. We will also have a quick overview of the NEAT
    Software Catalog and the NEAT Algorithm Paper.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将总结本书所学的一切，并提供进一步的信息，以便你可以继续自学。本章将帮助我们以章节形式回顾所涵盖的主题，并通过分享Uber AI Labs、alife.org和Reddit上的开放式进化的一些细节来提供路线图。我们还将快速概述NEAT软件目录和NEAT算法论文。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: What we learned in this book
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书所学内容
- en: Where to go from here
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来该做什么
- en: What we learned in this book
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书所学内容
- en: Now that we have finished with the experiments, I hope that you have gained
    a solid understanding of the neuroevolution method of training artificial neural
    networks. We used neuroevolution to find solutions to a variety of experiments,
    from classic computer science problems to the creation of agents that are capable
    of playing Atari games. We also examined tasks related to computer vision and
    visual discrimination.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了实验，我希望你已经对人工神经网络神经进化的方法有了坚实的理解。我们使用神经进化来解决各种实验，从经典的计算机科学问题到能够玩Atari游戏的智能体的创建。我们还检查了与计算机视觉和视觉辨别相关的任务。
- en: In this section, we will summarize what we learned in each chapter of this book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将总结本书每一章所学的内容。
- en: Overview of the neuroevolution methods
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 神经进化方法概述
- en: In this chapter, we learned about the core concepts of genetic algorithms, such
    as genetic operators and genome encoding schemes.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了遗传算法的核心概念，如遗传算子和基因组编码方案。
- en: 'We discussed two major genetic operators that allow us to maintain the evolutionary
    process:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了两种主要的遗传算子，允许我们维持进化过程：
- en: The mutation operator implements random mutations of the offspring, which introduces
    genetic diversity into the population.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 突变算子实现了后代的随机突变，这为种群引入了遗传多样性。
- en: The crossover operator generates offspring by sampling genes from each parent.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交叉算子通过从每个父代中采样基因来生成后代。
- en: 'After that, we continued with a discussion about the importance of choosing
    the right genome encoding schema. We considered two major encoding formats that
    exist: direct and indirect genome encoding. The former introduces a one-to-one
    relationship between the genome and the encoded phenotype ANN. Usually, direct
    encoding is applied to encode small ANNs, which has a limited number of connected
    nodes. The more advanced indirect encoding scheme allows us to encode the evolving
    ANN topology of large networks, often with millions of connections. Indirect encoding
    allows us to reuse repeating encoding blocks, thus significantly reducing the
    size of a genome.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们继续讨论选择合适的基因组编码方案的重要性。我们考虑了两种主要的编码格式：直接和间接基因组编码。前者在基因组与编码的表型人工神经网络（ANN）之间建立了一对一的关系。通常，直接编码用于编码小型ANN，其连接节点数量有限。更先进的间接编码方案允许我们编码大型网络的演变ANN拓扑结构，通常具有数百万个连接。间接编码允许我们重用重复的编码块，从而显著减少基因组的尺寸。
- en: Once we were familiar with existing genome encoding schemes, we proceeded to
    discuss the neuroevolution method, which uses different encoding schemes. We started
    with an introduction to the NEAT algorithm, which uses the direct genome encoding
    scheme and enhances it with the concept of the innovation number. The innovation
    number associated with each gene of the genotype provides a means to precisely
    track when a particular mutation was introduced. This feature makes crossover
    operations between two parents straightforward and easy to implement. The NEAT
    method emphasizes the importance of starting from a very basic genome that gradually
    becomes more complex during evolution. In this manner, the evolutionary process
    has an excellent chance of finding the optimal solution.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们熟悉了现有的基因组编码方案，我们就继续讨论神经进化方法，该方法使用不同的编码方案。我们首先介绍了NEAT算法，它使用直接基因组编码方案，并通过创新数字概念进行增强。与每个基因型基因相关的创新数字提供了一种精确追踪特定突变何时被引入的手段。这一特性使得两个父母之间的交叉操作变得简单易行。NEAT方法强调从非常基础的基因组开始，在进化过程中逐渐变得更加复杂的重要性。这样，进化过程有很好的机会找到最优解。
- en: Furthermore, the concept of speciation was introduced, which keeps useful mutations
    by isolating them in particular species (niches). The species within one niche
    are only allowed to cross over with each other. Speciation is the great moving
    force behind natural evolution, and it was shown to have a high impact on neuroevolution
    as well.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，引入了物种形成概念，通过将有益突变隔离在特定物种（生态位）中，从而保留这些突变。同一生态位内的物种只允许彼此之间进行杂交。物种形成是自然进化的强大推动力，并且已经证明它对神经进化也有重大影响。
- en: Having discussed the basic NEAT algorithm, we proceeded to a discussion of its
    derivatives to address the limitations of the original algorithm. One of the significant
    drawbacks of the NEAT algorithm is caused by using a direct genome encoding scheme.
    This scheme, while easy to visualize and implement, only encodes small topologies
    of the phenotype ANNs. With an increase in the phenotype ANN size, the size of
    the genome increases in linear proportion. This linear increase in genome size
    eventually makes it hard to maintain. Thus, to address these drawbacks, a series
    of extensions based on the indirect genome encoding schemes, such as HyperNEAT
    and ES-HyperNEAT, were introduced.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了基本的NEAT算法之后，我们继续讨论其衍生算法，以解决原始算法的局限性。NEAT算法的一个显著缺点是由于使用了直接基因组编码方案。虽然这种方案易于可视化和实现，但它只能编码表型ANN的小拓扑结构。随着表型ANN大小的增加，基因组的大小以线性比例增加。这种基因组大小的线性增加最终使得维护变得困难。因此，为了解决这些缺点，引入了一系列基于间接基因组编码方案的扩展，例如HyperNEAT和ES-HyperNEAT。
- en: The HyperNEAT method uses an advanced format to represent connections between
    nodes of the phenotype ANN in the form of four-dimensional points in the hypercube.
    The chosen hypercube's dimensionality is based on the fact that connections between
    two nodes within an ANN can be encoded by the coordinates of connection endpoints
    in a medium called the substrate. The substrate topology provides a framework
    that draws connections between the nodes of the phenotype ANN. The strength of
    a connection that's drawn between two particular nodes in a substrate is estimated
    by the auxiliary neural network known as the **Compositional Pattern Producing
    Network** (**CPPN**). The CPPN receives the coordinates of the hyper-point (the
    coordinates of the connection endpoints) as input and calculates the strength
    of the connection. Also, it computes the value of the flag, which indicates whether
    a connection should be expressed or not. The experimenter defines the substrate
    configuration in advance. It is defined by the geometric properties of the problem
    to be solved. At the same time, the topology of the CPPN is evolved during the
    neuroevolution process using the NEAT algorithm. Thus, we have the best of both
    worlds. The power of the NEAT algorithm allows us to evolve the optimal CPPN configurations.
    At the same time, the indirect encoding scheme is maintained by the CPPN and allows
    us to represent large phenotype ANNs.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: HyperNEAT方法使用一种高级格式来表示表型ANN节点之间的连接，这种格式以超立方体中的四维点形式出现。所选超立方体的维度是基于这样一个事实：在ANN内部两个节点之间的连接可以通过称为基质的介质中连接端点的坐标进行编码。基质拓扑提供了一个框架，用于在表型ANN的节点之间绘制连接。在基质中两个特定节点之间绘制的连接强度是通过称为**组合模式生成网络**（**CPPN**）的辅助神经网络来估计的。CPPN接收超点（连接端点的坐标）的坐标作为输入，并计算连接的强度。此外，它还计算标志值，该值指示是否应该表达连接。实验者预先定义基质配置。它由要解决的问题的几何属性定义。同时，在神经进化过程中，使用NEAT算法进化CPPN的拓扑结构。因此，我们得到了两者的最佳结合。NEAT算法的力量使我们能够进化最优的CPPN配置。同时，CPPN通过间接编码方案保持了编码方案，使我们能够表示大型表型ANN。
- en: The ES-HyperNEAT method introduces a further enhancement to the original NEAT
    and HyperNEAT methods by proposing an advanced method of substrate evolution that's
    on par with the evolution of the connectivity CPPN. The substrate evolution is
    built around the notion of information density, which allows more dense node placement
    in the areas with higher information variability. This approach allows the neuroevolution
    process to discover substrate configurations that precisely follow the geometrical
    regularities that are exposed by the problem to be solved.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ES-HyperNEAT方法通过提出一种与连接CPPN进化相当的高级基质进化方法，进一步增强了原始的NEAT和HyperNEAT方法。基质进化建立在信息密度概念的基础上，这允许在信息变异性较高的区域进行更密集的节点放置。这种方法允许神经进化过程发现基质配置，这些配置精确地遵循由要解决的问题暴露的几何规律。
- en: We finished the first chapter with a discussion about the fascinating search
    optimization method known as **Novelty Search** (**NS**). This method is based
    on the concept of guiding the evolutionary search by criteria that have been estimated
    using the novelty of the solutions found. Conventionally, search optimization
    is based on goal-oriented fitness criteria, which measure how close we are to
    the goal. But there is a whole area of real-world problems that have deceptive
    fitness function landscapes, which introduce strong local optima traps. The goal-oriented
    search has a good chance of getting stuck in one of these traps and failing to
    find the ultimate solution. At the same time, the search optimization method,
    which rewards the novelty of the solution found, allows us to avoid these traps
    by completely ignoring the proximity to the final goal. The NS method was shown
    to be effective in tasks of autonomous navigation through deceptive maze environments;
    it outperformed the objective-based search methods.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在第一章的结尾讨论了名为**新颖性搜索**（**NS**）的迷人的搜索优化方法。这种方法基于使用找到的解决方案的新颖性来估计的准则来引导进化搜索。传统上，搜索优化基于目标导向的适应度准则，这些准则衡量我们离目标有多近。但是，存在一个广泛的现实世界问题，它们具有欺骗性的适应度函数景观，这引入了强烈的局部最优陷阱。目标导向的搜索有很大可能性陷入这些陷阱，无法找到最终解决方案。同时，奖励找到的解决方案新颖性的搜索优化方法，使我们能够通过完全忽略最终目标附近的距离来避免这些陷阱。NS方法已被证明在通过欺骗迷宫环境进行自主导航的任务中是有效的；它优于基于目标的方法。
- en: In the next chapter of this book, we discussed how to set up a working environment
    correctly and what Python libraries can be used to experiment with neuroevolution.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的下一章中，我们讨论了如何正确设置工作环境以及可以使用哪些Python库来实验神经进化。
- en: Python libraries and environment setup
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python库和环境设置
- en: In this chapter, we started by discussing the practical aspects of the neuroevolution
    methods. We discussed the pros and cons of popular Python libraries that provide
    implementations of the NEAT algorithm and its extensions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先讨论了神经进化方法的实际方面。我们讨论了提供NEAT算法及其扩展实现的流行Python库的优缺点。
- en: Along with the highlights of each Python library, we also provided small code
    snippets, giving you a feel of how to use each specific library in your experiments.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 除了每个Python库的亮点之外，我们还提供了小的代码片段，让你感受到如何在实验中使用每个特定的库。
- en: After that, we proceeded to discuss how to correctly set up the working environment.
    The working environment must have the necessary dependencies installed to allow
    the usage of the mentioned Python libraries. The installation can be done using
    several methods. We considered the two most common ones – the standard **package
    installer for Python** (**PIP**) utility and the Anaconda Distribution. Another
    critical aspect of the working environment's preparation is the creation of isolated
    virtual Python environments for each specific experiment. The virtual environments
    provide the benefits of having different dependency configurations for varying
    combinations of experiments and the NEAT Python libraries that are used in them.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们继续讨论如何正确设置工作环境。工作环境必须安装必要的依赖项，以便使用所提到的Python库。安装可以通过几种方法完成。我们考虑了两种最常见的方法——Python的标准**包安装器**（**PIP**）实用工具和Anaconda发行版。工作环境准备的关键方面之一是为每个特定实验创建隔离的虚拟Python环境。虚拟环境提供了为不同实验组合和其中使用的NEAT
    Python库的不同依赖配置带来好处。
- en: Having dependencies isolated in a virtual environment also allows easy management
    of all the installed dependencies as a whole. The environment can be quickly deleted
    from your PC with everything installed into it, thus freeing disk space. You can
    also reuse a specific virtual environment for different experiments, which depends
    on the same NEAT implementation library.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚拟环境中隔离依赖项也允许轻松管理所有安装的依赖项作为一个整体。你可以快速从你的电脑上删除环境，包括其中安装的所有内容，从而释放磁盘空间。你也可以为不同的实验重用特定的虚拟环境，这取决于相同的NEAT实现库。
- en: This chapter should have got you familiar with every tool you need in order
    to start with neuroevolution experiments. In the next chapter, we proceeded to
    discuss the XOR solver experiment using the basic NEAT algorithm.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本章应该让你熟悉了开始神经进化实验所需的每一个工具。在下一章中，我们继续讨论使用基本NEAT算法的XOR求解器实验。
- en: Using NEAT for XOR solver optimization
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用NEAT进行XOR求解器优化优化
- en: This was the first chapter in which we started experimenting with the NEAT algorithm.
    We did this by implementing a solver for one of the classic computer science problems.
    We started by building a solver for the XOR problem. The XOR problem solver is
    a computer science experiment in the field of reinforcement learning. The XOR
    problem cannot be linearly separated and thus requires a solver to find the non-linear
    execution path. However, we can find the non-linear execution path by introducing
    hidden layers into the ANN structure.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这是第一章，我们开始尝试使用NEAT算法。我们通过实现一个经典计算机科学问题的求解器来完成这项工作。我们首先构建了一个用于XOR问题的求解器。XOR问题求解器是强化学习领域的一个计算机科学实验。XOR问题无法线性分离，因此需要求解器来找到非线性执行路径。然而，我们可以通过在ANN结构中引入隐藏层来找到非线性执行路径。
- en: We discussed how the NEAT algorithm perfectly fits this requirement due to its
    inherent ability to evolve ANNs from a very simple or a complex topology by gradual
    complexification. In the XOR experiment, we started with an initial ANN topology
    that consisted of the two input nodes and a single output node. During the experiment,
    the relevant topology of the solver ANN was discovered, and it introduced an additional
    hidden node representing the non-linearity, as we expected.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了NEAT算法如何完美地满足这一需求，因为它固有的能力可以通过逐步复杂化从非常简单或复杂的拓扑结构中进化ANN。在XOR实验中，我们从一个由两个输入节点和一个输出节点组成的初始ANN拓扑结构开始。在实验过程中，发现了求解器ANN的相关拓扑结构，并引入了一个额外的隐藏节点来表示非线性，正如我们所预期的。
- en: Also, we explained how to define an appropriate fitness function to guide the
    evolutionary search and to understand how to implement it in the Python script.
    We put great attention into describing the hyperparameters that fine-tune the
    performance of the NEAT-Python library for the XOR experiment.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还解释了如何定义一个合适的适应度函数来引导进化搜索，以及如何在Python脚本中实现它。我们非常关注描述用于XOR实验的NEAT-Python库性能微调的超参数。
- en: In this chapter, we acquired the skills that are necessary in order to implement
    basic solvers for essential computer science experiments and were ready to move
    on to more advanced experiments.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们获得了实现基本求解器所需的基本计算机科学实验技能，并准备进行更高级的实验。
- en: Pole-balancing experiments
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 杆平衡实验
- en: In this chapter, we continued with experiments related to the classic problems
    of computer science in the field of reinforcement learning. We started with a
    discussion of how to implement an avoidance control optimization method using
    the NEAT algorithm, allowing us to balance a cart-pole apparatus (or an inverted
    pendulum). We began with a single pole-balancing system and provided all the necessary
    equations of motion that allow us to numerically approximate real-world physical
    apparatus.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们继续在强化学习领域的计算机科学经典问题上进行实验。我们首先讨论了如何使用NEAT算法实现避免控制优化方法，使我们能够平衡小车-杆装置（或倒立摆）。我们从单杆平衡系统开始，提供了所有必要的运动方程，使我们能够数值近似现实世界的物理装置。
- en: We learned how specific control actions could be applied to the cart-pole apparatus
    in the form of the bang-bang controller. The bang-bang controller is a unique
    form of control system that is designed to apply a series of actions with equal
    force but in different directions continuously. To manage a bang-bang controller,
    the control's ANN needs to continuously receive and analyze the state of the cart-pole
    apparatus and produce the relevant control signals. The input signals of the system
    are defined by the horizontal position of the cart on the track, its linear speed,
    the current angle of the pole, and the angular speed of the pole. The output of
    the system is a binary signal indicating the direction of a control action that
    needs to be applied.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了如何将特定的控制动作以bang-bang控制器形式应用于小车-杆装置。bang-bang控制器是一种独特的控制系统，旨在连续地以相同的力量但不同的方向应用一系列动作。为了管理bang-bang控制器，控制器的ANN需要持续接收和分析小车-杆装置的状态，并产生相关的控制信号。系统的输入信号由小车在轨道上的水平位置、其线性速度、杆的当前角度和杆的角速度定义。系统的输出是一个二进制信号，指示需要应用的控制动作的方向。
- en: The neuroevolution process uses the cart-pole apparatus' simulation for the
    trial and error process characteristic of every RL-style training algorithm. It
    maintains the population of the genomes that evolve from generation to generation
    until a successful solver is found. During their evolution, each organism in the
    population is tested against a simulation of the cart-pole apparatus. At the end
    of the simulation, it receives a reward signal in the form of the number of time
    steps during which it was able to keep the apparatus balanced within the track's
    bounds. The received reward signal defines the fitness of the organism and determines
    its fate during the neuroevolution process.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 神经进化过程使用滑车-杆装置的模拟来执行每个RL风格训练算法的特征性的试错过程。它维护着从一代到下一代进化的基因组种群，直到找到一个成功的求解器。在它们的进化过程中，种群中的每个生物都会被滑车-杆装置的模拟所测试。在模拟结束时，它会收到一个奖励信号，该信号以它在轨道范围内保持装置平衡的时间步数的形式出现。收到的奖励信号定义了生物的适应性，并决定了它在神经进化过程中的命运。
- en: Then, we discussed how the objective function could be defined using the mentioned
    reward signal. After that, you learned how to implement an objective function
    using Python.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们讨论了如何使用提到的奖励信号来定义目标函数。之后，你学习了如何使用Python实现目标函数。
- en: Having finished with a single pole-balancing experiment, we looked at a modified
    version of this experiment. The modified version comprised two poles with different
    lengths connected to the moving cart that needed to be balanced. This experiment
    had more complicated physics and required the discovery of a much more sophisticated
    controller during the experiment.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成单个极性平衡实验后，我们查看了一个修改后的实验版本。这个修改后的版本包括两个不同长度的杆连接到需要平衡的移动滑车上。这个实验具有更复杂的物理特性，并且在实验中需要发现一个更加复杂的控制器。
- en: Both experiments that were presented in this chapter highlighted the importance
    of keeping a well-balanced population of solvers with a moderate number of species.
    Too many species in the population may hinder the neuroevolution process by reducing
    the chance of reproduction between the two organisms belonging to different species.
    Furthermore, taking into account that the population size is fixed, the more species
    you have within the population, the less populated they become. Sparsely populated
    species reduce the chance of discovering useful mutations. On the other hand,
    separate species allow us to maintain useful mutations within each speciation
    niche and exploit each mutation further in the next generations. Thus, too few
    species are also harmful to evolution. At the end of the pole-balancing experiment,
    you gained some practical skills that relate to keeping the number of species
    balanced by tweaking the corresponding hyperparameters of the NEAT algorithm (such
    as the compatibility threshold).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中提出的两个实验都强调了保持一个由适度数量的物种组成的平衡种群的重要性。种群中物种过多可能会通过减少不同物种的两个生物之间的繁殖机会来阻碍神经进化过程。此外，考虑到种群大小是固定的，种群中物种越多，其分布就越稀疏。稀疏分布的物种会降低发现有用突变的机会。另一方面，不同的物种使我们能够在每个物种形成生态位内保持有用的突变，并在下一代中进一步利用每个突变。因此，物种过少对进化也是有害的。在极性平衡实验结束时，你获得了一些与通过调整NEAT算法（如兼容性阈值）的相应超参数来保持物种数量平衡相关的实际技能。
- en: Another essential feature of the neuroevolution process that was highlighted
    in the pole-balancing experiment is related to the selection of the right initial
    condition of the stochastic process that guides the evolutionary process. The
    neuroevolution method's implementation is built around a pseudo-random number
    generator, which provides the likelihood of genome mutations and crossover rates.
    In the pseudo-random number generator, the sequence of numbers that will be produced
    is solely determined by the initial seed value that is supplied to the generator
    at the beginning. By using the same seed value, it is possible to produce the
    same random number sequences using the pseudo-random generator.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在极性平衡实验中强调的神经进化过程的另一个重要特征与指导进化过程的随机过程的正确初始条件的选择有关。神经进化方法的实现建立在伪随机数生成器的基础上，该生成器提供了基因组突变和交叉率的概率。在伪随机数生成器中，将要生成的数字序列完全由在开始时提供给生成器的初始种子值决定。通过使用相同的种子值，可以使用伪随机数生成器产生相同的随机数序列。
- en: As a result of the experiment with the evolving controller's ANN for the cart-pole
    balancers, we discovered that the probability of finding a successful solution
    strongly depends on the value of the random number generator seed.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对摆杆平衡器的进化控制器的ANN进行实验，我们发现找到成功解决方案的概率强烈依赖于随机数生成器种子值。
- en: Mastering the pole-balancing experiments allowed you to be prepared to solve
    more complex problems associated with autonomous navigation, which were discussed
    in the next chapter.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 掌握杆平衡实验使你准备好解决与自主导航相关的更复杂问题，这些问题将在下一章中讨论。
- en: Autonomous maze navigation
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自主迷宫导航
- en: In this chapter, we continued our experiments with neuroevolution as an attempt
    to create a solver that can find an exit from a maze. Maze solving is a fascinating
    problem as it allows us to study a new search optimization method called Novelty
    Search. In [Chapter 5](22365f85-3003-4b67-8e1e-cc89fa5e259b.xhtml), *Autonomous
    Maze Navigation*, and [Chapter 6](62301923-b398-43da-b773-c8b1fe383f1d.xhtml),
    *Novelty Search Optimization Method*, we explored a series of the maze navigation
    experiments using the goal-oriented search optimization and the Novelty Search
    optimization method.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们继续进行神经进化的实验，试图创建一个能够从迷宫中找到出口的求解器。迷宫求解是一个有趣的问题，因为它允许我们研究一种新的搜索优化方法，称为新颖性搜索。在[第5章](22365f85-3003-4b67-8e1e-cc89fa5e259b.xhtml)《自主迷宫导航》和[第6章](62301923-b398-43da-b773-c8b1fe383f1d.xhtml)《新颖性搜索优化方法》中，我们探索了一系列使用以目标为导向的搜索优化和新颖性搜索优化方法的迷宫导航实验。
- en: In this chapter, you learned how to implement a simulation of a robot that has
    an array of sensors that detect obstacles and monitor its position within the
    maze. Also, we discussed how to implement a goal-oriented objective function to
    guide the evolutionary process. The mentioned objective-function implementation
    is calculated as Euclidean distance between the robot's final position and the
    maze's exit.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何实现一个具有传感器阵列的机器人模拟，这些传感器可以检测障碍物并监控其在迷宫中的位置。我们还讨论了如何实现以目标为导向的目标函数来引导进化过程。所提到的目标函数实现是计算机器人最终位置与迷宫出口之间的欧几里得距离。
- en: Using the maze navigation simulator and the defined objective function, we conducted
    two experiments with simple and hard maze configurations. The results of the experiments
    give us insights into the impact of the deceptive fitness function landscape on
    the performance of the evolutionary process. In local optima areas, neuroevolution
    tends to produce fewer species, which hinders its ability to explore novel solutions.
    In extreme cases, this leads to the degeneration of the evolutionary process.
    This can result in having only a single species in the entire population.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 使用迷宫导航模拟器和定义的目标函数，我们对简单和困难的迷宫配置进行了两次实验。实验结果让我们了解了欺骗性适应度函数景观对进化过程性能的影响。在局部最优区域，神经进化倾向于产生更少的物种，这阻碍了其探索新解决方案的能力。在极端情况下，这可能导致进化过程的退化。这可能导致整个种群中只有一个物种。
- en: At the same time, you learned how to avoid such misfortunes by adjusting NEAT
    hyperparameters such as the compatibility disjoint coefficient. This parameter
    controls how strong topological differences in the compared genomes affect the
    compatibility factor, which is used to determine whether genomes belong to the
    same species. As a result, we were able to boost speciation and increase population
    diversity. This change had a positive impact on the search for a successful maze
    solver, and we were able to find it for a simple maze configuration. However,
    a hard maze configuration with more extreme local optima areas resisted all our
    attempts to find a successful maze solver using the goal-oriented objective function.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，你学习了如何通过调整NEAT超参数，如兼容性不连接系数来避免此类不幸。此参数控制了比较基因组中拓扑差异的强度如何影响兼容性因子，该因子用于确定基因组是否属于同一物种。因此，我们能够提高物种形成并增加种群多样性。这种变化对寻找成功的迷宫求解器产生了积极影响，我们能够为简单的迷宫配置找到它。然而，具有更多极端局部最优区域困难的迷宫配置抵抗了我们使用以目标为导向的目标函数寻找成功的迷宫求解器的所有尝试。
- en: Thus, we were ready to learn about the Novelty Search optimization method, which
    was devised to overcome the limitations of the goal-oriented search.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们准备了解新颖性搜索优化方法，该方法旨在克服以目标为导向的搜索的限制。
- en: Novelty Search optimization method
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 新颖性搜索优化方法
- en: In all the experiments preceding this chapter, we defined an objective function
    as a derivative based on its proximity to the final goal of the problem. However,
    the maze-solving problem posed challenges that could not be solved by a goal-oriented
    objective function. Specific maze configurations can introduce strong local optima
    in which a goal-oriented objective search may become stuck. In many cases, a deceptive
    fitness function landscape such as this effectively blocks a goal-oriented objective
    search from finding a successful solution.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章之前的所有实验中，我们将目标函数定义为基于其接近问题最终目标导数的函数。然而，迷宫求解问题提出了无法通过以目标为导向的目标函数解决的问题。特定的迷宫配置可以引入强烈的局部最优解，其中以目标为导向的目标搜索可能会陷入困境。在许多情况下，这种欺骗性的适应度函数景观有效地阻止了以目标为导向的目标搜索找到成功的解决方案。
- en: Thus, using the practical experience we gained during the creation of a maze
    solver in the previous chapter, we embarked on the path of creating a more advanced
    solver. Our brand new solver used the Novelty Search optimization method to guide
    the evolutionary process. However, first of all, we needed to define the appropriate
    metric to estimate the novelty score of each solution in each generation. The
    novelty score that was produced by this metric was going to be used as a fitness
    value that would be assigned to the genomes in the population of solvers. Thus,
    the novelty is integrated into the standard neuroevolution process.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，利用我们在上一章创建迷宫求解器过程中获得的实际经验，我们开始了创建更高级求解器的道路。我们全新的求解器使用了新颖度搜索优化方法来指导进化过程。然而，首先我们需要定义适当的指标来估计每一代中每个解决方案的新颖度评分。这个指标产生的新颖度评分将被用作分配给求解器种群中基因组的适应度值。因此，新颖度被整合到标准的神经进化过程中。
- en: 'The novelty metric should measure how novel each solution is compared to the
    solutions we found in the past and all the solutions from the current generation.
    There are two ways to measure solution novelty:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 新颖度指标应该衡量每个解决方案相对于我们过去找到的解决方案以及当前生成中的所有解决方案的新颖程度。有两种方法来衡量解决方案的新颖性：
- en: The genotypic novelty is the novelty score and shows how the genotype of the
    current solution differs from the genotypes of all the other found solutions.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基因型新颖度是新颖度评分，显示了当前解决方案的基因型与所有其他找到的解决方案的基因型的差异。
- en: The behavioral novelty demonstrates how the behavior of the current solution
    differs within the problem space compared to all the other solutions.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行为新颖度展示了当前解决方案在问题空间中的行为与所有其他解决方案相比的差异。
- en: For the problem of solving a maze, a good choice is to use a behavioral novelty
    score because, in the end, we are interested in reaching the maze exit, which
    can be facilitated by exposing a certain behavior. Furthermore, the behavioral
    novelty score is much easier to calculate than the genotypic novelty score.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 对于解决迷宫的问题，一个好的选择是使用行为新颖度评分，因为最终我们感兴趣的是到达迷宫出口，这可以通过展示某种行为来促进。此外，行为新颖度评分比基因型新颖度评分更容易计算。
- en: The trajectory of a particular solver through the maze defines its behavioral
    space. Thus, we can estimate the novelty score by comparing the trajectory vectors
    of the solvers. Numerically, the novelty score can be estimated by calculating
    the Euclidean distance between trajectory vectors. To further simplify this task,
    we can use only the coordinates of the last point of the solver trajectory to
    estimate the novelty score.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 某个求解器在迷宫中的轨迹定义了其行为空间。因此，我们可以通过比较求解器的轨迹向量来估计新颖度评分。从数值上讲，新颖度评分可以通过计算轨迹向量之间的欧几里得距离来估计。为了进一步简化这个任务，我们可以只使用求解器轨迹的最后一个点的坐标来估计新颖度评分。
- en: Having defined the novelty metric, you learned how to implement it in the source
    code using Python and integrate it into the maze simulator you created in [Chapter
    5](22365f85-3003-4b67-8e1e-cc89fa5e259b.xhtml), *Autonomous Maze Navigation*.
    After that, you were ready to repeat the experiments from the previous chapter
    and compare the results.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义了新颖度指标之后，你学习了如何使用Python在源代码中实现它，并将其集成到你在[第五章](22365f85-3003-4b67-8e1e-cc89fa5e259b.xhtml)，“自主迷宫导航”中创建的迷宫模拟器中。之后，你就可以准备重复上一章的实验并比较结果。
- en: The experiment with a simple maze solver demonstrated an improvement in the
    topology of the produced control ANN. The topology became optimal and less complicated.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 简单迷宫求解器的实验展示了产生的控制ANN拓扑结构得到了改进。拓扑结构变得最优且更简单。
- en: Unfortunately, the experiment with hard maze configuration also failed to produce
    a successful solver, the same as it did in [Chapter 5](22365f85-3003-4b67-8e1e-cc89fa5e259b.xhtml), *Autonomous
    Maze Navigation*. The failure seems to be caused by the inefficiency of a particular implementation of
    the NEAT algorithm used in the experiment. I have implemented the NEAT algorithm
    in Go so that it solves the hard maze configuration with ease using the Novelty
    Search optimization. You can find it on GitHub at [https://github.com/yaricom/goNEAT_NS](https://github.com/yaricom/goNEAT_NS).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，与硬迷宫配置的实验也未能产生成功的求解器，就像在第5章[自主迷宫导航](22365f85-3003-4b67-8e1e-cc89fa5e259b.xhtml)中做的那样。失败似乎是由于实验中使用的NEAT算法特定实现的低效性造成的。我已经用Go语言实现了NEAT算法，使其能够轻松地使用新颖性搜索优化解决硬迷宫配置。你可以在GitHub上找到它：[https://github.com/yaricom/goNEAT_NS](https://github.com/yaricom/goNEAT_NS)。
- en: In [Chapter 6](62301923-b398-43da-b773-c8b1fe383f1d.xhtml), *Novelty Search
    Optimization Method*, you learned that the Novelty Search optimization method
    allows you to find a solution, even when the fitness function has a deceptive
    landscape with many local optima traps scattered inside. You have learned that
    the stepping stones forming the way to the solution are not always obvious. Sometimes,
    you need to step back to find the correct way. That is the main idea behind the
    Novelty Search method. It tries to find a solution by completely ignoring the
    proximity to the final goal and rewarding the novelty of each intermediate solution
    that is found on the way.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第6章](62301923-b398-43da-b773-c8b1fe383f1d.xhtml)，“新颖性搜索优化方法”中，你了解到新颖性搜索优化方法允许你在适应度函数具有欺骗性景观且内部散布着许多局部最优陷阱的情况下找到解决方案。你已经了解到通往解决方案的垫脚石并不总是显而易见的。有时，你需要退一步找到正确的方法。这正是新颖性搜索方法背后的主要思想。它试图通过完全忽略最终目标附近的距离，并奖励在寻找过程中找到的每个中间解决方案的新颖性来找到解决方案。
- en: In this chapter, we got acquainted with the standard NEAT algorithm, and we
    were ready to begin experimenting with its more advanced extensions.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们熟悉了标准的NEAT算法，并准备好开始实验其更高级的扩展。
- en: Hypercube-based NEAT for visual discrimination
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于超立方体的NEAT视觉识别
- en: This chapter was the first of four chapters in which we discussed advanced neuroevolution
    methods. In this chapter, you learned about the indirect genome encoding scheme,
    which uses the **Compositional Pattern Producing Network** (**CPPN**) to aid with
    the encoding of large phenotype ANN topologies. The CPPN encoding scheme introduced
    by the NEAT extension is named **HyperNEAT**. This extension is built around the
    concept of the connectivity substrate that represents the phenotype ANN topology.
    At the same time, connections between nodes in the substrate are expressed as
    four-dimensional points within the hypercube. In the HyperNEAT method, the topology
    of the CPPN is the part that is evolving and guided by the NEAT algorithm. We
    had already discussed the particulars of HyperNEAT, so we skipped the rest of
    the details of HyperNEAT for brevity.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是我们讨论高级神经进化方法的四章中的第一章。在本章中，你学习了间接基因组编码方案，该方案使用**组合模式生成网络**（**CPPN**）来帮助编码大型表型ANN拓扑结构。NEAT扩展引入的CPPN编码方案被称为**HyperNEAT**。这个扩展围绕着表示表型ANN拓扑结构的连接基质的概念构建。同时，基质中节点之间的连接被表示为超立方体内的四维点。在HyperNEAT方法中，CPPN的拓扑结构是进化的部分，并由NEAT算法指导。我们已经讨论了HyperNEAT的细节，因此为了简洁起见，我们跳过了HyperNEAT的其余细节。
- en: In this chapter, we presented you with the interesting task of visual discrimination,
    which highlights the ability of the HyperNEAT algorithm to distinguish patterns
    in the visual field. You learned that the HyperNEAT method could find a successful
    visual pattern discriminator due to its inherent ability to reuse the successful
    connectivity patterns it found multiple times in the substrate that encodes the
    phenotype ANN of the solver. This was possible because of the power of the CPPN,
    which can discover the right strategy by passing signals from the input nodes
    (the perceiving image) to the output nodes (representing results).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们向你提出了一个有趣的视觉识别任务，这突出了HyperNEAT算法在视觉场中区分模式的能力。你了解到HyperNEAT方法能够找到成功的视觉模式识别器，因为它固有的能力在编码求解器表型ANN的基质中多次重用成功的连接模式。这是由于CPPN的力量，它可以通过从输入节点（感知图像）传递信号到输出节点（表示结果）来发现正确的策略。
- en: You learned how to choose the correct geometry of a substrate to effectively
    employ the capabilities of the CPPN to find the geometric regularities. After
    that, you had a chance to apply your acquired knowledge in practice by implementing
    the visual discriminator that was trained using the HyperNEAT algorithm.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你学习了如何选择合适的底物几何形状，以有效地利用CPPN的能力来找到几何规律。之后，你有机会通过实现使用HyperNEAT算法训练的视觉判别器来将你获得的知识应用于实践。
- en: Also, having completed the visual discriminator experiment, you were able to
    verify the effectiveness of the indirect encoding scheme. We did this by comparing
    the topology of the produced CPPN with the maximum possible number of connections
    in the discriminator ANN substrate. The results of the visual discriminator experiment
    were pretty impressive. We were able to achieve an information compression ratio
    of 0.11% by encoding the connectivity pattern among 14,641 possible connections
    of the substrate, with only 16 connections between 10 nodes of the CPPN.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，完成视觉判别器实验后，你能够验证间接编码方案的有效性。我们通过比较生成的CPPN拓扑结构与判别器ANN底物中可能的最大连接数来进行比较。视觉判别器实验的结果相当令人印象深刻。我们通过编码底物中14,641个可能的连接中的连接模式，仅使用CPPN中10个节点之间的16个连接，实现了0.11%的信息压缩比。
- en: Visual tasks expose a high demand for the discriminator ANN architecture due
    to the high dimensionality of the input signal. Thus, in [Chapter 8](9f3dce4d-2cc7-4307-a704-bfcfe4ad56b4.xhtml),
    *ES-HyperNEAT and the Retina Problem*, we proceeded with a review of another class
    of visual recognition problems.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由于输入信号的高维性，视觉任务对判别器ANN架构提出了很高的要求。因此，在[第8章](9f3dce4d-2cc7-4307-a704-bfcfe4ad56b4.xhtml)“ES-HyperNEAT与视网膜问题”中，我们继续回顾了另一类视觉识别问题。
- en: ES-HyperNEAT and the retina problem
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ES-HyperNEAT与视网膜问题
- en: In this chapter, you learned how to select the substrate configuration that
    is best suited for a specific problem space. However, it is not always obvious
    what configuration to choose. If you select the wrong configuration, you can significantly
    impact the performance of the training process. As a result, the neuroevolution
    process can fail to produce a successful solution. Also, particular substrate
    configuration details can only be discovered during the training process, and
    cannot be known in advance.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何选择最适合特定问题空间的底物配置。然而，并不总是明显应该选择哪种配置。如果你选择了错误的配置，可能会显著影响训练过程的表现。因此，神经进化过程可能无法产生成功的解决方案。此外，特定的底物配置细节只能在训练过程中发现，不能提前知道。
- en: The problem with finding an appropriate substrate configuration was solved using
    the ES-HyperNEAT method. In this chapter, you learned how the neuroevolution process
    could automatically handle the evolution of the substrate configuration among
    the evolution of connectivity CPPNs. We introduced you to the concept of the quadtree
    data structure, which allows effective traversal through the substrate topology
    and the detection of areas with high information density. We learned that it is
    beneficial to automatically place new nodes into these areas to create more subtle
    connectivity patterns, which describe hidden regularities that can be found in
    the real world.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ES-HyperNEAT方法解决了寻找合适的底物配置的问题。在本章中，你学习了神经进化过程如何自动处理底物配置在连接性CPPN进化过程中的进化。我们向你介绍了四叉树数据结构的概念，它允许有效地遍历底物拓扑结构并检测信息密度高的区域。我们了解到，将这些区域自动放置新节点以创建更微妙的连接模式是有益的，这些模式描述了在现实世界中可以发现的隐藏规律。
- en: After you became familiar with the details of the ES-HyperNEAT algorithm, you
    learned how to apply it to solve the visual recognition task known as the retina
    problem. In this task, the neuroevolution process needs to discover a solver that
    can recognize valid patterns simultaneously in two separate visual fields. That
    is, the detector ANN must decide if patterns presented in the right and left visual
    fields are valid for each field. The solution of this task can be found by introducing
    the modular architecture to the topology of the detector ANN. In such a configuration,
    each ANN module is responsible only for pattern recognition in the related side
    of the retina.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在熟悉了ES-HyperNEAT算法的细节之后，你学习了如何将其应用于解决被称为视网膜问题的视觉识别任务。在这个任务中，神经进化过程需要发现一种求解器，能够在两个独立的视觉场中同时识别有效模式。也就是说，检测器ANN必须决定右眼和左眼视觉场中呈现的模式是否对每个场是有效的。通过引入模块化架构到检测器ANN的拓扑结构中，可以找到这个任务的解决方案。在这种配置下，每个ANN模块只负责视网膜相关侧的图案识别。
- en: In this chapter, we implemented a successful retina problem solver using the
    ES-HyperNEAT method. We were able to visually confirm that the produced topology
    of the detector ANN included the modular structures. Furthermore, from the experiment's
    results, you learned that the resulting detector ANN structure has near-optimal
    complexity. Once again, this experiment demonstrated the potential of neuroevolution-based
    methods to discover efficient solutions by method of gradual complexification.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们使用ES-HyperNEAT方法实现了一个成功的视网膜问题求解器。我们能够通过视觉确认，所生成的检测器ANN拓扑结构中包含了模块化结构。此外，从实验结果中，你了解到所得到的检测器ANN结构具有近似最优的复杂性。再次证明，基于神经进化的方法通过逐步复杂化的方式发现有效解决方案的潜力。
- en: All the experiments, including the one described in this chapter, used a particular
    form of the fitness function that is defined in advance before the experiments
    started. However, it would be interesting to explore how the performance of the
    neuroevolution algorithm changes if the fitness function is allowed to co-evolve
    along with the solution it tries to optimize.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的实验，包括本章中描述的实验，都使用了一种在实验开始之前预先定义的特定形式的适应度函数。然而，探索如果允许适应度函数与其试图优化的解决方案协同进化，神经进化算法的性能将如何变化，将会很有趣。
- en: Co-evolution and the SAFE method
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 协同进化与SAFE方法
- en: 'In this chapter, we discussed how the co-evolution strategy is widely found
    in nature and can be transferred into the realm of neuroevolution. You learned
    about the most common co-evolutionary strategies that can be found in nature:
    mutualism, competition (predation or parasitism), and commensalism. In our experiment,
    we explored the commensalistic type of evolution, which can be defined in commensalistic
    relationships as follows: the members of one species gain benefits without causing
    harm or giving benefits to other participating species.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了协同进化策略在自然界中的广泛存在，以及它可以转移到神经进化领域。你了解了自然界中最常见的协同进化策略：互利共生、竞争（捕食或寄生）和共栖。在我们的实验中，我们探索了共栖类型的进化，这种进化可以在共栖关系中定义为：一种物种的成员在没有造成伤害或给予其他参与物种利益的情况下获得利益。
- en: 'Having learned about evolution strategies in the natural world, you were ready
    to understand the concepts behind the SAFE method. The abbreviation **SAFE** means
    **Solution And Fitness Evolution**, which suggests that we have two co-evolving
    populations: the population of potential solutions and the population of the fitness
    function candidates. At each generation of evolution, we evaluate each potential
    solution against all the objective function candidates and choose the best fitness
    score, which is observed as the fitness of the genome encoding solution. At the
    same time, we evolve the commensalistic population of the fitness function candidates
    using the Novelty Search method. Novelty Search uses the genomic novelty of each
    genome in the population as a novelty metric to estimate the individual''s fitness
    score.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了自然界中的进化策略之后，你准备好理解SAFE方法背后的概念。**SAFE**的缩写意味着**解决方案与适应度进化**，这表明我们有两个协同进化的种群：潜在解决方案的种群和适应度函数候选者的种群。在进化的每一代中，我们评估每个潜在解决方案与所有目标函数候选者，并选择最佳的适应度分数，这被视为编码解决方案的基因组的适应度。同时，我们使用新颖性搜索方法进化适应度函数候选者的共栖种群。新颖性搜索使用种群中每个基因组的基因组新颖性作为新颖性指标来估计个体的适应度分数。
- en: 'In this chapter, you learned how to implement a modified maze solving experiment
    based on the SAFE method to evaluate the performance of the co-evolution strategy.
    Also, you learned how to define the objective function to guide the evolution
    of the population of potential solutions. This objective function includes two
    fitness metrics: the first is the distance from the maze exit, while the second
    is the behavioral novelty of the solution that was found. These metrics are combined
    using the coefficients that are produced by a population of the fitness function
    candidates.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何基于SAFE方法实现一个修改后的迷宫求解实验，以评估协同进化策略的性能。你还学习了如何定义目标函数来指导潜在解集的进化。这个目标函数包括两个适应度指标：第一个是从迷宫出口的距离，而第二个是找到的解决方案的行为新颖性。这些指标通过由适应度函数候选者群体产生的系数进行组合。
- en: As in all the previous chapters, you continued to improve your Python skills
    by implementing the SAFE method using the MultiNEAT Python library. In the next
    chapter, you continued by studying even more advanced methods, thereby allowing
    you to use neuroevolution to train Atari game solvers.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 正如所有前面的章节一样，你通过使用MultiNEAT Python库实现SAFE方法来继续提高你的Python技能。在下一章中，你将继续研究更高级的方法，从而允许你使用神经进化来训练Atari游戏求解器。
- en: Deep Neuroevolution
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深度神经进化
- en: In this chapter, we presented you with the concept of deep neuroevolution, which
    can be used to train **Deep Artificial Neural Networks** (**DNNs**). You learned
    how deep neuroevolution can be used to train Atari game-playing agents using the
    deep reinforcement learning algorithm.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们向你介绍了深度神经进化的概念，它可以用来训练**深度人工神经网络**（**DNNs**）。你学习了如何使用深度神经进化通过深度强化学习算法来训练Atari游戏代理。
- en: We started with a discussion of the basic concepts behind reinforcement learning.
    We paid special attention to the popular Q-learning algorithm, which is one of
    the classic implementations of reinforcement learning. After that, you learned
    how a DNN could be used to approximate the Q-value function for complex tasks
    that cannot be approximated by a simple action-state table with Q-values. Next,
    we discussed how the neuroevolution-based method could be used to find the trainable
    parameters of the DNN. You learned that neuroevolution evolves a DNN for Q-value
    function approximation. As a result, we can train the appropriate DNN without
    using any form of error backpropagation that is common in conventional methods
    of DNN training.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先讨论了强化学习背后的基本概念。我们特别关注了流行的Q学习算法，这是强化学习的经典实现之一。之后，你学习了如何使用深度神经网络（DNN）来近似复杂任务的Q值函数，这些任务无法通过简单的动作-状态表和Q值来近似。接下来，我们讨论了如何使用基于神经进化的方法来找到DNN的可训练参数。你了解到神经进化通过进化DNN来近似Q值函数。因此，我们可以训练适当的DNN，而无需使用传统DNN训练方法中常见的任何形式的错误反向传播。
- en: Having learned about deep reinforcement learning, you were ready to apply your
    knowledge in practice by implementing the Atari game solver agent. To train an
    agent to play the Atari game, it needs to read the pixels of the game screen and
    derive the current state of the game. After that, using the extracted game state,
    the agent needs to select an appropriate action to be executed in the game environment.
    The ultimate goal of the agent is to maximize the final reward that will be received
    after completion of a particular game episode. Thus, we have classic trial and
    error learning, which is the essence of reinforcement learning.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了深度强化学习之后，你准备通过实现Atari游戏求解代理来将你的知识应用于实践。为了训练一个能够玩Atari游戏的代理，它需要读取游戏屏幕的像素并推导出当前的游戏状态。之后，使用提取的游戏状态，代理需要选择在游戏环境中执行的正确动作。代理的最终目标是最大化在完成特定游戏剧集后收到的最终奖励。因此，我们有了经典的试错学习，这是强化学习的本质。
- en: As we mentioned, the game-playing agent needs to parse game screen pixels. The
    best way to do this is to use a **Convolutional Neural Network** (**CNN**) to
    process the inputs that are received from the game screen. In this chapter, we
    discussed the essentials of the CNN architecture and how it can be integrated
    into the game-playing agent. You learned how to implement CNN in Python using
    a popular TensorFlow framework.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们提到的，游戏代理需要解析游戏屏幕像素。最好的方式是使用**卷积神经网络**（**CNN**）来处理从游戏屏幕接收到的输入。在本章中，我们讨论了CNN架构的基本要素以及它如何集成到游戏代理中。你学习了如何使用流行的TensorFlow框架在Python中实现CNN。
- en: Also, you learned about a unique genome encoding scheme that was designed specifically
    for tasks related to deep neuroevolution. This scheme allows us to encode the
    phenotype ANNs with millions of trainable parameters. The proposed scheme employs
    the seeds of the pseudorandom number generator to encode the connection weights
    of the phenotype ANN. In this encoding scheme, the genome was represented as a
    list of the random generator seeds. Each seed is used consequentially to generate
    all the connection weights from a source of pseudorandom numbers.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还了解了一种独特的基因组编码方案，该方案专门为与深度神经进化相关的任务而设计。这个方案使我们能够编码具有数百万可训练参数的表型人工神经网络（ANN）。所提出的方案使用伪随机数生成器的种子来编码表型ANN的连接权重。在这个编码方案中，基因组被表示为随机生成器种子的列表。每个种子依次用于从伪随机数源生成所有连接权重。
- en: After learning about the details of genome encoding, you were ready to start
    an experiment that aimed to create an agent that was able to play the Frostbite
    Atari game. Furthermore, you learned how to employ a modern GPU to accelerate
    the computations involved in the training process. At the end of this chapter,
    we also presented an advanced visualization tool (VINE) that allows us to study
    the results of the neuroevolution experiments.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了基因组编码的细节之后，你准备开始一个旨在创建能够玩Frostbite Atari游戏的智能体的实验。此外，你还学习了如何使用现代GPU加速训练过程中的计算。在本章的最后，我们还介绍了一个高级可视化工具（VINE），它允许我们研究神经进化实验的结果。
- en: With this chapter, we finished our brief acquaintance with the most popular
    neuroevolution methods that exist at the time of writing this book. However, there
    are still many things that you can learn in the fast-growing field of applied
    artificial intelligence and neuroevolution methods.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章，我们结束了与当时写作本书时最流行的神经进化方法的简要接触。然而，在快速发展的应用人工智能和神经进化方法领域，还有很多东西可以学习。
- en: Where to go from here
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来该去哪里
- en: We hope that your journey through the neuroevolution methods that were presented
    in this book was pleasant and insightful. We have done our best to present you
    with the most recent achievements in the field of neuroevolution. However, this
    field of applied computer science is developing rapidly, and new achievements
    are announced almost every month. There are many laboratories in universities,
    as well as in corporations around the globe, working on applying neuroevolution
    methods to solve tasks that are beyond the strength of mainstream deep learning
    algorithms.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望你在本书中介绍的神经进化方法之旅既愉快又有见地。我们尽最大努力向您展示了神经进化领域的最新成就。然而，这个应用计算机科学领域正在快速发展，几乎每个月都有新的成就公布。全球有众多大学和公司的研究实验室正在致力于将神经进化方法应用于解决主流深度学习算法力所不能及的任务。
- en: We hope that you have become fond of the neuroevolution methods we discussed
    and are eager to apply them in your work and experiments. However, you need to
    continue your self-education to keep pace with the next achievements in the area.
    In this section, we will present some places where you can continue your education.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望你对我们在讨论中提到的神经进化方法产生了浓厚的兴趣，并渴望将它们应用于你的工作和实验中。然而，你需要继续自我教育，以跟上该领域未来成就的步伐。在本节中，我们将介绍一些你可以继续学习的地方。
- en: Uber AI Labs
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Uber AI Labs
- en: The core of Uber AI Labs is built around the Geometric Intelligence startup
    that was co-founded by Kenneth O. Stanley – one of the prominent pioneers in the
    field of neuroevolution. He is the author of the NEAT algorithm, which we have used often
    in this book. You can follow the works of Uber AI Labs at [https://eng.uber.com/category/articles/ai/](https://eng.uber.com/category/articles/ai/).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Uber AI Labs的核心建立在由神经进化领域的杰出先驱之一Kenneth O. Stanley共同创立的几何智能初创公司周围。他是NEAT算法的作者，我们在本书中经常使用这个算法。你可以通过[https://eng.uber.com/category/articles/ai/](https://eng.uber.com/category/articles/ai/)跟踪Uber
    AI Labs的工作。
- en: alife.org
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: alife.org
- en: The **International Society for Artificial Life** (**ISAL**) is a well-established
    community of researchers and enthusiasts from all around the world who are interested
    in scientific research activities related to artificial life. Genetic algorithms
    and neuroevolution, in particular, are among the areas of interest of this society.
    ISAL publishes the Artificial Life journal and sponsors a variety of conferences.
    You can find out more about ISAL activities at [http://alife.org](http://alife.org/).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**国际人工生命学会**（**ISAL**）是一个由世界各地对与人工生命相关的科学研究活动感兴趣的研究人员和爱好者组成的成熟社区。特别是遗传算法和神经进化是该学会感兴趣的研究领域之一。ISAL出版《人工生命》期刊并赞助各种会议。您可以在
    [http://alife.org](http://alife.org/) 了解更多关于ISAL的活动。'
- en: Open-ended evolution at Reddit
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Reddit上的开放式进化
- en: The concept of open-ended evolution is directly related to genetic algorithms
    and neuroevolution in particular. Open-ended evolution assumes the creation of
    an evolutionary process that is not bound by any particular goal. It is inspired
    by the natural evolution of biological organisms, which produced us, humans. There
    is a dedicated subreddit where all of those who are interested discuss the research.
    You can find it at [https://www.reddit.com/r/oee/](https://www.reddit.com/r/oee/).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 开放式进化的概念与遗传算法和神经进化特别是直接相关。开放式进化假设创建一个不受任何特定目标限制的进化过程。它受到自然生物进化（产生了我们人类）的启发。有一个专门的subreddit，所有对此感兴趣的人都在那里讨论研究。您可以在
    [https://www.reddit.com/r/oee/](https://www.reddit.com/r/oee/) 找到它。
- en: The NEAT Software Catalog
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NEAT软件目录
- en: The University of Central Florida maintains the list of software libraries that
    implement the NEAT algorithm and its extensions. The software is moderated by
    Kenneth O. Stanley, the author of the NEAT algorithm. My implementation of the
    NEAT and Novelty Search in Go language is also present in this catalog. You can
    find it at [http://eplex.cs.ucf.edu/neat_software/](http://eplex.cs.ucf.edu/neat_software/).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 中佛罗里达大学维护了一个实现NEAT算法及其扩展的软件库列表。该软件由NEAT算法的作者Kenneth O. Stanley监管。我在Go语言中实现的NEAT和新颖性搜索也包含在这个目录中。您可以在
    [http://eplex.cs.ucf.edu/neat_software/](http://eplex.cs.ucf.edu/neat_software/)
    找到它。
- en: arXiv.org
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: arXiv.org
- en: '[arXiv.org](http://arxiv.org/) is a well-known service that publishes preprints
    of papers in many areas of science. It is generally an excellent source of cutting-edge
    information in the area of computer science. You can search through it for neuroevolution-related
    papers using the following search query: [http://search.arxiv.org:8081/?query=neuroevolution&in=grp_cs](http://search.arxiv.org:8081/?query=neuroevolution&in=grp_cs).'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[arXiv.org](http://arxiv.org/) 是一个广为人知的提供许多科学领域论文预印本的服务。它通常是计算机科学领域前沿信息的极好来源。您可以使用以下搜索查询在
    [http://search.arxiv.org:8081/?query=neuroevolution&in=grp_cs](http://search.arxiv.org:8081/?query=neuroevolution&in=grp_cs)
    中搜索与神经进化相关的论文。'
- en: The NEAT algorithm paper
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NEAT算法论文
- en: The original dissertation written by Kenneth O. Stanley describing the NEAT
    algorithm is a very enlightening read and is recommended for everyone interested
    in neuroevolution. It is available at [http://nn.cs.utexas.edu/downloads/papers/stanley.phd04.pdf](http://nn.cs.utexas.edu/downloads/papers/stanley.phd04.pdf).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 由Kenneth O. Stanley撰写的描述NEAT算法的原始论文是一篇非常启发性的阅读材料，并推荐给所有对神经进化感兴趣的人。它可在 [http://nn.cs.utexas.edu/downloads/papers/stanley.phd04.pdf](http://nn.cs.utexas.edu/downloads/papers/stanley.phd04.pdf)
    找到。
- en: Summary
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we briefly summarized what we learned in this book. You also
    learned about the places where you can search for further insights and continue
    your self-education.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们简要总结了本书中学到的内容。您还了解了可以进一步寻找洞察力和继续自我教育的地方。
- en: We are happy to live in an era where the future becomes a reality at such a
    pace that we completely fail to notice the tremendous changes that happen in our
    life. Humanity is rapidly moving on a path to mastering the marvels of gene editing
    and synthetic biology. We continue to conquer the deep mysteries of the human
    brain, which opens the way for an ultimate understanding of our consciousness.
    Our advanced experiments in cosmology allow us to zoom closer and closer to the
    very first moments of the Universe.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们很高兴生活在一个时代，未来以如此快的速度成为现实，以至于我们完全未能注意到在我们生活中发生的巨大变化。人类正在迅速走上掌握基因编辑和合成生物学的奇迹之路。我们继续征服人类大脑的深层奥秘，这为我们最终理解我们的意识开辟了道路。我们在宇宙学方面的先进实验使我们能够越来越接近宇宙的最初时刻。
- en: We have built an advanced piece of mathematical apparatus that allows us to
    describe such mysteries as a neutrino that, on its path, can become an electron
    and after that, a neutrino again. Our technological achievements can't be easily
    distinguished from magic, as Arthur C. Clark stated.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们构建了一项先进的数学工具，使我们能够描述诸如中微子这样的神秘现象，它在路径上可以变成一个电子，然后又变回中微子。我们的技术成就与魔法难以区分，正如亚瑟·C·克拉克所说。
- en: Life is about feeling its beauty. Keep your mind sharp, and always be curious.
    We are standing on the edge, where sparks from the research of synthetic consciousness
    will ignite the evolution of novel life forms. And who knows – maybe you will
    be the one who will start this.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 生活在于感受它的美。保持你的思维敏锐，始终保持好奇心。我们站在合成意识研究的火花即将点燃新型生命形式进化的边缘。而且谁知道呢——也许你就是那个开始这一进程的人。
- en: Thank you, my dear reader, for your time and effort. I look forward to seeing
    what you will create using the knowledge you've gained from this book.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢，我亲爱的读者，感谢你花费的时间和精力。我期待着看到你将如何利用从这本书中获得的知识创造出什么。
