- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Building the AI Controller Orchestration Interface
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建AI控制器编排界面
- en: Businesses today need to design, produce, and deliver goods and services at
    a speed never attained before. Responsiveness has become key in nearly every field,
    from online cloud services to delivering food, medication, clothing, and so on.
    Such an event-driven economy produces an endless stream of tasks, and only an
    equally event-driven, human-centered **generative AI system** (**GenAISys**) can
    keep pace.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 今天的商业需要以前从未达到的速度来设计、生产和交付商品和服务。响应性几乎在每一个领域都已成为关键，从在线云服务到交付食物、药物、服装等等。这样一个事件驱动的经济产生了一连串的任务，只有同样事件驱动的、以人为本的**生成式AI系统**（**GenAISys**）才能跟上。
- en: 'Human judgment still anchors even the most automated workflows: when fires
    break out, storms destroy infrastructure, or supply chains falter, teams—not algorithms
    alone—must act. An advanced GenAISys that leaves people out of the loop is a myth.
    This chapter, therefore, begins by outlining an architecture that tears down the
    walls between users and AI to create a collaborative, multi-user chatbot.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是最自动化的工作流程，人类的判断仍然是基础：当火灾爆发、风暴摧毁基础设施或供应链出现问题时，团队——而不仅仅是算法——必须采取行动。一个将人类排除在外的先进GenAISys只是一个神话。因此，本章首先概述了一个架构，该架构拆除了用户和AI之间的墙壁，以创建一个协作的多用户聊天机器人。
- en: First, we sketch the event-driven GenAISys interface at a high level, showing
    how the building blocks from earlier chapters—short-term, episodic, and long-term
    memory, the multi-turn conversational agent, and twin RAG pipelines for instruction
    scenarios and data—fit together. To then implement the responsive system, we must
    code the processes of the GenAISys and then the conversational agent that will
    manage the generative AI agent. Once our GenAISys interface is built, we will
    run a multi-user, multi-turn conversation with three users working in an online
    travel agency. Their online meeting will include a conversational AI agent as
    a participant.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们从高层次概述事件驱动的GenAISys界面，展示早期章节中的构建块——短期、情景和长期记忆，多轮对话代理，以及用于指令场景和数据的双RAG管道——是如何组合在一起的。为了实现响应式系统，我们必须编码GenAISys的过程，然后是管理生成式AI代理的对话代理。一旦我们的GenAISys界面构建完成，我们将进行多用户、多轮对话，三个用户在一个在线旅行社中工作。他们的在线会议将包括一个作为参与者的对话AI代理。
- en: These users will be able to have an online meeting with or without the AI agent.
    They will be able to utilize RAG to find instruction scenarios or simply ask the
    generative AI agent to answer a question. By the end of the chapter, we will have
    a fully working GenAISys interface ready for the multimodal chain-of-thought extensions
    in [*Chapter 5*](Chapter_5.xhtml#_idTextAnchor140).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这些用户将能够与或没有AI代理进行在线会议。他们可以利用RAG来查找指令场景或简单地要求生成式AI代理回答问题。到本章结束时，我们将有一个完全工作的GenAISys界面，准备进行多模态思维链扩展（[*第五章*](Chapter_5.xhtml#_idTextAnchor140)）。
- en: 'In a nutshell, this chapter covers the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，本章涵盖了以下主题：
- en: A high-level view of the architecture of an event-driven GenAISys interface
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件驱动的GenAISys界面架构的高层次视图
- en: A low-level, hands-on flowchart of the GenAISys interface
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GenAISys界面的低级、实战流程图
- en: Implementing response widgets for inputs, the AI agent, and active users
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现对输入、AI代理和活跃用户的响应小部件
- en: The chatbot’s event-driven flow in a multi-turn conversation
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聊天机器人在多轮对话中的事件驱动流程
- en: Multi-user GenAISys conversation with an AI agent as a participant
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以AI代理作为参与者的多用户GenAISys对话
- en: The response RAG features of the conversational agent
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对话代理的响应RAG功能
- en: The orchestration capabilities of the GenAISys interface and AI agent
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GenAISys界面和AI代理的编排能力
- en: Our first task is to define an event-driven GenAISys interface.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的首要任务是定义一个事件驱动的GenAISys界面。
- en: Architecture of an event-driven GenAISys interface
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件驱动的GenAISys界面架构
- en: 'Our event-driven GenAISys interface integrates the functionality we built in
    the previous chapters. The interface will leverage the flexibility of IPython
    widgets to create a reactive event-driven environment in which the following apply:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的事件驱动GenAISys界面集成了我们在前几章中构建的功能。该界面将利用IPython小部件的灵活性，创建一个反应式的事件驱动环境，其中以下内容适用：
- en: The high-level tasks will be event-driven, triggered by user inputs
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级任务将是事件驱动的，由用户输入触发
- en: Generative AI tasks will trigger generative AI agent functions
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成式AI任务将触发生成式AI代理功能
- en: 'We will first examine the program we are building at a high level, as represented
    in *Figure 4.1*:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先从高层次上检查我们正在构建的程序，如图 *4.1* 所示：
- en: '![Figure 4.1: High-level architecture of the GenAISys interface](img/B32304_04_1.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.1：GenAISys 接口的高级架构](img/B32304_04_1.png)'
- en: 'Figure 4.1: High-level architecture of the GenAISys interface'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1：GenAISys 接口的高级架构
- en: 'Let’s go through the functions we have already built in the previous chapters
    and also list the key ones we are adding in this chapter:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下在前几章中已经构建的功能，并列出本章添加的关键功能：
- en: '**I1 – AI controller**: This chapter’s main new component is the generative
    AI Python interface with responsive widgets, which will be run as an AI controller
    and orchestrator'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**I1 – AI 控制器**：本章的主要新组件是具有响应式小部件的生成式 AI Python 接口，它将作为 AI 控制器和协调器运行'
- en: '**I2 – Multi-user chatbot**: The chat surface through which several users interact
    concurrently'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**I2 – 多用户聊天机器人**：多个用户同时交互的聊天界面'
- en: '**F1 – Generative AI model**: Inherited from all the previous chapters, especially
    [*Chapter 3*](Chapter_3.xhtml#_idTextAnchor085), in which we ran generative AI
    calls with GPT-4o'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**F1 – 生成式 AI 模型**：继承自所有前面的章节，特别是 [*第三章*](Chapter_3.xhtml#_idTextAnchor085)，其中我们使用
    GPT-4o 运行生成式 AI 调用'
- en: '**F2 – Memory retention**: Inherited from [*Chapter 1*](Chapter_1.xhtml#_idTextAnchor021),
    which introduced different types of memory'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**F2 – 记忆保持**：继承自 [*第一章*](Chapter_1.xhtml#_idTextAnchor021)，其中介绍了不同类型的记忆'
- en: '**F3 – Modular RAG**: The instruction-and-data pipelines inherited from [*Chapter
    3*](Chapter_3.xhtml#_idTextAnchor085)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**F3 – 模块化 RAG**：继承自 [*第三章*](Chapter_3.xhtml#_idTextAnchor085) 的指令和数据管道'
- en: '**F4 – Multifunctional capabilities**: Semantic and sentiment analysis from
    *Chapters* *2* and *3*, to be expanded in [*Chapter 5*](Chapter_5.xhtml#_idTextAnchor140)
    with image, audio, web search, and ML features'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**F4 – 多功能能力**：从 *第 2 章* 和 *第 3 章* 中提取语义和情感分析，将在 [*第五章*](Chapter_5.xhtml#_idTextAnchor140)
    中扩展，包括图像、音频、网络搜索和机器学习功能'
- en: 'To build this architecture, we will do the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建这个架构，我们将执行以下操作：
- en: Build the processes of an event-driven GenAISys interface
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建 GenAISys 接口的事件驱动流程
- en: Implement the conversational agent with GPT-4o and an OpenAI embedding model
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 GPT-4o 和 OpenAI 嵌入式模型实现对话代理
- en: Run a multi-user, multi-turn session exploring the main features of the GenAISys
    AI controller and orchestrator
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行一个多用户、多轮会话，探索 GenAISys AI 控制器和协调器的主要功能
- en: 'The decision to present the main components of the GenAISys architecture (in
    this chapter and the next) without arrows is a deliberate choice designed to convey
    a core concept: modularity and architectural flexibility. The figure is not a
    rigid blueprint but rather a conceptual toolkit. It shows you the powerful components
    at your disposal—**I1\. AI controller**, **I2\. Multi-user chatbot**, **F1\. Generative
    AI model**, **F2\. Memory retention**, **F3\. Modular RAG**, and **F4\. Multifunctional
    capabilities**—as independent, interoperable blocks. This empowers you, illustrating
    that you are free to design your own system architecture. For instance, a user
    could choose to run some functional components, such as **F4\. Multifunctional
    capabilities**, as independent, distributed agents that are called upon by the
    controller. Alternatively, they could implement a completely different interface
    or even run the system headlessly without one.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 决定在没有箭头的情况下展示 GenAISys 架构的主要组件（在本章和下一章），这是一个故意的选择，旨在传达一个核心概念：模块化和架构灵活性。该图不是一个刚性的蓝图，而是一个概念工具包。它展示了您可用的强大组件——**I1.
    AI 控制器**、**I2. 多用户聊天机器人**、**F1. 生成式 AI 模型**、**F2. 记忆保持**、**F3. 模块化 RAG** 和 **F4.
    多功能能力**——作为独立的、可互操作的块。这赋予您权力，说明您可以自由设计自己的系统架构。例如，用户可以选择运行一些功能组件，如 **F4. 多功能能力**，作为独立的、分布式的代理，由控制器调用。或者，他们可以实施一个完全不同的界面，甚至在没有界面的情况下运行系统。
- en: 'However, the focus of this architecture is on demonstrating a human-centered
    GenAISys. In this configuration, **I1\. AI controller** (the generative AI IPython
    interface) serves as the central hub and orchestrator. This human-centered architecture
    guarantees full control and transparency. This is essential to build trust in
    risk-averse corporate environments. The control flow, while not drawn with arrows,
    is implicit: user interactions from **I2\. Multi-user chatbot** are managed by
    the AI controller, which then strategically delegates tasks to the various functional
    components (**F1** to **F4**) to generate responses, access memory, perform RAG,
    or execute specific functions. This approach provides a clear, stable, and explainable
    pathway to building a business-ready generative AI system.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个架构的重点在于展示以人为中心的GenAISys。在这个配置中，**I1. AI控制器**（生成式AI IPython界面）作为中央枢纽和协调者。这种以人为中心的架构保证了完全控制和透明度。这在构建风险规避的企业环境中的信任至关重要。虽然控制流程没有用箭头表示，但它是隐含的：**I2.
    多用户聊天机器人**的用户交互由AI控制器管理，然后战略性地将任务委托给各种功能组件（**F1**到**F4**）以生成响应、访问内存、执行RAG或执行特定功能。这种方法提供了一条清晰、稳定且可解释的路径，用于构建商业就绪的生成式AI系统。
- en: Let’s first explore scenario-driven task execution.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先探讨以场景驱动的任务执行。
- en: Building the processes of an event-driven GenAISys interface
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建事件驱动的GenAISys界面流程
- en: Let’s begin by building the GenAISys interface shown in *Figure 4.2*, using
    IPython widgets to create a responsive, event-driven environment. The result will
    be a dynamic multi-user chat surface with drop-down menus, text-input fields,
    and a checkbox—everything needed for real-time collaboration between people/users
    and the generative AI agent.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从构建*图4.2*中显示的GenAISys界面开始，使用IPython小部件创建一个响应式、事件驱动的环境。结果将是一个动态的多用户聊天界面，带有下拉菜单、文本输入字段和复选框——所有这些对于人们/用户与生成式AI代理之间的实时协作都是必需的。
- en: 'Open `Event-driven_GenAISys_framework.ipynb` notebook within the Chapter04
    directory on GitHub ([https://github.com/Denis2054/Building-Business-Ready-Generative-AI-Systems/tree/main](https://github.com/Denis2054/Building-Business-Ready-Generative-AI-Systems/tree/main)).
    Setting up the environment is the same as described in the previous chapters:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在GitHub的Chapter04目录中打开`Event-driven_GenAISys_framework.ipynb`笔记本（[https://github.com/Denis2054/Building-Business-Ready-Generative-AI-Systems/tree/main](https://github.com/Denis2054/Building-Business-Ready-Generative-AI-Systems/tree/main)）。设置环境与前面章节中描述的相同：
- en: 'To set up OpenAI, refer to [*Chapter 1*](Chapter_1.xhtml#_idTextAnchor021),
    including the custom OpenAI API call used here: `openai_api.make_openai_api_call`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要设置OpenAI，请参考[*第1章*](Chapter_1.xhtml#_idTextAnchor021)，包括此处使用的自定义OpenAI API调用：`openai_api.make_openai_api_call`
- en: Refer to [*Chapter 3*](Chapter_3.xhtml#_idTextAnchor085) for setting up Pinecone,
    connecting to the index, and querying it
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请参考[*第3章*](Chapter_3.xhtml#_idTextAnchor085)以设置Pinecone，连接到索引并查询它
- en: 'An additional package (`ipython`) is required for the notebook environment.
    IPython is pre-installed in Google Colab; if needed, install it using the following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 需要额外的包（`ipython`）用于笔记本环境。Google Colab中已预装IPython；如果需要，请使用以下命令安装：
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The code we’ll build demonstrates core concepts such as event-driven interactions,
    dynamic content updating, and modular function organization. By the end of this
    section, you will have learned how to bridge the gap between AI functionality
    and end user engagement.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要构建的代码演示了核心概念，例如事件驱动的交互、动态内容更新和模块化函数组织。在本节结束时，你将学会如何弥合人工智能功能与最终用户参与之间的差距。
- en: '![Figure 4.2: The flowchart of an event-driven GenAISys interface](img/B32304_04_2.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图4.2：事件驱动的GenAISys界面流程图](img/B32304_04_2.png)'
- en: 'Figure 4.2: The flowchart of an event-driven GenAISys interface'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2：事件驱动的GenAISys界面流程图
- en: 'The main groups of functions required to build this interface are the following:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 构建此界面所需的主要功能组如下：
- en: Initializing widgets
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始化小部件
- en: Handling user input and selection changes
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理用户输入和选择更改
- en: Processing chat messages, including triggering functions and exit commands
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理聊天消息，包括触发函数和退出命令
- en: Generating and processing AI responses
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成和处理AI响应
- en: Updating the UI dynamically
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态更新UI
- en: Saving the conversation history
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存对话历史
- en: Before diving into the code from a developer’s perspective, let’s keep the user’s
    point of view in mind. We must build an intuitive interface that can seamlessly
    execute the flow outlined in *Figure 4.2*.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在从开发者的角度深入代码之前，让我们牢记用户的视角。我们必须构建一个直观的界面，可以无缝执行*图4.2*中概述的流程。
- en: '![Figure 4.3: GenAISys from a user’s perspective](img/B32304_04_3.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图4.3：从用户角度看到的GenAISys](img/B32304_04_3.png)'
- en: 'Figure 4.3: GenAISys from a user’s perspective'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3：从用户角度看到的GenAISys
- en: '![A magnifying glass on a black background  AI-generated content may be incorrect.](img/1.png)**Quick
    tip**: Need to see a high-resolution version of this image? Open this book in
    the next-gen Packt Reader or view it in the PDF/ePub copy.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![黑色背景上的放大镜  AI生成的内容可能不正确。](img/1.png)**提示**：需要查看此图像的高分辨率版本？在下一代Packt Reader中打开此书或在其PDF/ePub副本中查看。'
- en: '![](img/2.png)**The next-gen Packt Reader** is included for free with the purchase
    of this book. Scan the QR code OR go to [packtpub.com/unlock](http://packtpub.com/unlock),
    then use the search bar to find this book by name. Double-check the edition shown
    to make sure you get the right one.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/2.png)**下一代Packt Reader**随本书免费赠送。扫描二维码或访问[packtpub.com/unlock](http://packtpub.com/unlock)，然后使用搜索栏通过书名查找此书。请仔细核对显示的版本，以确保您获得正确的版本。'
- en: '![A qr code on a white background  AI-generated content may be incorrect.](img/Unlock_Code1.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![白色背景上的二维码  AI生成的内容可能不正确。](img/Unlock_Code1.png)'
- en: 'The UI contains only three widgets: an input box for entering prompts, a drop-down
    list for selecting active users, and a checkbox for activating and deactivating
    the conversational AI agent.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: UI中只包含三个小部件：一个用于输入提示的输入框、一个用于选择活动用户的下拉列表和一个用于激活和停用对话AI代理的复选框。
- en: Let’s walk through the process of setting up and running this interactive GenAISys
    environment.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步了解设置和运行此交互式GenAISys环境的过程。
- en: 1\. Start
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. 开始
- en: 'The program starts from the *Multi-user conversation with the agent as a participant*
    cell. We first import the modules and libraries we need, starting with `IPython`:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 程序从“*与代理作为参与者的多用户对话*”单元格开始。我们首先导入所需的模块和库，从`IPython`开始：
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let’s go through each functionality we will be implementing in Google Colab:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐一了解在Google Colab中将要实现的功能：
- en: '`display` and `HTML` to display objects such as widgets, images, and rich HTML
    outputs'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`display`和`HTML`用于显示小部件、图像和丰富的HTML输出'
- en: '`clear_output` to clear the output of a cell'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clear_output`用于清除单元格的输出'
- en: 'Then, we import `ipywidgets` managed by the Jupyter project:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们导入由Jupyter项目管理的`ipywidgets`：
- en: '[PRE2]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`ipywidgets` is the core component of the interactive interface in this notebook,
    in which we will use the following widgets:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`ipywidgets`是本笔记本交互界面的核心组件，我们将使用以下小部件：'
- en: '`Dropdown`: A drop-down widget to select a value from a list of options'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Dropdown`：一个下拉小部件，可以从选项列表中选择一个值'
- en: '`Text`: A widget for text input from a user'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Text`：一个用于用户文本输入的小部件'
- en: '`Checkbox`: A widget for Boolean checked/unchecked input'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Checkbox`：一个用于布尔值选中/未选中输入的小部件'
- en: '`Vbox`: A container widget to arrange child widgets in a vertical box layout'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Vbox`：一个容器小部件，用于以垂直框布局排列子小部件'
- en: '`Layout`: To customize the style of the widgets with layout properties such
    as width, height, and margin'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Layout`：使用布局属性（如宽度、高度和边距）自定义小部件的样式'
- en: 'Finally, we import JSON, used to store multi-user conversation histories:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们导入JSON，用于存储多用户对话历史：
- en: '[PRE3]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We then initialize the conversation histories for all users, define the first
    active user, and set the active conversation to `True`:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们初始化所有用户的对话历史，定义第一个活动用户，并将活动对话设置为`True`：
- en: '[PRE4]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We are thus, from the start, initializing a multi-user collaborative GenAISys
    in which the users can be human prompts and system prompts. For example, a “user”
    could be a message from another system and triggered in this interface by an event
    that reads pending messages. The user list can be expanded, stored in variables,
    or utilized in any user management system that suits a project’s needs, including
    access rights, passwords, and roles for various applications. Next, we initialize
    the widgets themselves.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，从一开始，我们就在初始化一个多用户协作的GenAISys，其中用户可以是人类提示和系统提示。例如，“用户”可以是从另一个系统来的消息，并通过读取待处理消息的事件触发此界面。用户列表可以扩展，存储在变量中，或用于满足项目需求的各种用户管理系统，包括访问权限、密码和各种应用程序的角色。接下来，我们初始化小部件本身。
- en: 2\. Initialize widgets
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2. 初始化小部件
- en: 'The code now sets up the `Dropdown`, `Text`, and `Checkbox` widgets we need.
    The widgets are also linked to event handlers. The `Dropdown` widget for the users
    defines the three users initialized at the start of the conversation:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 代码现在设置了所需的`Dropdown`、`Text`和`Checkbox`小部件。这些小部件也链接到事件处理器。用户`Dropdown`小部件定义了在对话开始时初始化的三个用户：
- en: '[PRE5]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The selector has four parameters:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 选择器有四个参数：
- en: '`options` lists the available users that can be expanded and can access any
    user management repository as needed for your project.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`options` 列出了可用于扩展并可访问任何用户管理仓库的可用用户。'
- en: '`value` determines the active user. The program started with `User01` as the
    initial user. This can be automated when an authorized user first connects to
    the GenAISys.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value` 确定活动用户。程序以 `User01` 作为初始用户启动。当授权用户首次连接到 GenAISys 时，这可以自动化。'
- en: '`description` provides a label for the drop-down list that will be displayed.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description` 为将要显示的下拉列表提供标签。'
- en: '`layout` sets the width of the widget that will be displayed.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`layout` 设置将要显示的小部件的宽度。'
- en: Note that we are creating a core GenAISys, not a platform. The goal is to grasp
    the inner workings of a GenAISys. Once it works as expected, we can then add the
    classical layers of user management (names, roles, and rights). In this case,
    we are remaining focused on the flexible core concepts of GenAISys, not how they
    will be encapsulated in a specific platform and framework. We are learning how
    to be generative AI agentic architects, not operators of a specific framework.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们正在创建一个核心 GenAISys，而不是一个平台。目标是掌握 GenAISys 的内部工作原理。一旦它按预期工作，我们就可以添加经典的用户管理层（名称、角色和权限）。在这种情况下，我们保持专注于
    GenAISys 的灵活核心概念，而不是它们将如何封装在特定的平台和框架中。我们正在学习如何成为生成式 AI 代理架构师，而不是特定框架的操作员。
- en: 'The next step is to insert an event handler. In this case, it is an event listener
    that will detect when the value of `user_selector` changes. When another user
    is selected, the `on_user_change` function is automatically called, and `value`
    becomes the new user:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是插入事件处理器。在这种情况下，它是一个事件监听器，用于检测 `user_selector` 的值何时发生变化。当选择其他用户时，`on_user_change`
    函数会自动调用，并且 `value` 变为新的用户：
- en: '[PRE6]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This dynamic change in users within a GenAISys conversation represents a major
    evolution from the one-on-one chatbots. It introduces a whole new dimension to
    collaborative teamwork with AI as a co-participant.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GenAISys 对话中用户动态变化代表了一种从一对一聊天机器人到重大进化。它为与 AI 作为共同参与者的协作团队合作引入了一个全新的维度。
- en: 'The second widget to activate is the input widget:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 需要激活的第二个小部件是输入小部件：
- en: '[PRE7]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The input can be any text and will occupy 100% of the UI layout. The conversation
    ends when a user enters `exit` or `quit`. When the text is typed and the *Enter*
    button is pressed, the event handler takes over:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 输入可以是任何文本，并将占用 UI 布局的 100%。当用户输入 `exit` 或 `quit` 时，对话结束。当文本输入并按下 *Enter* 按钮时，事件处理器接管：
- en: '[PRE8]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '`on_submit` is a method of the `input_box` widget. `handle_submit` is a callback
    function that we can write as we wish and will be described later in this section.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`on_submit` 是 `input_box` 小部件的方法。`handle_submit` 是我们可以按自己的意愿编写的回调函数，将在本节后面描述。'
- en: 'The third widget is the checkbox for the AI conversational agent:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个小部件是 AI 对话代理的复选框：
- en: '[PRE9]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The checkbox displays the description label, which is an agent in this case.
    The layout will occupy 20% of the UI. If `value` is set to `True`, then the conversational
    AI agent will be activated. We will build the AI agent in the *Conversational
    agent* section of this chapter. The AI agent will also be event-driven.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 复选框显示描述标签，在这种情况下是一个代理。布局将占用 UI 的 20%。如果 `value` 设置为 `True`，则对话式 AI 代理将被激活。我们将在本章的
    *对话代理* 部分构建 AI 代理。AI 代理也将是事件驱动的。
- en: The UI box is now ready to be displayed.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: UI 容器现在已准备好显示。
- en: 3\. Display the UI
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3. 显示用户界面
- en: 'The UI container widget now combines the three event-driven widgets we defined
    in `VBox` (`V` stands for vertical; i.e., in a vertical box). The three widgets
    are in brackets:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: UI 容器小部件现在结合了我们定义在 `VBox`（`V` 代表垂直；即，在垂直框中）中的三个事件驱动小部件。这三个小部件用括号括起来：
- en: '[PRE10]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The layout is then defined:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来定义布局：
- en: '[PRE11]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The parameters of this responsive UI are the following:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 此响应式 UI 的参数如下：
- en: '`display=''flex''` activates the CSS flexbox model for layouts dynamically
    without specifying the sizes of the items'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`display=''flex''` 激活 CSS 弹性盒模型以动态布局，而不指定项目的大小。'
- en: '`flex_flow=''column''` arranges the child widgets vertically'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flex_flow=''column''` 垂直排列子小部件。'
- en: '`align_items=''flex-start''` aligns the widgets to the start (left side) of
    the UI (left side) container'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`align_items=''flex-start''` 将小部件对齐到 UI（左侧）容器的起始位置（左侧）。'
- en: '`width=''100%''` makes the container take up the full width of the available
    space'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`width=''100%''` 使容器占据可用空间的全部宽度。'
- en: With that, the UI is ready. We can choose to begin with any of the three widgets.
    The user selector can be run before the input, as well as the AI agent checkbox.
    In this case, the user selector was set to a default value, `User01`, and the
    AI agent checkbox was set to the default value, `True`.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，UI 就准备好了。我们可以选择从三个小部件中的任何一个开始。用户选择器可以在输入之前运行，以及 AI 代理复选框。在这种情况下，用户选择器被设置为默认值
    `User01`，AI 代理复选框被设置为默认值 `True`。
- en: The three widgets and their processes can be built into any classical web or
    software interface, depending on your project’s needs. Since there is no default
    value for the input, let’s continue with the input widget.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 三个小部件及其过程可以根据项目需求构建到任何经典网页或软件界面中。由于输入没有默认值，让我们继续使用输入小部件。
- en: 4\. Input box event
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4. 输入框事件
- en: 'The input text is managed by the UI described in the previous section, which
    triggers `input_box.on_submit(handle_submit)` when a user enters text. In turn,
    the `submit` method calls the `handle_submit` function:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 输入文本由上一节中描述的 UI 管理，当用户输入文本时触发 `input_box.on_submit(handle_submit)`。反过来，`submit`
    方法调用 `handle_submit` 函数：
- en: '[PRE12]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, the function does three things:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，该函数执行以下三个操作：
- en: '`user_message = sender.value` processes the text received from the input widget'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user_message = sender.value` 处理从输入小部件接收到的文本'
- en: '`if user_message.strip()` checks whether there is a message and clears the
    input box for the next input with `sender.value = "" # Clear the input box`'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`if user_message.strip()` 检查是否存在消息，并使用 `sender.value = "" # 清空输入框` 清空输入框以供下一次输入。'
- en: '`chat(user_message)` is called if there is a message'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有消息，则调用 `chat(user_message)`
- en: '`chat(user_message)` is the next process and a key event processing hub for
    the GenAISys. Let’s go through it.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`chat(user_message)` 是下一个处理过程，也是 GenAISys 的关键事件处理中心。让我们来看看它。'
- en: 5\. chat(user_message) function
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5. `chat(user_message)` 函数
- en: 'The `chat(user_message)` function is an *orchestrator* component of our event-driven
    GenAISys. It should remain human-centered for critical human control. Once the
    system has gained the trust of the users and after careful consideration, some
    of the actions it manages can be triggered by system messages. The orchestrator
    contains important decisions when it processes the user message it receives from
    the `handle_submit(sender)` function. It encapsulates several choices and functions,
    as represented in *Figure 4.2*: deciding whether to continue the conversation,
    appending or saving the conversation history to a file, determining whether to
    call the AI conversational agent, and updating the UI display.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`chat(user_message)` 函数是我们事件驱动 GenAISys 的 *协调器* 组件。它应该保持以人为中心，以便进行关键的人机控制。一旦系统赢得了用户的信任，并在经过仔细考虑后，它可以被系统消息触发的动作中的一些动作可以触发。协调器在处理从
    `handle_submit(sender)` 函数接收到的用户消息时包含重要的决策。它封装了几个选择和功能，如 *图4.2* 所示：决定是否继续对话，将对话历史记录追加或保存到文件中，确定是否调用
    AI 对话代理，以及更新 UI 显示。'
- en: 'It first inherits the global status of the conversation variable (`conversation_active
    = True`) we initialized at the start of the conversation (in node **1** of *Figure
    4.2*):'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 它首先继承了对话变量（`conversation_active = True`）的全局状态，我们在对话开始时（在 *图4.2* 中的节点 **1**）初始化了它：
- en: '[PRE13]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'It continues to determine whether the multiple-turn conversation is over or
    not by checking whether the user has exited or quit the conversation (see **6**
    in *Figure 4.2*):'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 它会继续通过检查用户是否退出或结束对话来确定多轮对话是否结束（见 *图4.2* 中的 **6**）：
- en: '[PRE14]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Let’s see what happens if the user chooses to exit the conversation.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如果用户选择退出对话会发生什么。
- en: 6\. If ‘exit’ is chosen
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6. 如果选择“退出”
- en: 'Suppose the user enters `exit` or `quit`; then the `conversation_active` variable
    we set to `True` at the start of the conversation (in node **1** of *Figure 4.2*)
    will now be set to `False`. The system now knows that there is no need to update
    the display anymore. It then tells the `clear_output` function to wait until the
    next conversation turn to clear the output to avoid flickering effects:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 假设用户输入 `exit` 或 `quit`；那么我们在对话开始时（在 *图4.2* 中的节点 **1**）设置的 `conversation_active`
    变量现在将被设置为 `False`。系统现在知道不再需要更新显示。然后它告诉 `clear_output` 函数等待到下一个对话轮次来清除输出，以避免闪烁效果：
- en: '[PRE15]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The exit process continues by displaying a message signaling the end of the
    conversation and indicating that the conversation history is being saved:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 退出过程继续，显示一条消息，表示对话结束，并指示正在保存对话历史记录：
- en: '[PRE16]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The exit process ends by calling the *save* function of the conversation, which
    will save all history to a file (see node **7** in *Figure 4.2*):'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 通过调用对话的 *save* 函数结束退出过程，该函数将保存所有历史记录到文件中（见 *图 4.2* 的节点 **7**）：
- en: '[PRE17]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The conversation is thus saved at the end of the session for further use (for
    a new session or a meeting summary), as shown in node **7** of *Figure 4.2*:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，对话将在会话结束时保存以供进一步使用（用于新会话或会议摘要），如 *图 4.2* 的节点 **7** 所示：
- en: '[PRE18]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Now, let’s go through the process when the user(s) chooses to continue the conversation.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过用户（们）选择继续对话的过程来进行分析。
- en: 7\. If user(s) continue the conversation
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7\. 如果用户继续对话
- en: If the user input does not contain `exit` or `quit`, then the multi-turn, multi-user
    conversation will continue. We have some big decisions to make with this function,
    however. Do we append it to each user request or not? If we append it to each
    user request, at some point, the context window will be complete, but the number
    of tokens we send through the API will increase processing time and costs.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户输入不包含 `exit` 或 `quit`，则多轮、多用户对话将继续。然而，我们在这个功能上需要做出一些重大决策。我们是将其附加到每个用户请求上，还是不附加？如果我们将其附加到每个用户请求上，在某个时刻，上下文窗口将完整，但我们通过
    API 发送的标记数量将增加处理时间和成本。
- en: 'The first step is to append the history of the conversation we initialized
    at the start (in node **1** of *Figure 4.2*):'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是将我们在开始时初始化的对话历史记录（在 *图 4.2* 的节点 **1**）附加上：
- en: '[PRE19]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: So, in the hybrid scenario of this notebook, at this point, we will save the
    user history in memory until the end of the session, and we will thus augment
    each user’s input with their input history, as seen in node **11** of *Figure
    4.2*. If the user input does not contain `exit` or `quit`, then the multi-turn,
    multi-user conversation will continue. It will append the user message to the
    history (in node **8** of *Figure 4.2*) of the user.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在这个笔记本的混合场景中，在这个时候，我们将用户历史记录保存在内存中，直到会话结束，因此我们将使用户的输入历史记录增加每个用户的输入，正如在 *图
    4.2* 的节点 **11** 所见。如果用户输入不包含 `exit` 或 `quit`，则多轮、多用户对话将继续。它将用户消息附加到用户的历史记录（在 *图
    4.2* 的节点 **8**）中。
- en: However, if we don’t want to append a user request to it but still want to keep
    a record of the entire conversation for context, we can also summarize the conversation
    at the midpoint or the end. If we summarize it during the conversation, we can
    add a function to append it to the user input each time. If we summarize after
    the end of a session, we can continue with a new, fresh session with a summary
    of the previous session’s history.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果我们不想将用户请求附加到其中，但仍然想保留整个对话的记录以供上下文参考，我们也可以在对话的中点或结束时总结对话。如果在对话中总结，我们可以添加一个函数，每次都将其附加到用户输入中。如果在会话结束后总结，我们可以继续一个新的、全新的会话，并带有前一个会话的历史记录摘要。
- en: 'In this notebook, we will implement a hybrid short- and long-term memory process.
    We can continue the conversation by not entering `''quit''` or `''exit''`. Now,
    the `chat(user_message)` function will check the conversational agent’s checkbox
    value:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个笔记本中，我们将实现一个混合的短期和长期记忆过程。我们可以通过不输入 `'quit'` 或 `'exit'` 来继续对话。现在，`chat(user_message)`
    函数将检查对话式代理的复选框值：
- en: '[PRE20]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This verification is shown in node **9** in *Figure 4.2*. If the checkbox is
    checked, then the functions we created in the previous chapters are activated
    by calling `chat_with_gpt`:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这种验证在 *图 4.2* 的节点 **9** 中显示。如果复选框被勾选，则我们之前章节中创建的函数将通过调用 `chat_with_gpt` 被激活：
- en: '[PRE21]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Once the response is returned, it is appended to the history of the response
    described previously:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦返回响应，它将被附加到之前描述的响应历史记录中：
- en: '[PRE22]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: We now have an entry-point memory framework. The program then calls `update_display()`,
    another key function that is shown in node **14** of *Figure 4.2*. If the agent
    checkbox is checked, `chat_with_gpt` will be called.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有一个入口点记忆框架。然后程序调用 `update_display()`，这是在 *图 4.2* 的节点 **14** 中显示的另一个关键函数。如果代理复选框被勾选，`chat_with_gpt`
    将被调用。
- en: 8\. Generate bot response
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8\. 生成机器人响应
- en: The `chat_with_gpt` function assembles the work we did in the previous chapters
    to create a conversational AI agent with the Pinecone-based RAG functionality.
    We will fully implement this integration in the *Conversational agent* section
    of this chapter.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '`chat_with_gpt` 函数将我们在前几章中完成的工作组装起来，以创建一个具有基于 Pinecone 的 RAG 功能的对话式人工智能代理。我们将在本章的
    *对话式代理* 部分完全实现这一集成。'
- en: '`chat_with_gpt` orchestrates the AI conversational agent by providing information,
    enabling it to be dynamic and responsive. The user history of this conversation
    and the user message are sent to the `chat_with_gpt` conversational agent function:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`chat_with_gpt`通过提供信息来编排AI会话代理，使其具有动态性和响应性。将此对话的用户历史和用户消息发送到`chat_with_gpt`会话代理函数：'
- en: '[PRE23]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Once the response is returned, the `update_display` function is called from
    `chat(user_message)`.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦返回响应，`update_display`函数将从`chat(user_message)`中调用。
- en: 9\. Update display
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9. 更新显示
- en: 'The `update_display` function refreshes the UI with the updated conversation
    history and also displays the status of the widgets. It first tells the UI to
    wait until a new output arrives by setting `wait` to `True`:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`update_display`函数通过更新会话历史刷新UI，并显示小部件的状态。它首先通过将`wait`设置为`True`告诉UI等待新的输出到来：'
- en: '[PRE24]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The function then filters and displays the active user’s history (see node
    **15** of *Figure 4.2*):'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 函数随后过滤并显示活跃用户的会话历史（参见*图4.2*中的节点**15**）：
- en: '[PRE25]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'If the conversation is active, the UI `VBox` is displayed along with the status
    of the widgets:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果会话是活跃的，UI `VBox`将显示，同时显示小部件的状态：
- en: '[PRE26]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The input box is cleared, the agent checkbox has been checked independently
    by the user, and the system has verified its status. The active user will be displayed
    based on the independent decision of the user. In this case, the active user,
    `active_user`, who was initialized at the start (**1**) of the conversation, remains
    the same. If the user changed, the `on_user_change` drop-down event(**13**) would
    have been triggered by the `observe` method of the `user_selector` widget:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 输入框被清除，代理复选框已被用户独立检查，系统已验证其状态。活跃用户将根据用户的独立决定显示。在这种情况下，会话开始时（**1**）初始化的活跃用户`active_user`保持不变。如果用户改变了，`on_user_change`下拉事件（**13**）将由`user_selector`小部件的`observe`方法触发：
- en: '[PRE27]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'In that case, `user_selector.observe` will independently call the `update active_user`
    function (**14**) and first make sure that the active user is a global variable:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在那种情况下，`user_selector.observe`将独立调用`update active_user`函数（**14**），并首先确保活跃用户是一个全局变量：
- en: '[PRE28]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Then, it will make the new user the active user:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，它将使新用户成为活跃用户：
- en: '[PRE29]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Finally, it will call the `update_display` function we built in this subsection:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，它将调用我们在本小节中构建的`update_display`函数：
- en: '[PRE30]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Now that we have our dynamic UI and event-driven functions in place, let’s implement
    the conversational agent logic called by `chat_with_gpt`.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经实现了动态UI和事件驱动的功能，接下来让我们实现被`chat_with_gpt`调用的会话代理逻辑。
- en: Conversational agent
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 会话代理
- en: We implemented an AI conversational agent in *Chapters 1* and *2* and built
    the query Pinecone functionality in [*Chapter 3*](Chapter_3.xhtml#_idTextAnchor085).
    Go to the *Conversational agent* section of the notebook. If needed, take the
    time to revisit those chapters before proceeding. In this section, it’s time we
    integrate those components, preparing our GenAISys conversational agent for multi-user
    sessions.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在*第1章*和*第2章*中实现了一个AI会话代理，并在[*第3章*](Chapter_3.xhtml#_idTextAnchor085)中构建了查询Pinecone功能。前往笔记本中的*会话代理*部分。如果需要，在继续之前花时间回顾那些章节。在本节中，是我们将这些组件集成到一起的时候，为我们的GenAISys会话代理准备多用户会话。
- en: 'We begin by importing OpenAI and initializing the client:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先导入OpenAI并初始化客户端：
- en: '[PRE31]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Next, we make a decision to store or not to store all of the user’s conversation
    history for each call to optimize context window size for cost and clarity:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们决定是否存储每个调用中所有用户的会话历史，以优化上下文窗口大小，从而优化成本和清晰度：
- en: '[PRE32]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The memory setting should be strategically monitored in production environments.
    For example, here we set `user_memory` to `True`, but we avoid applying it during
    RAG queries, as historical context could confuse the Pinecone similarity searches.
    We then define the `chat_with_gpt` function, which is called in node **10** of
    *Figure 4.2*:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产环境中，应战略性地监控内存设置。例如，在这里我们将`user_memory`设置为`True`，但在RAG查询期间避免应用它，因为历史上下文可能会混淆Pinecone相似度搜索。然后我们定义`chat_with_gpt`函数，该函数在*图4.2*中的节点**10**被调用：
- en: '[PRE33]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The function first searches the input text for a keyword to trigger a RAG retrieval
    from the Pinecone index as implemented in `Query_Pinecone.ipynb` and described
    in [*Chapter 3*](Chapter_3.xhtml#_idTextAnchor085). The code first determines
    the namespace:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 函数首先在输入文本中搜索关键词以触发从Pinecone索引中进行的RAG检索，如`Query_Pinecone.ipynb`中实现并在[*第3章*](Chapter_3.xhtml#_idTextAnchor085)中描述。代码首先确定命名空间：
- en: '[PRE34]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'If the user message contains “Pinecone,” the query will target the `genaisys`
    namespace, which contains the instruction scenarios. The `genaisys` namespace
    implementation departs from static data retrieval and takes us into agentic, dynamic
    decision-making to trigger an instruction or a task. If the user message contains
    “RAG,” the query will target the `data01` namespace, which contains static data.
    The queries and content of the Pinecone index are those implemented in [*Chapter
    3*](Chapter_3.xhtml#_idTextAnchor085):'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户消息包含“Pinecone”，查询将针对包含指令场景的`genaisys`命名空间。`genaisys`命名空间实现不同于静态数据检索，它带我们进入代理式的、动态的决策来触发指令或任务。如果用户消息包含“RAG”，查询将针对包含静态数据的`data01`命名空间。Pinecone索引的查询和内容是在[*第三章*](Chapter_3.xhtml#_idTextAnchor085)中实现的：
- en: '[PRE35]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Once the query result is returned, we append the user message to it to augment
    the input:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦查询结果返回，我们将用户消息附加到其中以增强输入：
- en: '[PRE36]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The message parameters and the OpenAI API call are described in the *Setting
    up the environment* section of [*Chapter 1*](Chapter_1.xhtml#_idTextAnchor021).
    The OpenAI response is stored in `task response`:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 消息参数和OpenAI API调用在[*第一章*](Chapter_1.xhtml#_idTextAnchor021)的*设置环境*部分中描述。OpenAI的响应存储在`task
    response`：
- en: '[PRE37]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The response returned by the OpenAI API call, augmented with the result of
    the Pinecone query, is stored in `aug_output`:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: OpenAI API调用返回的响应，加上Pinecone查询的结果，存储在`aug_output`：
- en: '[PRE38]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'If the user message does not contain a keyword to trigger the RAG function,
    the user request will be sent directly to the OpenAI API call, and the response
    will be stored in `aug_output`. However, the system must first check whether `user_memory`
    is `True` or not. The system must also extract the text content of `user_message`:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户消息不包含触发RAG功能的关键词，用户请求将直接发送到OpenAI API调用，响应将存储在`aug_output`。然而，系统必须首先检查`user_memory`是否为`True`。系统还必须提取`user_message`的文本内容：
- en: '[PRE39]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: In this case, `umessage` now contains a concatenation of the conversation history
    of the active user extracted and stored in `combined_user_messages` and the user
    message itself in `user_message`. The generative AI model now has complete context
    about the dialogue with this user.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`umessage`现在包含从`combined_user_messages`中提取并存储的活跃用户的对话历史和用户消息本身在`user_message`中的拼接。生成式AI模型现在对这个用户的对话有完整的上下文信息。
- en: The strategy for managing conversation history will depend heavily on each real-world
    use case. For example, we might choose to extract the history of all users involved
    in a session or only specific users. Alternatively, a team could decide to use
    a single shared username throughout an entire conversation. Generally, the best
    practice is to organize workshops with end users to define and configure the conversation-memory
    strategies that best fit their workflow.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 管理对话历史的策略将严重依赖于每个实际应用场景。例如，我们可能会选择提取会话中所有用户的对话历史，或者只提取特定用户的。或者，一个团队可能会决定在整个对话中使用一个共享的用户名。通常，最佳实践是与最终用户一起组织研讨会，以定义和配置最适合他们工作流程的对话记忆策略。
- en: 'In some cases, we might decide to ignore the conversation history altogether.
    In that scenario, we set the `user_memory` parameter to `False`, and the system
    disregards prior exchanges:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，我们可能会决定完全忽略对话历史。在这种情况下，我们将`user_memory`参数设置为`False`，系统将忽略之前的交流：
- en: '[PRE40]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The `umessage` variable is now ready to be sent directly to the generative
    AI model:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`umessage`变量现在可以直接发送到生成式AI模型：'
- en: '[PRE41]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The response from the OpenAI API call is then returned to the `chat_with_gpt`
    function (in node **10** of *Figure 4.2*):'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: OpenAI API调用的响应随后返回到`chat_with_gpt`函数（在*图4.2*的节点**10**）：
- en: '[PRE42]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'If the OpenAI API call fails, an exception is raised and returned:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 如果OpenAI API调用失败，将引发异常并返回：
- en: '[PRE43]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: And with that, we have assembled the generative AI functionalities developed
    across the previous three chapters. At this stage, we’ve built a responsive GenAISys
    interface and integrated a generative agent, together forming a cohesive AI controller
    and orchestrator. Let’s now put our GenAISys into motion.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，我们已经汇集了在前三章中开发的生成式AI功能。在这个阶段，我们已经构建了一个响应式的GenAISys界面，并集成了一个生成代理，共同形成一个统一的AI控制器和协调者。现在让我们将我们的GenAISys付诸行动。
- en: Multi-user, multi-turn GenAISys session
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多用户、多轮GenAISys会话
- en: We now have a responsive, event-driven GenAISys capable of executing multiple
    tasks in diverse ways, as illustrated in *Figure 4.4*. We will explore the flexibility
    of this GenAISys interface we built using IPython and assemble the OpenAI and
    Pinecone components from previous chapters.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个响应式的事件驱动型GenAISys，能够以多种方式执行多个任务，如图4.4所示。我们将探讨我们使用IPython构建的GenAISys接口的灵活性，并组装来自前几章的OpenAI和Pinecone组件。
- en: '![Figure 4.4: Summing up the components we have built and assembled in this
    chapter](img/B32304_04_4.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图4.4：总结本章构建和组装的组件](img/B32304_04_4.png)'
- en: 'Figure 4.4: Summing up the components we have built and assembled in this chapter'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4：总结本章构建和组装的组件
- en: Since the functions within GenAISys are event-driven, a user (human or system)
    or a group of users can leverage this framework to address multiple cross-domain
    tasks. The system is human-centric, creating a collaborative, frictionless environment
    between humans and a generative AI agent. Importantly, there is no competition
    between humans and AI in this framework. Teams can maintain human social relationships
    with co-workers while using the GenAISys to boost their performance and productivity
    exponentially. This human-centric approach is one I have always advocated throughout
    my decades of experience providing AI-driven automation solutions for global corporations,
    mid-sized businesses, and smaller organizations. When teams adopt AI as a collaborative
    tool rather than a competitor, it fosters a positive atmosphere that leads to
    quick wins—demonstrating the combined effectiveness of teamwork and technology.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 由于GenAISys内的功能是事件驱动的，用户（人类或系统）或一组用户可以利用这个框架来解决多个跨领域任务。该系统以人为中心，在人类和生成式AI代理之间创造一个协作、无摩擦的环境。重要的是，在这个框架中人类和AI之间没有竞争。团队可以在使用GenAISys来提升他们的表现和生产力的同时，与同事保持人类社交关系。这种以人为中心的方法是我几十年来一直倡导的，为全球公司、中型企业和小型组织提供AI驱动的自动化解决方案。当团队将AI视为协作工具而不是竞争对手时，它营造了一种积极的环境，从而迅速取得胜利——展示了团队合作和技术结合的有效性。
- en: 'If we look deeper into how the GenAISys framework can be leveraged in teamwork
    scenarios, we can establish several fundamental sequences of events typically
    needed in real-world projects:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们深入探讨GenAISys框架在团队合作场景中的应用，我们可以建立几个在现实世界项目中通常需要的根本事件序列：
- en: User selection => Input => Agent checked => RAG instruction => GenAI agent =>
    Output
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户选择 => 输入 => 代理检查 => RAG指令 => GenAI代理 => 输出
- en: User selection => Input => Agent checked => RAG data => GenAI agent => Output
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户选择 => 输入 => 代理检查 => RAG数据 => GenAI代理 => 输出
- en: User selection => Input => Agent checked => User history => GenAI agent => Output
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户选择 => 输入 => 代理检查 => 用户历史 => GenAI代理 => 输出
- en: User selection => Input => Agent checked => No user history => GenAI agent =>
    Output
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户选择 => 输入 => 代理检查 => 无用户历史 => GenAI代理 => 输出
- en: User selection => Input => Agent unchecked => Output
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户选择 => 输入 => 代理未检查 => 输出
- en: 'These basic sequences constitute a set of sequences, **S**:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 这些基本序列构成了一组序列，**S**：
- en: '![](img/B32304_Equation.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B32304_Equation.png)'
- en: 'To achieve a goal for a single user or a group of users, the sequences can
    be assembled as follows:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现单个用户或一组用户的目标，序列可以组装如下：
- en: '{a, b}: Running a sentiment analysis with RAG, followed by the retrieval of
    an episodic memory of a past meeting.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{a, b}: 使用RAG进行情感分析，随后检索过去会议的情景记忆。'
- en: '{d, e}: Running an OpenAI API request and then making a comment for other users.
    The novelty in this case is that the AI agent remains a co-worker in a team and
    sometimes doesn’t express itself, allowing the team to ponder the ideas it suggested.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{d, e}: 运行OpenAI API请求，然后为其他用户发表评论。在这个案例中的新意在于，AI代理在团队中仍然是一个同事，有时它不会表达自己，让团队思考它提出的想法。'
- en: 'These sequences can be arranged into longer session flows as required by the
    specific tasks and scenarios. Because sequences can repeat themselves, we have
    an indefinite number of possible dynamic combinations. For instance, here’s a
    glimpse into the flexibility that this provides:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 这些序列可以根据具体任务和场景的需要排列成更长的会话流程。因为序列可以重复，所以我们有无限多的可能动态组合。例如，这里是对这种灵活性的一瞥：
- en: Set of three members, such as {a, c, e}, {b, d, e}, {a, b, c}
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 三人小组，例如 {a, c, e}, {b, d, e}, {a, b, c}
- en: Set of four members, such as {a, b, c, d}, {b, c, d, e}, {a, c, d, e}
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四人小组，例如 {a, b, c, d}, {b, c, d, e}, {a, c, d, e}
- en: Set of five members, such as {a, b, c, d, e}
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 五人小组，例如 {a, b, c, d, e}
- en: We could add exiting the session and summarizing to these sequences, as well
    as reloading a saved file and continuing the session. There can also be a repetition
    of sets, sets with different users, and sets with more functions. In the following
    chapters, we will add new features, including image generation, audio, web search,
    and ML, that will expand the scope of the GenAISys framework we have built.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以向这些序列添加退出会话和总结，以及重新加载保存的文件并继续会话。还可以有重复的集合、不同用户的集合以及具有更多功能的集合。在接下来的章节中，我们将添加新的功能，包括图像生成、音频、网络搜索和机器学习，这将扩大我们构建的
    GenAISys 框架的范围。
- en: In this section, however, we will run a session with two users in a simple sequence
    of events. Then, we will run a scenario with multiple users and some basic sequences.
    Let’s begin with a straightforward sequence of events.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在本节中，我们将以简单的顺序运行两个用户的会话。然后，我们将运行具有多个用户和一些基本序列的场景。让我们从简单的事件序列开始。
- en: A session with two users
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 两个用户的会话
- en: 'In this example session, two users collaborate to brainstorm ideas for attractive
    travel destinations they could recommend to customers on their online travel website.
    We start by running an interface session, then display the conversation history,
    and finally summarize the discussion. To begin the session, open `Event-driven_GenAISys_framework.ipynb`
    and run these sections of cells:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例会话中，两个用户合作构思他们可以向在线旅游网站客户推荐的吸引人的旅游目的地。我们首先运行一个界面会话，然后显示对话历史，最后总结讨论。要开始会话，打开`Event-driven_GenAISys_framework.ipynb`并运行这些单元格部分：
- en: '**Setting up the environment**: Run all cells'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置环境**：运行所有单元格'
- en: '**Conversational agent**: Run the single cell'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**会话代理**：运行单个单元格'
- en: '**Running the interface in the GenAISys IPython interface**: This will initialize
    the conversation'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在 GenAISys IPython 接口运行界面**：这将初始化对话'
- en: Due to the stochastic nature of generative AI models, the outputs might vary
    slightly with each execution. Likewise, minor differences may appear between this
    notebook and the printed chapter, as multiple runs are performed during quality
    control.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 由于生成式 AI 模型的随机性，输出可能会在每次执行时略有不同。同样，在质量控制期间多次运行，因此本笔记本与打印章节之间可能存在细微差异。
- en: With the conversation initialized, let’s now run the interactive session.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 对话初始化后，现在让我们运行交互式会话。
- en: The interactive conversation
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 交互式对话
- en: The conversation starts with `User01` by default, displaying the input box and
    the activated agent checkbox. The sequence of events and functions triggered in
    this scenario is illustrated in *Figure 4.5*.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 对话默认从`User01`开始，显示输入框和激活的代理复选框。在此场景中触发的事件和函数序列如*图 4.5*所示。
- en: '![Figure 4.5: The GenAI agent performs a task with the user’s history](img/B32304_04_5.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.5：GenAI 代理使用用户的历史记录执行任务](img/B32304_04_5.png)'
- en: 'Figure 4.5: The GenAI agent performs a task with the user’s history'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5：GenAI 代理使用用户的历史记录执行任务
- en: 'The flow follows this sequence:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 流程遵循以下顺序：
- en: User selection => Input => Agent checked => User history => GenAI agent => Output
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 用户选择 => 输入 => 代理检查 => 用户历史记录 => GenAI 代理 => 输出
- en: To the user, this process is seamless, as illustrated in *Figure 4.6*. However,
    the underlying functions required careful design and development to produce this
    smooth effect.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 对于用户来说，这个过程无缝衔接，如*图 4.6*所示。然而，为了产生这种平滑的效果，需要仔细设计和开发底层功能。
- en: '![Figure 4.6: UI with the GenAI agent checked](img/B32304_04_6.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.6：带有 GenAI 代理复选框的 UI](img/B32304_04_6.png)'
- en: 'Figure 4.6: UI with the GenAI agent checked'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6：带有 GenAI 代理复选框的 UI
- en: 'From the user’s perspective, the process is straightforward. `User01` types
    a prompt into the input box: `What is the capital of France?`.'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 从用户的角度来看，这个过程很简单。`User01` 在输入框中输入提示：`法国的首都是什么？`。
- en: '![Figure 4.7: User entering a simple prompt](img/B32304_04_7.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.7：用户输入简单提示](img/B32304_04_7.png)'
- en: 'Figure 4.7: User entering a simple prompt'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7：用户输入简单提示
- en: 'The output will be displayed above the input widget, as shown here:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将显示在输入小部件上方，如下所示：
- en: '![Figure 4.8: Output is displayed above the input box](img/B32304_04_8.png)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.8：输出显示在输入框上方](img/B32304_04_8.png)'
- en: 'Figure 4.8: Output is displayed above the input box'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8：输出显示在输入框上方
- en: 'At this point, even an untrained user can intuitively run the GenAISys with
    the basic information provided in a one-page document. `User01` continues with
    a follow-up question:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，即使是没有经过训练的用户也可以直观地使用一页文档中提供的基本信息运行 GenAISys。`User01` 继续提出后续问题：
- en: '[PRE44]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Since the user history option is set to `True` in the conversational agent,
    the agent knows that the question is about Paris and provides information on some
    iconic locations to visit:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在对话代理中用户历史选项设置为 `True`，代理知道问题关于巴黎，并提供了一些值得参观的标志性地点的信息：
- en: '[PRE45]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '`User02` now enters the dialogue by selecting **User02** in the drop-down menu,
    as shown in *Figure 4.9*. **User02** then asks what the capital of Spain is, the
    agent responds, and the output is displayed above the input box.'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '`User02` 现在通过在下拉菜单中选择 **User02**，如 *图 4.9* 所示，进入对话。**User02** 然后询问西班牙的首都是哪里，代理进行了回答，输出显示在输入框上方。'
- en: '![Figure 4.9: Input: Another user can enter the conversation](img/B32304_04_9.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.9：输入：另一个用户可以进入对话](img/B32304_04_9.png)'
- en: 'Figure 4.9: Input: Another user can enter the conversation'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9：输入：另一个用户可以进入对话
- en: 'At this point, the GenAISys core framework is set, and we will progressively
    enhance it in subsequent chapters by addressing features such as security, user
    access controls, and data privacy. `User02` goes further and asks about the places
    worth visiting. The agent responds correctly because the user history option is
    activated:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，GenAISys 核心框架已经设置好，我们将在后续章节中通过解决诸如安全性、用户访问控制和数据隐私等特性来逐步增强它。`User02` 进一步询问值得参观的地方。代理正确响应，因为用户历史选项已被激活：
- en: '[PRE46]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Now, a key feature comes into play. `User02` deactivates the AI agent, as shown
    in *Figure 4.10*, and directly addresses `User01`, similar to an interaction on
    social media or remote collaboration platforms.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一个关键特性开始发挥作用。`User02` 如 *图 4.10* 所示，停用了 AI 代理，并直接对 `User01` 进行了交流，类似于社交媒体或远程协作平台上的互动。
- en: '![Figure 4.10: Direct communication in a team without an AI agent](img/B32304_04_10.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.10：没有 AI 代理的团队直接沟通](img/B32304_04_10.png)'
- en: 'Figure 4.10: Direct communication in a team without an AI agent'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10：没有 AI 代理的团队直接沟通
- en: '`User01` responds informally: “Yes, that’s a good idea, but let’s think it
    over.” Subsequently, `User01` ends the session by typing `exit`. This capability,
    as illustrated in *Figure 4.11*, takes our GenAISys to a new level for the use
    cases we will explore in this book, such as the following configurations:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '`User01` 非正式地回应：“是的，这是个好主意，但让我们再考虑一下。”随后，`User01` 通过输入 `exit` 来结束会话。正如 *图 4.11*
    所示，这种能力使我们的 GenAISys 在本书将要探讨的使用案例中达到了一个新的水平，例如以下配置：'
- en: A user can communicate with GenAISys alone in a one-to-one conversation
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以单独与 GenAISys 进行一对一的对话
- en: A team can work together, enhancing their performance with the AI agent as a
    collaborator
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队可以一起工作，通过 AI 代理作为合作者来提高他们的表现
- en: The users can be AI agents playing the role of managers from different locations
    when the human managers are not available
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当人类管理者不可用时，用户可以是来自不同地点的 AI 代理，扮演管理者的角色
- en: The users can be systems providing information in real-time to human users
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以是向人类用户提供实时信息的系统
- en: '![Figure 4.11: A team communicates directly and then ends the session](img/B32304_04_11.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.11：团队直接沟通然后结束会话](img/B32304_04_11.png)'
- en: 'Figure 4.11: A team communicates directly and then ends the session'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11：团队直接沟通然后结束会话
- en: 'Upon exiting, the session ends, and the conversation history is saved to the
    `conversation_history.json` file:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 退出时，会话结束，对话历史保存到 `conversation_history.json` 文件中：
- en: '![Figure 4.12: Saving and concluding the conversation](img/B32304_04_12.png)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.12：保存并结束对话](img/B32304_04_12.png)'
- en: 'Figure 4.12: Saving and concluding the conversation'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12：保存并结束对话
- en: 'Like all other features in this framework, the exit behavior can be customized
    for individual projects. Take the following examples:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 就像这个框架中的所有其他功能一样，退出行为可以根据个别项目进行定制。以下是一些例子：
- en: The conversation history can be saved or not
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对话历史可以保存也可以不保存
- en: Only parts of the conversation history can be saved
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只能保存对话历史的一部分
- en: The name of the saved conversation history file can contain a timestamp
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存的对话历史文件名可以包含时间戳
- en: Going `"…to the next cell"` is optional
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择“…转到下一个单元格”是可选的
- en: These are decisions to make for each use case. They will not modify the overall
    framework of the GenAISys but allow for a high level of customization.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是为每个用例做出的决策。它们不会修改 GenAISys 的整体框架，但允许高度定制。
- en: In this case, the team wants to display the conversation they just had.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，团队希望显示他们刚刚进行的对话。
- en: Loading and displaying the conversation
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加载和显示对话
- en: 'The code for this function is a standard IPython display function to convert
    the JSON file, `conversation_history.json`, into Markdown format. Let’s first
    check whether the conversation history parameter and/or the summary parameter
    is activated:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数的代码是一个标准的IPython显示函数，用于将JSON文件`conversation_history.json`转换为Markdown格式。我们首先检查会话历史参数和/或摘要参数是否已激活：
- en: '[PRE48]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'In this case, the conversation history and the summary function are both activated.
    Now, we will check whether a conversation history file is present or not:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，会话历史和摘要函数都已激活。现在，我们将检查是否存在会话历史文件：
- en: '[PRE49]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'If a file exists, `display_conversation_history` will be set to `True` and
    `summary=True` (even if it was set to `False` previously). A message will signal
    that the file exists:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在文件，`display_conversation_history`将被设置为`True`和`summary=True`（即使之前设置为`False`）。将显示一条消息，表明文件存在：
- en: '[PRE50]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'If `display_conversation_history==True`, then the conversation will be displayed:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`display_conversation_history==True`，则将显示会话：
- en: '[PRE51]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The output is nicely formatted:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 输出格式良好：
- en: '[PRE52]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: The team has displayed the conversation but wants to take the process further
    and summarize this online meeting that included an AI agent as a participant.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 团队已经显示了会话，但希望将过程进一步深入，并总结包括AI代理作为参与者的在线会议。
- en: Loading and summarizing the conversation
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加载和总结会话
- en: The conversation we are summarizing shows how to merge an AI agent into an existing
    human team to boost productivity. In some cases, the GenAISys will have worked
    on automated tasks alone. In other cases, the GenAISys will be the copilot of
    one or several users. In others, in the many critical moments of the life of an
    organization, teams of humans and AI agents will be able to work together to make
    decisions.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在总结的会话展示了如何将AI代理融入现有的人类团队以提升生产力。在某些情况下，GenAISys将独立完成自动化任务。在其他情况下，GenAISys将成为一个或多个用户的副驾驶。在其他情况下，在组织的许多关键时刻，人类和AI代理的团队将能够一起工作来做出决策。
- en: In this section, we will ask the AI agent to summarize the conversation. We
    will integrate this feature as a function in the GenAISys in the following chapters.
    For the moment, we will run it separately after displaying the conversation, as
    shown in *Figure 4.13*.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将要求AI代理总结会话。我们将在接下来的章节中将此功能集成到GenAISys中作为一个函数。目前，我们将在显示会话后单独运行它，如图*4.13*所示。
- en: '![Figure 4.13: Displaying and summarizing a conversation](img/B32304_04_13.png)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![图4.13：显示和总结会话](img/B32304_04_13.png)'
- en: 'Figure 4.13: Displaying and summarizing a conversation'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.13：显示和总结会话
- en: 'The code first loads the `conversation_history.json` file as in the display
    function. Then, we define a function that converts the conversation history content
    into an optimal format for the OpenAI API:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 代码首先以显示函数中的方式加载`conversation_history.json`文件。然后，我们定义一个函数，将会话历史内容转换为OpenAI API的最佳格式：
- en: '[PRE53]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The function to construct the full conversation history is called:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完整会话历史的函数被调用：
- en: '[PRE54]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Now, we prepare the complete message for the custom GenAISys API call built
    for the system and imported in the *OpenAI* subsection of the *Setting the environment*
    section in our notebook:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备为系统构建的定制GenAISys API调用准备完整消息，并在我们笔记本的*设置环境*部分的*OpenAI*子部分中导入：
- en: '[PRE55]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Finally, we call the GenAISys OpenAI function:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们调用GenAISys OpenAI函数：
- en: '[PRE56]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'The API response code will be displayed in Markdown format:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 将以Markdown格式显示API响应代码：
- en: '[PRE57]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Now, everything is ready. We can call the summarizing function if `summary==True`:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一切准备就绪。如果`summary==True`，我们可以调用摘要函数：
- en: '[PRE58]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Note that in Google Colab, `/content/` is the default directory. So, the following
    file paths point to the same directory:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在Google Colab中，`/content/`是默认目录。因此，以下文件路径指向相同的目录：
- en: '[PRE59]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: In another environment, you may need absolute paths.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个环境中，你可能需要绝对路径。
- en: 'The output is a summary of the conversation history that contains an introduction
    and then a detailed summary. The prompt for this summary can be modified to request
    shorter or longer lengths. We can also design a prompt asking the generative AI
    model to target part of the conversation or design any other specific prompt for
    a given project. In this case, the output is satisfactory:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 输出是一个包含简介和详细摘要的会话历史摘要。可以修改此摘要的提示以请求更短或更长的长度。我们还可以设计一个提示，要求生成式AI模型针对会话的一部分或为特定项目设计任何其他特定提示。在这种情况下，输出是令人满意的：
- en: '[PRE60]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: By running through the many possible sequences of tasks and events, we have
    seen the flexibility that the GenAISys offers us. Let’s run a more complex multi-user
    session.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行许多可能的任务和事件序列，我们看到了 GenAISys 给我们的灵活性。让我们运行一个更复杂的多人会话。
- en: Multi-user session
  id: totrans-312
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多用户会话
- en: 'In this section, we will run a technical session that activates the main functions
    we have built in the previous chapters and this chapter:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将运行一个技术会话，激活我们在前几章和本章中构建的主要功能：
- en: Semantic and sentiment analysis
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语义和情感分析
- en: RAG for episodic memory retrieval
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于情节记忆检索的 RAG
- en: A dialogue without an AI conversational agent
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有AI对话代理的对话
- en: Loading, displaying, and summarizing the conversation history
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载、显示和总结对话历史
- en: If you haven’t interrupted the previous session, then simply run the *Running
    the interface section in the GenAISys IPython interface* cell again in our notebook,
    which will start a new conversation.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有中断之前的会话，那么只需在我们的笔记本中再次运行 *在 GenAISys IPython 接口运行界面部分* 单元格即可，这将启动一个新的对话。
- en: 'If you are starting from scratch, then to start the session, open `Event-driven_GenAISys_framework.ipynb`
    and run the following sections of cells:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是从零开始，那么要开始会话，请打开 `Event-driven_GenAISys_framework.ipynb` 并运行以下单元格部分：
- en: 'Setting up the environment: All the cells'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置环境：所有单元格
- en: 'Conversational agent: Contains one cell'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对话代理：包含一个单元格
- en: 'Running the interface in the GenAISys IPython interface: Will start the conversation'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 GenAISys IPython 接口运行界面：将启动对话
- en: We are ready to explore some advanced features of the GenAISys. We will highlight
    the events and functions that are activated by each prompt. The first sequence
    in the session is semantic and sentiment analysis.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 我们准备探索 GenAISys 的一些高级功能。我们将突出显示每个提示触发的事件和函数。会话的第一个序列是语义和情感分析。
- en: Semantic and sentiment analysis
  id: totrans-324
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语义和情感分析
- en: 'To perform semantic and sentiment analysis, we will need to run the following
    sequence orchestrated by the GenAISys as shown in *Figure 4.14*:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行语义和情感分析，我们需要运行 GenAISys 如 *图 4.14* 所示编排的以下序列：
- en: '**1\. User selection** is not activated because `User01` is the default user
    at the beginning of a session. We could call this user the “host” if we wish,
    depending on the use case.'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1. 用户选择** 未激活，因为 `User01` 是会话开始时的默认用户。如果我们愿意，可以根据用例称此用户为“主机”。'
- en: '`User01` enters an input at **2\. Input**triggering **3\. Agent checked**,
    which is checked as the default value when the session starts.'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`User01` 在 **2. 输入** 触发 **3. 代理检查**，这是会话开始时的默认值。'
- en: The AI conversational AI controller takes over, parses the prompt, finds the
    `Pinecone` keyword in the prompt, triggers a Pinecone query in the instruction
    scenario namespace, augments the prompt, and triggers **4\. GenAI agent**.
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AI 对话 AI 控制器接管，解析提示，在提示中找到 `Pinecone` 关键词，在指令场景命名空间中触发 Pinecone 查询，增强提示，并触发
    **4. GenAI 代理**。
- en: '**4\. GenAI agent** triggers an API call to GPT-4o and returns the response.'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**4. GenAI 代理** 触发对 GPT-4o 的 API 调用并返回响应。'
- en: '**5\. Output** triggers the updating of the display. The system is ready for
    a new input.'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**5. 输出** 触发显示的更新。系统已准备好接受新的输入。'
- en: '![Figure 4.14: The sequence of events and functions to perform semantic and
    semantic analysis](img/B32304_04_14.png)'
  id: totrans-331
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.14：执行语义和语义分析的的事件和函数序列](img/B32304_04_14.png)'
- en: 'Figure 4.14: The sequence of events and functions to perform semantic and semantic
    analysis'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14：执行语义和语义分析的的事件和函数序列
- en: 'The prompt that triggers this sequence of functions and events is as follows:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 触发此序列的函数和事件的提示如下：
- en: '[PRE61]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The generative AI controller correctly identified `Pinecone` as a trigger to
    query the instruction scenario namespace, which GPT-4o used to produce a satisfactory
    response:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 生成式 AI 控制器正确地将 `Pinecone` 识别为查询指令场景命名空间的触发器，GPT-4o 使用它来生成令人满意的响应：
- en: '[PRE62]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Note that the AI agent begins the response with `genaisys`, signaling that the
    proper namespace was queried. This is an optional quality control feature that
    is good practice to implement when developing the GenAISys.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，AI 代理以 `genaisys` 开头开始响应，这表明已查询了正确的命名空间。这是一个可选的质量控制功能，在开发 GenAISys 时实施是良好的实践。
- en: 'The prompt 2 sentiment analysis sequence represented in *Figure 4.15* is identical
    to the semantic analysis sequence with two differences:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 如 *图 4.15* 所示的提示 2 情感分析序列与语义分析序列相同，但有两个区别：
- en: The **1\. User selection** event is activated because `User02` is selected
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于 `User02` 被选中，**1. 用户选择**事件被激活。
- en: The prompt will contain an allusion to sentiment analysis
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提示将包含对情感分析的暗示。
- en: '![Figure 4.15: Task orchestration for sentiment analysis](img/B32304_04_15.png)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.15：情感分析的任务编排](img/B32304_04_15.png)'
- en: 'Figure 4.15: Task orchestration for sentiment analysis'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.15：情感分析的任务编排
- en: 'The prompt contains the `Pinecone` keyword to activate a Pinecone query and
    the word `sentiment`, which is an indicator for similarity search:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 提示包含 `Pinecone` 关键字以激活 Pinecone 查询，以及表示相似性搜索的单词“sentiment”。
- en: '[PRE63]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: We could add an explicit drop-down list for all the tasks requested, and we
    will in some cases. But in this case, we are relying on implicit keyword searches.
    The balance between explicit (choosing the task in a drop-down list, for example)
    and implicit (using a keyword or relying on the content of the prompt) should
    be decided in workshops with the users.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以为所有请求的任务添加一个明确的下拉列表，我们将在某些情况下这样做。但在这个案例中，我们依赖于隐式关键字搜索。显式（在下拉列表中选择任务等）和隐式（使用关键字或依赖于提示内容）之间的平衡应在与用户的研讨会中决定。
- en: 'In this case, the `Pinecone` keyword `genaisys` namespace is selected, and
    the output is satisfactory:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，选择了 `Pinecone` 关键字 `genaisys` 命名空间，输出令人满意：
- en: '[PRE64]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: The session continues to trigger episodic memory retrieval.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 会话继续触发情景记忆检索。
- en: RAG for episodic memory retrieval
  id: totrans-349
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: RAG 用于情景记忆检索
- en: 'The sequence for episodic memory retrieval will search the Pinecone index for
    a personal memory of the team members. The memory is related to a past meeting
    that was saved and upserted to the Pinecone index in the `data01` namespace. `User03`
    will trigger the following sequence of functions and events, as represented in
    *Figure 4.16*:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 情景记忆检索的序列将在 Pinecone 索引中搜索团队成员的个人记忆。该记忆与保存并更新到 `data01` 命名空间中的 Pinecone 索引的过去会议相关。`User03`
    将触发以下函数和事件序列，如图 4.16 所示：
- en: '**1\. User selection** is triggered independently because the user has changed.'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1. 用户选择**独立触发，因为用户已更改。'
- en: '**2\. Input** triggers the verification of **3\. Agent checked**.'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**2. 输入**触发**3. 代理检查**的验证。'
- en: '**3\. Agent checked** triggers the conversational AI agent controller, which
    in turn triggers **3.2\. RAG data** retrieval in the `data01` namespace based
    on the `RAG` keyword in the prompt.'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**3. 代理检查**触发对话式 AI 代理控制器，该控制器随后触发基于提示中的 `RAG` 关键字的 `data01` 命名空间中的**3.2. RAG
    数据**检索。'
- en: Finally, the generative AI agent, GPT-4o, runs a request with the augmented
    input and returns an output.
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，生成式 AI 代理 GPT-4o 使用增强输入运行请求并返回输出。
- en: '**4\. Output** will trigger a display update, and the system is ready for a
    new turn in the conversation.'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**4. 输出**将触发显示更新，系统准备进行对话的新一轮。'
- en: '![Figure 4.16: Episodic memory retrieval](img/B32304_04_16.png)'
  id: totrans-356
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.16：情景记忆检索](img/B32304_04_16.png)'
- en: 'Figure 4.16: Episodic memory retrieval'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.16：情景记忆检索
- en: 'The prompt clearly refers to a past event that is related to the personal experience
    of the team. The trace of this event is an episodic memory stored in the Pinecone
    index:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 提示明确指代与团队个人经历相关的历史事件。此事件的痕迹是存储在 Pinecone 索引中的情景记忆：
- en: '[PRE65]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'The agent’s response is satisfactory:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 代理的响应令人满意：
- en: '[PRE66]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: We can see that the agent correctly found the namespace and also uses the phrase
    `your CTO mentioned`, recognizing that this is an event linked to the personal
    experience of the team, not impersonal semantic data.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到代理正确找到了命名空间，并且使用了短语“你的 CTO 提到”，认识到这是一个与团队个人经历相关的事件，而不是非个人语义数据。
- en: The session continues with ideation.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 会话继续进行创意活动。
- en: Generative AI agent for ideation
  id: totrans-364
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生成式 AI 代理用于创意
- en: 'The session continues with ideation. We want to leverage the power of the generative
    AI model, GPT-4o, in this case, to give us ideas. As such, the sequence will not
    use the Pinecone index to retrieve instructions or data, as shown in *Figure 4.17*:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 会话继续进行创意活动。在这种情况下，我们希望利用生成式 AI 模型 GPT-4o 的力量，以获得想法。因此，序列将不会使用 Pinecone 索引检索指令或数据，如图
    4.17 所示：
- en: The user remains unchanged, **2\. Input** goes directly to **3\. Agent checked**.
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户保持不变，**2. 输入**直接进入**3. 代理检查**。
- en: The system then ignores the Pinecone index but takes **3.2\. User history**
    into account.
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统随后忽略 Pinecone 索引，但考虑**3.2. 用户历史**。
- en: Finally, **4\. GenAI agent** triggers the generative AI call and returns the
    output.
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，**4. GenAI 代理**触发生成式 AI 调用并返回输出。
- en: '**5\. Output** triggers the display update and the system is ready for another
    conversation turn.'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**5. 输出** 触发显示更新，系统准备进行另一轮对话。'
- en: '![Figure 4.17: GenAISys as an ideation generator](img/B32304_04_17.png)'
  id: totrans-370
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.17：GenAISys 作为创意生成器](img/B32304_04_17.png)'
- en: 'Figure 4.17: GenAISys as an ideation generator'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.17：GenAISys 作为创意生成器
- en: 'The prompt asks the AI agent for help to get some ideas:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 提示要求 AI 代理提供一些想法：
- en: '[PRE67]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'The AI agent inherits episodic memory since it refers to the CTO’s reflections
    in the conversation history and now gives its suggestions based on the history
    of the conversation:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 AI 代理继承了情景记忆，它引用了对话历史中 CTO 的反思，现在它根据对话的历史给出建议：
- en: '[PRE68]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: The GenAISys has provided ideas for the team. Now, the team wants to think these
    ideas over.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: GenAISys 为团队提供了想法。现在，团队希望仔细考虑这些想法。
- en: Dialogue without an AI conversational agent
  id: totrans-377
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 没有 AI 对话代理的对话
- en: 'The team has now had a short conversation that could have continued as long
    as they needed to. `User01` takes over and communicates directly with the team.
    The GenAISys is now used as a collaborative remote meeting tool, as shown in *Figure
    4.18*:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 团队已经进行了一次简短的对话，他们本可以继续对话直到他们需要停止。`User01` 接管并直接与团队沟通。现在，GenAISys 被用作协作远程会议工具，如图
    *图 4.18* 所示：
- en: User selection is triggered because `User01` is stepping in.
  id: totrans-379
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户选择被触发，因为 `User01` 正在介入。
- en: '`User01` unchecks the **Agent** widget.'
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`User01` 取消了 **代理** 小部件的勾选。'
- en: A message is entered, but the prompt is for other users, not the AI agent
  id: totrans-381
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入了一条消息，但提示是针对其他用户，而不是 AI 代理
- en: Then, `User01` ends the conversation, which is saved.
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，`User01` 结束对话，并将其保存。
- en: '![Figure 4.18: A dialogue without an AI agent](img/B32304_04_18.png)'
  id: totrans-383
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.18：没有 AI 代理的对话](img/B32304_04_18.png)'
- en: 'Figure 4.18: A dialogue without an AI agent'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.18：没有 AI 代理的对话
- en: '`User01` enters a message for the others:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '`User01` 为其他人输入了一条消息：'
- en: '[PRE69]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '*Figure 4.19* shows that `User01` has unchecked the AI agent to send the message
    and is now ready to end the session by entering `exit`.'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4.19* 显示 `User01` 取消了 AI 代理的勾选以发送消息，现在准备通过输入 `exit` 来结束会话。'
- en: '![Figure 4.19: The user ends the conversation](img/B32304_04_19.png)'
  id: totrans-388
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.19：用户结束对话](img/B32304_04_19.png)'
- en: 'Figure 4.19: The user ends the conversation'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.19：用户结束对话
- en: The GenAISys displays the *conversation ended* message, as shown in *Figure
    4.20*.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: GenAISys 显示了 *对话结束* 的消息，如图 *图 4.20* 所示。
- en: '![Figure 4.20: Conversation ends](img/B32304_04_20.png)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.20：对话结束](img/B32304_04_20.png)'
- en: 'Figure 4.20: Conversation ends'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.20：对话结束
- en: '![A magnifying glass on a black background  AI-generated content may be incorrect.](img/1.png)**Quick
    tip**: Need to see a high-resolution version of this image? Open this book in
    the next-gen Packt Reader or view it in the PDF/ePub copy.'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '![黑色背景上的放大镜  AI 生成的内容可能不正确。](img/1.png)**快速提示**：需要查看此图像的高分辨率版本？在下一代 Packt Reader
    中打开此书或在其 PDF/ePub 版本中查看。'
- en: '![](img/2.png)**The next-gen Packt Reader** is included for free with the purchase
    of this book. Scan the QR code OR go to [packtpub.com/unlock](http://packtpub.com/unlock),
    then use the search bar to find this book by name. Double-check the edition shown
    to make sure you get the right one.'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/2.png)**下一代 Packt Reader** 在购买本书时免费赠送。扫描二维码 OR 前往 [packtpub.com/unlock](http://packtpub.com/unlock)，然后使用搜索栏通过名称查找本书。请仔细检查显示的版本，以确保您获得正确的版本。'
- en: '![A qr code on a white background  AI-generated content may be incorrect.](img/Unlock_Code1.png)'
  id: totrans-395
  prefs: []
  type: TYPE_IMG
  zh: '![白色背景上的二维码  AI 生成的内容可能不正确。](img/Unlock_Code1.png)'
- en: The message instructs the users to proceed to the next cell to display and summarize
    the conversation.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 消息指示用户继续到下一个单元格以显示和总结对话。
- en: Loading, displaying, and summarizing the conversation
  id: totrans-397
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加载、显示和总结对话
- en: The display and summarization of a conversation will be integrated into the
    functions of the GenAISys framework in [*Chapter 5*](Chapter_5.xhtml#_idTextAnchor140),
    *Adding Multimodal, Multifunctional Reasoning with Chain of Thought*.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 对话的显示和总结将集成到 GenAISys 框架的 *第 5 章* 功能中，*通过思维链添加多模态、多功能推理*。
- en: In this notebook, we will proceed to the next cells as described in the *A session
    with two users* section.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 在本笔记本中，我们将按照 *与两位用户会话* 部分所述继续进行下一单元格。
- en: 'The output of the display function provides Markdown text of the conversation:'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 显示函数的输出提供了对话的 Markdown 文本：
- en: '[PRE70]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: We built the fundamental structure of the GenAISys framework we will be enhancing
    throughout the next chapters. We also ran some basic conversations. Let’s summarize
    this chapter and move up to the next level.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 我们构建了将在下一章中增强的GenAISys框架的基本结构。我们还进行了一些基本的对话。让我们总结本章，并提升到下一个层次。
- en: Summary
  id: totrans-403
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: A complex, event-driven, fast-moving economy requires powerful automation for
    the hundreds of tasks generated by just-in-time consumer needs. A GenAISys can
    satisfy those requirements with a responsive interface and generative AI capabilities.
    The challenge is providing a dynamic, intuitive system. No matter how generative
    AI automates tasks—and they can be tremendously automated—the final decisions
    will be made by humans. Humans need to communicate in meetings, whether they are
    organized physically or online. The challenge then evolves to provide an organization
    with multi-user GenAISys.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 一个复杂、事件驱动、快速发展的经济体需要强大的自动化来处理即时消费者需求产生的数百个任务。GenAISys可以通过响应式界面和生成式AI能力来满足这些需求。挑战在于提供一个动态、直观的系统。无论生成式AI如何自动化任务——它们可以非常自动化——最终的决定将由人类做出。人类需要在会议中沟通，无论这些会议是物理组织还是在线组织。挑战随后转变为向组织提供多用户GenAISys。
- en: In this chapter, we first explored a high-level framework to build multi-user,
    multi-turn, multifunctional, and RAG features. The framework includes real-time
    memory features and long-term knowledge stored in a vector store. The overall
    ChatGPT-like system requires a response interface and conversational agent that
    we will enhance in the following chapters.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先探索了一个高级框架来构建多用户、多轮次、多功能和RAG功能。该框架包括实时记忆功能和存储在向量存储中的长期知识。整体上，类似于ChatGPT的系统需要一个我们将增强的响应界面和对话代理。
- en: We then build an event-driven GenAISys response interface with IPython. The
    interface was seamless for an end user who can use the system with three widgets.
    The first widget managed the users’ input, the second one the active user, and
    the third an agent checkbox to activate or deactivate the AI conversational agent
    built with GPT-4o.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 我们随后使用IPython构建了一个事件驱动的GenAISys响应界面。对于最终用户来说，这个界面是无缝的，他们可以使用三个小部件来使用系统。第一个小部件管理用户的输入，第二个小部件是活跃用户，第三个小部件是一个代理复选框，用于激活或停用使用GPT-4o构建的AI对话代理。
- en: Finally, we ran a multi-user, multi-turn GenAISys session centered on traveling
    for an online travel agency team. The first goal was to run a seamless GenAISys
    for the users with three widgets. The second goal was to explore the scope of
    short-term, long-term, semantic, and episodic memory. The third goal was to run
    RAG to retrieve instructions and data. Finally, the goal was to let the users
    communicate with or without the AI agent. We concluded the session by saving and
    summarizing it.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们为在线旅行社团队进行了一次多用户、多轮次的GenAISys会话，主题是旅行。第一个目标是运行一个无缝的GenAISys，为用户提供三个小部件。第二个目标是探索短期、长期、语义和情景记忆的范围。第三个目标是运行RAG来检索指令和数据。最后，目标是让用户能够与或没有AI代理进行交流。我们通过保存和总结会话来结束这次会话。
- en: We now have a framework that we can configure and enhance in the following chapters,
    starting by adding multimodal functions and external extensions to the GenAISys
    in [*Chapter 5*](Chapter_5.xhtml#_idTextAnchor140), *Adding Multimodal, Multifunctional
    Reasoning with Chain of Thought*.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有一个框架，我们可以在接下来的章节中进行配置和增强，首先是在[*第五章*](Chapter_5.xhtml#_idTextAnchor140)中添加多模态功能和外部扩展到GenAISys，即《通过思维链添加多模态、多功能推理》。
- en: Questions
  id: totrans-409
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: The interface of a GenAISys must be seamless for the users. (True or False)
  id: totrans-410
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GenAISys的界面必须对用户无缝。（对或错）
- en: IPython is the only tool available to build a GenAISys interface. (True or False)
  id: totrans-411
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IPython是构建GenAISys界面的唯一工具。（对或错）
- en: The AI conversational AI agent built with GPT-4o must be enhanced with RAG.
    (True or False).
  id: totrans-412
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用GPT-4o构建的AI对话代理必须通过RAG进行增强。（对或错）。
- en: GPT-4o can provide sufficient information and perform tasks quite well. (True
    or False)
  id: totrans-413
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GPT-4o可以提供足够的信息并很好地完成任务。（对或错）
- en: Pinecone can be used to retrieve instruction scenarios. (True or False)
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Pinecone可以用于检索指令场景。（对或错）
- en: A namespace is only for data in Pinecone. (True or False)
  id: totrans-415
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命名空间仅用于Pinecone中的数据。（对或错）
- en: A vector store such as Pinecone is a good way to store episodic memory. (True
    or False)
  id: totrans-416
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向量存储如Pinecone是存储情景记忆的好方法。（对或错）
- en: We don’t need an agent checkbox option. (True or False)
  id: totrans-417
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们不需要代理复选框选项。（对或错）
- en: Querying Pinecone is done by the user in a GenAISys. (True or False)
  id: totrans-418
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在GenAISys中，查询Pinecone是由用户完成的。（对或错）
- en: GenAISys is a complex system that should be seamless for the user. (True or
    False)
  id: totrans-419
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GenAISys 是一个对用户来说应该无缝对接的复杂系统。（对或错）
- en: References
  id: totrans-420
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'IPython documentation: [https://ipython.org/](https://ipython.org/)'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IPython 文档：[https://ipython.org/](https://ipython.org/)
- en: 'OpenAI multi-turn conversations: [https://platform.openai.com/docs/guides/audio/multi-turn-conversations/](https://platform.openai.com/docs/guides/audio/multi-turn-conversations/)'
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI 多轮对话：[https://platform.openai.com/docs/guides/audio/multi-turn-conversations/](https://platform.openai.com/docs/guides/audio/multi-turn-conversations/)
- en: 'Google Colab functionality: [https://colab.research.google.com/](https://colab.research.google.com/)'
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Colab 功能：[https://colab.research.google.com/](https://colab.research.google.com/)
- en: Further reading
  id: totrans-424
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Liu, J., Tan, Y. K., Fu, B., & Lim, K. H. (n.d.). *Balancing accuracy and efficiency
    in multi-turn intent classification for LLM-powered dialog systems in production*:
    [https://arxiv.org/abs/2411.12307](https://arxiv.org/abs/2411.12307)'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 刘，J.，谭，Y. K.，傅，B.，与林，K. H.（n.d.）.*在生成式对话系统中平衡多轮意图分类的准确性和效率：针对 LLM 的生产系统*：[https://arxiv.org/abs/2411.12307](https://arxiv.org/abs/2411.12307)
- en: Subscribe for a Free eBook
  id: totrans-426
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 免费电子书订阅
- en: New frameworks, evolving architectures, research drops, production breakdowns—*AI_Distilled*
    filters the noise into a weekly briefing for engineers and researchers working
    hands-on with LLMs and GenAI systems. Subscribe now and receive a free eBook,
    along with weekly insights that help you stay focused and informed.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 新框架、演进的架构、研究更新、生产分析——*AI_Distilled* 将噪音过滤成每周简报，供实际操作 LLM 和 GenAI 系统的工程师和研究人员阅读。现在订阅，即可获得免费电子书，以及每周的洞察力，帮助您保持专注并获取信息。
- en: Subscribe at [https://packt.link/TRO5B](Chapter_4.xhtml) or scan the QR code
    below.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [https://packt.link/TRO5B](Chapter_4.xhtml) 订阅或扫描下面的二维码。
- en: '![](img/Newsletter_QR_Code1.png)'
  id: totrans-429
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Newsletter_QR_Code1.png)'
