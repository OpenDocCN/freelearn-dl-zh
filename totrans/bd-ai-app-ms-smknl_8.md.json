["```py\nI want it to be only about the canonical works by Arthur Conan Doyle, but I want it to be helpful for high school students that are trying to understand it better - the influence of the works in modern media and the context in which the work was written.\n```", "```py\nWhen providing answers about the books, I want the gpt to base the answers on the files I have uploaded and quote passages found in them.\nDo not answer any questions that are not related to the Sherlock Holmes' books. If a user asks questions about other topics, answer that this is not your area of expertise.\n```", "```py\nHolmes' attic theory, a metaphorical description of how one should manage their mental storage, emphasizes the importance of selective knowledge acquisition. In \"A Study in Scarlet,\" Holmes explains that he considers the brain to be like a little empty attic, which one must carefully furnish with only the tools that may aid one's work. He argues against cluttering the mind with irrelevant information, suggesting that such clutter can push out or obscure useful knowledge. According to Holmes, it is crucial to maintain a well-organized and selective collection of knowledge to ensure that one's mental capacity is efficiently utilized for one's purposes.\nThis theory sheds light on Holmes' approach to his detective work, where he values relevant, useful knowledge over a broad but shallow pool of information. It also underlines his practical view of intelligence, emphasizing application over accumulation. This perspective is central to understanding Holmes' character and his methods of deduction, which rely on connecting seemingly disparate facts stored neatly in his mental \"attic\" to solve complex cases.\n```", "```py\nYou are designed to assist users with specific home automation tasks through a web API, focusing on operating the garage door and turning lights on and off. If users inquire about functionalities outside these areas, you inform them that those actions are not supported. When you need more information to provide accurate assistance, you will ask for clarification directly. You strive to personalize your responses to fit users' specific contexts and ensure clarity in your explanations. Your interactions are professional and straightforward, aiming for clarity and efficiency in communication.\nYou only work with the SKB custom API and no other vendors. If a user asks about information about other vendors of home automation, say that you can't help them.\n```", "```py\nTo open your garage door using the SKB Home Automation API, you would typically send a command through a web request. The specific details can depend on how your system is set up, but here's a general example of how you might do it:\n1\\. Ensure Your Device is Connected: Make sure your smartphone or computer is connected to the internet and can communicate with your home network where your garage door is connected.\n2\\. Use the Right Endpoint: The SKB API will have a specific endpoint for operating the garage door. This is often something like /api/garage_door/open, but you should refer to the SKB API documentation for the exact endpoint.\n3\\. Send the Request: You can use various tools or a piece of code to send the request. If you're comfortable with command line tools, you might use curl in a terminal or command prompt like this:\n   curl -X POST \"http://yourhomeip:port/api/garage_door/open\" -H \"Authorization: Bearer YOUR_API_TOKEN\"\n   Replace yourhomeip:port with the IP address and port number of your SKB Home Automation system, and YOUR_API_TOKEN with your personal API token for authentication.\n4\\. Check the Response: After sending the request, you should receive a response from the API. A successful response usually includes a message indicating that the command was received and the action (opening the garage door) is in progress or completed. If there's an error, the response will typically contain details to help troubleshoot the issue.\nIf you haven't set up your API token or aren't sure about the endpoint or how to send the request, let me know what step you're on, and I can provide more detailed instructions!\n```", "```py\nimport semantic_kernel as sk\nfrom typing import Annotated\nfrom semantic_kernel.functions.kernel_function_decorator import kernel_function\nclass HomeAutomation:\n    def __init__(self):\n        pass\n    @kernel_function(\n        description=\"Turns the lights of the living room, kitchen, bedroom or garage on or off.\",\n        name=\"OperateLight\",\n    )\n    def OperateLight(self,\n    location: Annotated[str, \"The location where the lights are to be turned on or off. Must be either 'living room', 'kitchen', 'bedroom' or 'garage'\"],\n    action: Annotated[str, \"Whether to turn the lights on or off\"]) -> Annotated[str,  \"The output is a string describing whether the lights were turned on or off\" ]:\n        if location in [\"kitchen\", \"living room\", \"bedroom\", \"garage\"]:\n            result = f\"Changed status of the {location} lights to {action}.\"\n            return result\n        else:\n            error = f\"Invalid location {location} specified.\"\n            return error\n    @kernel_function(\n        description=\"Opens or closes the garage door.\",\n        name=\"OperateGarageDoor\",\n    )\n    def OperateGarageDoor(self,\n            action:  Annotated[str, \"Whether to open or close the garage door\"]) -> Annotated[str, \"The output is a string describing whether the garage door was opened or closed\" ]:\n        result = f\"Changed the status of the garage door to {action}.\"\n        return result\n```", "```py\nfrom flask import Flask, render_template, request, jsonify\nfrom dotenv import load_dotenv\nfrom semantic_kernel.connectors.ai.open_ai import OpenAIChatCompletion\nimport semantic_kernel as sk\nfrom HomeAutomation import HomeAutomation\napp = Flask(__name__)\napp.secret_key = b'skb_2024'\n```", "```py\n@app.route('/operate_light', methods=['POST'])\nasync def operate_light():\n    kernel = sk.Kernel()\n    api_key, org_id = sk.openai_settings_from_dot_env()\n    gpt4 = OpenAIChatCompletion(\"gpt-4-turbo-preview\", api_key, org_id)\n    kernel.add_service(gpt4)\n    kernel.import_plugin_from_object(HomeAutomation(), \"HomeAutomation\")\n    data = request.get_json()\n    location = data['location']\n    action = data['action']\n    result = str(kernel.invoke(kernel.plugins[\"HomeAutomation\"][\"OperateLight\"], location=location, action=action))\n    return jsonify({'result': result})\n@app.route('/operate_garage_door', methods=['POST'])\nasync def operate_garage_door():\n    kernel = sk.Kernel()\n    api_key, org_id = sk.openai_settings_from_dot_env()\n    gpt4 = OpenAIChatCompletion(\"gpt-4-turbo-preview\", api_key, org_id)\n    kernel.add_service(gpt4)\n    kernel.import_plugin_from_object(HomeAutomation(), \"HomeAutomation\")\n    data = request.get_json()\n    action = data['action']\n    result = str(kernel.invoke(kernel.plugins[\"HomeAutomation\"][\"OperateGarageDoor\"], action=action))\n    return jsonify({'result': result})\n```", "```py\nif __name__ == '__main__':\n    app.run()\n```", "```py\nflask run\n```", "```py\n* Debug mode: off\nWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\n * Running on http://127.0.0.1:5000\n```", "```py\nInvoke-RestMethod -Uri http://localhost:5000/operate_light -Method Post -ContentType \"application/json\" -Body '{\"action\": \"on\", \"location\": \"bedroom\"}'\n```", "```py\nResult\n------\nChanged status of the bedroom lights to on.\n```", "```py\ndotnet new webapi --use-controllers -o SkHomeAutomation\n```", "```py\ndotnet add package Microsoft.SemanticKernel\n```", "```py\nnamespace SkHomeAutomation;\n```", "```py\nusing Microsoft.AspNetCore.Mvc;\nnamespace SkHomeAutomation.Controllers;\nusing Microsoft.Extensions.Logging;\npublic class LightOperationData\n{\n    public string? location { get; set; }\n    public string? action { get; set; }\n}\npublic class GarageOperationData\n{\n    public string? action { get; set; }\n}\n[ApiController]\n[Route(\"[controller]\")]\npublic class HomeAutomationController : ControllerBase\n{\n    private readonly ILogger<HomeAutomationController>? _logger;\n    private HomeAutomation ha;\n    public HomeAutomationController(ILogger<HomeAutomationController> logger)\n    {\n        _logger = logger;\n        ha = new HomeAutomation();\n    }\n    [HttpPost(\"operate_light\")]\n    public IActionResult OperateLight([FromBody] LightOperationData data)\n    {\n        if (data.location == null || data.action == null)\n        {\n            return BadRequest(\"Location and action must be provided\");\n        }\n        return Ok( ha.OperateLight(data.action, data.location) );\n    }\n    [HttpPost(\"operate_garage_door\")]\n    public IActionResult OperateGarageDoor([FromBody] GarageOperationData data)\n    {\n        if (data.action == null)\n        {\n            return BadRequest(\"Action must be provided\");\n        }\n        return Ok( ha.OperateGarageDoor(data.action) );\n    }\n}\n```", "```py\nInvoke-RestMethod -Uri https://skb-home-automation.azurewebsites.net/operate_light -Method Post -ContentType \"application/json\" -Body '{\"action\": \"on\", \"location\": \"bedroom\"}'\n```", "```py\nResult\n------\nChanged status of the bedroom lights to on.\n```", "```py\nopenapi: 3.0.0\ninfo:\n  title: Home Automation API\n  description: This API allows controlling lights and garage doors in a home automation system.\n  version: 1.0.0\nservers:\n  - url: http://yourserver.com\n    description: Main server\npaths:\n  /operate_light:\n    post:\n      operationId: operateLight\n      summary: Controls a light in the home automation system.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - location\n                - action\n              properties:\n                location:\n                  type: string\n                  description: The location of the light to be controlled.\n                action:\n                  type: string\n                  description: The action to be performed on the light.\n                  enum:\n                    - turnOn\n                    - turnOff\n                    - toggle\n      responses:\n        '200':\n          description: Operation result\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: string\n                    description: The result of the light operation.\n  /operate_garage_door:\n    post:\n      operationId: operateGarageDoor\n      summary: Controls the garage door in the home automation system.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - action\n              properties:\n                action:\n                  type: string\n                  description: The action to be performed on the garage door.\n                  enum:\n                    - open\n                    - close\n                    - stop\n      responses:\n        '200':\n          description: Operation result\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: string\n                    description: The result of the garage door operation.\n```", "```py\nopenapi: 3.0.0\ninfo:\n  title: Home Automation API\n  description: This API allows controlling lights and garage doors in a home automation system.\n  version: 1.0.0\nservers:\n  - url: https://skb-home-automation.azurewebsites.net\n    description: Main server\npaths:\n  /operate_light:\n    post:\n      operationId: operateLight\n      summary: Controls a light in the home automation system.\n      x-openai-isConsequential: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - location\n                - action\n              properties:\n                location:\n                  type: string\n                  description: The location of the light to be controlled.\n                  enum:\n                    - \"kitchen\"\n                    - \"living room\"\n                    - \"bedroom\"\n                    - \"garage\"\n                action:\n                  type: string\n                  description: The action to be performed on the light.\n                  enum:\n                    - \"on\"\n                    - \"off\"\n      responses:\n        '200':\n          description: Operation result\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: string\n                    description: The result of the light operation.\n  /operate_garage_door:\n    post:\n      operationId: operateGarageDoor\n      summary: Controls the garage door in the home automation system.\n      x-openai-isConsequential: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - action\n              properties:\n                action:\n                  type: string\n                  description: The action to be performed on the garage door.\n                  enum:\n                    - \"open\"\n                    - \"close\"\n      responses:\n        '200':\n          description: Operation result\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: string\n                    description: The result of the garage door operation.\n```", "```py\n2024-04-08T05:16:27.968713802Z: [INFO]  Changed the status of the garage door to close.\n2024-04-08T05:16:30.939181143Z: [INFO]  Changed status of the kitchen lights to off.\n2024-04-08T05:16:33.701639742Z: [INFO]  Changed status of the living room lights to off.\n2024-04-08T05:16:36.377148658Z: [INFO]  Changed status of the bedroom lights to off.\n2024-04-08T05:16:39.017400267Z: [INFO]  Changed status of the garage lights to off.\n```"]