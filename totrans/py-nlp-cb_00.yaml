- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Python is the most widely used language for **natural language processing**
    (**NLP**) thanks to its extensive tools and libraries for analyzing text and extracting
    computer-usable data. This book will take you through a range of techniques for
    text processing, from basics such as parsing parts of speech to complex topics
    such as topic modeling, text classification, and visualization.
  prefs: []
  type: TYPE_NORMAL
- en: Starting with an overview of NLP, the book presents recipes for dividing text
    into sentences, stemming and lemmatization, removing stopwords, and parts-of-speech
    tagging to help you to prepare your data. You will then learn about ways of extracting
    and representing grammatical information, such as dependency parsing and anaphora
    resolution; discover different ways of representing the semantics using bag of
    words, TF-IDF, word embeddings, and BERT; and develop skills for text classification
    using keywords, SVMs, LSTMs, and other techniques.
  prefs: []
  type: TYPE_NORMAL
- en: As you advance, you will also see how to extract information from text, implement
    unsupervised and supervised techniques for topic modeling, and perform topic modeling
    of short texts, such as tweets. Additionally, the book covers visualizations of
    text data.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, this book introduces Transformer-based models and how to utilize them
    to perform another set of novel NLP tasks. These encoder-decoder-based models
    are deep neural-network-based models and have been trained on large text corpora.
    These models have performed or exceeded the state of the art on various NLP tasks.
    Especially novel are the decoder-based generative models, which have the capability
    to generate text based on the context provided to them. Some of these models have
    reasoning capabilities built into them. These models will take NLP into the next
    era and make it a part of mainstream technology applications.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this NLP book, you will have developed the skills to use a powerful
    set of tools for text processing.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data scientists, machine learning engineers, and developers familiar with basic
    programming and data science concepts can gain practical insights from this book.
    It serves as a primer to introduce the concepts of NLP and their practical applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'The roles that are the target of this book are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data scientists**: As a data scientist, you will gain an understanding of
    how to work with text. Intermediate knowledge of Python will help you to get the
    most out of this book. If you are already an NLP practitioner, this book will
    serve as a code reference when working on your projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Software engineers and architects**: Developers who want to build capability
    in the domain of NLP will be introduced to all the fundamental and advanced uses
    of NLP in text processing. This will help you level up on your knowledge and build
    yourself up to develop solutions using NLP when required.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Product managers**: Though this book contains code examples for the recipes,
    each of these recipes is accompanied by explanations of why certain steps are
    being performed and what the end output for those steps is. This makes it a useful
    resource for product managers who want to understand what is possible with a certain
    NLP recipe, which would enable them to envision novel solutions using it.'
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B18411_01.xhtml#_idTextAnchor013), *Learning NLP Basics*, introduces
    the very basics of NLP. The recipes in this chapter show the basic preprocessing
    steps that are required for further NLP work. We show how to tokenize text, or
    divide it into sentences and words; assign parts of speech to individual words;
    lemmatize them, or get their canonical forms; and remove stopwords.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B18411_02.xhtml#_idTextAnchor042), *Playing with Grammar*, shows
    how to get grammatical information from text. This information could be useful
    in determining relationships between different entities mentioned in the text.
    We start by showing how to determine whether a noun is singular or plural. We
    then show how to get a dependency parse that shows relationships between words
    in a sentence. Then, we demonstrate how to get noun chunks, or nouns with their
    dependent words, such as adjectives. After that, we look at parsing out the subjects
    and objects of a sentence. Finally, we show how to use a regular-expression-style
    matcher to extract grammatical phrases in a sentence.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B18411_03.xhtml#_idTextAnchor067), *Representing Text – Capturing
    Semantics*, looks at different ways of representing text for further processing
    in NLP models. Since computers cannot deal with words directly, we need to encode
    them in vector form. In order to demonstrate the effectiveness of different methods
    of encoding, we first create a simple classifier and then use it with different
    encoding methods. We look at the following encoding methods: bag-of-words, N-gram
    model, TF-IDF, word embeddings, BERT, and OpenAI embeddings. We also show how
    to train your own bag-of-words model and demonstrate how to create a simple **retrieval-augmented
    generation** (**RAG**) solution.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B18411_04.xhtml#_idTextAnchor106), *Classifying Texts*, shows
    various ways of carrying out text classification, one of the most common NLP tasks.
    First, we show how to preprocess the dataset in order to prepare it for classification.
    Then, we demonstrate different classifiers, including a rule-based classifier,
    an unsupervised classifier via K-means, training an SVM for classification, training
    a spaCy model for text classification, and, finally, using OpenAI GPT models to
    classify texts.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B18411_05.xhtml#_idTextAnchor128), *Getting Started with Information
    Extraction*, shows how to extract information from text, another very important
    NLP task. We start off with using regular expressions for simple information extraction.
    We then look at how to use the Levenshtein distance to handle misspellings. Then,
    we show how to extract characteristic keywords from different texts. We look at
    how to extract named entities using spaCy, and how to train your own custom spaCy
    NER model. Finally, we show how to fine-tune a BERT NER model.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B18411_06.xhtml#_idTextAnchor156), *Topic Modeling*, shows how
    to determine topics of text using various unsupervised methods, including LDA,
    community detection with BERT embeddings, K-means clustering, and BERTopic. Finally,
    we use contextualized topic models that work with multilingual models and inputs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B18411_07.xhtml#_idTextAnchor177), *Visualizing Text Data*, focuses
    on using various tools to create informative visualizations of text data and processing.
    We create graphic representations of the dependency parse, parts of speech, and
    named entities. We also create a confusion matrix plot and word clouds. Finally,
    we use pyLDAvis and BERTopic to visualize topics in a text.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B18411_08.xhtml#_idTextAnchor205), *Transformers and Their Applications*,
    provides an introduction to Transformers. This chapter begins by demonstrating
    how to transform text into a format suitable for internal processing by a Transformer
    model. It then explores techniques for text classification using pre-trained Transformer
    models. Additionally, the chapter delves into text generation with Transformers,
    explaining how to tweak the generation parameters to produce coherent and natural-sounding
    text. Finally, it covers the application of Transformers in language translation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B18411_09.xhtml#_idTextAnchor231), *Natural Language Understanding*,
    covers NLP techniques that help infer the information contained in a piece of
    text. This chapter begins with a discussion on question-answering in both open
    and closed domains, followed by methods for answering questions from document
    sources using extractive and abstractive approaches. Subsequent sections cover
    text summarization and sentence entailment. The chapter concludes with explainability
    techniques, which demonstrate how models make classification decisions and how
    different parts of the text contribute to the assigned class labels.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B18411_10.xhtml#_idTextAnchor277), *Generative AI and Large
    Language Models*, introduces open source **Large Language Models** (**LLMs**)
    such as Mistral and Llama, demonstrating how to use prompts to generate text based
    on simple human-defined requirements. It further explores techniques for generating
    Python code and SQL statements from natural language instructions. Finally, it
    presents methods for utilizing a sophisticated closed source LLM from OpenAI to
    orchestrate custom task agents. These agents collaborate to answer complex questions
    requiring web searches and basic arithmetic to arrive at an end solution.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You will need an understanding of the Python programming language and how to
    manage and install packages for it. Knowledge of Jupyter Notebook would be useful,
    though it is not required. For package management, the knowledge of `poetry` package
    management is recommended, though you can make the examples work via `pip` too.
    For recipes to be able to use GPUs (if present) in the system, ensure that the
    latest GPU device drivers are installed along with the CUDA/cuDNN dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Software/hardware covered in** **the book** | **Operating** **system requirements**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Python 3.10 | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '| Poetry | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '| Jupyter Notebook (optional) | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Python-Natural-Language-Processing-Cookbook-Second-Edition](https://github.com/PacktPublishing/Python-Natural-Language-Processing-Cookbook-Second-Edition).
    If there is an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are several text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and *Twitter/X*
    handles. Here is an example: “Instantiate a tokenizer of the `bert-base-cased`
    type.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “Select **System info** from the **Administration** panel.”'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share Your Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Python Natural Language Processing Cookbook*, we’d love to
    hear your thoughts! Please [click here to go straight to the Amazon review page](https://packt.link/r/1-803-24574-3)
    for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  prefs: []
  type: TYPE_NORMAL
- en: Is your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18411_QR_Free_PDF.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[https://packt.link/free-ebook/978-1-80324-574-4](https://packt.link/free-ebook/978-1-80324-574-4)'
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
