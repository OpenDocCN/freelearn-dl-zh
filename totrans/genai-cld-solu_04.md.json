["```py\nimport openai\nopenai.api_type = \"azure\"\nopenai.api_key = YOUR_API_KEY\nopenai.api_base = \"https://YOUR_RESOURCE_NAME.openai.azure.com\"\nopenai.api_version = \"YYYY-MM-DD\"  ##Replace with latest version\nresponse = openai.Embedding.create (\n    input=\"Your text string goes here\",\n    engine=\"YOUR_DEPLOYMENT_NAME\"\n)\nembeddings = response['data'][0]['embedding']\nprint(embeddings)\n```", "```py\nimport os\nimport openai\nopenai.api_type = \"azure\"\nopenai.api_base = \"https://ak-deployment-3.openai.azure.com/\"\nopenai.api_version = \"2023-07-01-preview\" \n##replace \"2023-07-01-preview\" with latest version\nopenai.api_key = \"xxxxxxxxxxxxxxxxxxxxxxx\"\ndef get_embedding(text, model=\"text-embedding-ada-002\"):\n    return openai.Embedding.create(engine=model, input=[text], \\\n        model=model)['data'][0]['embedding']\nembedding1 = get_embedding(\"What number of countries do you know?\", \\\n    model='text-embedding-ada-002')\nembedding2 = get_embedding(\"How many countries are you familiar \\\n    with?\", model='text-embedding-ada-002')\nembedding1_np = np.array(embedding1)\nembedding2_np = np.array(embedding2)\nsimilarity = cosine_similarity([embedding1_np], [embedding2_np])\nprint(similarity)\n# [[0.95523639]]\n```", "```py\ntext = \"Ladies and Gentlemen, esteemed colleagues, and honored \\guests. Esteemed leaders and distinguished members of the \\community. Esteemed judges and advisors. My fellow citizens. Last \\year, unprecedented challenges divided us. This year, we stand \\united, ready to move forward together\"\nfrom langchain.text_splitter import TokenTextSplitter\ntext_splitter = TokenTextSplitter(chunk_size=20, chunk_overlap=5)\ntexts = text_splitter.split_text(text)\nprint(texts)\n```", "```py\n['Ladies and Gentlemen, esteemed colleagues, and honored guests. Esteemed leaders and distinguished members', 'emed leaders and distinguished members of the community. Esteemed judges and advisors. My fellow citizens.', '. My fellow citizens. Last year, unprecedented challenges divided us. This year, we stand united,', ', we stand united, ready to move forward together']\n```", "```py\nfrom langchain.text_splitter import (\n    RecursiveCharacterTextSplitter,\n    Language,\n)\nPYTHON_CODE = \"\"\"\nclass SimpleCalculator:\n    def add(self, a, b):\n        return a + b\n    def subtract(self, a, b):\n        return a - b\n# Using the SimpleCalculator\ncalculator = SimpleCalculator()\nsum_result = calculator.add(5, 3)\ndiff_result = calculator.subtract(5, 3)\n\"\"\"\npython_splitter = RecursiveCharacterTextSplitter.from_language(\n    language=Language.PYTHON, chunk_size=50, chunk_overlap=0\n)\npython_docs = python_splitter.create_documents([PYTHON_CODE])\npython_docs\n```", "```py\n[Document(page_content='class SimpleCalculator:\\n    def add(self, a,                                                              b):'),\n Document(page_content='return a + b'),\n Document(page_content='def subtract(self, a, b):'),\n Document(page_content='return a - b'),\n Document(page_content='# Using the SimpleCalculator'),\n Document(page_content='calculator = SimpleCalculator()'),\n Document(page_content='sum_result = calculator.add(5, 3)'),\n Document(page_content='diff_result = calculator.subtract(5, 3)')]\n```"]