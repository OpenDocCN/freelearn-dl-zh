["```py\n>>> from sklearn.preprocessing import StandardScaler\n>>> data = [[0, 0], [0, 0], [1, 1], [1, 1]]\n>>> scaler = StandardScaler()\n>>> print(scaler.fit(data))\nStandardScaler(copy=True, with_mean=True, with_std=True)\n>>> print(scaler.mean_)\n[0.5 0.5]\n>>> print(scaler.transform(data))\n[[-1\\. -1.]\n [-1\\. -1.]\n [ 1\\. 1.]\n [ 1\\. 1.]]\n```", "```py\n>>> import sklearn.preprocessing\n>>> X_train = np.array([[ 1., -1., 2.],\n... [ 2., 0., 0.],\n... [ 0., 1., -1.]])\n...\n>>> min_max_scaler = preprocessing.MinMaxScaler()\n>>> X_train_minmax = min_max_scaler.fit_transform(X_train)\n>>> X_train_minmax\narray([[0.5 , 0\\. , 1\\. ],\n       [1\\. , 0.5 , 0.33333333],\n       [0\\. , 1\\. , 0\\. ]])\n```", "```py\n>>> import sklearn.preprocessing\n>>> X = [[ 1., -1., 2.],\n... [ 2., 0., 0.],\n... [ 0., 1., -1.]]\n>>> X_normalized = preprocessing.normalize(X, norm='l2')\n>>> X_normalized \narray([[ 0.40..., -0.40..., 0.81...],\n       [ 1\\. ..., 0\\. ..., 0\\. ...],\n       [ 0\\. ..., 0.70..., -0.70...]])\n```", "```py\n$ conda create --name <name>\n$ conda activate <name>\n```", "```py\n$ conda create --name <name> python=3.5\n```"]