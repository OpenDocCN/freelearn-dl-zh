- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Recognizing the Power of Design in ChatGPT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you only like to play with ChatGPT, this book is not for you. Read on to
    make a quality user experience for customers by incorporating ChatGPT or various
    alternative language models that span the gamut of cost, quality, and expertise.
    Every new technology has too many people jumping on the bandwagon only to abandon
    it with failure. It is widespread. Why? Because they don’t know what they don’t
    know. But we know what it takes to make successful ChatGPT solutions for the enterprise.
    We will take you from zero to hero in your organization. Do you want poor-quality
    interactions or targeted, intelligent results that resonate with customers? Should
    they feel empowered and able to explore further with the confidence that they
    are understood? If it is the latter, this book will focus on user experience design
    methods, practices, and tools to help decide what to do, design the most effective
    solutions, and verify that they do what they should do. We can apply user interface
    practices to the ChatGPT life cycle, leaving you confident to create quality solutions.
  prefs: []
  type: TYPE_NORMAL
- en: This book is intended for designers or design-related professionals, such as
    product managers, product owners, writers, linguists, or developers, who want
    to understand how to apply design principles and practices to improve the generative
    AI experience of customers and employees. For those exposed to design methodologies,
    they won’t be novel, but their application will be. For those with limited exposure
    to the science of **user experience** (**UX**) design (or UXD), we will provide
    enough learning to make you dangerous and help create enterprise-grade ChatGPT
    solutions.
  prefs: []
  type: TYPE_NORMAL
- en: You might have yet to work with generative AI products such as ChatGPT in a
    production way, maybe only using some of these tools at home or to supplement
    work. We will only get into some of the explanations of how ChatGPT works in [*Chapter
    6*](B21964_06_split_000.xhtml#_idTextAnchor134), *Gathering Data – Content is
    King* as we have some ground to cover first. The book follows a typical design.
    First, we help figure out what to do, prioritize that work, then how to do it,
    and finally, how to interpret and improve on what was done. We have found the
    design skills and tips in this book to work for a wide range of design challenges,
    and through our experience in the last seven years with AI solutions and 30 years
    of UXD, we have adapted those insights to the creation of generative AI solutions.
    Following design processes will help one craft high-quality solutions driven by
    ChatGPT.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Traversing the history of conversational AI
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Appreciating the importance of UX design
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the science and art of UX design
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up a customized model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are two ways to work with this book: follow along and learn the principles
    and practices and use one of the OpenAI playgrounds, which is typically a *no-code*
    approach, or use the APIs provided by ChatGPT.'
  prefs: []
  type: TYPE_NORMAL
- en: We have examples in our book’s GitHub repository. If this is your first time
    using GitHub, it is a place where we will store any materials needed to download
    to complete the examples in the book. It is an online folder of resources.
  prefs: []
  type: TYPE_NORMAL
- en: 'GitHub: [Repository for book materials](https://github.com/PacktPublishing/UX-for-Enterprise-ChatGPT-Solutions/)
    ([https://github.com/PacktPublishing/UX-for-Enterprise-ChatGPT-Solutions/](https://github.com/PacktPublishing/UX-for-Enterprise-ChatGPT-Solutions/))'
  prefs: []
  type: TYPE_NORMAL
- en: GitHub is the repository for all files from the book. Click the download button,
    highlighted in *Figure 1**.1*, to download the file to the desktop. There is no
    viewer for most of the files on the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21964_010_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.1 – How to download a file from GitHub
  prefs: []
  type: TYPE_NORMAL
- en: Make sure you have a ChatGPT account.
  prefs: []
  type: TYPE_NORMAL
- en: 'Website: [OpenAI Chat](https://chat.openai.com/) ([https://chat.openai.com/](https://chat.openai.com/))'
  prefs: []
  type: TYPE_NORMAL
- en: That is easy; everyone should have that. We will try out some of the material
    as we go. This will also allow us to use the Playground, essential for some demos.
    We have a QR code at the end of each chapter, so all of the references we provide,
    such as the preceding links, are available online for easier access.
  prefs: []
  type: TYPE_NORMAL
- en: Approach 1 – The no-code approach
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can learn about 80% of this material by just reading, but some folks do
    better by doing. If you go this way, focus on the design practices and methods
    and learn how to apply those to any generative AI solution. We will give demos
    and samples to try without coding. Give the examples a try; understanding how
    an LLM reacts is critical.
  prefs: []
  type: TYPE_NORMAL
- en: Approach 2 – code with Node.JS, Python, or curl
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you don’t already have a ChatGPT account, set one up. Then, head to the quick
    start guide to ensure Node.js (curl or Python) works. The URL has step-by-step
    instructions for getting your environment up and running.
  prefs: []
  type: TYPE_NORMAL
- en: 'Website: [Quickstart guide for developers](https://platform.openai.com/docs/quickstart?context=node)
    ([https://platform.openai.com/docs/quickstart?context=node](https://platform.openai.com/docs/quickstart?context=node))'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This book does not require coding. A more technical reader can mirror some of
    our no-code approaches with a code version, but we won’t discuss this path.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use the APIs, follow the instructions on the link:'
  prefs: []
  type: TYPE_NORMAL
- en: Install the essential software (Node.js, Python, or curl are all documented
    on the same page; choose the tab that suits you).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install the OpenAI library package.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set up your API key.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: And give it a try! If you have used other **Large Language Models** (**LLMs**)
    or have never used one, try it out and ask anything; we call this input from the
    user a prompt. *The material in this book can be quickly learned without doing
    any coding*. Some models don’t have the most recent data, so asking about today’s
    weather or sports scores won’t work, but if asked to give five ways to clean a
    clogged toilet, it has the answer. The power we want to expose here is the combination
    of this powerful experience and UX design practices to create a high-quality,
    customer-centric experience. Now we have something to discuss!
  prefs: []
  type: TYPE_NORMAL
- en: We should be on the same page concerning the basic history of conversational
    AI. With all the news, ChatGPT should be well known so we can cover just the basics
    for a few minutes.
  prefs: []
  type: TYPE_NORMAL
- en: Traversing the history of conversational AI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Interaction design intersected with AI well before the LLM revolution. This
    history is helpful to appreciate when applying design principles to the latest
    conversational experiences. Any discussion of AI at least mentions Alan Turing
    and the question posed by his article in Mind (a peer-reviewed academic journal).
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [Computing Machinery and Intelligence (1950)](https://redirect.cs.umbc.edu/courses/471/papers/turing.pdf)
    ([https://redirect.cs.umbc.edu/courses/471/papers/turing.pdf](https://redirect.cs.umbc.edu/courses/471/papers/turing.pdf))'
  prefs: []
  type: TYPE_NORMAL
- en: This is routinely referenced as the **Turing Test**. The ability of a machine
    to seem intelligent and be indistinguishable from a human.
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [Wikipedia on the Turing Test](https://en.wikipedia.org/wiki/Turing_test)
    ([https://en.wikipedia.org/wiki/Turing_test](https://en.wikipedia.org/wiki/Turing_test))'
  prefs: []
  type: TYPE_NORMAL
- en: When this was published in 1950, we were still far from a computer being indistinguishable
    from a human, at least in a text-only interaction. We must skip ahead to the mid-1960s
    before we see something that appears to engage in discourse.
  prefs: []
  type: TYPE_NORMAL
- en: If we try out one of ELIZA’s conversational interfaces from 1964 to 1967, we
    quickly see its limitations based on its *natural* responses when recognizing
    keywords or phrases.
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [Wikipedia on ELIZA](https://en.wikipedia.org/wiki/ELIZA) ([https://en.wikipedia.org/wiki/ELIZA](https://en.wikipedia.org/wiki/ELIZA))'
  prefs: []
  type: TYPE_NORMAL
- en: The well-known version is called DOCTOR. It turns written questions asked of
    it back onto the patient. Give it a try to interact with the psychotherapist chatbot.
  prefs: []
  type: TYPE_NORMAL
- en: 'Demo: [ELIZA](https://web.njit.edu/~ronkowit/eliza.html) – The psychotherapist
    chatbot ([https://web.njit.edu/~ronkowit/eliza.html](https://web.njit.edu/~ronkowit/eliza.html))'
  prefs: []
  type: TYPE_NORMAL
- en: ELIZA was considered one of the first attempts at passing the Turing Test. With
    its simple psychotherapist banter to simulate a doctor (“Why do you feel this
    way?”), it was perceived as human-like. Without going too deep, the discussion
    around its design looked at the rank of essential words, and it included *transformation*
    rules that dictated how it treats what the user types. Maybe LLMs are paying homage
    to this since they are based on **transformers**. We will explain transformers
    and the terms common to LLMs in later chapters. ELIZA had the superficial appearance
    of a conversation and could not go *off-topic* or even provide an answer. The
    psychology of conversational interaction was fundamental to this experience. But
    it wasn’t going to solve anyone’s psychological problems. However, things did
    get better as chatbots; it just took a few decades. Visit Wikipedia to learn a
    brief history of chatbots.
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [Wikipedia’s history of chatbots](https://en.wikipedia.org/wiki/Chatbot)
    ([https://en.wikipedia.org/wiki/Chatbot](https://en.wikipedia.org/wiki/Chatbot))'
  prefs: []
  type: TYPE_NORMAL
- en: The idea of a *natural language* experience was not lost on the research community
    from the 1960s to the 2000s. Still, the next step in evolution came with the conversational
    assistants or chatbots we have seen since around 2016\. And this is where interaction
    design had a significant impact, even though most chatbots were not worth anyone’s
    time. About 100,000 chatbots were created on Facebook Messenger in the first year
    of its support. I would suggest that 99% of them failed quickly. Very few survived
    for all the reasons we will explain shortly. But a few lived on when teams were
    willing to mature the solution. Support use cases, such as for airlines (“How
    much is a second bag going to cost?” or “Can I get a refund for a canceled ticket?”),
    are a great place to answer specific questions with specific answers. Although
    it seems evident that this can save a company a lot of money in support costs
    versus a phone call, there is also value to the consumer. For them, time is also
    valuable. If a customer gets a reliable answer in seconds, they will gladly trade
    that for 10 minutes of holding onto the phone. It is a win-win. Additionally,
    this experience can be a frontend for required interactions with humans. In support
    cases, it can gather details reliably before engaging a human, making it more
    likely to connect with the right human and give them the details they need to
    help more directly.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine a young child before going to school. If no one interacts with kids,
    teaches them, or plays with them, by the time they go to first grade, they lack
    primary language and interpersonal skills and might not be potty trained. Even
    the great comedian Steve Martin understood this. Please take a minute and laugh
    at his bit.
  prefs: []
  type: TYPE_NORMAL
- en: 'Video: [Steve Martin teaching a kid for the first day of school](https://www.youtube.com/watch?v=40K6rApRnhQ)
    ([https://www.youtube.com/watch?v=40K6rApRnhQ](https://www.youtube.com/watch?v=40K6rApRnhQ))'
  prefs: []
  type: TYPE_NORMAL
- en: However, remarkable changes can be made by investing in a child’s growth and
    care and feeding them physically and mentally. This maturity is what we can see
    in chatbots. They won’t typically become a Ph.D., but they can coached to be smarter
    than a 5th grader. We can use design skills to make a chatbot (or any LLM-based
    solution) knowledgeable, dependable, and articulate. We will apply what we have
    learned to our next generation of conversational assistants built with ChatGPT.
    We will critically explore ChatGPT to form robust solutions, and you will learn
    to notice when there might be other tools out there to use in conjunction with
    ChatGPT.
  prefs: []
  type: TYPE_NORMAL
- en: There is one other related area worth mentioning. Everyone has experience with
    phone trees when calling a business. We mentioned this example earlier. Eventually,
    those “Press 1 for service, press 2 for sales…” gave way to experiences that listened
    for more than the touch tone of a key press. But how many of us have struggled
    with these? Probably all of us. Why? Because the experience isn’t designed well,
    and the technology is likely lacking. These, too, will benefit from ChatGPT. So,
    if you come from creating voice experiences (probably using Voice XML, the de
    facto standard for modeling interactions for years) or from chatbots within Alexa,
    Siri, Google, or dozens of other vendors, the learnings and practices of making
    great experiences apply to ChatGPT. We will go through that extensively in this
    book.
  prefs: []
  type: TYPE_NORMAL
- en: 'Wikipedia: [Wikipedia’s Voice XML background](https://en.wikipedia.org/wiki/VoiceXML)
    ([https://en.wikipedia.org/wiki/VoiceXML](https://en.wikipedia.org/wiki/VoiceXML))'
  prefs: []
  type: TYPE_NORMAL
- en: 'And yet so many of these chatbots, phone trees, or conversational experiences
    fail to help a primary user accomplish their task. Why? Because of a few critical
    reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: The features or services in the chatbots don’t match the user’s needs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The models don’t support the complexity of the user’s language
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The user’s primary spoken language might not be supported, requiring them to
    be understood in a secondary language or not be understood at all
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The chatbots only know what they know, so they will return seemingly random
    results, which is discouraging
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The chatbots do not respond in a voice or tone the customer expects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The chatbot should have been monitored and improved to address these issues
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your goal should be to set a higher quality bar than expected from a human performing
    the same task. Sounds crazy? It isn’t. A typical support person might be able
    to help with a narrow topic (say, a website password reset). Another agent would
    be needed to resolve billing issues or find missing payments. So, the average
    support person will be less helpful than the future state of well-trained ChatGPT
    advisors with access to all the institutional data and processes.
  prefs: []
  type: TYPE_NORMAL
- en: This brings us to the founding of companies such as OpenAI. This long history
    of machine learning models and the increased computational capabilities allow
    this very large language model to work. OpenAI didn’t come into the world view
    with the December 2022 release of ChatGPT 3.5, the company was founded seven years
    earlier with non-profit roots. It took over three years to go from GPT-2, which
    could generate human-like text, to the 3.5 version that gained worldwide attention.
    For those who like tech history, dive into a brief background on OpenAI.
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [The origins of OpenAI](https://www.britannica.com/money/OpenAI) ([https://www.britannica.com/money/OpenAI](https://www.britannica.com/money/OpenAI))'
  prefs: []
  type: TYPE_NORMAL
- en: Like many Silicon Valley companies, engineers from Google Brain (and DeepMind,
    which merged with Google), Facebook, and other AI came together at OpenAI. Then,
    11 OpenAI employees left to form Anthropic around the start of 2021\. None of
    this happened overnight, so we need to remind ourselves that it will take years
    for this new technology to weave its way into our everyday lives. The phone, the
    car, the computer, and the mobile phone have all become fundamental to today’s
    modern society. This will impact all of us more than all these previous inventions,
    but it will take time to happen. There will be a lot of failures along the way.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine a solution that is 60% accurate at every interaction. Does it sound
    high for a computer to get something right 60% of the time? Before ChatGPT, some
    didn’t consider this too bad. I routinely used to ask this in my classes (typically
    from 20 to 100 people per class) on conversational AI. And many folks consider
    a 50–80% success rate to be “pretty good.”
  prefs: []
  type: TYPE_NORMAL
- en: With some simple assumptions, we can understand why these systems fail. Every
    time a question is asked, the likelihood of a failure increases, as modeled in
    *Figure 1**.2*. To keep this simple, we base this on the independent probability
    of each turn having the same chance of failure. The system doesn’t know it has
    failed, and if the user trusts it, they might not even notice the failure, thus
    causing more failures.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21964_010_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.2 – The chance of failure increases at each turn
  prefs: []
  type: TYPE_NORMAL
- en: When asked six questions at a 60% likelihood of success rate, there is a 95%
    chance of one of those answers being wrong. And what if your next question is
    dependent on the previous answer? The interaction will go off the rails. I have
    seen this time and time again. If the user trusts the (wrong) answer, they make
    the next decision based on that (incorrect) answer. And failure can be assured.
    This relationship will sour. Customers will go elsewhere if they see these failures
    (likely a more expensive channel) to get their needs addressed, or worse, they
    will go to another vendor.
  prefs: []
  type: TYPE_NORMAL
- en: We can consider strategies to improve these curves so that each turn is more
    likely to succeed. *Chapters 6*, *7*, and *8* explain strategies to use multiple
    generative AI components to do different forms of validation. Yes, the AI can
    watch over another AI. While traditional LLMs such as ChatGPT have improved and
    will continue to improve, we want to provide tools and measurement skills to help
    ensure success. But look at *Figure 1**.2* again. Look at raising the bar to 97%
    accuracy. After the same number of turns, there is a very good chance (85%) that
    all interactions were successful. So, raise the bar on expectations.
  prefs: []
  type: TYPE_NORMAL
- en: It is possible to achieve these levels of quality. We will also show how to
    measure and scope improvements to give the most significant return on investment.
  prefs: []
  type: TYPE_NORMAL
- en: Chatbot failures
  prefs: []
  type: TYPE_NORMAL
- en: To get a laugh at how bad *bad* can be, read this article on chatbot fails.
    We aim to teach enough design methods to never fall into these black holes of
    disgrace.
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [Chatbot failures](https://research.aimultiple.com/chatbot-fail/)
    ([https://research.aimultiple.com/chatbot-fail/](https://research.aimultiple.com/chatbot-fail/))'
  prefs: []
  type: TYPE_NORMAL
- en: With purpose-built experiences, for example, focused on filing business expenses
    or getting answers to common questions around internal business processes, users
    spend less energy trying to break the chat experience or ask off-the-wall questions.
    This behavior, expected in widely available public ChatGPT and chatbot experiences,
    is likely seen less than 1% of the time when building a custom ChatGPT tool. It
    will still get questions it might not be able to answer, but it is more likely
    that they are questions it should *eventually* answer. We will show how to prioritize
    that backlog to be in the business of continuous improvement.
  prefs: []
  type: TYPE_NORMAL
- en: This brings us to ChatGPT and the new class of LLMs, which are indistinguishable
    from humans in many ways. Google’s LaMDA, Meta’s Llama, Anthropic’s Claude, and
    OpenAI’s GPT models are all in the same class of software.
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [Wikipedia survey of LLMs](https://en.wikipedia.org/wiki/Large_language_model)
    ([https://en.wikipedia.org/wiki/Large_language_model](https://en.wikipedia.org/wiki/Large_language_model))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Article: [Google’s LaMDA](https://en.wikipedia.org/wiki/LaMDA) ([https://en.wikipedia.org/wiki/LaMDA](https://en.wikipedia.org/wiki/LaMDA))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Article: [Meta’s Llama](https://llama.meta.com) ([https://llama.meta.com](https://llama.meta.com))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Article: [Anthropic’s Claude](https://www.anthropic.com/claude) ([https://www.anthropic.com/claude](https://www.anthropic.com/claude))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Article: [OpenAI’s GPT Models](https://platform.openai.com/docs/models) ([https://platform.openai.com/docs/models](https://platform.openai.com/docs/models))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: But even if they are like humans, we must ask which humans in the enterprise
    space they mimic. Does this represent my company? Does it have the knowledge it
    needs to solve my customers’ problems? How will my customer handle a wrong answer?
    LLMs have a lot of potential and will evolve rapidly. We aim to give you the tools
    to evaluate whether an LLM solution will fit at every stage of your development.
  prefs: []
  type: TYPE_NORMAL
- en: The importance of UX design for ChatGPT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Does ChatGPT even need an introduction at this point? The innovative model developed
    by OpenAI is in a new class of LLMs, which are trained on billions of data elements
    from the internet’s vast supply of articles, books, and knowledge. It achieved
    over 100 million users in about two months. It can generate human-like conversational
    interactions in text or voice in many languages and converse on vast information.
    And it does it pretty darn fast.
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT has undoubtedly come on like a firestorm. Unique, fun, fast, intelligent?
    However, when designing solutions for your business or enterprise, they should
    be accurate, have the most current business-related information, and communicate
    to customers in the voice, style, and tone expected from the business. So, how
    do you take such a fast-paced moving target and wrap it into a product that exceeds
    customer’s expectations? Can one ensure that it doesn’t give random answers that
    are off-brand? You can, but it takes design. It needs to be monitored. And it
    would be best if a process was in place to improve it. For that, this is the right
    place.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let me define *design* because I see a lot of really horrible definitions.
    Design is the process and practice of clearly communicating an experience for
    a user. Good software UX design accounts for human behavior and limitations by
    applying the scientific method to solving human and machine interface issues.
    This means we can use what we know about the visual, auditory, and kinesthetic
    systems and combine them with understanding how the mind works to make decisions
    on how to create an experience that is functional, usable, needed, and even engaging.
    We see design all around us: visual design, graphic design, software design, conversational
    design, building architecture, and many other fields. We use the expertise of
    user researchers to guide our designs based on subjective and objective feedback
    from our customers, using formal and informal methods to better understand our
    users’ needs. We then combine the inputs from customers, primary research, and
    the goals of the product and company and mix in a bit of magic to make great experiences.'
  prefs: []
  type: TYPE_NORMAL
- en: If you just put icons on screens or write conversational copy without these
    efforts, you do production work, not design. We want everything done for a reason.
    The more done by creating fitness to purpose, the more our customer experience
    will improve. We don’t always get it right. We will get a higher quality product
    if we know how to fulfill the user’s needs. That is where the iterative design
    concept plays a role. We learn from and improve our designs even if we don’t get
    it right.
  prefs: []
  type: TYPE_NORMAL
- en: UX design, interface design, human factors, user research, **human-computer
    interaction** (**HCI**), or any flavor of the art and science of interaction design
    is a collection of experts and expertise that can help shape this functional,
    engaging, usable, and fun experience. We can build successful chat-based solutions
    by directly applying the wealth of learnings from these disciplines to “chat”
    experiences or adapting what we have learned with conversational AI and graphical
    user experience design to fit into this new world. Using words to communicate
    with a computer is not new; it has just improved.
  prefs: []
  type: TYPE_NORMAL
- en: This is where you learn how to design a ChatGPT solution for customers based
    on company knowledge and business needs. Enterprise ChatGPT covers a wide range
    of experiences. One can be making a support site, a virtual assistant to help
    employees or job seekers, a sales engagement service that personalizes emails
    for sales calls, a training application, a product finder or recommender, a tool
    to analyze legal documents for inconsistencies, or an expert witness tool for
    lawyers. Code review (evaluating software written in Java or dozens of other popular
    languages and identifying issues or bugs) is another popular topic in tech. This
    book will stay away from that use case to focus on more common experiences that
    will impact most people, most of the time, with something important to their lives
    as enterprise customers. Developer productivity tools are essential, but that
    topic is well covered elsewhere. The learnings also apply to that space; we won’t
    use any examples or case studies from developer productivity tools. We will start
    by discussing the science and art of good design in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the science and art of UX design
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every coin has two sides (okay, plus the edge!). Typically, we see two sides
    to UX design. Those with visual backgrounds and those who come from a science
    perspective. Schools are now overwhelmingly delivering visual and graphic artists
    to meet demand, and with conversational AI, there is some *art* to the experience
    but only sometimes visual elements. The introduction of generative AI impacts
    every facet of interaction design. The design roles will adapt or die. Adaption
    is the better option. As **graphical user interfaces** (**GUIs**) adapt to include
    conversational elements, the role of a visual designer will still be relevant,
    even if only to create the correct prompts to help them generate the look and
    feel that aligns with the organization’s goals. The side of the equation for the
    science of design remains vital to requirements, understanding, and communication.
    Even when writing this book, ChatGPT provides some good answers related to UX.
    But what we cover in this book is not quickly answered by ChatGPT or any generative
    solutions. They help us, like all tools, move our design culture forward, but
    they don’t know when they are wrong and still need us to decide where to apply
    the solutions, gather the correct data to help them form answers, and understand
    and improve the results.
  prefs: []
  type: TYPE_NORMAL
- en: The science of design
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: “*Anyone can design*,” “*Just put the button there*,” “*I can write this copy*.”
    There is a difference between designing and making something. Anyone can make
    something. It might or might not work; it could work for some and not others,
    “*I designed this for myself, and I don’t have any issues with it*,” or it could
    be good. We want to use the tools, expertise, wisdom, and field knowledge to ensure
    *design decisions* yield the highest quality product. There is a wealth of research
    that usually underpins quality interactions, and we want to avoid pitfalls.
  prefs: []
  type: TYPE_NORMAL
- en: When we mean research, we include controlled studies with human subjects where
    the team has undergone rigorous processes to return reliable, repeatable, and
    valid results. We then take these results and apply them to our situation. And
    some will say, “*That doesn’t apply to this because it is different*.” Well, it
    could be, but that is why we share these results with interaction designers to
    guide us to what is applicable. As ChatGPT grows and integrates with other products
    and features, it will become more intertwined with visual elements, forms, interactive
    charts and visualizations, and even typical GUIs (with buttons, tables, filters,
    tabs, and all the components we see in any mobile, desktop, web, or embedded experience).
    This will make the science and historical expertise of UX design even more critical.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take an example—Hick’s Law; designers know and use Hick’s Law all the
    time. “*The time it takes to make a decision increases as the number of alternatives
    increases*.” This is why we have menus broken up into small segments, wizards
    for complex processes, and debate how many buttons should appear in a dialog box.
    In conversational flows, we keep decisions simple to reduce the burden on the
    user.
  prefs: []
  type: TYPE_NORMAL
- en: Hick-Hyman Law
  prefs: []
  type: TYPE_NORMAL
- en: This law was published in 1952 in the *Quarterly Journal of Experimental Psychology*.
    It is an equation, ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mrow><mi>R</mi><mi>T</mi><mo>=</mo><mi>a</mi><mo>+</mo><mi>b</mi><msub><mrow><mi>l</mi><mi>o</mi><mi>g</mi></mrow><mn>2</mn></msub><mo>(</mo><mi>n</mi><mo>)</mo></mrow></mrow></mrow></math>](img/1.png),
    where the response time (*RT*) is a function of the time not included in the decision-making
    (*a*) plus a constant (about 0.155 seconds) times the *log* function of the number
    of alternatives to choose from (*n*).
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [Wikipedia’s explanation of Hick-Hyman Law](https://en.wikipedia.org/wiki/Hick%27s_law)
    ([https://en.wikipedia.org/wiki/Hick%27s_law](https://en.wikipedia.org/wiki/Hick%27s_law))'
  prefs: []
  type: TYPE_NORMAL
- en: We don’t expect you to know or memorize this, but it is just one example of
    the science behind UX design decisions. Sometimes, knowing the guidelines, laws,
    and science helps you make better decisions and avoid mistakes by others, which
    you must learn to correct.
  prefs: []
  type: TYPE_NORMAL
- en: In this case, we know that a long list of choices is complex for users, and
    when a generative AI returns 10 to 15 choices, the effort it takes to decide goes
    up significantly. With this example, we can get these choices grouped into smaller
    logical segments and reduce them to two less complex decisions in a series. This
    is why we have the **File**, **Edit**, **View**, **Window**, and **Help** menus.
    By grouping menu items, picking the action is a less complex decision. It is also
    why menus fail when there are too many choices and no clear understanding of the
    organization of those items. Let’s tell ChatGPT to return large decision trees
    as more logical and organized segments. We will cover this in [*Chapter 7*](B21964_07.xhtml#_idTextAnchor150),
    *Prompt Engineering,* to give ChatGPT instructions on how we want our responses
    framed.
  prefs: []
  type: TYPE_NORMAL
- en: How about one more classic example? Many phone calls to a business result in
    a voice prompt with 5-6-7-8 or even nine choices; how does a caller keep track
    of the right one? Do you ever have to listen to a prompt again? Maybe you got
    distracted and can’t recall the first few choices. Do you ever use a few fingers
    to represent a number to remind yourself which answer might be best when multiple
    options are viable? This is a human working memory issue, a classic design problem.
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [Wikipedia explains working memory](https://en.wikipedia.org/wiki/Working_memory)
    ([https://en.wikipedia.org/wiki/Working_memory](https://en.wikipedia.org/wiki/Working_memory))'
  prefs: []
  type: TYPE_NORMAL
- en: These human factors impact the design of many experiences—especially ones based
    on a lot of text. We are not going to calculate Hick’s Law in this book or test
    on working memory. Still, one should appreciate that applying design principles
    will be the cornerstone of helping create a successful ChatGPT experience. Without
    guidance, no one should be prompted with 35 choices on the first menu. This is
    an unacceptable user experience. So, we could use an existing and well-organized
    tree and have ChatGPT (speech-to-text) determine the customer’s request to skip
    a few levels in one step.
  prefs: []
  type: TYPE_NORMAL
- en: Design book wish list
  prefs: []
  type: TYPE_NORMAL
- en: If you are new to design and want to learn the fundamentals, there is a wealth
    of wonderful resources. I suggest a few non-technical first books, such as Don
    Norman’s *The Design of Everyday Things* or Steve Krug’s *Don’t Make* *Me Think*.
  prefs: []
  type: TYPE_NORMAL
- en: Those who are familiar with these works will want more sophisticated books.
    I suggest Jeff Johnson’s book *Designing with the Mind in Mind* to help you understand
    how the fundamentals of psychology are used to derive many of these guidelines
    and thus help you apply these principles. *Universal Principles of Design* by
    Lidwell, Holden, and Butler is an excellent reference book. More resources are
    on our book list.
  prefs: []
  type: TYPE_NORMAL
- en: 'Website: [Recommended Book List](https://uxdforai.com/references#C13) ([https://uxdforai.com/references#C13](https://uxdforai.com/references#C13))'
  prefs: []
  type: TYPE_NORMAL
- en: To make these experiences successful, think like a designer. Consider how users
    will interact, use their expectations, biases, and assumptions, and how their
    unique experiences will shape their future interactions. The power of the design
    mindset is to learn how to ensure people who use your product succeed.
  prefs: []
  type: TYPE_NORMAL
- en: To be clear, this is very different from *I will know it when I see it*. You
    want to apply art and style to the product and understand the scientific underpinnings
    of success. Some of this comes from psychology and related disciplines. Humans’
    cognitive and physical abilities have been unchanged over the last 50 years of
    the computer age. We still process information using the same senses. Our ability
    to react and respond is the same; only our experiences have evolved. We might
    now know how to type with two fingers, but there are limits to processing information,
    clicking on small targets, making decisions, or learning complex patterns. For
    example, just because today’s cars have two to five times the horsepower of vehicles
    in the 1960s doesn’t mean we can react any faster in an accident. As ChatGPT provides
    insights or understandings, we can overcome some cognitive or physical human limits
    using good UX practices.
  prefs: []
  type: TYPE_NORMAL
- en: The art of design
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I bet you were waiting for us to talk about visual design here. This will apply
    in some places but won’t be a book’s cornerstone. We could have covered how to
    design a chat window or what visual treatment works best, but I suspect that information
    is in many resources independent of a book on ChatGPT. Brand identity has its
    subjective standards and its collection of science and expertise. Now, there will
    be experiences that join generative AI and traditional user interfaces, and one
    can apply a visual style and expertise to that experience, but that is unique
    to the enterprise. We want to cover the art of design that can span any enterprise
    here and join this with the science that supports design. And all of this is done
    to create something expected and comfortable for the audience.
  prefs: []
  type: TYPE_NORMAL
- en: In meetings, we hear, “*Put on your designer hat*.” This means being a customer’s
    advocate and addressing customer’s needs through how they interact with the product.
    This is within the basics of user-centered design. We bring customers into the
    process because we sometimes need to learn better. Listening to the customer means
    something different than what the customer says is right. It isn’t, and it won’t
    be. Many times, what the customers ask for and what they need are different. They
    want to work around a problem, but maybe the solution is to eliminate the problem
    in the first place. This is why this is also an art. You have to know where to
    look for problems worth solving.
  prefs: []
  type: TYPE_NORMAL
- en: Engaging users in the process will help us understand expectations and see how
    designs impact their behavior. And we know that generative AI will only sometimes
    give the expected results. Part of the designer’s job is to improve this interaction,
    likely indirectly, through the tools we will discuss in the book, such as data
    cleaning, prompt engineering, fine-tuning, user research, user testing, and monitoring.
    There is also art we need to control and refine in generating responses with AI.
    As Kevin Mullet explained in a conversation for this book, “*The science describes
    how things ought to be done, while the generative AI describes (ideally) how they
    are typically done today. The designer’s task (as always) is to wrangle those
    diverse inputs into a single coherent solution that best maps to the user’s wants
    and needs*.” So, we need to use our depth of skills to keep our ChatGPT solutions
    on point.
  prefs: []
  type: TYPE_NORMAL
- en: To be fair to the process, only some decisions can be based on logic or a research
    method, especially regarding how you want ChatGPT to respond. Let’s break down
    the art concept as it applies to the words used in a product’s voice, style, and
    tone.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a large company selling surfing apparel, surfboards, and beach equipment.
    The website or style should be distinct from a stodgy, old-fashioned bank. Right,
    dude, and *dudettes*? Likewise, a bank intends to come across as reliable, safe,
    dependable, and trustworthy, Mrs. Customer. So, the site should speak to customers
    in a manner consistent with their expectations for the brand.
  prefs: []
  type: TYPE_NORMAL
- en: The overall *voice* of your conversations should reflect the brand.
  prefs: []
  type: TYPE_NORMAL
- en: The *style* of interactions should match the users’ needs, wants, and expectations.
  prefs: []
  type: TYPE_NORMAL
- en: And the *tone* of the conversation can adapt or vary based on the current situation.
  prefs: []
  type: TYPE_NORMAL
- en: We will address these in detail to identify when and how to vary the tone within
    a style for the overall voice of a ChatGPT assistant.
  prefs: []
  type: TYPE_NORMAL
- en: 'There is no one correct answer to how to write. The voice, style, and tone
    can certainly overlap in concept. The same thing can be said in many ways and
    still be understood:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We will discuss how to ensure that responses are clear, concise, and contain
    the right level of detail (maybe the customer wondered when the appointment was?
    Or maybe at what office?). Or perhaps they expected a calendar (`.ical` or similar)
    attachment to make it easier to add this appointment to a calendar:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'If a manager scheduled this appointment at the surf shop we mentioned, they
    would use lingo and tone that fits the customers to make the customer feel like
    one of them:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: An intelligent designer will know that even if the audience doesn’t know *Akaw*
    (awesome or cool) and *grom* (a new surfer), they can still understand the message
    and be a little excited to get their surf on.
  prefs: []
  type: TYPE_NORMAL
- en: Use cases for this book
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is where the art and science of design meet. And we will see this a lot
    in our journey. We will demand that our ChatGPT instance be clear, complete, and
    conversational (when needed). Using ChatGPT to create answers that present themselves
    in a non-conversational user interface is also perfectly reasonable. ChatGPT can
    process and generate data in a backend system. A UI can use alerts, buttons, or
    a warning dialog supplemented by ChatGPT. We call that a hybrid user experience.
    A combination of traditional UI elements and generative AI. Grammar or style suggestions
    when writing an email could be made in a suggestion window, and it doesn’t have
    to be conversational. We will refer to these as recommenders. They provide recommendations
    to assist in content generation or to influence a process, such as a sales lead.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s illustrate these concepts with pictures. Each gives a sense of the experiences
    covered in the book’s examples. If your use case differs but will still be a user
    interface, then most of what we cover will likely apply.
  prefs: []
  type: TYPE_NORMAL
- en: Messaging
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Simple text messaging** (**SMS**), voice experiences, or simple chats are
    two-way user experiences that can only use text or speech. These experiences have
    limited interactions in SMS: text, images, file uploading, and links. *Figure
    1**.3* shows an example of interacting with my expense assistant on the phone
    via SMS. It is easy to access and simple but has limits to the types of interactions
    it can support.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21964_010_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.3 – An example of simple messaging via SMS on a mobile phone
  prefs: []
  type: TYPE_NORMAL
- en: If this was a voice experience, like in a car, or a skill in Amazon Alexa, creating
    well-done voice-only solutions is even more challenging than with SMS. We will
    discuss voice experiences in the book, but we should discuss Hybrid UIs next,
    as that is the future.
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid UIs
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Slack, Teams, and web interfaces can incorporate user interface elements with
    conversational text. Simple experiences can have links, buttons, charts, graphs,
    or forms. This hybrid experience combines LLMs and GUIs, allowing for complexities
    not quickly addressed by generative text or GUI components alone. In *Figure 1**.4*,
    I show a simple example from Slack where buttons encourage the exploration of
    tasks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [ChatGPT AI for Slack](https://www.cityam.com/slack-to-offer-users-a-chatgpt-ai-tool-which-will-write-messages-for-them-in-seconds/)
    ([https://www.cityam.com/slack-to-offer-users-a-chatgpt-ai-tool-which-will-write-messages-for-them-in-seconds/](https://www.cityam.com/slack-to-offer-users-a-chatgpt-ai-tool-which-will-write-messages-for-them-in-seconds/))'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21964_010_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.4 – An example of a hybrid user experience
  prefs: []
  type: TYPE_NORMAL
- en: Overall, experiences in more robust channels can take advantage of even more
    creative elements. For example, a web channel might support interactive charts
    or visualizations, shopping cart items, information, tools, and products from
    the enterprise. Generative conversations can refine the results or change perspective
    or filters, while UI components also control aspects of the view. This is by far
    the most robust and creative space for generative solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Recommender UIs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Typically, a recommender is a recommendation as a textual prompt to encourage
    a specific behavior. It could be done with action buttons, but the user does not
    interact or converse with a system. A summary or writing suggestion tool is typically
    this kind of experience. Even if it has buttons to “generate email,” if the user
    is not conversationally interacting with the generative agent, it is more like
    a recommender. In this Salesforce example in *Figure 1**.5*, Einstein gives context
    to the sales process.
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [AI in Salesforce](https://www.salesforce.com/products/ai-for-sales/)
    ([https://www.salesforce.com/products/ai-for-sales/](https://www.salesforce.com/products/ai-for-sales/))'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21964_010_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.5 – An example of a recommendation UI
  prefs: []
  type: TYPE_NORMAL
- en: The backend uses for ChatGPT
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A hidden use of a generative AI solution can be to process information and provide
    data, information, or wisdom to the user that is then passed to a different user
    experience. The user doesn’t directly interact with the generative AI, so a UI
    doesn’t exist. There could be administrative UIs or UIs that use the processed
    results. In *Figure 1**.6*, we don’t see a user interface. We see data that would
    be ingested, processed, and then analyzed to return clean, normalized data. We
    will explore this example in a case study starting in [*Chapter 6*](B21964_06_split_000.xhtml#_idTextAnchor134),
    *Gathering Data – Content is King*. Just realize we don’t have to have a UI to
    get much value out of ChatGPT and generative solutions; we might use it as a tool
    in a much larger process.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21964_010_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.6 – Spreadsheets processed in a backend ChatGPT solution
  prefs: []
  type: TYPE_NORMAL
- en: I suspect these four concepts cover almost all uses of textual generative AI.
    The most interesting for us are ones with richer or robust UX, while something
    like a pure backend solution leaves little discussion to improve the user experience.
    But we do have examples! Sometimes, work starts as a backend solution, and then,
    with the need for controls and feedback mechanisms, these experiences come to
    the forefront. None of this work can be done in isolation. It takes a team.
  prefs: []
  type: TYPE_NORMAL
- en: It takes a village to create superb UX
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you are serious about creating world-class experiences (and I hope every
    reader is!), consider the resources that will help get the most value on the design
    side. As shown in *Figure 1**.7*, the collection of specialists you need goes
    beyond the typical software team. Let’s explore their contributions briefly, as
    this is not the usual team organization for traditional software development.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21964_010_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.7 – It takes a village to build a solution
  prefs: []
  type: TYPE_NORMAL
- en: Writing comes into play fundamentally because we have an assumption in the enterprise
    design space that there are materials, FAQs, articles, manuals, help, installation
    processes, and bug fixes, which might not be easily accessible to the Internet.
    This material will be added to a private ChatGPT instance so that a paying customer
    will get value. We hope the business employs writers and editors to create high-quality
    content. How this is written, ingested, and represented in ChatGPT will reflect
    strongly on how well it was written originally (quality in will help with quality
    out). Designers must help understand the goals, design tools, and even integrations
    that might optimize the user’s experience. Should a customer answer 15 questions
    individually or use a form to see the chunks of questions and answers contextually?
    We must design the experiences to match the problem we need to solve (the use
    case). In complex environments, where technical language or even multiple written
    or verbal languages are expected, linguists will be part of the team to help train
    and improve communication. Writers and linguists are also crucial in setting the
    style and tone of the conversation. We will dive into this in more detail later.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, let’s not leave off *user research*. Besides reviewing logs and analyzing
    the product’s use, researchers can work with customers to learn more about how
    they want to use the assistant, where and when they will likely call on it, and
    how they will interact with it. These learnings are valuable for plotting a strategic
    direction and can help fix tactical issues. We will provide a set of heuristics
    that can be used to put on your research hat to understand where problems will
    arise and how to classify them.
  prefs: []
  type: TYPE_NORMAL
- en: This is just on the design side. We know that a team of engineers, product managers,
    quality engineers, and others will be involved in the journey. They can also benefit
    from this book. Do share it. Great ideas can come from anywhere, so always keep
    learning. The best way to keep learning is not to relearn something we already
    know from the history of conversational AI.
  prefs: []
  type: TYPE_NORMAL
- en: So, we now know who should be involved in this process, and we understand that
    OpenAI’s ChatGPT is foundational, but there is still one missing piece. Why is
    there a need for a custom version of ChatGPT? Because proprietary data and custom
    answers are unavailable in a worldly-trained ChatGPT instance. Let’s explore how
    to add unique content by setting up a personalized ChatGPT instance.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up a customized model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So now we have a sense of the people and tools we need. One more piece of the
    puzzle is the content that will make a ChatGPT solution valuable. There are many
    ways to include content in an LLM, such as ChatGPT. However, we assume a focus
    on unique, proprietary content hidden behind a secure paywall or available only
    to authenticated users. If company answers are already out in the world and answered
    by the basic ChatGPT, ask yourself, *How would my custom version of ChatGPT provide
    value?* We can help get that answer by focusing our content discussions on building
    a private model and including company data without sharing it with the world.
  prefs: []
  type: TYPE_NORMAL
- en: 'The idea of *enterprise* assistants is precisely that. Ensure company data
    is only exposed to customers and that adding it to an instance of ChatGPT does
    not expose the data to the world. Only some people were this careful when ChatGPT
    was first introduced. Don’t add sensitive data to a model used by competitors
    or to be a doctor and accidentally break patient confidentiality. The enterprise
    market demands security. Look at this article to go a little deeper:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [Feeding Sensitive Data to ChatGPT](https://web.archive.org/web/20240119052608/https:/www.darkreading.com/cyber-risk/employees-feeding-sensitive-business-data-chatgpt-raising-security-fears)
    ([https://web.archive.org/web/20240119052608/https:/www.darkreading.com/cyber-risk/employees-feeding-sensitive-business-data-chatgpt-raising-security-fears](https://web.archive.org/web/20240119052608/https:/www.darkreading.com/cyber-risk/employees-feeding-sensitive-business-data-chatgpt-raising-security-fears))'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s make a simple request and see how adding data dramatically changes the
    landscape for answers. I will set up a ChatGPT assistant in the Playground for
    this example. I am selecting the gpt-3.5-turbo-1106 model because it supports
    “Retrieval” and allows me to upload my files. Retrieval means I can share content
    with the AI so it can answer based on the information I provide. This sets enterprise
    solutions apart from our day-to-day use of public conversational assistants. An
    enterprise solution knows things that are specific to the enterprise. For this
    example, everything can be done from the Playground user interface. We don’t need
    to set up or run any code. You will need a free account to run this. Don’t upload
    content you are not comfortable sharing.
  prefs: []
  type: TYPE_NORMAL
- en: Newer models, like Chat GPT 40-mini, are always becoming available; use the
    latest models in your playground. In my example, I included a 200-page document
    (a draft of my Master’s thesis on interface design). This material is not easily
    accessed online, so we can see how results change based on its inclusion.
  prefs: []
  type: TYPE_NORMAL
- en: Uploading this document took only a few seconds, and the model was ready to
    answer. Of course, adding thousands or a million files is very different. Still,
    I want to share a sense of this power and ChatGPT’s innate ability to prioritize
    uploaded content over the base model. Follow along using my example content, as
    shown in *Figure 1**.8*.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![](img/B21964_010_08.jpg) |'
  prefs: []
  type: TYPE_TB
- en: Sign up for an account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Website: OpenAI https://chat.openai.com/'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Head over to the Playground.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Website: OpenAI Playground https://platform.openai.com/playground'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose **Assistants** from the top menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select a model that supports Retrieval.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Test the model by asking question before uploading documents.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create **Instruction** (this is prompt engineering) to ask it to "focus on answers
    only gathered from the documents".
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Upload documents and retest – asking questions that only are known within the
    document.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.8 – Setting up the Playground to do a simple test
  prefs: []
  type: TYPE_NORMAL
- en: We can compare the answer provided by the base model to the same question answered
    after adding the `Full Thesis.pdf` file, a draft of almost 200 pages.
  prefs: []
  type: TYPE_NORMAL
- en: 'GitHub: [Chapter1-Full_Thesis.pdf](https://github.com/PacktPublishing/UX-for-Enterprise-ChatGPT-Solutions/blob/main/Chapter1-Full_Thesis.pdf)
    ([https://github.com/PacktPublishing/UX-for-Enterprise-ChatGPT-Solutions/blob/main/Chapter1-Full_Thesis.pdf](https://github.com/PacktPublishing/UX-for-Enterprise-ChatGPT-Solutions/blob/main/Chapter1-Full_Thesis.pdf))'
  prefs: []
  type: TYPE_NORMAL
- en: As shown in *Table 1.1*, we compared the results from a generic model to a model
    with the document attached. Very different results. We can drill down into those
    differences.
  prefs: []
  type: TYPE_NORMAL
- en: '| **What type of inconsistencies are there in** **UI designs?** |'
  prefs: []
  type: TYPE_TB
- en: '| --- |'
  prefs: []
  type: TYPE_TB
- en: '| **Generic Model** | **Model with Retrieval and** **one file** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Inconsistencies in UI (user interface) designs can occur in various ways.
    Some common types of inconsistencies are:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Visual inconsistencies: These involve inconsistencies in the visual elements
    of the UI, such as font styles, colors, layouts, and spacing. For example, buttons
    or icons that are different sizes or have inconsistent spacing could create visual
    inconsistencies.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Interaction inconsistencies: These occur when the behavior of UI elements,
    such as buttons, links, or menus, is inconsistent across different parts of the
    application. For instance, inconsistent hover effects or different ways of navigating
    between screens can create confusion for users.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Naming and labeling inconsistencies: (removed for brevity) …'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Functional inconsistencies: (removed for brevity)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Platform-specific inconsistencies: (removed for brevity)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It is essential to strive for consistency in UI designs to provide users with
    a familiar and intuitive experience. Consistent UI designs improve usability,
    reduce cognitive load, and enhance the overall user experience.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| In a study regarding inconsistencies in user interface (UI) designs, various
    types of inconsistencies were identified, including physical location inconsistencies,
    syntactic inconsistencies, semantic inconsistencies, and feedback inconsistencies.
    The study found that subjects had an easier time identifying physical location
    inconsistencies in the interface, and that the number of physical location inconsistencies
    seeded in the different versions of the application was higher than other types
    of inconsistencies. Additionally, it was observed that different groups of subjects
    found varying numbers of inconsistencies in their versions of the interface, even
    when the seeded number of inconsistencies was almost identical across groups[1].This
    suggests that inconsistencies in UI designs can manifest in different ways, including
    visual, interaction, naming and labeling, functional, and platform-specific inconsistencies
    as mentioned earlier, but the study further highlights specific types of inconsistencies
    identified in a research context.If you need more detailed information or other
    specific types of inconsistencies, feel free to ask! |'
  prefs: []
  type: TYPE_TB
- en: Table 1.1 – Comparison of answers once custom data is added
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, this is pretty good, even without reading the 200 pages of the document.
    Here are some highlights at this early stage of our discussion:'
  prefs: []
  type: TYPE_NORMAL
- en: It prioritized the answer from the file over the generic *Internet* answer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It summarized it somewhat, including referencing it as a *study*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Although not shown, it had difficulty showing tables and detailed results.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It was easy to extend ChatGPT with novel content.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It was available *instantly*. This should indicate that one can leverage these
    models to make them custom and unique for customers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notice the results included a reference citation [1] but didn’t provide a reference.
    This is a little bit of a hallucination. We will cover this in the book.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notice that the first answer is a numbered list, while the second is a paragraph.
    We can only get consistent results if we specify how we want the results (see
    [*Chapter 7*](B21964_07.xhtml#_idTextAnchor150), *Prompt Engineering*).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We did this example, and I encourage you to try this yourself. This shows the
    basics of asking ChatGPT to prioritize enterprise data over what it knows in the
    base-trained model. We will go much further with this in the coming chapters.
  prefs: []
  type: TYPE_NORMAL
- en: OpenAI supports basic retrieval
  prefs: []
  type: TYPE_NORMAL
- en: On their knowledge page (December 2023), OpenAI said, “*Retrieval of content
    in this example is optimized for quality by adding all the content to the model
    calls. In the future, ChatGPT will introduce other strategies to help optimize
    the trade-off between quality* *and cost.*”
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is one of those strategies:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Article: [File Search from OpenAI](https://platform.openai.com/docs/assistants/tools/file-search)
    ([https://platform.openai.com/docs/assistants/tools/file-search](https://platform.openai.com/docs/assistants/tools/file-search))'
  prefs: []
  type: TYPE_NORMAL
- en: If you read about OpenAI retrieval, it has significant limitations and costs
    that might hinder an enterprise solution. Other parts of generative AI solutions
    can address scale. This is covered in [*Chapter 6*](B21964_06_split_000.xhtml#_idTextAnchor134),
    *Gathering Data – Content* *is King*.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At this point, this only scratches the surface. We will go into how to develop
    a user research plan and apply standard research methods to the conversational
    world, then dive deep into user interface patterns, guidelines, and heuristics
    to help guide and improve the quality of an enterprise ChatGPT solution. Once
    we have something, it is time to apply our care and feeding approaches to monitor
    and improve the quality of customer experiences, extending it further into more
    customer use cases with the quality they expect. We will wrap it all up in a nice
    bow so this newfound expertise can be shared with your friends in development
    and product management. No person is an island. It does take a team.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s cover basic research and tools we can use to understand our users
    and how we can learn what our customers need. A few suitable research methods
    can go a long way to bridging the gap for unknown unknowns…
  prefs: []
  type: TYPE_NORMAL
- en: “Reports that say that something hasn’t happened are always interesting to me,
    because as we know, there are known knowns; there are things we know we know.
    We also know there are known unknowns; that is to say we know there are some things
    we do not know. But there are also unknown unknowns—the ones we don’t know we
    don’t know. And if one looks throughout the history of our country and other free
    countries, the latter category that tends to be the difficult ones.”
  prefs: []
  type: TYPE_NORMAL
- en: '– Donald Rumsfeld (Defense.gov news transcript: DoD news briefing – Secretary
    Rumsfeld and Gen. Myers. United States Department of Defense. February 12, 2002)'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s go!
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| ![](img/01.jpg) | The links, book recommendations, and GitHub files in this
    chapter are posted on the reference page:Web page: [Chapter 1 References](https://uxdforai.com/references#C1)
    ([https://uxdforai.com/references#C1](https://uxdforai.com/references#C1)) |'
  prefs: []
  type: TYPE_TB
