- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Innovating AI with Google Translate
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用 Google 翻译创新 AI
- en: In this chapter, we will illustrate how to innovate existing AI through Google
    Translate. First, we will start by understanding the difference between inventions,
    innovations, disruption, high-priced products, and revolutions, and how we can
    create an impact on an AI innovation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将说明如何通过 Google 翻译创新现有的 AI。首先，我们将从理解发明、创新、颠覆、高价产品和革命之间的区别开始，并探讨如何在 AI
    创新中创造影响。
- en: Sometimes, a developer will confuse an invention with innovation, leading to
    a major failure in a key AI project. Some AI designers take a revolution to mean
    a disruption, leading to early sales and then nothing.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，开发者会将发明与创新混淆，导致关键 AI 项目的重大失败。一些 AI 设计师将革命理解为颠覆，导致早期销售，但之后就一无所获。
- en: Once we have defined the key concepts of innovation, we will use Google Translate
    to understand the linguistic principles that surround **natural language processing**
    (**NLP**).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们定义了创新的关键概念，我们将使用 Google 翻译来理解围绕**自然语言处理**（**NLP**）的语言学原理。
- en: Google Translate entered the market in 2006 and was enhanced by neural networks
    in 2016, but still, it often produces bad answers. Is that good news or bad news?
    We will implement Google's API in a Python program to find out how to uncover
    false translations from one language to another.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Google 翻译于 2006 年进入市场，并在 2016 年通过神经网络得到了增强，但它仍然经常给出错误的答案。这是好消息还是坏消息？我们将在 Python
    程序中实现 Google 的 API，找出如何揭示从一种语言到另一种语言的错误翻译。
- en: Once we have found Google Translate's limits, we will finally find out how to
    transcend those limits with our own adaptations, by exploring Google's API in
    a Python program, adding a **k-nearest neighbors** (**KNN**) algorithm, and measuring
    the results statistically.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们找到了 Google 翻译的局限性，我们最终将发现如何通过我们的自定义适配突破这些局限，方法是通过探索 Google 的 API 在 Python
    程序中添加**k-近邻**（**KNN**）算法，并进行统计测量。
- en: Contrary to media hype, artificial intelligence has only just begun to innovate
    human processes. A huge amount of work remains to be done. To achieve progress,
    everybody must get involved, as we'll discuss in this chapter. Even if Google,
    Amazon, Microsoft, IBM, and others offer a solution, this does not mean it cannot
    be improved by third parties as add-ons to existing solutions or new standalone
    products. After all, once Ford invented the Model T over a hundred years ago,
    this did not preclude the development of even better cars. On the contrary, look
    around you!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 与媒体炒作相反，人工智能仅刚刚开始创新人类流程。还有大量的工作需要完成。为了取得进展，大家都必须参与其中，正如我们将在本章中讨论的那样。即使 Google、亚马逊、微软、IBM
    等公司提供了解决方案，这也不意味着第三方不能通过附加到现有解决方案或新的独立产品来改进它。毕竟，一百多年前，福特发明了 Model T，但这并不排除更好的汽车的开发。相反，看看你周围！
- en: To take advantage of the AI adventure, we will go from understanding disruption
    in AI to Google Translate, and then innovate.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了利用 AI 的冒险之旅，我们将从理解 AI 中的颠覆开始，进入 Google 翻译，然后进行创新。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding the key concepts of AI innovation before starting to implement
    Google Translate
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在开始实现 Google 翻译之前，了解 AI 创新的关键概念
- en: The difference between inventions and innovations
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发明与创新的区别
- en: The difference between revolutionary and disruptive AI
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 革命性 AI 与颠覆性 AI 的区别
- en: Google Translate API implementation in Python
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 中实现 Google 翻译 API
- en: Introducing linguistics as a prerequisite to building any **natural language
    processing** (**NLP**) algorithm
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将语言学引入作为构建任何**自然语言处理**（**NLP**）算法的前提
- en: The KNN algorithm
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KNN 算法
- en: How to customize Google Translate with a KNN in Python
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在 Python 中使用 KNN 定制 Google 翻译
- en: We will start by exploring the key concepts of AI innovation and disruption.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从探索 AI 创新和颠覆的关键概念开始。
- en: All the Python programs and files in this chapter are available at [https://github.com/PacktPublishing/Artificial-Intelligence-By-Example-Second-Edition/tree/master/CH06](https://github.com/PacktPublishing/Artificial-Intelligence-By-Example-Second-Edition/tree/master/CH0).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中所有的 Python 程序和文件都可以在 [https://github.com/PacktPublishing/Artificial-Intelligence-By-Example-Second-Edition/tree/master/CH06](https://github.com/PacktPublishing/Artificial-Intelligence-By-Example-Second-Edition/tree/master/CH06)
    获取。
- en: 'There is also a Jupyter notebook named `COLAB_Translate.ipynb` that contains
    all of the Python programs in one run. You can upload it directly to Google Colaboratory
    using your Google account: [https://colab.research.google.com/](https://colab.research.google.com/).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个名为`COLAB_Translate.ipynb`的Jupyter笔记本，其中包含所有Python程序的一次运行。您可以使用您的Google帐户直接将其上传到Google
    Colaboratory：[https://colab.research.google.com/](https://colab.research.google.com/)。
- en: Understanding innovation and disruption in AI
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在人工智能中理解创新和颠覆
- en: The first question we must ask ourselves when starting a project such as a translation
    solution is to find out where we fit in. Is what we are going to do an invention
    or an innovation? Is our work disruptive or revolutionary? We will explore these
    concepts in this chapter to understand the broad pragmatic picture before going
    any further.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们启动诸如翻译解决方案等项目时，我们必须首先问自己的第一个问题是我们身处何方。我们要做的是发明还是创新？我们的工作是否具有颠覆性或革命性？我们将在本章探讨这些概念，以在进一步进行之前了解广阔的实用图景。
- en: Is AI disruptive?
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 人工智能是否具有颠覆性？
- en: The word "disruptive" is more often than not associated with artificial intelligence.
    Media hype tells us that AI robots will soon have replaced humans around the world.
    Although media hype made it much easier to obtain AI budgets, we need to know
    where we stand if we want to implement an AI solution. If we want to innovate,
    we need to find the cutting edge and build new ideas from there.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: “颠覆性”一词常常与人工智能联系在一起。媒体炒作告诉我们，AI机器人很快将在全球范围内取代人类。尽管媒体炒作使得获取AI预算变得更加容易，但如果我们想要实施AI解决方案，我们需要知道自己的立场。如果我们想要创新，我们需要找到前沿并从那里构建新的想法。
- en: Why not just plunge into the tools and see what happens? Is that a good idea
    or a risky one? Unlike corporations with huge budgets, a single human has limited
    resources. If you spend time learning in the wrong direction, it will take months
    to gather enough experience in another, better direction to reach your goal. For example,
    suppose you have trouble classifying large amounts of data, as we explored in
    *Chapter 4*, *Optimizing Your Solutions with K-means Clustering*. You will spend
    months on a project in your company and fail. It could cost you your job. Conversely,
    if you find the right model and learn the key concepts, your project can take
    off in a few days.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么不直接投入工具，看看会发生什么？这是个好主意还是冒险的主意？与拥有巨额预算的公司不同，一个人的资源有限。如果你在错误的方向上花费时间学习，将需要几个月的时间在另一个更好的方向上积累足够的经验以达到你的目标。例如，假设你在*第4章*中探讨了大量数据分类的问题，使用K均值聚类优化你的解决方案。你会在公司项目上花费数月时间并失败。这可能会让你失去工作。相反，如果你找到正确的模型并学习关键概念，你的项目几天内就能起飞。
- en: Before diving into a project, find out where we stand in terms of innovation
    and disruption. This doesn't seem important at the start of a project, but it
    will mean a lot during the production and distribution phases. This section will
    clarify these concepts.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入项目之前，请了解我们在创新和颠覆方面的立场。这在项目开始时似乎并不重要，但在生产和分发阶段会有很大影响。本节将阐明这些概念。
- en: Nothing is new under the sun—not even when considering AI. Most AI theory and
    mathematical tools have been around for decades, if not centuries. We often tend
    to think that since something appears new to us, it has just been invented or
    discovered. This mistake can prove fatal in many projects. If you know that a
    theory or function has been around for decades or centuries, you can do some deep
    research and use solutions found 100+ years ago to solve your present problems.
    If you do, you will save a lot of time using equations that have been proven and
    are reliable. If you do not, you might spend useless vital time reinventing equations
    that exist.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 太阳底下无新事，即使是考虑到人工智能。大多数人工智能理论和数学工具已经存在几十年，甚至几个世纪了。我们经常倾向于认为，某些事物对我们来说似乎是新的，就是刚刚发明或发现的。这种错误在许多项目中可能致命。如果你知道某个理论或函数存在几十年或几个世纪，你可以进行深入研究，并利用100多年前找到的解决方案来解决当前的问题。如果你这样做了，你将节省大量时间，使用经过验证且可靠的方程式。如果你不这样做，你可能会花费宝贵的时间重新发明已经存在的方程式。
- en: Finding out what is new and what is not will make a major difference in your
    personal or professional AI projects.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 弄清楚什么是新的，什么不是，将在你的个人或专业人工智能项目中产生重大影响。
- en: AI is based on mathematical theories that are not new
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AI基于并非新的数学理论
- en: AI theory presently relies heavily on applied mathematics. In *Chapter 1*, *Getting
    Started with Next-Generation Artifcial Intelligence through Reinforcement Learning*,
    the **Markov decision process** (**MDP**), a **reinforcement learning** (**RL**)
    approach was described. Google has been successfully combining RL with neural
    networks in AlphaGo Zero.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，人工智能的理论在很大程度上依赖于应用数学。在*第一章*，*通过强化学习启动下一代人工智能*中，描述了**马尔科夫决策过程**（**MDP**），这是一种**强化学习**（**RL**）方法。谷歌已成功地将强化学习与神经网络结合应用于AlphaGo
    Zero。
- en: Andrey Markov was a Russian mathematician born in 1856 who invented the MDP.
    He successfully applied the algorithm to letter predictions in a word sequence
    in a given language, for example. Richard Bellman published an enhanced version
    of the MDP in 1957.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 安德烈·马尔科夫（Andrey Markov）是1856年出生的俄罗斯数学家，他发明了马尔科夫决策过程。他成功地将这一算法应用于给定语言中的单词序列字母预测。例如，理查德·贝尔曼（Richard
    Bellman）在1957年发布了马尔科夫决策过程的改进版本。
- en: Bellman also coined the expression "curse of dimensionality" and published books
    on mathematical tools widely used today in AI. It is now well known that dimensionality
    reduction can be performed to avoid facing thousands of dimensions (features,
    for example) in an algorithm.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 贝尔曼还创造了“维度灾难”这一表述，并出版了在今天的人工智能中广泛使用的数学工具书籍。现在大家普遍知道，可以通过降维来避免在算法中面对成千上万的维度（例如特征）。
- en: The logistic function (see *Chapter 2*, *Building a Reward Matrix – Designing
    Your Datasets*) can be traced back to Pierre François Verhulst (1844-1845), a
    Belgian mathematician. The logistic function uses *e*, the natural logarithm base,
    which is also named Euler's number. Leonhard Euler (1707-1783) is a Swiss mathematician
    who worked on this natural logarithm.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑函数（见*第二章*，*构建奖励矩阵—设计数据集*）可以追溯到比利时数学家皮埃尔·弗朗索瓦·维尔赫斯特（Pierre François Verhulst，1844-1845）。逻辑函数使用*e*，即自然对数的底数，也被称为欧拉数。莱昂哈德·欧拉（Leonhard
    Euler，1707-1783）是瑞士数学家，他研究了这个自然对数。
- en: 'Thomas Bayes (1701-1761) invented the theorem that bears his name: Bayes''
    Theorem. It is widely used in AI. We will be using it in *Chapter 7*, *Optimizing
    Blockchains with Naive Bayes*.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 托马斯·贝叶斯（1701-1761）发明了以他名字命名的定理：贝叶斯定理。它在人工智能中被广泛应用。我们将在*第七章*，*通过朴素贝叶斯优化区块链*中使用它。
- en: Almost all of the applied mathematics in artificial intelligence, machine learning,
    and deep learning can be traced from 17th century to 20th century mathematicians.
    We must look elsewhere for 21st century AI innovations. We need to find what is
    truly new in AI, which is also what helped it expand so rapidly in the early 21st
    century.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有应用于人工智能、机器学习和深度学习的数学，都可以追溯到17世纪至20世纪的数学家。我们必须寻找21世纪人工智能创新的真正来源。我们需要找到人工智能中真正的新鲜元素，这也是它在21世纪初快速扩展的原因。
- en: Neural networks are not new
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 神经网络并不新颖
- en: Neural networks, as described by contemporary experts, date back to the 1940s
    and 1950s. Even **convolutional neural networks** (**CNNs**) date back to the
    20th century. Yann LeCun, a French computer scientist, laid down the basics of
    a CNN (see *Chapter 9*, *Abstract Image Classifcation with Convolutional Neural
    Networks (CNNs)*) in the 1980s; he successfully applied them as we know them today
    in the 1990s.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 正如当代专家所描述的，神经网络可以追溯到1940年代和1950年代。即使是**卷积神经网络**（**CNNs**）也追溯到20世纪。法国计算机科学家扬·勒昆（Yann
    LeCun）在1980年代奠定了卷积神经网络的基础（见*第九章*，*利用卷积神经网络（CNNs）进行抽象图像分类*）；他在1990年代成功地将其应用为今天我们所知的形式。
- en: We must again look elsewhere for 21st century AI innovations.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须再次寻找21世纪人工智能创新的来源。
- en: If neural networks are not new either, we must find the real new factors in
    our environment that produced the success of present-day AI.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果神经网络本身并不新颖，那么我们必须在我们当前的环境中找到真正促成现代人工智能成功的全新因素。
- en: Looking at disruption – the factors that are making AI disruptive
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从颠覆性的角度看—使人工智能具有颠覆性的因素
- en: Although the foundations of AI find their roots long before computers existed
    or were widespread, it is only recently that we have seen AI truly begin to cause
    waves within our society. In the following sections, we'll look at factors that
    have come together to make AI a powerful force of disruption in recent years.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管人工智能的基础源远流长，甚至在计算机出现之前或广泛普及之前就已存在，但只有最近我们才真正看到了人工智能在社会中开始产生波动。在接下来的章节中，我们将探讨导致人工智能在近年来成为强大颠覆性力量的各种因素。
- en: Cloud server power, data volumes, and web sharing of the early 21st century
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 21世纪初的云服务器算力、数据量以及网络共享
- en: It's important to understand what has driven the emergency of AI in recent years.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 了解近年来人工智能的崛起因素非常重要。
- en: Data volumes drive the emergence of AI in the 21st century. Processing data,
    classifying data, and making predictions and decisions would be impossible without
    AI driving the entire computer science market.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 数据量推动了21世纪人工智能的崛起。没有人工智能推动整个计算机科学市场，处理数据、分类数据以及做出预测和决策将变得不可能。
- en: If you leave the fantasy surrounding AI behind you and bear this key necessity
    for AI in mind, you will perfectly understand why AI has emerged and is here to
    stay.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你放下围绕人工智能的幻想，牢记人工智能的这一关键需求，你将完全理解为什么人工智能会出现并且会长期存在。
- en: The first sign of AI's innovative disruption appeared between the years 2000
    and 2010\. Before then, the internet existed, and servers existed. But, starting
    from around 2005, cloud servers were made widely available. With that kind of
    computing power, developers around the world could try using the highly greedy
    resources required by machine learning and deep learning. They could finally solve
    otherwise impossible big data problems using AI.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能创新性颠覆的第一个迹象出现在2000年至2010年间。在此之前，互联网和服务器已经存在。但从大约2005年开始，云服务器被广泛提供。有了这样的计算能力，世界各地的开发者可以尝试使用机器学习和深度学习所需的高度贪婪资源。他们终于能够利用人工智能解决那些原本无法解决的大数据问题。
- en: At the same time, as powerful servers became available, the internet provided
    the largest library of knowledge in the history of humanity.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，随着强大的服务器变得可用，互联网提供了人类历史上最大的知识库。
- en: On top of that, social networking became widely used. Sharing discoveries and
    source code became commonplace. The World Wide Web (WWW) encouraged open source
    software, boosting local research and development.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，社交网络的广泛使用也成为现实。分享发现和源代码变得司空见惯。万维网（WWW）促进了开源软件的传播，推动了本地研发。
- en: The era of artificial intelligence became possible for local experts starting
    from the middle of the first decade of the 21st century.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 从21世纪第一个十年中期开始，当地专家才有可能进入人工智能时代。
- en: What makes AI appear as an innovation today is the conjunction of more powerful
    machines and the availability of intellectual resources.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使人工智能今天看起来像一种创新的，是更强大的机器和知识资源的可用性相结合。
- en: Public awareness
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公众意识
- en: Public awareness of AI remained dim for several years after the cloud architectural
    revolution occurred from around 1995 to 2005.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在1995年到2005年间的云架构革命发生后，人工智能的公众认知仍然在几年的时间里保持低迷。
- en: AI hit us hard by around 2015 when we all woke up realizing that AI could massively
    replace humans and create job displacement at levels never before seen in human
    history.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 到2015年左右，人工智能给我们带来了强烈冲击，我们都意识到人工智能可能大规模替代人类，并在历史上前所未有的程度上造成工作岗位的替代。
- en: Worse, we realized that machines could beat us in fields we took pride in, such
    as chess (*Chapter 3*, *Machine Intelligence – Evaluation Functions and Numerical
    Convergence*), the game of Go, and video games. We see manufacturing jobs increasingly
    performed by robots, office jobs being done by bots, and more fields that are
    appearing every day.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 更糟糕的是，我们意识到机器可以在我们引以为豪的领域击败我们，例如国际象棋（*第3章*，*机器智能—评估函数和数值收敛*）、围棋以及视频游戏。我们看到越来越多的制造业工作由机器人完成，办公室工作由机器人完成，更多的领域每天都在出现。
- en: 'For the first time in human history, the human species can be surpassed by
    a new "species": smart bots. As developers, we thought we were safe until Google
    presented AutoML, a solution that could create machine learning solutions better
    than humans. At the same time, ready-to-use machine learning platforms have spread
    that can reduce and even replace AI software development.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 人类历史上第一次，人类物种可能会被一种新的“物种”——智能机器人超越。作为开发者，我们以为自己是安全的，直到谷歌推出了AutoML，这一解决方案能够创造出比人类更优秀的机器学习方案。与此同时，现成的机器学习平台已经广泛传播，可以减少甚至取代人工智能软件开发。
- en: Artificial intelligence inspires both awe and fear. How far will machines go?
    Will we simply experience job displacement, or will it go as far as species replacement?
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能既让人敬畏又让人恐惧。机器会走多远？我们会仅仅经历工作岗位的替代，还是它会走向物种的替代？
- en: Could this be an opportunity for many? Who knows? In any case, this chapter
    provides some guidance to help you to think in a way that drives you to be constantly
    innovating and being useful. In the age of Big Data, where we are often faced
    with huge datasets, AI is here to stay; we won't be able to cope without it. Let's
    make the most of it!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这会是许多人得到机会的时刻吗？谁知道呢？无论如何，本章提供了一些指导，帮助你以一种推动你不断创新和有用的方式进行思考。在大数据时代，我们经常面临巨大的数据集，人工智能已经来临，它将长期存在；没有它我们将无法应对。让我们充分利用它吧！
- en: Before we begin to look into the incredible opportunities provided by AI, let's
    clarify in our minds what exactly the differences are, first between *invention*
    and *innovation*, and then *revolution* versus *disruption*. It is important to
    understand the impact that what we are developing and implementing will have on
    the AI market.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始深入了解人工智能带来的惊人机遇之前，让我们首先在脑海中澄清一下，究竟发明与创新的区别是什么，然后是**革命**与**颠覆**的区别。理解我们正在开发和实施的东西对人工智能市场的影响非常重要。
- en: Inventions versus innovations
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发明与创新
- en: Some AI programs, especially deep learning algorithms, remained inventions and
    not innovations until Google and other major players used them on a large scale.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一些人工智能程序，特别是深度学习算法，直到 Google 和其他大玩家大规模使用它们时，才从发明变成了创新。
- en: If you have invented a better algorithm than Google for some applications, it
    remains an invention until it actually *changes* something in your corporation
    or on the web.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发明了一个比 Google 更好的算法用于某些应用，它依然是一个发明，直到它真正*改变*了你公司的某些东西或在网上产生了影响。
- en: Suppose you find a quicker way to recognize an image through an optimized number
    of neurons and a new activation function. If nobody uses it, then that invention
    remains a personal theoretical finding no matter how good it appears.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你通过优化神经元数量和一种新的激活函数，找到了一种更快的图像识别方法。如果没有人使用它，那么无论它看起来多么优秀，这项发明依然只是个人的理论发现。
- en: When others begin to use this new algorithm, then it becomes an innovation.
    An invention becomes an innovation only when it changes a process within a company
    or by a sufficient number of private users.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当其他人开始使用这个新算法时，它就变成了创新。发明只有在它改变了公司内的某个过程，或者有足够多的私人用户使用时，才会成为创新。
- en: Revolutionary versus disruptive solutions
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 革命性与颠覆性解决方案
- en: Suppose a new image recognition algorithm becomes an innovation in a significant
    corporation. This new algorithm has gone from being an **invention** (not used)
    to an **innovation** (a solution making a difference).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 假设一个新的图像识别算法在一家大公司中成为了创新。这个新算法已经从**发明**（未使用）变成了**创新**（一个改变现状的解决方案）。
- en: The corporation now widely uses the algorithm. Every subsidiary has access to
    it. For this corporation, the new image recognition algorithm has attained a revolutionary
    status. Corporate sales have gone up, and profit margins have as well.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 该公司现在广泛使用该算法。每个子公司都可以使用它。对这家公司而言，这个新的图像识别算法已达到了革命性的地位。公司销售额和利润率都有所上升。
- en: But maybe this corporation does not dominate the market, and nobody has followed
    its example. The innovation remains revolutionary but has not become disruptive.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 但也许这家公司并没有主导市场，并且没有人跟随它的例子。这个创新依然是革命性的，但尚未成为颠覆性的。
- en: Then, let's say the person who created the algorithm decides to leave the company
    and start a business with the algorithm. It appears on GitHub as an open source
    program. Everybody wants it and the number of downloads increases daily until
    1,000,000+ users have begun to implement it. Some very low-priced add-ons are
    provided on the company website. Within a year, it becomes a new way of recognizing
    images. All companies must follow suit or lag behind. The solution has become
    **disruptive** because it has changed its market on a global scale.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，假设创建算法的人决定离开公司并用该算法创业。它出现在 GitHub 上，作为一个开源程序。每个人都想要它，下载量每天都在增加，直到 1,000,000+
    用户开始实施它。公司网站上提供了一些非常低价的附加组件。不到一年，这个算法就成为了一种新的图像识别方式。所有公司必须跟进，否则就会落后。这一解决方案变得**具有颠覆性**，因为它已经在全球范围内改变了市场。
- en: Where to start?
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从哪里开始？
- en: We have now explored the basic concepts of creating AI. The first step in a
    translation project using Google Translate is to take the algorithm as far as
    possible using Google's API. As we will see in the next section, we will explore
    the limits of Google Translate. Once the limit is found, creativity kicks in when
    we customize Google Translate using AI.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经探索了创建人工智能的基本概念。在使用 Google Translate 进行翻译项目的第一步是尽可能通过 Google 的 API 使用该算法。正如我们将在下一节中看到的，我们将探索
    Google Translate 的极限。一旦找到这些极限，我们就可以通过人工智能定制 Google Translate，发挥创造力。
- en: We will discover that even if a solution exists, it has limits and can be improved,
    customized, packaged, and sold. *If there is a limit, there is a market*.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将发现，即使一个解决方案已经存在，它仍然有其局限性，可以改进、定制、包装和销售。*有局限性，就有市场*。
- en: Never criticize the flaws you find in an AI solution; they are gold mines!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 永远不要批评你在人工智能解决方案中发现的缺陷；它们是金矿！
- en: '*Where there is a limit, there is an opportunity*.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '*哪里有局限，哪里就有机会*。'
- en: Let's go to the cutting edge and then over the border into uncharted territory
    using Google Translate to illustrate this.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们走在最前沿，然后越过边界进入未知领域，使用 Google Translate 来进行说明。
- en: Discover a world of opportunities with Google Translate
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 Google Translate 探索一个充满机会的世界
- en: Starting with Google Translate to explore NLP is a good way to prepare to use
    NLP in web solutions. Any disruptive web-based solution must be able to run in
    at least a few languages. You will need to master NLP in several languages to
    implement a chatbot, a translation solution, and online information sites such
    as Wikipedia.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Google Translate 开始探索 NLP 是为在 web 解决方案中使用 NLP 做准备的一个好方法。任何颠覆性的基于 Web 的解决方案必须至少能支持几种语言。你需要掌握多种语言的
    NLP，才能实现一个聊天机器人、翻译解决方案以及像 Wikipedia 这样的在线信息网站。
- en: Google provides many resources to use, explore, or improve Google Translate.
    Getting a Python code to run and then assess the quality of the results will prove
    vital before implementing it for crucial translations in a company. Let's get
    Google Translate running.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Google 提供了许多资源来使用、探索或改善 Google Translate。运行 Python 代码并评估结果的质量，在将其用于公司中的重要翻译之前是至关重要的。让我们开始运行
    Google Translate。
- en: Getting started
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: 'Google''s developers'' API client library page is as follows: [https://developers.google.com/api-client-library/](https://developers.google.com/api-client-library/).
    On this page, you will see libraries for many languages: Java, PHP, .NET, JavaScript,
    Objective-C, Dart, Ruby and more.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Google 开发者 API 客户端库页面如下：[https://developers.google.com/api-client-library/](https://developers.google.com/api-client-library/)。在这个页面上，你将看到许多语言的库：Java、PHP、.NET、JavaScript、Objective-C、Dart、Ruby
    等。
- en: Then, go to the Python resources and follow the instructions to sign up, create
    a project in the Google API Console, and install the library.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，进入 Python 资源并按照说明进行注册，在 Google API 控制台中创建一个项目并安装库。
- en: If you encounter problems doing this part or do not wish to install anything
    yet, this chapter is self-contained. The source code is described in the chapter.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在做这一部分时遇到问题，或者暂时不想安装任何东西，这一章是独立的。源代码在这一章中有描述。
- en: You are now ready to go, irrespective of whether you installed the tools.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是否安装了工具，你现在都可以开始了。
- en: The program
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 程序
- en: The goal of this section is to implement Google Translate functionality. You
    can implement and run the program or first simply read the self-contained section.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的目标是实现 Google Translate 功能。你可以实现并运行程序，或者首先仅阅读这一独立章节。
- en: The header
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 头部
- en: 'The standard Google header provided by Google should be enough to get the API
    to work, as shown in the following code:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Google 提供的标准头部应足以使 API 工作，如以下代码所示：
- en: '[PRE0]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Considering the many languages Google manages, special characters are a major
    problem to handle. Many forums and example programs on the web struggle with the
    `UTF-8` header when using Google Translate. Many solutions are suggested, such
    as the following source code header.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到 Google 管理的多种语言，特殊字符是需要处理的主要问题。许多论坛和示例程序在使用 Google Translate 时都面临 `UTF-8`
    头部的问题。很多解决方案被提出，以下是一个建议的源代码头部。
- en: '[PRE1]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then, when Google Translate returns the result, more problems occur, and many
    develop their own functions. They work fine, but I was looking for a straightforward
    one-line solution. The goal here was not to have many lines of code but focus
    on the limit of Google Translate to discover the cutting-edge interpreting languages
    in AI.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，当 Google Translate 返回结果时，会发生更多问题，许多人开发了自己的函数。它们运行得很好，但我在寻找一种简单的单行解决方案。这里的目标不是写很多行代码，而是专注于
    Google Translate 的限制，以发现 AI 中前沿的语言翻译技术。
- en: So, I did not use the `UTF-8` header, but implemented it using the HTML library.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我没有使用 `UTF-8` 头部，而是使用 HTML 库来实现。
- en: '[PRE2]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When confronted with a result, the following one-line HTML parser code did the
    job.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 面对一个结果时，以下这行 HTML 解析器代码完成了任务。
- en: '[PRE3]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It works well because Google will return an HTML string or a text string depending
    on what option you implement. This means that the HTML module can do the job.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 它运行良好，因为 Google 会根据你实现的选项返回一个 HTML 字符串或文本字符串。这意味着 HTML 模块可以完成任务。
- en: Implementing Google's translation service
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现 Google 的翻译服务
- en: 'Google''s translation service needs at least three values to return a result:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Google 的翻译服务需要至少三个值才能返回结果：
- en: '`developerKey`: This is the API key obtained at the end of the getting-started
    process described previously.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`developerKey`：这是在前面描述的入门过程结束时获得的 API 密钥。'
- en: '`q="text to translate"`: In my code, I used `source`.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`q="text to translate"`：在我的代码中，我使用了 `source`。'
- en: '`target="abbreviation of the translated text"`: `en` for English, `fr` for
    French, and so on.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`target="translated text abbreviation"`: `en` 表示英语，`fr` 表示法语，依此类推。'
- en: More options are available, as described in the following sections.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如下节所述，提供了更多的选项。
- en: 'With this in mind, the translation function will work as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个考虑，翻译功能将按如下方式工作：
- en: '[PRE4]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the `Google_translate.py` program, `q` and `target` will be sent to the
    function to obtain a parsed result:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `Google_translate.py` 程序中，`q` 和 `target` 将被发送到函数中，以获取解析结果：
- en: '[PRE5]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To sum up the program, let''s translate Google Translate into French, which
    contains accents parsed by the HTML parser:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下程序，让我们将 Google 翻译翻译成法语，其中包含通过 HTML 解析器解析出的重音：
- en: '[PRE6]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`Google_Translate.py` works fine. The result will come out with the correct
    answer and the parsed accent:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '`Google_Translate.py` 工作正常。结果将输出正确的答案，并解析出重音：'
- en: '[PRE7]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: At this point, Google Translate satisfies a black box exploration approach.
    It is disruptive, has changed the world, and can replace translators in many corporations
    for all corporate needs.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，Google 翻译满足了黑箱探索方法。它具有颠覆性，改变了世界，并且可以在许多公司中替代翻译员，处理所有企业需求。
- en: In fact, we could end the chapter here, go to our favorite social network, and
    build some hype on our translation project.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，我们可以在这里结束本章，去我们最喜欢的社交网络上制造一些关于翻译项目的热度。
- en: Happy ending?
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 幸福的结局？
- en: Well, not yet!
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，还没有！
- en: We need to explore Google Translate from a linguist's perspective.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要从语言学家的角度来探索 Google 翻译。
- en: Google Translate from a linguist's perspective
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从语言学家的角度看 Google 翻译
- en: A linguist's approach to the program will involve a deeper, white box sort of
    exploration. The method will reveal many areas to improve.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 语言学家对该程序的分析将涉及更深层次的白箱式探索。这个方法将揭示出许多改进的领域。
- en: By the time this book is published, perhaps Google will have improved the examples
    in this chapter. But don't worry; in this case, you will quickly find hundreds
    of other examples that are incorrect. The journey has just begun!
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 等到这本书出版时，也许 Google 已经改进了本章中的示例。但别担心，在这种情况下，你会很快发现成百上千个其他不正确的示例。旅程才刚刚开始！
- en: Playing with the tool
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 玩转这个工具
- en: Playing with a tool with random examples can lead to surprising results. This
    exploratory source code is saved as `Google_translate_a_few_test_expressions.py`.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 玩转一个包含随机示例的工具，可能会得到令人惊讶的结果。这个探索性的源代码保存为 `Google_translate_a_few_test_expressions.py`。
- en: 'The program simulates a dialog created by a person named Usty as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 程序模拟了由一个名叫 Usty 的人创建的对话，如下所示：
- en: '[PRE8]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The first two examples look fine in French, although the second translation
    is a bit strange. But in the third test, the expression *chercher des poux* means
    *looking for trouble* in English, and not looking for lice, as translated into
    French.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 前两个示例在法语中看起来很好，尽管第二个翻译有点奇怪。但在第三个测试中，表达式 *chercher des poux* 意味着英语中的 *looking
    for trouble*（寻找麻烦），而不是翻译成法语的寻找虱子。
- en: A linguistic assessment of Google Translate will now be made.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将对 Google 翻译进行语言评估。
- en: Linguistic assessment of Google Translate
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对 Google 翻译的语言学评估
- en: Assessing Google Translate correctly will lead directly to its limits.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 正确评估 Google 翻译将直接导致发现其局限性。
- en: Limits are the boundaries researchers crave! We are frontiersmen!
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 限制是研究人员渴望的边界！我们是拓荒者！
- en: An expert-level assessment will lead the project team to the frontier and beyond.
    To do this, we will first explore some linguistic methods.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 专家级评估将引领项目团队走向前沿，甚至超越它。为了做到这一点，我们将首先探索一些语言学方法。
- en: Lexical field theory
  id: totrans-127
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 词汇场理论
- en: Lexical fields describe word fields. A word only acquires its full meaning when
    interpreted within a context. This context often goes beyond a few other words
    or even a sentence.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 词汇场描述的是词汇的领域。只有在特定语境中，词语才能获得其完整的含义。这个语境往往不仅仅局限于几个其他词汇或甚至是一个句子。
- en: '*Chercher des poux* translated as such means *look for lice*. But in French,
    it can mean *looking for trouble* or literally *looking for lice*. The result
    that Google Translate comes up with contains three basic problems.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '*Chercher des poux* 翻译过来意味着 *look for lice*（寻找虱子）。但在法语中，它可以意味着 *looking for
    trouble*（寻找麻烦）或者字面意义上的 *looking for lice*（寻找虱子）。Google 翻译得出的结果包含了三个基本问题。'
- en: '[PRE9]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Problem 1 – the lexical field**: There is no way of knowing whether this
    means looking for lice or looking for trouble without a context.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题 1 – 词汇场**：如果没有上下文，就无法知道这意味着寻找虱子还是寻找麻烦。'
- en: '**Problem 2 – metaphors or idiomatic expressions**: Suppose you have to translate
    *this is giving you a headache*. There is no way of knowing whether it is a physical
    problem or a metaphor meaning *this is driving you crazy*. These two idiomatic
    expressions happen to have the same metaphors when translated into French. But
    the *lice* metaphor in French means nothing in English.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题 2 – 比喻或习惯表达**：假设你需要翻译*this is giving you a headache*。你无法知道这是否是一个物理上的问题，还是指代比喻意义上的*this
    is driving you crazy*。这两个习惯表达在翻译成法语时恰好使用了相同的比喻。然而，法语中的*lice*（虱子）比喻在英语中没有意义。'
- en: '**Problem 3**: *chercher* is an infinitive in French, and the result should
    have been *looking* for lice in English. But entering *chercher des limites est
    intéressant* provides the right verb form, which is *looking for*:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题 3**：*chercher*在法语中是一个不定式，结果应该是英语中的*looking* for lice（寻找虱子）。但是输入*chercher
    des limites est intéressant*给出的正确动词形式是*looking for*：'
- en: '[PRE10]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The answer is correct because *is* splits the sentence into two, making it easier
    for Google Translate to identify *chercher* as the first part of a sentence, thus
    using *looking* in English.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是正确的，因为*is*将句子分成了两部分，这使得Google Translate能够更容易地识别*chercher*是句子的第一部分，从而在英语中使用*looking*。
- en: Lexical fields vary from language to language, but so does jargon.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 词汇领域在不同语言间存在差异，行话也是如此。
- en: Jargon
  id: totrans-137
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 行话
- en: Jargon arises when fields specialize. In AI, the expression *hidden neurons*
    is jargon. This expression means nothing to a lawyer, for example. A lawyer may
    think you have hidden intelligence on the subject somewhere or are hiding money
    in a cryptocurrency named hidden neuron.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 行话是在专业领域中产生的。在人工智能领域，*hidden neurons*（隐藏神经元）就是行话。这个表达对律师来说毫无意义。例如，律师可能认为你在某个领域拥有隐藏的智慧，或者你在某种名为隐藏神经元的加密货币中藏了钱。
- en: In the same way, if somebody asks an AI expert to explain the exact meaning
    of *filing a motion*, that would prove difficult.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，如果有人要求AI专家解释*filing a motion*的确切含义，那将是一个困难的任务。
- en: In a corporate legal environment, beyond using Google Translate as a dictionary,
    translating sentences might be risky if only a random number of results prove
    to be correct.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在企业法律环境中，除了将Google Translate作为字典使用外，翻译句子可能存在风险，尤其是当只有随机的结果是正确时。
- en: If we add the jargon variations to the lexical variations from one language
    to another, we can see that word-to-word translation does not work when a word
    is in a context. Translating is thus more than just finding the most similar words
    in the language we are translating to.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将术语变化与语言间的词汇变化结合起来，我们会发现当一个词处于某种上下文中时，逐词翻译是行不通的。因此，翻译不仅仅是找到目标语言中最相似的词汇。
- en: Translating is not just translating but interpreting
  id: totrans-142
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 翻译不仅仅是翻译，而是解读。
- en: 'Sometimes, translating requires interpreting, as shown with the following sentence
    taken from a standard description of French commercial law:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，翻译需要解读，如下句所示，它取自法国商业法的标准描述：
- en: '[PRE11]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The French sentence refers to a type of company; SAS is similar to company types
    like inc., ltd., and so on. In English, SAS means Special Air Service. Then comes
    the grammar, which does not sound right.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 法语句子指的是一种公司类型；SAS类似于英文中的inc.、ltd.等公司类型。然而在英语中，SAS是指特别空勤团。接着是语法问题，听起来不太对。
- en: 'A translator would write better English and also specify what an SAS is:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译者会写出更好的英语，并且明确说明SAS是什么：
- en: '*An SAS (a type of company in France) must follow the recommendations that
    cover commercial practices.*'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '*An SAS（法国的一种公司）必须遵循涵盖商业实践的建议。*'
- en: Translating often means interpreting, and not simply translating words.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译通常意味着解读，而不仅仅是翻译词语。
- en: 'In this case, a legal translator may interpret the text in a contract and go
    as far as writing:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，法律翻译者可能会解读合同中的文本，并且可能会写道：
- en: '*The COMPANY must respect the legal obligation to treat all customers fairly.*'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '*The COMPANY must respect the legal obligation to treat all customers fairly.*'
- en: The legal translator will suggest that *COMPANY* be defined at the beginning
    of the contract to avoid confusion, such as the one Google Translate just made.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 法律翻译者会建议在合同开始时定义*COMPANY*，以避免像Google Translate刚刚做出的混淆。
- en: When reading about NLP, chatbots, and translation, everything seems easy. However,
    working on Google Translate can easily turn into a nightmare!
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 当阅读关于自然语言处理、聊天机器人和翻译的文章时，一切似乎都很简单。然而，使用Google Translate却很容易变成一场噩梦！
- en: 'Let''s take one last example:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再举一个最后的例子：
- en: '[PRE12]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Google Translate provides the output in French:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: Google Translate给出的法语输出：
- en: '[PRE13]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In French, as in English, it is better to say *project team* and not use *of*
    to say the *team of the project*. In French, we have *équipe projet* (équipe (team)
    appears before project).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在法语中，像在英语中一样，更好地说 *project team*，而不是使用 *of* 来表示 *team of the project*。在法语中，我们使用
    *équipe projet*（团队（équipe）在项目（projet）之前）。
- en: 'From our examples so far, we can see that Google Translate is:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 从目前的例子来看，我们可以看到谷歌翻译是：
- en: Sometimes correct
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时正确
- en: Sometimes wrong
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时错误
- en: Sometimes partly correct and partly wrong
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时部分正确，部分错误
- en: The problem now is how to know which category a translation is in.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的问题是，如何知道某个翻译属于哪种类别。
- en: How to know whether a translation is correct
  id: totrans-163
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 如何判断翻译是否准确
- en: How can you check a translation if you do not know the language?
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不懂某种语言，怎么检查翻译是否准确？
- en: Be careful. If Google Translate provides randomly correct answers in another
    language, then you have no way of knowing whether the translation is reliable
    or not.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 小心。如果谷歌翻译提供的另一种语言的答案偶尔是正确的，那么你无法判断这个翻译是否可靠。
- en: If you can't be confident that Google Translate is going to be correct, you
    may find yourself in difficult situations; even sending the opposite of what you
    mean to somebody important to you. You may misunderstand a sentence you are trying
    to understand.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不能确信谷歌翻译会是正确的，你可能会陷入困境，甚至把与你重要的人说反了话。你可能会误解你正在试图理解的句子。
- en: 'In a transportation company, for example, you could write an email stating
    that the coach stopped and people were complaining:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 比如在一家运输公司，你可能会写一封电子邮件，表示大巴停了下来，人们正在抱怨：
- en: '[PRE14]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Google Translate, for lexical field reasons, got it wrong and translated *coach*
    as a sports trainer in French, which would give a completely different meaning
    to the sentence:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌翻译由于词汇场的原因，将 *coach* 错误地翻译成法语中的体育教练，这会给句子带来完全不同的意义：
- en: '[PRE15]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Now, the situation can get worse. To help Google Translate, let's add some context.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，情况可能变得更糟。为了帮助谷歌翻译，我们来添加一些上下文。
- en: '[PRE16]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This answer is worse. Google Translate translates *broke down* correctly with
    the French expression *en panne* but still translates *coach* as *entraineur*
    (trainer) in French, meaning the *trainer* broke down, not the *coach* (bus).
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这个答案更糟糕。谷歌翻译正确地将 *broke down* 翻译成法语表达 *en panne*，但仍然将 *coach* 翻译成法语中的 *entraineur*（教练），这意味着是
    *教练* 出故障，而不是 *大巴*（coach）。
- en: '[PRE17]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Google will no doubt continue to improve the program as it has done since 2006\.
    For now, however, a human translator will find hundreds of expressions Google
    Translate cannot deal with yet.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问，谷歌会继续改进这个程序，就像自2006年以来所做的那样。然而，就目前而言，人类翻译员会发现谷歌翻译无法处理的成百上千个表达方式。
- en: Understanding a sentence in your native language can prove difficult when a
    word or an expression has several meanings. Adding a translation function to the
    issue makes it even more difficult to provide a reliable answer.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个词或表达有多个意思时，理解你母语中的一句话可能会变得困难。加入翻译功能后，这个问题变得更加复杂，很难给出可靠的答案。
- en: And that is where we reach the frontier, just beyond the cutting edge, as we
    have established the limits of Google Translate.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们到达前沿的地方，超越了最前沿，因为我们已经确立了谷歌翻译的局限。
- en: In the next section, we'll look at some ways we could improve standard Google
    Translate results. Although no silver bullet exists to verify a translation, we
    will explore methods to improve the process. We will find a way to improve Google
    Translate and implement it.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将探讨一些改进标准谷歌翻译结果的方法。虽然没有灵丹妙药可以验证翻译，但我们将探索改善翻译过程的方法。我们将找到一种改进谷歌翻译的方法，并付诸实践。
- en: AI as a new frontier
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 人工智能作为新前沿
- en: Google has a great, but limited, translation program. Use the flaws to innovate!
    AI research and development has just scratched the surface of the innovations
    to come.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌有一个出色，但有限的翻译程序。利用这些缺陷进行创新！人工智能的研究和开发才刚刚开始，未来的创新才刚刚起步。
- en: First, implement an AI solution. Then, use it for what it is. But don't accept
    its limits. Don't be negative about it. Innovate! Imagine ideas or listen to other
    ideas you like and build solutions in a team! Google might even publish your solutions!
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，实施一个AI解决方案。然后，用它来解决实际问题。但不要接受它的局限性。不要对它持负面态度。创新！想出新点子或倾听你喜欢的其他想法，并在团队中构建解决方案！谷歌甚至可能会发布你的解决方案！
- en: Improving Google Translate for any translation is impossible. A realistic approach
    is to focus on customizing Google Translate for a given domain, such as the transportation
    company in this example. In the next section, we will focus on ways to customize
    Google Translate.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 改进 Google 翻译的任何翻译都是不可能的。一个现实的方法是专注于根据特定领域定制 Google 翻译，例如本例中的交通公司。在下一部分中，我们将重点讨论如何定制
    Google 翻译。
- en: Lexical field and polysemy
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 词汇领域与多义性
- en: '`Google_Translate_Customized.py` will provide ideas on how to improve Google
    Translate in a specific area. This section focuses on the transportation vocabulary
    error Google Translate made. Once again, Google may rapidly correct this error,
    but the method can be applied to the many remaining errors.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`Google_Translate_Customized.py` 将提供如何在特定领域改善 Google 翻译的思路。本节集中在 Google 翻译在交通词汇上所犯的错误。再次强调，Google
    可能会迅速纠正这个错误，但这个方法可以应用于许多剩余的错误。'
- en: A **lexical field** contains words that form sets and subsets. They differ from
    one language to another. A language itself forms a set and contains subsets of
    lexical fields.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '**词汇领域**包含构成集合和子集的单词，它们在不同语言中有所不同。一种语言本身构成一个集合，并包含词汇领域的子集。'
- en: 'Colder countries have more words describing water in its frozen form than tropical
    countries where snow hardly ever falls. A lexical field of cold could be a subset
    of *C*:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 寒冷国家描述冰冻状态下水的单词比热带国家更多，因为热带国家几乎不下雪。寒冷的词汇领域可以是 *C* 的一个子集：
- en: '*C* = {*ice*, *hail*, *snowflakes*, *snowman*, *slushy*, *powder*, *flake*,
    *snowball*, *blizzard*, *melting*, *crunch* … *n*}'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '*C* = {*ice*（冰），*hail*（冰雹），*snowflakes*（雪花），*snowman*（雪人），*slushy*（泥泞的），*powder*（粉雪），*flake*（薄片），*snowball*（雪球），*blizzard*（暴风雪），*melting*（融化），*crunch*（咔嚓声）……*n*}'
- en: The curse of dimensionality applies here. Words contain an incredible number
    of dimensions and definitions. To translate certain expressions, Google Translate
    suppresses their dimensions and reduces them.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这里适用维度诅咒（curse of dimensionality）。词语包含着极为丰富的维度和定义。为了翻译某些表达，Google 翻译压缩了它们的维度并进行了简化。
- en: Google Translate often uses n-grams to translate. An n-gram is a fixed-length
    sequence of tokens. Tokens can be a word, a character, or even a numerical representation
    of words and characters.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Google 翻译常常使用 n-grams 来翻译。n-grams 是固定长度的词语序列。词语（token）可以是一个单词、一个字符，甚至是单词和字符的数值表示。
- en: The probability that token *n* means something is calculated given the preceding/following
    *n* – *x* or *n* + *x* tokens. *x* is a variable depending on the algorithm applied.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 令牌 *n* 的意义是根据前后 *n* – *x* 或 *n* + *x* 个令牌计算得出的。*x* 是一个变量，取决于所应用的算法。
- en: For example, *slushy* has a special meaning in the expression *slushy snow*.
    The snow is partly melting, it's watery and making a *slushing* sound when we
    walk through it. Melting is only one component of the meaning of *slush*.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，*slushy* 在表达 *slushy snow* 时有特殊含义。雪开始部分融化，呈现出水状，走过时会发出 *slushing* 声音。融化只是
    *slush* 含义的一个组成部分。
- en: 'Google Translate, at this point, will only translate *slushy snow* in French
    by:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，Google 翻译只会将 *slushy snow* 翻译成法语为：
- en: '*neige* (snow) *fondante* (melting)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '*neige*（雪） *fondante*（融化）'
- en: 'Google Translate will also translate *melting snow* by:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Google 翻译也会将 *melting snow* 翻译为：
- en: '*neige* (snow) *fondante* (melting)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '*neige*（雪） *fondante*（融化）'
- en: To translate *slushy* into French, you have to use a phrase. To find that phrase,
    you need some imagination or have some parsed (searched) novels or other forms
    of speech representations. That takes time and resources. It will most probably
    take years before Google Translate reaches an acceptable native level in all the
    languages publicized.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 *slushy* 翻译成法语，你必须使用一个短语。要找到这个短语，你需要一些想象力，或者查看一些已经解析过的（搜索过的）小说或其他语言表达形式。这需要时间和资源。Google
    翻译可能要经过多年，才能在所有公开的语言中达到一个可接受的母语水平。
- en: Another dimension to take into account is polysemy.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要考虑的维度是多义性。
- en: Polysemy means a word can have several very different meanings in a language.
    The equivalent word in another language may simply have one meaning or other,
    very different meanings.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 多义性意味着一个词在一种语言中可以有多个非常不同的含义。另一种语言中对应的词可能只有一个意思，或者有其他完全不同的意思。
- en: '"Go + over" in English can mean *go over a bridge* or *go over some notes*.
    At this point (hopefully it will improve by the time you read this book), it is
    translated in both cases in French by *aller sur*. This means to go on (not over),
    which is incorrect in both cases. Prepositions in English constitute a field in
    themselves, generating many meanings with the same word. The verb *go* can have
    a wide list of meanings: *go up* (upstairs), *go up* (stock market), *go down*
    (downstairs), *go down* (fall apart), and many more possibilities besides.'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 英语中的"Go + over"可以表示*走过一座桥*或*复习一些笔记*。在这一点上（希望你阅读本书时它会有所改进），它在法语中两种情况都被翻译为*aller
    sur*。这意味着走上去（而不是走过），在这两种情况下都是不正确的。英语中的介词构成了一个独立的领域，同一个单词可以产生许多不同的意思。动词*go*有很多意思：*go
    up*（楼上），*go up*（股市），*go down*（楼下），*go down*（崩溃），还有很多其他可能性。
- en: 'The prototype customized program starts with defining `X`. A small dataset
    to translate that will be more than enough to get things going:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 原型定制程序从定义`X`开始。一个小数据集来翻译，足以让事情开始运转：
- en: '[PRE18]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: If you find spelling mistakes or minor mistakes, do not correct them during
    the training phase. Some amount of noise is required to reproduce human and machine
    errors to avoid overfitting.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现拼写错误或小错误，请在训练阶段不要纠正它们。一定程度的噪声是必要的，以便复制人类和机器错误，避免过拟合。
- en: Google Translate will automatically translate these sentences.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: Google翻译将自动翻译这些句子。
- en: '`X1`, as implemented in the following code, defines some keywords statistically
    related to the sentences; it applies the n-gram probability theory described previously.'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '`X1`，如以下代码所示，定义了一些与句子统计相关的关键词；它应用了前面描述的n-gram概率理论。'
- en: '[PRE19]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Each line in `X1` goes with the corresponding line in `X`. As explained, this
    only remains a probability and may not be correct.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`X1`中的每一行都对应`X`中的一行。如前所述，这只是一个概率，可能不正确。'
- en: '*We are not seeking perfection at this point but an improvement.*'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们此时并不追求完美，而是寻求改进。*'
- en: Let's explore how we can improve Google Translate by customizing translations
    by implementing a KNN in a Python program.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索如何通过在Python程序中实现KNN来定制翻译，进而改善Google翻译。
- en: Exploring the frontier – customizing Google Translate with a Python program
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索前沿——用Python程序定制Google翻译
- en: Now it's time to add some customized novelties. The use of the vectors in this
    section will be explained in the next section, again through the source code that
    uses them.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候添加一些定制的新内容了。本节中向量的使用将在下一节中通过使用它们的源代码进行解释。
- en: 'A trigger vector will force the program to try an alternate method to translate
    a mistranslated sentence. When the sentence has been identified, and if its value
    in `X2` is equal to `1`, it triggers a deeper translation function, as implemented
    here:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 一个触发向量将迫使程序尝试另一种方法来翻译一个误翻的句子。当句子被识别出来时，如果它在`X2`中的值等于`1`，则触发一个更深层次的翻译功能，如下所示：
- en: '[PRE20]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '`0` and `1` are flags. Each value represents a line in `X`.'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '`0`和`1`是标记。每个值代表`X`中的一行。'
- en: '**Note for developers**: To use this method correctly, all the values of this
    vector should be set to `1`. That will automatically trigger several alternate
    methods to translate Google Translate errors. A lot of work remains to be done
    here!'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '**开发者注意**：要正确使用此方法，所有这些向量的值应设置为`1`。这将自动触发多种替代方法来翻译Google翻译错误。这里还有很多工作要做！'
- en: The example is taken from a transportation business. A transportation phrase
    dictionary should be built. In this case, a general `phrase_translation` dictionary
    has been implemented with one expression, as shown in the following array.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 示例取自运输业务。应该建立一个运输短语词典。在这种情况下，已经实现了一个通用的`phrase_translation`词典，包含一个表达式，如下数组所示。
- en: '[PRE21]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: What remains to be done in order to fill up this dictionary?
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 为了填充这个词典，还需要做什么？
- en: Scan all the documents of the company—emails, letters, contracts, and every
    form of written documents.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描公司所有的文件——电子邮件、信件、合同和所有形式的书面文件。
- en: Store the embedded words and sentences.
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储嵌入的单词和句子。
- en: Train the team to use the program to improve it by providing feedback (the right
    answer) in a learning interface when the system returns incorrect answers.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练团队使用该程序，通过在学习界面中提供反馈（正确答案）来改进它，当系统返回错误答案时。
- en: What Google Translate cannot do on a global scale, you can implement at a local
    scale to improve the system significantly.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: Google翻译无法在全球范围内做到的，你可以在本地范围内实施，以显著改进系统。
- en: Now that we have defined a method, we will dig into the KNN algorithm.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经定义了一个方法，我们将深入研究KNN算法。
- en: k-nearest neighbor algorithm
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: k最近邻算法
- en: 'No matter how you address a linguistic problem, it will always boil down to
    the concept of **context**. When somebody does not understand somebody else, they
    say: "you took my words out of their context," or "that is not what I meant; let
    me explain."'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你如何解决语言学问题，最终都归结为**语境**的概念。当某人无法理解另一个人时，他们会说：“你把我的话断章取义了”或“那不是我的意思，让我解释一下。”
- en: As explained before, in many cases, you cannot translate a word or expression
    without a lexical field. The difficulty remains proportional to the polysemy property,
    as the program will show.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，在许多情况下，你无法在没有词汇场域的情况下翻译一个词或表达。困难程度与多义性属性成正比，正如程序所展示的那样。
- en: Using the KNN algorithm as a classification method can prove extremely useful.
    Any language interpretation (translation or chatbot) will have to use a context-oriented
    algorithm.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 使用KNN算法作为分类方法非常有用。任何语言解释（翻译或聊天机器人）都必须使用面向语境的算法。
- en: By finding the words closest (neighbors) to each other, KNN will create the
    lexical fields required to interpret a language. Even better, when provided with
    the proper datasets, it will solve the polysemy problem, as shown in the upcoming sections.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 通过找到彼此最接近的词语（邻居），KNN将创建解释语言所需的词汇场域。更棒的是，当提供适当的数据集时，它将解决多义性问题，如接下来的章节所示。
- en: Implementing the KNN algorithm
  id: totrans-228
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现KNN算法
- en: Generally, a word requires a context to mean something. Looking for "neighbors"
    close by provides an efficient way to determine where the word belongs.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一个词需要语境才能有意义。寻找“邻居”词汇是一种有效的方式来确定该词属于哪个类别。
- en: KNN is supervised because it uses the labels of the data provided to train its
    algorithm. KNN, in this case, is used for classification purposes. For a given
    point *p*, KNN will calculate the distances to all other points. Then, *k* represents
    the k-nearest neighbors to take into account.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: KNN是有监督的，因为它使用提供的数据标签来训练其算法。在这种情况下，KNN用于分类目的。对于给定的点*p*，KNN将计算到所有其他点的距离。然后，*k*表示需要考虑的k个最近邻居。
- en: 'Let''s clear this up by means of an example. In English, the word "coach" can
    mean a trainer on a football field, a bus, or a railroad passenger car. In a transportation
    company, "coach" will mostly be a bus that should not be confused with a trainer:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一个例子来澄清这个问题。在英语中，词语“coach”可以指足球场上的教练、一辆公交车或铁路的客车车厢。在交通公司中，“coach”通常指的是一辆公交车，不应与教练混淆：
- en: '**Step 1**: Parsing (examining in a detailed manner) texts with "coach" as
    a bus and "coach" as a trainer. Thus, the program is searching for three target
    words: trainer, bus, and coach.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 1**：详细解析文本中的“coach”作为公交车和“coach”作为教练的含义。因此，程序正在搜索三个目标词：教练、公交车和教练员。'
- en: '**Step 2**: Finding some words that appear close to the target words we are
    searching for. As recommended, do the following:'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 2**：找到与我们要寻找的目标词语接近的词语。按照建议，执行以下操作：'
- en: Parse all the company documents you can use with a standard program.
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用标准程序解析所有可以使用的公司文档。
- en: Use a Python function such as `if(n-gram in the source)` then store the data.
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用如`if(n-gram in the source)`的Python函数，然后存储数据。
- en: 'In this case, the `V1.csv` file shown in the following output excerpt provided
    with the source code contains the result of such a parsing function:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，以下输出摘录中提供的`V1.csv`文件包含了该解析函数的结果：
- en: '[PRE22]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Generating files such as `V1.csv` is not in the scope of this chapter or book.
    However, you can start, among other sites, by exploring scikit-learn''s text document
    functionality at the following link:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 生成如`V1.csv`之类的文件不在本章或本书的范围内。然而，你可以从探索scikit-learn的文本文档功能开始，网址如下：
- en: '[https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html](https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html](https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html)'
- en: The program parsed emails, documents, and contracts. Each line represents the
    result of parsing one document. The numbers represent the occurrences (number
    of times the word was present). The numbers have been "squashed" (divided again
    and again) to remain small and manageable. For more on how to work with text data,
    please click on the scikit-learn link in the previous paragraph.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 程序解析了电子邮件、文档和合同。每一行代表解析一个文档的结果。数字代表出现的次数（词汇的出现频率）。这些数字已经被“压缩”（反复除以相同的数字），使其保持小而易于处理。欲了解如何处理文本数据，请点击前文中的
    scikit-learn 链接。
- en: Progressively, the words that came out with "trainer" were "shouted" more than
    "stopped." For a bus, "broke" (broken down as in breaking down), "road," and "stopped"
    appeared more than "shout."
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 逐步来看，和 "trainer" 一起出现的词汇更多的是 "shouted"，而不是 "stopped"。对于公交车，"broke"（指“故障”），"road"
    和 "stopped" 出现的频率高于 "shout"。
- en: '"Coach" appeared on an average of "shouted," "stopped," "road," and "broke"
    because it could be either a trainer or a bus, hence the problem we face when
    translating this word. The polysemy (several meanings) of "coach" can lead to
    poor translations.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '"Coach" 平均出现在 "shouted"、"stopped"、"road" 和 "broke" 这些词汇上，因为它可以既是训练师也可以是公交车，因此我们在翻译这个词时会遇到问题。"Coach"
    的多义性（有多个含义）可能导致翻译不准确。'
- en: 'The KNN algorithm loaded the `V1.csv` file that contains the data to be trained
    and finds the following result:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: KNN 算法加载了包含训练数据的 `V1.csv` 文件，并得出了以下结果：
- en: '![https://packt-type-cloud.s3.amazonaws.com/uploads/sites/2134/2018/05/B09946_08_01-1.png](img/B15438_06_01.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![https://packt-type-cloud.s3.amazonaws.com/uploads/sites/2134/2018/05/B09946_08_01-1.png](img/B15438_06_01.png)'
- en: 'Figure 6.1: Result from the KNN algorithm'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1：KNN 算法的结果
- en: 'The `knn_polysemy.py` program determined the following:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`knn_polysemy.py` 程序得出了以下结论：'
- en: The verb "broke" in blue has a better chance of applying to a bus (*x* axis
    value > 6) than to a trainer (*x* axis value < 4). However, "coach" remains above
    "trainer" and below "bus" because it can be both.
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 蓝色的动词 "broke" 更有可能适用于公交车（*x* 轴值 > 6），而不是适用于训练师（*x* 轴值 < 4）。然而，“coach”仍然位于“trainer”之上和“bus”之下，因为它既可以是训练师也可以是公交车。
- en: The word "road" follows the same logic as the blue chart.
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"road" 这个词遵循与蓝色图表相同的逻辑。'
- en: The verb "stopped" can apply to a trainer and more to a bus. "Coach" remains
    undecided again.
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动词 "stopped" 更适用于训练师，也更适用于公交车。"Coach" 仍然无法决定。
- en: The verb "shouted" applies clearly to a trainer more than a bus. "Coach" remains
    undecided again.
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动词 "shouted" 更明确地适用于训练师，而不是公交车。"Coach" 仍然无法决定。
- en: 'Note that the coordinates of each point in these charts are as follows:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这些图表中每个点的坐标如下：
- en: '**y axis**: bus = 1, coach = 2, and trainer = 3.'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**y 轴**：公交车 = 1，教练车 = 2，训练师 = 3。'
- en: '**x axis**: The value represents the "squashed" occurrence (the number of times
    the word appeared) values.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**x 轴**：该值代表“压缩”后的出现频率（即词汇出现的次数）。'
- en: This is the result of the search for those words in many sources.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在多个来源中搜索这些词汇的结果。
- en: When a new point, a data point named *P*[n] is introduced into the system, it
    will find its nearest neighbor(s) depending on the value of *k*.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个新的点，即名为 *P*[n] 的数据点被引入系统时，它将根据 *k* 的值找到其最近的邻居。
- en: 'The KNN algorithm will calculate the Euclidean distance between *P*[n] and
    all the other points from *P*[1] to *P*[n] [– 1] using the Euclidean distance
    formula. The *k* in KNN represents the number of "nearest neighbors" the algorithm
    will take into account for classification purposes. The Euclidean distance (*d*[1])
    between two given points, for example, between *P*[n](*x*[1], *y*[1]) and *P*[1](*x*[2],
    *y*[2]), is:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: KNN 算法将计算 *P*[n] 和从 *P*[1] 到 *P*[n] [– 1] 之间所有其他点的欧几里得距离，使用欧几里得距离公式。KNN 中的 *k*
    代表算法在分类时会考虑的“最近邻”数量。例如，*P*[n](*x*[1], *y*[1]) 和 *P*[1](*x*[2], *y*[2]) 之间的欧几里得距离
    (*d*[1]) 为：
- en: '![](img/B15438_06_001.png)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_06_001.png)'
- en: Considering the number of distances to calculate, a function such as the one
    provided by `sklearn.neighbors` proves necessary.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到计算距离的数量，使用如 `sklearn.neighbors` 提供的函数是必要的。
- en: The knn_polysemy.py program
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`knn_polysemy.py` 程序'
- en: 'The program imports the `V1.csv` file described previously, prints a few lines,
    and prepares the labels in the correct arrays in their respective *x* axis and
    *y* axis, as shown in this source code example:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 程序导入了之前描述的 `V1.csv` 文件，打印出几行数据，并将标签准备到正确的数组中，分别对应 *x* 轴和 *y* 轴，如下面的源代码示例所示：
- en: '[PRE23]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Then the model is trained, as shown in the following code:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，模型进行训练，如下所示的代码：
- en: '[PRE24]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Once the model is trained, a prediction is requested and is provided by the
    following code:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 模型训练完成后，发出预测请求，并由以下代码提供预测：
- en: '[PRE25]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This is the result displayed:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 显示的结果如下：
- en: '[PRE26]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The initial data is plotted for visualization purposes, as implemented in the
    following code:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 初始数据已绘制以便可视化，具体实现如以下代码所示：
- en: '[PRE27]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'A compressed version of this program has been introduced in `Google_Translate_Customized.py`,
    as shown here:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 本程序的压缩版已在 `Google_Translate_Customized.py` 中引入，如下所示：
- en: '[PRE28]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The description is as follows:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 描述如下：
- en: '`polysemy` is the name of the file to read because it can be any file.'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polysemy` 是要读取的文件名，因为它可以是任何文件。'
- en: '`vpolysemy` is the vector that needs to be predicted.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vpolysemy` 是需要预测的向量。'
- en: In future, in the to-do list, `begin` should replace `broke` and `end` should
    replace `shouted` so that the function can predict the values of any vector.
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在未来的待办事项中，`begin` 应替换 `broke`，`end` 应替换 `shouted`，以便该功能可以预测任何向量的值。
- en: The KNN classifier is called and the prediction returned.
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用 KNN 分类器并返回预测结果。
- en: Now that we have prepared the KNN classifier function, we can customize Google
    Translate.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好 KNN 分类器函数，可以自定义 Google 翻译。
- en: Implementing the KNN function in Google_Translate_Customized.py
  id: totrans-278
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 `Google_Translate_Customized.py` 中实现 KNN 函数
- en: This program requires more time and research because of the concepts of linguistics
    involved. The best way to grasp the algorithm is to run it in order.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 由于涉及的语言学概念，该程序需要更多的时间和研究。掌握算法的最佳方式是按顺序运行它。
- en: 'Google Translate offers various translation methods. We will focus on two of
    them in the following code:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: Google 翻译提供了多种翻译方法。我们将在以下代码中重点介绍其中两种：
- en: '[PRE29]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'These are explained as follows:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 解释如下：
- en: '**Phrase-based machine translation (PBMT)**: This translates the whole sequence
    of words. The phrase, or rather phraseme (multi-word expression), is not always
    quite a sentence.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于短语的机器翻译（PBMT）**：该方法翻译整个单词序列。短语，或者更确切地说是短语（多词表达），并不总是完整的句子。'
- en: '**Neural machine translation (NMT)**: This uses neural networks such as a **recurrent
    neural network** (**RNN**), which will be detailed later in this book. This method
    goes beyond the phraseme and takes the whole sentence into account. In terms of
    the dataset presented in this chapter, this neural network method provides slightly
    better results.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**神经机器翻译（NMT）**：该方法使用神经网络，如**循环神经网络**（**RNN**），后续章节将详细介绍此内容。该方法超越了短语，考虑了整个句子。在本章提供的数据集方面，这种神经网络方法提供了略微更好的结果。'
- en: Both methods and Google's other approaches are interesting, but Google Translate
    still requires additional customized algorithms to reach an acceptable level of
    quality in many cases. In this chapter, we are exploring one approach with a KNN,
    but you can use others as long as they work.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法以及 Google 的其他方法都很有趣，但在许多情况下，Google 翻译仍然需要额外的自定义算法才能达到可接受的质量水平。在本章中，我们探索了使用
    KNN 的一种方法，但你可以使用其他方法，只要它们有效。
- en: As you have seen so far, the subject is extremely complex if you take the lexical
    fields and structures of the many languages, their regional variations, and jargon
    into account.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，考虑到许多语言的词汇领域和结构、它们的区域性变化以及行话，主题极为复杂。
- en: Step 1 – translating the X dataset line by line from English into French
  id: totrans-287
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 步骤 1 – 将 X 数据集逐行从英语翻译成法语
- en: 'The following code calls the translation function:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码调用翻译函数：
- en: '[PRE30]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The code is explained as follows:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 代码解释如下：
- en: '`xi` is the line number in `X`.'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`xi` 是 `X` 中的行号。'
- en: '`source` is the `xi` line in `X`.'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`source` 是 `X` 中的 `xi` 行。'
- en: '`targetl` is the target language, in this case, `fr` (French).'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`targetl` 是目标语言，在本例中是 `fr`（法语）。'
- en: '`m` is the method (PBMT or NMT), as described previously. In this case, `nmt`
    is applied.'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`m` 是方法（PBMT 或 NMT），如前所述。在这种情况下，应用的是 `nmt`。'
- en: Then, the Google Translate function is called as described earlier in this chapter.
    The result is stored in the `result` variable.
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，调用本章前面描述的 Google 翻译功能。结果存储在 `result` 变量中。
- en: Step 2 – backtranslation
  id: totrans-296
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 步骤 2 – 反向翻译
- en: How can somebody know the correctness of a translation from language *L*[1]
    to language *L*[2] if *L*[1] is the person's native language, and *L*[2] is a
    language the person does not understand at all?
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 *L*[1] 是某人的母语，而 *L*[2] 是该人完全不懂的语言，那么该如何知道从语言 *L*[1] 到语言 *L*[2] 的翻译是否正确？
- en: 'This is one of the reasons, among others, that translators often use backtranslation
    to check translations:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 这是翻译人员通常使用反向翻译来检查翻译的原因之一：
- en: '*Translation* = *Initial translation from L*[1] *to L*[2]'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '*翻译* = *从L*[1] *到L*[2]的初始翻译'
- en: '*Backtranslation* = *Translation back from L*[2] *to L*[1]'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '*反向翻译* = *从L*[2] *到L*[1]的翻译回传'
- en: 'If the initial text is not obtained, then there is probably a problem. In this
    case, the length of the initial sentence *L*[1] can be compared to the length
    of the same sentence translated back to *L*[1]. The following code calls backtranslation:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未获得初始文本，那么可能存在问题。在这种情况下，可以将初始句子*L*[1]的长度与反向翻译回到*L*[1]的相同句子长度进行比较。以下代码调用反向翻译：
- en: '[PRE31]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Length comparison can be used to improve the algorithm:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 长度比较可以用于改进算法：
- en: '*Length of the initial n-gram* = *Length of the backtranslation*'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '*初始n-gram的长度* = *反向翻译的长度*'
- en: 'If it''s equal, then the translation may be correct. If not, it could be incorrect.
    Of course, more methods must be applied during each translation. However, a method
    that leads to improvement is already a good step. In this case, the source (initial
    sentence) is compared to the backtranslation in the following code:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它相等，则翻译可能是正确的。如果不相等，则可能是错误的。当然，在每次翻译时必须应用更多的方法。然而，任何能带来改进的方法，都是一个好的进步。在这种情况下，源句（初始句子）会与反向翻译进行比较，代码如下：
- en: '[PRE32]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '`t` is a `True` counter.'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`t`是一个`True`计数器。'
- en: '`f` is a `False` counter.'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`f`是一个`False`计数器。'
- en: 'The first line of `X` runs as follows:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '`X`的第一行如下运行：'
- en: '[PRE33]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '*Eating fatty food* is backtranslated as *eating fat food*, which is slightly
    wrong. Something may be wrong.'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '*吃油腻食物*被反向翻译为*吃油腻食物*，这有点错误。可能哪里出了问题。'
- en: The French sentence sounds wrong, too. Fatty food cannot be translated as such.
    Usually, the common sentence is *manger gras*, meaning *eating* (manger) *fatty*
    (gras), which cannot be translated into English as such.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 法语句子也听起来不对。油腻食物不能这样翻译。通常，常见的句子是*manger gras*，意思是*吃*（manger）*油腻的*（gras），这不能直接翻译成英文。
- en: 'The `X` array referred to in this section starts at line 8:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中提到的`X`数组从第8行开始：
- en: '[PRE34]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Several phrases come back with a false translation, for example, `X[4]`, `'He
    had a chip on his shoulder'`. I programmed a phrase-based translation using a
    trigger in the `False` condition in the following code.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个短语翻译错误，例如，`X[4]`，`'He had a chip on his shoulder'`。我编写了一个基于短语的翻译，使用在以下代码中的`False`条件触发器。
- en: '[PRE35]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Since I did not write a complete application for this book, but just some examples
    that can be extended in the future, I used `X2` as a trigger. If `X2[x1]>0`, then
    the `deeper_translate` function is activated.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我并未为本书编写完整的应用程序，而只是编写了一些可扩展的示例，所以我使用`X2`作为触发器。如果`X2[x1]>0`，则激活`deeper_translate`函数。
- en: Step 3 – deeper translation with phrase-based translations
  id: totrans-318
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第3步 - 使用基于短语的翻译进行更深层次的翻译
- en: '`deeper_translate` has two arguments:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '`deeper_translate`有两个参数：'
- en: '`source`: The initial sentence to translate'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`source`: 初始句子待翻译'
- en: '`x1`: The target sentence'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x1`: 目标句子'
- en: 'In this case, the problem to solve is an idiomatic expression that exists in
    English but does not exist in French:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，问题是解决一种存在于英语中但在法语中不存在的习惯表达：
- en: '[PRE36]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: To have *a chip on the shoulder* means to have an issue with something or somebody.
    It expresses some form of tension.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '*有chip在肩膀上*意味着对某些事物或某些人有问题。这表达了一种紧张的情绪。'
- en: Google translated *chip* by assuming computer chip, or *puce* in French, which
    means both *computer chip* and *flea*. The translation is meaningless.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: Google将*chip*翻译为假设是计算机芯片，或者法语中的*puce*，它既可以指*计算机芯片*，也可以指*跳蚤*。这个翻译没有意义。
- en: '*Chip* enters three categories and should be labeled as such:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '*Chip*进入三个类别，应当标注为：'
- en: Idiomatic expression
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 习惯表达
- en: Jargon
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行话
- en: Polysemy
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 词义歧义
- en: At this point, the following function I created simulates the phrase-based solution
    to implement deeper translations.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 这时，我创建的以下函数模拟了基于短语的解决方案来实现更深层次的翻译。
- en: '[PRE37]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: The `deeper_translate` function looks for the translated sentence containing
    *chip* in the following `phrase_translation` array (list, vector, or whatever
    is necessary).
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '`deeper_translate`函数会在以下`phrase_translation`数组中查找包含*chip*的翻译句子（列表、向量或其他必要的结构）。'
- en: '[PRE38]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The final result comes out with a translation, backtranslation, term search,
    and phrase translation. The following is the result produced, with comments added
    here before each line:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果会给出翻译、反向翻译、术语搜索和短语翻译。以下是产生的结果，每一行前都有添加的注释：
- en: '[PRE39]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The question is, where did `term` come from?
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是，`term`来自哪里？
- en: '`term` comes from `X1`, a list of keywords that should be in the translation.
    `X1` has been entered manually, but it should be a list of possibilities resulting
    from an automatic search conducted on the words in the sentence viewed as classes.
    This means that the sentence to be translated should have several levels of meaning,
    not just the literal one that is being calculated.'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '`term`来自`X1`，这是一个应包含在翻译中的关键词列表。`X1`是手动输入的，但它应该是通过对句子中被视为类别的单词进行自动搜索得到的可能性列表。这意味着待翻译的句子应该具有多个层次的意义，而不仅仅是被计算出的字面意义。'
- en: 'The actual `True`/`False` conditions contain the following deeper translation-level
    words to check:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 实际的`True`/`False`条件包含以下深度翻译级别的词汇进行检查：
- en: '[PRE40]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: In the present state of the prototype, only example four activates a phrase-based
    translation. Otherwise, `True` is accepted. If `False` is the case, the deeper
    translation is only activated for two cases in this sample code. The flag is in
    `X2` (`0` or `1`).
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前原型状态下，只有示例四激活短语翻译。否则，将接受`True`。如果是`False`，则深度翻译仅在该示例代码中的两个案例中被激活。该标志位在`X2`中（`0`或`1`）。
- en: '`deeper_translate` is called for either the phrase-based translation (described
    previously) or the KNN routine, which is activated if the phrase-based translation
    did not work.'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '`deeper_translate`函数被调用用于短语翻译（如前所述）或KNN程序，如果短语翻译未能成功，则会激活KNN程序。'
- en: 'If the translation did not work, an n-gram is prepared for the KNN algorithm,
    as shown in the following code:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 如果翻译未能成功，将为KNN算法准备一个n-gram，如下代码所示：
- en: '[PRE41]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '`V1[i]` contains the keywords (n-grams) described in the preceding KNN algorithm
    for the transport lexical field, as shown in the following code:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '`V1[i]`包含前面KNN算法中描述的运输词汇领域中的关键词（n-grams），如下面的代码所示：'
- en: '[PRE42]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The source (sentence to translate) is parsed for each n-gram. If the n-gram
    is found, the polysemy vector is activated for that n-gram. The initial values
    are set to `0`, as shown in the following code:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 源句子（待翻译句子）会被解析为每个n-gram。如果找到了该n-gram，则会为该n-gram激活多义性向量。初始值设置为`0`，如下面的代码所示：
- en: '[PRE43]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The variable `v1` is activated, which informs the program that `V1.csv` must
    be read for this case. An unlimited number of KNN references should be automatically
    created, as described previously in the KNN section.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 激活变量`v1`，它通知程序必须读取`V1.csv`文件来处理此案例。应自动创建无限数量的KNN参考，如前面KNN部分所述。
- en: In this case, only `v1` is activated. But after several months of working on
    the project for the company to customize their local needs, many other files should
    be created.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，只有`v1`被激活。但在为公司定制本地需求的项目中工作了几个月之后，应该创建许多其他文件。
- en: In this case, when `v1` is activated, it fills out the variables as follows.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，当激活`v1`时，它会按照如下方式填充变量。
- en: '[PRE44]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '`polysemy` indicates the KNN file to open.'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polysemy`表示需要打开的KNN文件。'
- en: '`begin` is the first label of the `V1` vector and `end` is the last label of
    the `V1` vector.'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`begin`是`V1`向量的第一个标签，`end`是`V1`向量的最后一个标签。'
- en: '`sememe` is the prediction we expect.'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sememe`是我们期望的预测结果。'
- en: 'Now, a condensed version of the KNN algorithm is called, as described previously
    for `knn_polysemy.py`, in the following code:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，调用KNN算法的精简版本，如前面所描述的`knn_polysemy.py`中的代码：
- en: '[PRE45]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The example, in this case, is the polysemy feature of *a coach*, as explained
    in the KNN section. The output will be produced as follows:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，展示了*KNN部分*中*coach*的多义性特征。输出将如下所示：
- en: '[PRE46]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: The translation is false because Google Translate returns *trainer* instead
    of *bus*.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译错误，因为Google翻译返回了*trainer*而不是*bus*。
- en: The term *bus* is identical in English and French.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 单词*bus*在英语和法语中是相同的。
- en: The KNN routine returned *bus* in English as the correct word to use when *broke
    down* and *stopped* were found, as shown in the KNN section.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: KNN程序返回了英语中的*bus*，作为在出现*broke down*和*stopped*时应该使用的正确单词，正如KNN部分所示。
- en: 'The goal of the rest of the source code in the `deeper_translate` function
    is to replace *coach*—the word increasing the polysemy feature to translate—with
    a better word (limited polysemy) to translate: `sememe`.'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '`deeper_translate`函数中其余源代码的目标是替换*coach*—这个增加多义性特征的单词，用一个更合适的单词（限制多义性）来翻译：`sememe`。'
- en: 'The `sememe` variable is initialized by the KNN function in the following code:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '`sememe`变量由下面代码中的KNN函数初始化：'
- en: '[PRE47]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The function replaces *coach* by *bus* found by the KNN algorithm in the English
    sentence and then asks Google Translate to try again. The correct answer is returned.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数通过KNN算法在英语句子中将*coach*替换为*bus*，然后让谷歌翻译再尝试一次。正确的答案被返回。
- en: Instead of trying to translate a word with too many meanings (polysemy), the `deeper_translate`
    function first replaces the word with a better word (less polysemy). Better results
    will often be attained.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 与其尝试翻译一个具有多重含义的词（多义词），`deeper_translate`函数首先用一个更合适的词（含义较少）替换该词。通常可以获得更好的结果。
- en: Step 3.1 – adding a frequentist error probability function
  id: totrans-367
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 第3.1步——添加频率学派错误概率函数
- en: 'A frequentist error probability function is added to measure performance, as
    shown in the following code:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了一个频率学派的错误概率函数来衡量性能，具体如以下代码所示：
- en: '[PRE48]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '`cnumber` is the number of false answers returned by Google Translate.'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cnumber`是谷歌翻译返回的错误答案数量。'
- en: '`tnumber` is the number of sentences translated.'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tnumber`是已翻译的句子数量。'
- en: '`ff` gives a straightforward error (translation) probability, ETP.'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ff`给出了直接的错误（翻译）概率，ETP。'
- en: 'The function is called when a translation is false, or `f>0`, as implemented
    in the following code:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 当翻译错误时，或者`f>0`时，调用该函数，如以下代码所示：
- en: '[PRE49]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '`B1` is the error (translation) probability (ETP) before the `deeper_translate`
    function is called.'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`B1`是调用`deeper_translate`函数之前的错误（翻译）概率（ETP）。'
- en: '`B2` is the ETP after the `deeper_translate` function is called.'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`B2`是调用`deeper_translate`函数后的ETP（错误翻译概率）。'
- en: 'At the end of the program, a summary is displayed, as shown in the following
    output:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 程序结束时，显示总结，具体如以下输出所示：
- en: '[PRE50]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: A subjective acceptance of an approximate result has been added to increase
    the true probability.
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加了对近似结果的主观接受度，以提高真实概率。
- en: The error rate should decrease as the quality of the KNN knowledge base increases.
    In frequent probability theory, this means that a stabilized prediction rate should
    be reached.
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误率应随着KNN知识库质量的提高而下降。在频率概率理论中，这意味着应该达到一个稳定的预测率。
- en: We've come to the end of our attempts to improve Google Translate. Let's consider
    some of the conclusions following our experiment.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经尝试改进谷歌翻译到最后了。让我们看看实验后的一些结论。
- en: Conclusions on the Google Translate customized experiment
  id: totrans-382
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于谷歌翻译定制实验的结论
- en: 'The final error (translation) probability produced is interesting, as shown
    in the following output:'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的最终错误（翻译）概率非常有趣，具体如以下输出所示：
- en: '[PRE51]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Even with its NMT model, Google Translate is still struggling.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 即使拥有NMT模型，谷歌翻译仍然在挣扎。
- en: This provides great opportunities for AI linguists, as shown with some of the
    methods presented to improve Google Translate at a local level that could go even
    further.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 这为AI语言学家提供了极好的机会，正如一些方法所展示的那样，可以在本地层面改进谷歌翻译，甚至可以更进一步。
- en: This experiment with Google Translate shows that Google has just scratched the
    surface of real-life translations that sound right to the native speakers that
    receive these translations. It would take a real company project to get this on
    track with a financial analysis of its profitability before consuming resources.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这次对谷歌翻译的实验，可以看出谷歌只是触及了真正生活翻译的表面，而这些翻译对于接收者——本地语言使用者来说才是正确的。要使这项技术走上正轨，需要一个真正的公司项目，并对其盈利能力进行财务分析，然后再消耗资源。
- en: The disruptive revolutionary loop
  id: totrans-388
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 颠覆性的革命性循环
- en: As you can now see, Google Translate, like all AI solutions, has its limits.
    Once this limit has been reached, you are at the cutting edge.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 如你现在所见，谷歌翻译与所有AI解决方案一样，都有其局限性。一旦达到这个极限，你就处于前沿地带。
- en: Cross the border into AI Frontierland; innovate on your own or with a team.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 跨越边界进入AI前沿地带；独立创新或与团队一起创新。
- en: If you work for a corporation, you can create a revolutionary customized solution
    for hundreds of users. It does not have to go public. It can remain a strong asset
    to your company.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在公司工作，可以为数百名用户创建一个革命性的定制解决方案。它不一定要公开，它可以成为公司的一项强大资产。
- en: At some point or other, the revolutionary add-on will reach beyond the company,
    and others will use it. It will become disruptive.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 在某个时刻，革命性的插件将超越公司本身，其他人也会使用它。它将成为颠覆性技术。
- en: Finally, others will reach the limit of your now-disruptive solution. They will
    then innovate and customize it in their corporation as a revolutionary solution.
    This is what I call the disruptive revolutionary loop. It is challenging and exciting
    because it means that AI developers will not all be replaced in the near future
    by AutoAI bots!
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，其他人会到达你现在的颠覆性解决方案的极限。然后，他们会在自己的公司中创新并定制该方案作为革命性解决方案。这就是我所说的颠覆性革命循环。它既充满挑战又令人兴奋，因为这意味着AI开发者在短期内不会全部被AutoAI机器人取代！
- en: Designing a solution does not mean it will be an invention, an innovation, revolutionary,
    or disruptive. But that does not really matter. What a company earns with a solution
    represents more than the novelty of what it sells as long as it is profitable.
    That is rule number 1\. That said, without innovating in its market, that company
    will not survive through the years.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 设计一个解决方案并不意味着它会成为发明、创新、革命性或颠覆性。但这其实并不重要。公司通过解决方案获得的收益代表了它所销售的东西的新颖性，只要它是有利可图的。这是规则一。也就是说，如果公司在市场上没有创新，它将无法在多年中生存下来。
- en: If a product requires quality for security reasons, it should remain in its
    invention state as long as necessary. If a product can produce sales at the low
    end of the market before its total completion, then the company should sell it.
    The company will acquire a reputation for innovation, get more money to invest,
    and take over the territory of its competitors.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个产品因为安全原因需要保持高质量，那么它应该在发明阶段保持足够长的时间。若产品可以在市场的低端产生销售，甚至在其完全完成之前，那么公司应该开始销售该产品。公司将因创新获得声誉，获得更多资金投入，并占领竞争对手的市场份额。
- en: Summary
  id: totrans-396
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Google Translate is a good example of disruptive marketing. As shown, the theory,
    the model, and even the cloud architecture are over 10 years old. But each time
    one of the hundreds of millions of users stumbles across it, it creates more disruption
    by hooking the user onto Google solutions. The user will come back again and again
    to view more advertisements, and everyone is happy!
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: Google翻译是颠覆性营销的一个好例子。如上所示，其理论、模型甚至云架构已经超过10年。然而，每当数以亿计的用户中的某一个偶然使用它时，它就通过将用户吸引到Google解决方案中而产生更多的颠覆。用户会一次又一次地回到这里查看更多广告，大家都很高兴！
- en: AI has only just begun. Google Translate has been around since 2006\. However,
    the results still leave room for developers, linguists, and mathematicians to
    improve upon. Google has added a neural network and offers other models to improve
    translations by analyzing whole sentences. How long will it take to be really
    reliable? In the meantime, the world community is moving AI forward beyond the
    cutting edge into Frontierland.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能才刚刚起步。Google翻译自2006年推出以来，一直存在。然而，翻译结果仍然为开发人员、语言学家和数学家提供了改进的空间。Google已经加入了神经网络，并提供了其他模型，通过分析整个句子来改进翻译。那么，什么时候它能真正可靠呢？与此同时，全球社区正在推动人工智能的进步，超越最前沿，进入新的“前沿领域”。
- en: In this chapter, we first carefully explored the difference between inventing
    and innovation. An innovation has an impact on the rest of the market. An invention
    is just the starting point of an innovation. We saw that a revolutionary solution
    could be a technical breakthrough. But that revolutionary solution will only become disruptive
    when it spreads out to the rest of the market.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先仔细探讨了发明与创新之间的差异。创新对整个市场产生影响，而发明仅是创新的起点。我们看到，一项革命性的解决方案可能是技术突破。但只有当这种革命性的解决方案扩展到市场的其他部分时，它才能成为颠覆性的。
- en: We then studied some basic linguistics principles that could help us understand
    Google Translate, its limits, and how to improve translation errors.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们研究了一些基本的语言学原理，帮助我们理解Google翻译，它的局限性以及如何改进翻译错误。
- en: We finally implemented a customized translation tool using a KNN to work around
    Google Translate errors.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终实现了一个定制的翻译工具，使用KNN算法来绕过Google翻译的错误。
- en: In the next chapter, *Chapter 7*, *Optimizing Blockchains with Naive Bayes*,
    we will go further in our investigation of the new frontier of AI by using blockchains
    to make predictions in corporate environments.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，*第7章*，*使用朴素贝叶斯优化区块链*，我们将进一步探讨AI新前沿的研究，通过使用区块链在企业环境中进行预测。
- en: Questions
  id: totrans-403
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Is it better to wait until you have a top-quality product before putting it
    on the market? (Yes | No)
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是不是最好等到产品达到顶级质量再推向市场？（是 | 否）
- en: Considering the investment made, a new product should always be priced high
    to reach the top segment of the market. (Yes | No)
  id: totrans-405
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑到所做的投资，新产品应始终定价较高，以进入市场的高端细分市场。（是 | 否）
- en: Inventing a new solution will make it known in itself. (Yes | No)
  id: totrans-406
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发明一种新解决方案会使其自然而然地被认可。（是 | 否）
- en: AI can solve most problems without using standard non-learning algorithms. (Yes
    | No)
  id: totrans-407
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AI可以在不使用标准非学习算法的情况下解决大多数问题。（是 | 否）
- en: Google Translate can satisfactorily translate all languages. (Yes | No)
  id: totrans-408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 谷歌翻译可以令人满意地翻译所有语言。（是 | 否）
- en: If you are not creative, it is no use trying to innovate. (Yes | No)
  id: totrans-409
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不具备创意，尝试创新是没有用的。（是 | 否）
- en: If you are not a linguist, it is no use bothering with trying to improve Google
    Translate. (Yes | No)
  id: totrans-410
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不是语言学家，尝试改进谷歌翻译是没有意义的。（是 | 否）
- en: Translating is too complicated to understand. (Yes | No)
  id: totrans-411
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 翻译过于复杂，难以理解。（是 | 否）
- en: AI has already reached its limits. (Yes | No)
  id: totrans-412
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AI已经达到了它的极限。（是 | 否）
- en: Further reading
  id: totrans-413
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'The Harvard Business Review on disruptive innovations can be found here: [https://hbr.org/2015/12/what-is-disruptive-innovation](https://hbr.org/2015/12/what-is-disruptive-innovation)'
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈佛商业评论关于颠覆性创新的文章可以在这里找到：[https://hbr.org/2015/12/what-is-disruptive-innovation](https://hbr.org/2015/12/what-is-disruptive-innovation)
- en: 'Google Translate documentation can be found here: [https://cloud.google.com/translate/docs/](https://cloud.google.com/translate/docs/
    )'
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌翻译文档可以在这里找到：[https://cloud.google.com/translate/docs/](https://cloud.google.com/translate/docs/)
- en: 'Google AlphaGo Zero: [https://deepmind.com/blog/article/alphago-zero-starting-scratch](https://deepmind.com/blog/article/alphago-zero-starting-scratch)'
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌AlphaGo Zero：[https://deepmind.com/blog/article/alphago-zero-starting-scratch](https://deepmind.com/blog/article/alphago-zero-starting-scratch)
- en: 'KNN documentation: [http://scikit-learn.org/stable/modules/neighbors.html#neighbors](http://scikit-learn.org/stable/modules/neighbors.html#neighbors)'
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KNN文档：[http://scikit-learn.org/stable/modules/neighbors.html#neighbors](http://scikit-learn.org/stable/modules/neighbors.html#neighbors)
- en: 'Insights on translation ANNs: [https://research.googleblog.com/2016/09/a-neural-network-for-machine.html](https://research.googleblog.com/2016/09/a-neural-network-for-machine.html)'
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于翻译神经网络的见解：[https://research.googleblog.com/2016/09/a-neural-network-for-machine.html](https://research.googleblog.com/2016/09/a-neural-network-for-machine.html)
- en: 'Insights on English-French translations: [http://www.oneskyapp.com/blog/french-translation-challenges/](http://www.oneskyapp.com/blog/french-translation-challenges/)'
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于英法翻译的见解：[http://www.oneskyapp.com/blog/french-translation-challenges/](http://www.oneskyapp.com/blog/french-translation-challenges/)
- en: 'More on how to work with text data to build datasets for your algorithms: [https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html](https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html)'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于如何处理文本数据以构建算法数据集的内容：[https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html](https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html)
