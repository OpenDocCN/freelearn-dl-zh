- en: '9'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '9'
- en: Transforming Text to Video
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本转视频
- en: 'In the previous chapter, we explored building recommendations based on specific
    data, using the example of Netflix to understand how we can suggest movies to
    viewers. Now, let’s shift our focus to a different scenario: educators wanting
    to convey complex topics to students through videos rather than textual explanations.
    However, creating videos is a time-consuming task that demands considerable effort
    from teachers.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们探讨了基于特定数据构建推荐系统的方式，使用 Netflix 的例子来了解如何向观众推荐电影。现在，让我们将注意力转向另一个场景：教育者希望通过视频而非文字解释来向学生传达复杂的主题。然而，制作视频是一个耗时的任务，需要教师付出相当大的努力。
- en: 'In this chapter, we delve into how Azure OpenAI can revolutionize this process,
    by streaming the generation of videos from text prompts. First, we dive into setting
    up the necessary tools in the Azure portal, gaining a comprehensive understanding
    of the solution. We then explain how to utilize Python to creatively generate
    images from the provided prompts, including how to segment the prompts into key
    phrases. Finally, we show how to seamlessly convert these generated images into
    video format, accompanied by the creation of audio files to enhance the educational
    experience. Specifically, we will cover the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们深入探讨了 Azure OpenAI 如何通过从文本提示生成视频流的方式，革新这一过程。首先，我们将介绍如何在 Azure 门户中设置必要的工具，以全面了解解决方案。接着，我们将解释如何利用
    Python 从提供的提示中创造性地生成图像，包括如何将提示分割成关键短语。最后，我们将展示如何将这些生成的图像无缝地转换为视频格式，并配以音频文件，以增强教学体验。具体而言，我们将涵盖以下内容：
- en: Problem statement introduction
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题陈述简介
- en: Architecture design
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构设计
- en: Build Transforming Text to Video service using Azure OpenAI and Azure Cognitive
    service
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Azure OpenAI 和 Azure Cognitive 服务构建文本转视频服务
- en: Problem statement introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题陈述简介
- en: Imagine being an educator passionate about creating engaging lesson plans that
    inspire and captivate students. You recognize the value of incorporating visual
    elements into your teaching, especially in today’s digital age. However, the idea
    of turning your carefully planned lessons into engaging videos feels like a significant
    challenge. The process is time-intensive and demands technical skills that may
    not align with your expertise. Hours spent on filming, editing, and navigating
    complex software take away from focusing on lesson improvement and providing personalized
    attention to students. While the potential of video content to enhance teaching
    is clear, the challenges involved in creating it often seem to outweigh its benefits.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 想象你是一位热衷于创建有趣课程计划、激发并吸引学生的教育者。你意识到，在今天的数字时代，将视觉元素融入教学具有重要价值。然而，将精心设计的课程转化为吸引人的视频，似乎是一项巨大的挑战。这个过程不仅费时，而且需要技术技能，可能与你的专业知识不匹配。花费数小时进行拍摄、编辑和操作复杂的软件，都会让你无法专注于课程改进和为学生提供个性化的关注。尽管视频内容在提升教学方面具有明显潜力，但制作视频的挑战往往让其好处看起来微不足道。
- en: 'However, amidst the challenges, a glimmer of hope emerges: Azure OpenAI. This
    innovative technology presents itself as a beacon of light, promising to revolutionize
    the way educators like you create video content for their lessons.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在这些挑战之中，一线希望出现了：Azure OpenAI。这项创新技术作为一束曙光，承诺彻底改变像你这样的教育者创造课程视频的方式。
- en: First, we create a concise prompt summarizing the content. Then, Azure OpenAI
    condenses the text into a brief summary. Using Azure Cognitive Service, we extract
    essential keywords. With Azure OpenAI’s DALL-E model, we generate prompts for
    relevant images. Azure’s Speech service converts the summary into an audio file
    for narration. Finally, we combine the audio with DALL-E images to create the
    video. This process enables efficient text-to-video conversion with Azure services.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建一个简明的提示语，总结内容。然后，Azure OpenAI 将文本浓缩为简短的摘要。通过 Azure Cognitive 服务，我们提取出关键信息。借助
    Azure OpenAI 的 DALL-E 模型，我们生成与图像相关的提示。Azure 的语音服务将摘要转化为音频文件，用于旁白。最后，我们将音频与 DALL-E
    生成的图像结合，制作成视频。这一过程使得通过 Azure 服务实现高效的文本转视频转化成为可能。
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow along with the practical exercises in this chapter, access the source
    code available in this chapter's GitHub repository at [https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter_9.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter_9.ipynb).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 若要跟随本章的实际操作练习，可以访问本章 GitHub 仓库中的源代码：[https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter_9.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter_9.ipynb)。
- en: 'Install the required tools on your local machine to start working on the solution.
    The versions listed here are the stable versions at the time of publishing this
    book. If you choose a different version than the recommended one, you may encounter
    errors when running the provided code due to library version mismatches:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地机器上安装所需的工具以开始解决方案开发。此处列出的版本是本书出版时的稳定版本。如果选择了不同于推荐版本的版本，可能会因为库版本不匹配而在运行提供的代码时遇到错误：
- en: 'Python 3.9, 3.10, or 3.11: [https://www.python.org/downloads/](https://www.python.org/downloads/)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Python 3.9, 3.10 或 3.11: [https://www.python.org/downloads/](https://www.python.org/downloads/)'
- en: 'The Azure Developer CLI: Azure developer CLI Installation'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Azure 开发者 CLI: Azure 开发者 CLI 安装'
- en: 'Node.js 14+: [https://nodejs.org/en/download](https://nodejs.org/en/download)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Node.js 14+: [https://nodejs.org/en/download](https://nodejs.org/en/download)'
- en: 'Git: [https://git-scm.com/downloads](https://git-scm.com/downloads)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Git: [https://git-scm.com/downloads](https://git-scm.com/downloads)'
- en: 'Powershell 7+ (`pwsh`): [https://github.com/powershell/powershell](https://github.com/powershell/powershell)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Powershell 7+ (`pwsh`): [https://github.com/powershell/powershell](https://github.com/powershell/powershell)'
- en: 'Azure account: If you’re new to Azure, get an Azure account for free and you’ll
    get some free Azure credits to get started.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 账户：如果你是 Azure 新用户，可以免费获取 Azure 账户，并获得一些免费的 Azure 积分开始使用。
- en: 'Azure subscription with access enabled for the Azure OpenAI service: You can
    request access with this form at [https://aka.ms/oaiapply](https://aka.ms/oaiapply)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已启用 Azure OpenAI 服务访问权限的 Azure 订阅：你可以通过此表单申请访问 [https://aka.ms/oaiapply](https://aka.ms/oaiapply)
- en: 'Azure OpenAI connection and model information:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure OpenAI 连接和模型信息：
- en: OpenAI API key
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI API 密钥
- en: OpenAI embedding model deployment name
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI 嵌入模型部署名称
- en: OpenAI API version
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI API 版本
- en: Key phrase extraction
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关键短语提取
- en: Speech to text
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语音转文本
- en: In addition to the preceding system requirements, it is crucial to have a solid
    foundation in fundamental Azure services and a basic proficiency in the Python
    programming language, equivalent to a beginner level (Python 100). These skills
    are vital for efficiently harnessing and leveraging Azure services in the context
    of this chapter. Rest assured, even if you are new to the Azure environment, we
    have designed this chapter to be beginner friendly. It offers clear explanations
    and includes detailed screenshots to facilitate your learning and get you started
    on the right track.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 除了前述系统要求外，具备扎实的 Azure 基础服务知识和基础的 Python 编程语言技能（相当于初学者级别，Python 100）非常重要。这些技能对有效利用
    Azure 服务和在本章背景下的高效应用至关重要。放心，即使你是 Azure 新手，我们已经设计了本章内容，确保它对初学者友好，提供了清晰的解释并附有详细的截图，以帮助你轻松入门。
- en: Architecture design
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构设计
- en: 'The process behind creating the solution mentioned in the introduction is as
    follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 创建引言中提到的解决方案的过程如下：
- en: 'The user sends a query to the Azure OpenAI API, which generates a text summary.
    This summary is then passed to Azure Cognitive Services for key phrase extraction.
    The extracted key phrases are sent back to the ChatGPT API to generate images,
    while the text summary is also sent to the Azure Speech API to convert it into
    audio. Finally, both the audio and images are combined into an MP4 file using
    MoviePy. MoviePy is a Python library for video editing. It provides a simple and
    intuitive way to manipulate video clips, allowing you to perform tasks like cutting
    and trimming, concatenating multiple video clips together, adding titles and text,
    and so on. The following diagram shows the overall architecture:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 用户向 Azure OpenAI API 发送查询，该 API 生成文本摘要。然后，将该摘要传递给 Azure 认知服务进行关键短语提取。提取的关键短语被送回
    ChatGPT API 生成图像，而文本摘要也会被传送至 Azure Speech API 转换成音频。最后，音频和图像被使用 MoviePy 合并成一个
    MP4 文件。MoviePy 是一个用于视频编辑的 Python 库，它提供了一种简单直观的方式来操作视频片段，允许执行剪切、修剪、将多个视频片段连接在一起、添加标题和文本等任务。以下图展示了整体架构：
- en: '![Figure 9.1: Architecture diagram](img/B21019_09_1.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.1：架构图](img/B21019_09_1.jpg)'
- en: 'Figure 9.1: Architecture diagram'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.1：架构图
- en: Build transforming text to video using Azure OpenAI and Azure Cognitive service
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Azure OpenAI 和 Azure Cognitive 服务构建将文本转换为视频的功能。
- en: '[*Chapter 4*](B21019_04.xhtml#_idTextAnchor059) covers the setup of an Azure
    account with an active subscription and the creation of an Azure OpenAI Service
    resource. Additionally, it provides guidance on deploying an Azure OpenAI Service
    model, which may utilize GPT-3, ChatGPT, or GPT-4 models. The step-by-step process
    for building this solution is as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 4 章*](B21019_04.xhtml#_idTextAnchor059)讲解了如何设置具有有效订阅的 Azure 账户，并创建 Azure
    OpenAI 服务资源。此外，还提供了部署 Azure OpenAI 服务模型的指导，可能使用的是 GPT-3、ChatGPT 或 GPT-4 模型。构建此解决方案的逐步过程如下：'
- en: Set up Language and Speech services within Azure.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure 中设置语言和语音服务。
- en: Import the necessary packages for the solution.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入解决方案所需的包。
- en: Utilize Azure OpenAI to summarize text.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Azure OpenAI 对文本进行总结。
- en: Employ Azure Cognitive Service to extract key phrases.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Azure Cognitive 服务提取关键短语。
- en: Generate prompts for image creation using Azure OpenAI’s DALL-E model.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Azure OpenAI 的 DALL-E 模型生成图像创建提示。
- en: Create an audio file using the Azure Speech service.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Azure 语音服务创建音频文件。
- en: Combine the audio file with the images to produce a video.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将音频文件与图片结合生成视频。
- en: 'Let’s get started:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧：
- en: Create an Azure Language service.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Azure 语言服务。
- en: To create an Azure Language service, navigate to the search bar in the top navigation
    and search for `Language`.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建 Azure 语言服务，请导航到顶部导航栏的搜索框，搜索`Language`。
- en: If not found on the search navigation, then click on `Language` and click on
    **Create**.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在搜索导航中没有找到，点击`Language`，然后点击**创建**。
- en: '![Figure 9.2: Create Language service](img/B21019_09_2.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.2：创建语言服务](img/B21019_09_2.jpg)'
- en: 'Figure 9.2: Create Language service'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.2：创建语言服务
- en: Click on the **Continue to create your resource** button in the Language service
    by accepting the defaults.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在语言服务中，点击**继续创建你的资源**按钮，接受默认设置。
- en: '![Figure 9.3: Create Language resource](img/B21019_09_3.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.3：创建语言资源](img/B21019_09_3.jpg)'
- en: 'Figure 9.3: Create Language resource'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.3：创建语言资源
- en: After Creating the Language Service from the Marketplace, make selections for
    **Subscription** and **Resource group** on the **Create a resource** form that
    you created in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059) and the pricing
    tier as **Free F0**.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从市场中创建语言服务后，在[**第 4 章**](B21019_04.xhtml#_idTextAnchor059)中创建的**创建资源**表单中选择**订阅**和**资源组**，并将定价层设置为**免费
    F0**。
- en: '![Figure 9.4: Create Language Basics step](img/B21019_09_4.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.4：创建语言基础步骤](img/B21019_09_4.jpg)'
- en: 'Figure 9.4: Create Language Basics step'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.4：创建语言基础步骤
- en: Now give your desired resource, click on the **Next** button, and go to the
    **Network** tab. Select the **All networks, including the internet, can access
    this resource** option and click on **Next**.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在输入你想要的资源，点击**下一步**按钮，进入**网络**选项卡。选择**所有网络，包括互联网，都可以访问此资源**选项，然后点击**下一步**。
- en: '![Figure 9.5: Create Language resource Network step](img/B21019_09_5.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.5：创建语言资源网络步骤](img/B21019_09_5.jpg)'
- en: 'Figure 9.5: Create Language resource Network step'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.5：创建语言资源网络步骤
- en: In the **Identity** tab, just configure it with all the defaults and click on
    the **Next** button to go to the **Tags** tab.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**身份**选项卡中，按默认设置配置，然后点击**下一步**按钮进入**标签**选项卡。
- en: '![Figure 9.6: Create Language Identity step](img/B21019_09_6.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.6：创建语言身份步骤](img/B21019_09_6.jpg)'
- en: 'Figure 9.6: Create Language Identity step'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.6：创建语言身份步骤
- en: 'You can ignore this section for now. Tags are name/value pairs that allow you
    to categorize resources and facilitate consolidated billing by applying the same
    tag to multiple search and resource groups. You can find similar details on the
    **Tags** step. Proceed by clicking **Next** and then go to the **Review + Create**
    button. Here, it will display the details you’ve chosen in the previous steps.
    Review all the information and click on the **Create** button:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目前可以忽略此部分。标签是名称/值对，可以帮助你对资源进行分类，并通过将相同标签应用于多个搜索和资源组来简化账单管理。你可以在**标签**步骤中找到类似的细节。点击**下一步**，然后进入**审核
    + 创建**按钮。在此，你将看到前面步骤中选择的详细信息。检查所有信息后，点击**创建**按钮：
- en: '![Figure 9.7: Create Language Review + create step](img/B21019_09_7.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.7：创建语言审核 + 创建步骤](img/B21019_09_7.jpg)'
- en: 'Figure 9.7: Create Language Review + create step'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.7：创建语言审核 + 创建步骤
- en: Once you click on **Create**, a new deployment will be generated and the resource
    will be created.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**后，将生成新的部署，并创建该资源。
- en: Create an Azure Speech service.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个Azure语音服务。
- en: To create an Azure Speech service, navigate to the search bar in the top navigation
    and search for `Language`. If not found, click on `Language` and click on **Create**.
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一个Azure语音服务，请导航到顶部导航栏的搜索框，搜索`Language`。如果未找到，点击`Language`并点击**创建**。
- en: '![Figure 9.8: Create a Speech service](img/B21019_09_8.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.8: 创建语音服务](img/B21019_09_8.jpg)'
- en: 'Figure 9.8: Create a Speech service'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '图 9.8: 创建语音服务'
- en: After creating the Speech service from the Marketplace, make selections for
    **Subscription** and **Resource group** on the **Create a resource** form that
    you created in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059) and set the pricing
    tier as **Free F0**.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在市场中创建语音服务后，在**创建资源**表单中选择**订阅**和**资源组**，并设置定价层为**Free F0**，这些设置来自于[*第4章*](B21019_04.xhtml#_idTextAnchor059)中的内容。
- en: '![Figure 9.9: Create Speech Services Basics step](img/B21019_09_9.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.9: 创建语音服务基础步骤](img/B21019_09_9.jpg)'
- en: 'Figure 9.9: Create Speech Services Basics step'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '图 9.9: 创建语音服务基础步骤'
- en: Now give your desired resource, click on the **Next** button, and go to the
    **Network** tab. Select the **All networks, including the internet, can access
    this resource** option and click on **Next**.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在选择你想要的资源，点击**下一步**按钮，然后进入**网络**选项卡。选择**所有网络，包括互联网，都可以访问此资源**选项，然后点击**下一步**。
- en: '![Figure 9.10: Create Speech Services Network step](img/B21019_09_10.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.10: 创建语音服务网络步骤](img/B21019_09_10.jpg)'
- en: 'Figure 9.10: Create Speech Services Network step'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '图 9.10: 创建语音服务网络步骤'
- en: In the **Identity** tab, just configure it with all the defaults and click on
    the **Next** button to go to the **Tags** tab.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**身份**选项卡中，只需使用默认设置配置，并点击**下一步**按钮进入**标签**选项卡。
- en: '![Figure 9.11: Create Speech Services Identity step](img/B21019_09_11.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.11: 创建语音服务身份步骤](img/B21019_09_11.jpg)'
- en: 'Figure 9.11: Create Speech Services Identity step'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '图 9.11: 创建语音服务身份步骤'
- en: You can ignore this section for now. Proceed by clicking **Next** and then go
    to the **Review + Create** button. Here, it will display the details you’ve chosen
    in the previous steps. Review all the information and click on the **Create**
    button.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在可以忽略这个部分。点击**下一步**，然后进入**审核 + 创建**按钮。此时，将显示你在前面步骤中选择的详细信息。审核所有信息后，点击**创建**按钮。
- en: '![Figure 9.12: Create Speech Services Review + create step](img/B21019_09_12.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.12: 创建语音服务审核 + 创建步骤](img/B21019_09_12.jpg)'
- en: 'Figure 9.12: Create Speech Services Review + create step'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '图 9.12: 创建语音服务审核 + 创建步骤'
- en: Once you click on **Create**, a new deployment will be generated and the resource
    will be created.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦点击**创建**，一个新的部署将会生成，资源将被创建。
- en: Solution using Azure OpenAI and Azure Language and Speech services
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Azure OpenAI和Azure语言与语音服务的解决方案
- en: Now that we have set up all the essential services in the Azure portal, we can
    begin constructing our solution. To develop the code, I will be working within
    a Python notebook and the remaining installations are the same that were defined
    in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经在Azure门户中设置了所有必要的服务，可以开始构建解决方案了。为了开发代码，我将在Python笔记本中工作，其余的安装与[*第4章*](B21019_04.xhtml#_idTextAnchor059)中定义的相同。
- en: You will need to install one extra Python library for this code other than the
    one installed in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 除了[*第4章*](B21019_04.xhtml#_idTextAnchor059)中安装的库外，你还需要为这段代码安装一个额外的Python库。
- en: 'Create a new Juypter notebook and install the following packages:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的Jupyter笔记本并安装以下包：
- en: '[PRE0]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Importing packages
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导入包
- en: 'Install missing libraries using `pip install`, make sure your OpenAI version
    is 0.28.0, and then import the packages using the following code:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pip install`安装缺少的库，确保你的OpenAI版本为0.28.0，然后使用以下代码导入这些包：
- en: '[PRE1]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can see a variety of libraries being used in the preceding code. Let’s delve
    into each of these libraries in the table here.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到在前面的代码中使用了多种库。让我们在下表中详细了解这些库。
- en: '| **Import Statement** | **Description** |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| **导入语句** | **描述** |'
- en: '| `import openai` | Imports the OpenAI library for accessing the OpenAI API.
    |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `import openai` | 导入OpenAI库，用于访问OpenAI API。 |'
- en: '| `import os` | Imports the os module, which provides a portable way of interacting
    with the operating system. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `import os` | 导入os模块，提供与操作系统交互的便捷方式。 |'
- en: '| `from dotenv` `import load_dotenv` | Imports the `load_dotenv` function from
    the `dotenv` module to load environment variables from a `.``env` file. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `from dotenv` `import load_dotenv` | 从`dotenv`模块导入`load_dotenv`函数，用于从`.env`文件加载环境变量。
    |'
- en: '| `import azure.cognitiveservices.speech` `as speechsdk` | Imports the Azure
    Cognitive Services Speech SDK for speech recognition and synthesis. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `import azure.cognitiveservices.speech` `as speechsdk` | 导入 Azure 认知服务语音
    SDK，用于语音识别和合成。 |'
- en: '| `from azure.ai.textanalytics` `import TextAnalyticsClient` | Imports the
    `TextAnalyticsClient` class from the `azure.ai.textanalytics` module for text
    analysis. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `from azure.ai.textanalytics` `import TextAnalyticsClient` | 从 `azure.ai.textanalytics`
    模块导入 `TextAnalyticsClient` 类，用于文本分析。 |'
- en: '| `from azure.core.credentials` `import AzureKeyCredential` | Imports the `AzureKeyCredential`
    class from the `azure.core.credentials` module for authentication with Azure services.
    |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `from azure.core.credentials` `import AzureKeyCredential` | 从 `azure.core.credentials`
    模块导入 `AzureKeyCredential` 类，用于 Azure 服务的认证。 |'
- en: '| `import urllib.request` | Imports the `urllib.request` module for making
    HTTP requests. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `import urllib.request` | 导入 `urllib.request` 模块，用于发起 HTTP 请求。 |'
- en: '| `from moviepy.editor` `import *` | Imports the MoviePy library for video
    editing and manipulation. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| `from moviepy.editor` `import *` | 导入 MoviePy 库，用于视频编辑和处理。 |'
- en: '| `import numpy` `as np` | Imports the NumPy library for numerical computing
    with arrays. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| `import numpy` `as np` | 导入 NumPy 库，用于数组的数值计算。 |'
- en: '| `from PIL` `import Image` | Imports the `Image` module from the Pillow library
    for image processing. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| `from PIL` `import Image` | 从 Pillow 库导入 `Image` 模块，用于图像处理。 |'
- en: 'Table 9.1: Imports explanation'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 表 9.1：导入说明
- en: 'Now, let’s initialize all the necessary constants using the keys provided in
    the `.env` file. Add “`COMMUNICATION_CONNECTION_STRING`” and “`COMMUNICATION_ENDPOINT`”
    to your already existing `.``env` file:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `.env` 文件中提供的密钥初始化所有必要的常量。将 “`COMMUNICATION_CONNECTION_STRING`” 和 “`COMMUNICATION_ENDPOINT`”
    添加到您已经存在的 `.env` 文件中：
- en: '[PRE2]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Add these to the `.env` file that was created in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059)
    with the `connectionString` and `endpoints`:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些值添加到在 [*第 4 章*](B21019_04.xhtml#_idTextAnchor059) 中创建的 `.env` 文件，包含 `connectionString`
    和 `endpoints`：
- en: '[PRE3]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Follow these steps to set up the Language and Speech service endpoint:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤设置语言和语音服务端点：
- en: Update the ‘`OPENAI_LANGUAGE_KEY`’ and ‘`OPENAI_LANGUAGE_ENDPOINT`’ values with
    the connection string value found in your Azure Language service under the **Keys**
    section.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `OPENAI_LANGUAGE_KEY` 和 `OPENAI_LANGUAGE_ENDPOINT` 的值，使用在 Azure 语言服务的 **密钥**
    部分找到的连接字符串值。
- en: '![Figure 9.13: Language Service Keys and Endpoint](img/B21019_09_13.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.13：语言服务密钥和端点](img/B21019_09_13.jpg)'
- en: 'Figure 9.13: Language Service Keys and Endpoint'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.13：语言服务密钥和端点
- en: Similarly, modify the values of ‘`OPENAI_SPEECH_KEY`’ and ‘`OPENAI_SPEECH_REGION`’
    with the value found in your Azure Speech service under the **Keys** section.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，修改 `OPENAI_SPEECH_KEY` 和 `OPENAI_SPEECH_REGION` 的值，使用在 Azure 语音服务的 **密钥**
    部分找到的值。
- en: '![Figure 9.14: Speech Service Keys and Endpoint](img/B21019_09_14.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.14：语音服务密钥和端点](img/B21019_09_14.jpg)'
- en: 'Figure 9.14: Speech Service Keys and Endpoint'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.14：语音服务密钥和端点
- en: By completing these configurations, you’ll have the necessary connection settings
    for your resources. Once you see `True`, then the script to load the variables
    is successful.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些配置后，您将获得所需的资源连接设置。一旦看到 `True`，则表示加载变量的脚本成功。
- en: '![Figure 9.15: Output of load env](img/B21019_09_15.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.15：加载环境的输出](img/B21019_09_15.jpg)'
- en: 'Figure 9.15: Output of load env'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.15：加载环境的输出
- en: Summarizing text using Azure OpenAI
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Azure OpenAI 摘要文本
- en: Generating the prompt
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成提示
- en: '[PRE4]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This is the output:'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是输出：
- en: '![Figure 9.16: Output of the prompt](img/B21019_09_16.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.16：提示的输出](img/B21019_09_16.jpg)'
- en: 'Figure 9.16: Output of the prompt'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.16：提示的输出
- en: Generating OpenAI response for the prompt
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为提示生成 OpenAI 响应
- en: 'This code utilizes the OpenAI library to generate a text summary. It sends
    a request to the OpenAI engine specified by `OPENAI_DEPLOYMENT_NAME` with a given
    prompt (`prompt`). The `temperature`, `max_tokens`, and `top_p` parameters control
    the generation process. Finally, it prints the generated text summary retrieved
    from the `response_summ` object:'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这段代码利用 OpenAI 库生成文本摘要。它向由 `OPENAI_DEPLOYMENT_NAME` 指定的 OpenAI 引擎发送一个给定的提示（`prompt`）。`temperature`、`max_tokens`
    和 `top_p` 参数控制生成过程。最后，它打印从 `response_summ` 对象中获取的生成文本摘要：
- en: '[PRE6]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This is the output:'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是输出：
- en: '![Figure 9.17: Output of OpenAI response](img/B21019_09_17.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.17：OpenAI 响应的输出](img/B21019_09_17.jpg)'
- en: 'Figure 9.17: Output of OpenAI response'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.17：OpenAI 响应的输出
- en: Extracting key phrases using Azure Cognitive Service
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Azure 认知服务提取关键短语
- en: Authenticating the client
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 认证客户端
- en: 'This code defines a `authenticate_client()` function to authenticate the Azure
    Text Analytics client using the provided API key. It initializes an `AzureKeyCredential`
    object with the API key and creates a `TextAnalyticsClient` object with the specified
    endpoint and credentials. Finally, it returns the authenticated client instances:'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这段代码定义了一个`authenticate_client()`函数，用于使用提供的API密钥对Azure文本分析客户端进行身份验证。它通过API密钥初始化`AzureKeyCredential`对象，并使用指定的端点和凭据创建`TextAnalyticsClient`对象。最后，返回已验证的客户端实例：
- en: '[PRE7]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The preceding code includes error handling to catch and handle any exceptions
    that might occur during the authentication process. If an error occurs, it prints
    an error message and returns `None`. This makes the function more robust and helps
    in diagnosing issues related to client authentication.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码包括错误处理机制，用于捕捉并处理在身份验证过程中可能发生的任何异常。如果发生错误，它会打印错误消息并返回`None`。这使得函数更加健壮，有助于诊断与客户端身份验证相关的问题。
- en: 'Alternatively, you can also use `key_phrase_extraction_example` function utilizes
    an Azure Text Analytics client to extract key phrases from a document. It populates
    `phrase_list` with extracted key phrases and concatenates them into `phrases`.
    If successful, it returns both `phrase_list` and `phrases`; otherwise, it handles
    exceptions and prints an error message:'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另外，你也可以使用`key_phrase_extraction_example`函数，它利用Azure文本分析客户端从文档中提取关键短语。它将提取的关键短语填充到`phrase_list`中，并将其连接成一个`phrases`字符串。如果成功，它返回`phrase_list`和`phrases`；否则，它处理异常并打印错误信息：
- en: '[PRE8]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Executing key phrases:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行关键短语：
- en: 'This line calls the `key_phrase_extraction_example` function with the client
    object as an argument. It retrieves two values: `phrase_list`, a list containing
    extracted key phrases, and `phrases`, a concatenated string of these phrases:'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这一行调用了`key_phrase_extraction_example`函数，并将客户端对象作为参数。它检索两个值：`phrase_list`，一个包含提取关键短语的列表，以及`phrases`，这些短语的连接字符串：
- en: '[PRE9]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This is the output:'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是输出结果：
- en: '![Figure 9.18: Output of the generated phrases from the user prompt](img/B21019_09_18.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.18：从用户提示生成的短语输出](img/B21019_09_18.jpg)'
- en: 'Figure 9.18: Output of the generated phrases from the user prompt'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.18：从用户提示生成的短语输出
- en: Generating prompts for image creation using Azure OpenAI’s DALL-E model
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Azure OpenAI的DALL-E模型生成图像创建提示
- en: 'Prompt for image generation:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图像生成提示：
- en: 'Construct a prompt for generating images using the DALL-E model based on provided
    phrases:'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 构建一个基于提供的短语生成图像的DALL-E模型提示：
- en: '[PRE10]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Extracting image phrases from the generated response:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从生成的响应中提取图像短语：
- en: 'This code sends a request to OpenAI’s text completion API with a given prompt,
    retrieves the response containing image phrases, splits the response by newline
    characters, and extracts the image phrases from the response. The prompt sets
    the context for DALL-E to create an image. For example, `Provide an image idea
    for each phrase` is a directive that tells the model to interpret the phrases
    as visual cues and generate image ideas based on them. The extracted phrases are
    specific descriptive elements derived from the model’s response to the prompt.
    These phrases provide the detailed visual components that guide DALL-E in generating
    images:'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这段代码向OpenAI的文本补全API发送一个给定的提示，获取包含图像短语的响应，将响应按换行符分割，并从中提取图像短语。该提示为DALL-E创建图像设定了背景。例如，`Provide
    an image idea for each phrase`（为每个短语提供一个图像创意）是一个指令，告诉模型将这些短语视为视觉提示，并根据它们生成图像创意。提取的短语是从模型对提示的响应中派生出来的特定描述性元素。这些短语提供了详细的视觉组件，指导DALL-E生成图像：
- en: '[PRE11]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Figure 9.19: Output of the generated image phrases](img/B21019_09_19.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.19：生成的图像短语输出](img/B21019_09_19.jpg)'
- en: 'Figure 9.19: Output of the generated image phrases'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.19：生成的图像短语输出
- en: Processing image phrases
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 处理图像短语
- en: '[PRE12]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This is the output:'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是输出结果：
- en: '![Figure 9.20: Output of image phrases after removing duplicates](img/B21019_09_20.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.20：去除重复项后的图像短语输出](img/B21019_09_20.jpg)'
- en: 'Figure 9.20: Output of image phrases after removing duplicates'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.20：去除重复项后的图像短语输出
- en: 'Generating image URLs:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成图像URL：
- en: 'This code iterates over a list of image phrases, sends requests to OpenAI’s
    Image API to generate images based on each phrase, retrieves the URL of the generated
    image, and appends the URL to a list of images:'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这段代码遍历图像短语列表，向OpenAI的图像API发送请求，根据每个短语生成图像，获取生成图像的URL，并将URL添加到图像列表中：
- en: '[PRE14]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Downloading generated images
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载生成的图像
- en: 'This code iterates over a list of image URLs, downloads each image using `urllib`,
    assigns a filename to each image based on a counter, and appends the filename
    to a list. Finally, it prints a message indicating that the downloading process
    is complete:'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这段代码遍历图像 URL 列表，使用 `urllib` 下载每张图像，根据计数器为每张图像分配一个文件名，并将文件名附加到列表中。最后，它会打印一条消息，指示下载过程已完成：
- en: '[PRE15]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This is the output:'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是输出：
- en: '![Figure 9.21: Output of generated images](img/B21019_09_21.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.21：生成图像的输出](img/B21019_09_21.jpg)'
- en: 'Figure 9.21: Output of generated images'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.21：生成图像的输出
- en: Generating an audio file using the Azure Speech service
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Azure 语音服务生成音频文件
- en: Create Speech config object
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建语音配置对象
- en: 'This code initializes a `SpeechConfig` object with the provided subscription
    key and region for the Azure Speech service and prints the configuration details:'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这段代码使用提供的订阅密钥和区域初始化 `SpeechConfig` 对象，配置 Azure 语音服务，并打印配置详细信息：
- en: '[PRE16]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Text to speech function:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文本转语音功能：
- en: 'The `text_to_speech` function leverages the Azure Speech service to convert
    input text into speech. It saves the synthesized audio to a specified filename
    and provides feedback on the process outcome:'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`text_to_speech` 函数利用 Azure 语音服务将输入文本转换为语音。它将合成的音频保存到指定的文件名，并提供关于处理结果的反馈：'
- en: '[PRE17]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'This is the output:'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是输出：
- en: '![Figure 9.22: Output of Speech based on generated images](img/B21019_09_22.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.22：基于生成图像的语音输出](img/B21019_09_22.jpg)'
- en: 'Figure 9.22: Output of Speech based on generated images'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.22：基于生成图像的语音输出
- en: Combining the audio file with the images to produce a video
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将音频文件与图像结合生成视频
- en: 'This code resizes images, creates video clips with a duration of 2 seconds
    for each image, combines them into a final video clip, adds audio from the specified
    file, and writes the resulting video to an output file. Finally, it prints messages
    indicating the start and completion of the video creation process:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码调整图像大小，为每张图像创建一个 2 秒的短片，将它们合成到最终的视频短片中，从指定的文件中添加音频，并将生成的视频写入输出文件。最后，它会打印消息，指示视频创建过程的开始和完成：
- en: '[PRE18]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This is the output:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这是输出：
- en: '![Figure 9.23: Output of combining the images and audio into a video](img/B21019_09_23.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.23：将图像和音频合成视频的输出](img/B21019_09_23.jpg)'
- en: 'Figure 9.23: Output of combining the images and audio into a video'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.23：将图像和音频合成视频的输出
- en: '![Figure 9.24: Output of the images, audio, and combined video downloaded](img/B21019_09_24.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.24：下载的图像、音频和合成视频的输出](img/B21019_09_24.jpg)'
- en: 'Figure 9.24: Output of the images, audio, and combined video downloaded'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.24：下载的图像、音频和合成视频的输出
- en: 'The code snippets for this chapter are available on GitHub and can be accessed
    here: [https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter_9.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter_9.ipynb)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码示例可以在 GitHub 上找到，访问地址：[https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter_9.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter_9.ipynb)
- en: Summary
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discovered how to turn text into videos using Azure and
    OpenAI. First, we made a summary of the text and picked out important phrases
    with Azure Cognitive Services. Then, we got image ideas and fetched related images
    with OpenAI’s DALL-E model. Next, we made a speech from the text with the Azure
    Speech service and combined it with the images to make a video. This method makes
    it easier to create interesting video content by automatically changing text into
    visuals and audio.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用 Azure 和 OpenAI 将文本转化为视频。首先，我们通过 Azure 认知服务对文本进行了摘要，并提取了重要短语。然后，我们用
    OpenAI 的 DALL-E 模型获取了图像创意并下载了相关图像。接着，我们通过 Azure 语音服务将文本转换为语音，并将其与图像结合制作成视频。这种方法通过自动将文本转化为视觉和音频，简化了制作有趣视频内容的过程。
- en: By using these advanced technologies, we can speed up the process of making
    videos from text. This not only saves time but also makes the video content more
    accessible and engaging. With Azure and OpenAI, changing text into captivating
    videos is simpler and more efficient, offering new opportunities for sharing ideas
    and stories.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用这些先进的技术，我们可以加速将文本制作成视频的过程。这不仅节省了时间，还使视频内容更加易于获取和富有吸引力。借助 Azure 和 OpenAI，将文本转化为引人入胜的视频变得更加简单高效，为分享创意和故事提供了新的机会。
- en: In the next chapter, we will delve into creating a multimodal multi-agent framework
    with the Azure OpenAI Assistant API. This chapter will guide you through building
    a system where multiple intelligent agents collaborate using advanced language
    models. These agents will be capable of understanding and generating natural language,
    enabling them to perform tasks independently and make autonomous decisions. For
    instance, we will explore a scenario where AI agents work together to create and
    enhance images based on user input. One agent might generate an initial image,
    another refines the details, and a third adjusts the colors and textures. This
    collaborative process will demonstrate how a team of AI agents can achieve high-quality
    and intricate outputs that would be challenging for a single agent to accomplish
    alone.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将深入探讨如何使用 Azure OpenAI Assistant API 创建一个多模态多智能体框架。本章将引导你构建一个系统，其中多个智能体通过使用先进的语言模型协作。这些智能体将能够理解和生成自然语言，使它们能够独立执行任务并做出自主决策。例如，我们将探讨一个场景，AI
    智能体根据用户输入共同工作，创建和增强图像。一个智能体可能会生成初始图像，另一个则完善细节，第三个调整颜色和纹理。这个协作过程将展示 AI 智能体团队如何实现高质量且复杂的输出，而单个智能体独自完成这一任务将具有挑战性。
