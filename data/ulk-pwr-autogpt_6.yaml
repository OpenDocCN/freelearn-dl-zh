- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Scaling Auto-GPT for Enterprise-Level Projects with Docker and Advanced Setup
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Docker 和高级设置为企业级项目扩展 Auto-GPT
- en: In [*Chapter 2*](B21128_02.xhtml#_idTextAnchor028)*,* we covered how to start
    Auto-GPT with Docker; now, we will dive deeper into the utilization of Docker.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第2章*](B21128_02.xhtml#_idTextAnchor028)*,* 我们介绍了如何使用 Docker 启动 Auto-GPT；现在，我们将深入探讨
    Docker 的使用。
- en: Docker has become a dynamic tool in the realm of software development, especially
    in the management and distribution of complex applications such as Auto-GPT. As
    such, this chapter aims to provide you with a comprehensive understanding of how
    Auto-GPT utilizes Docker. Using Docker will make sure we are always on the same
    page. Also, you can read about several cases, such as this GitHub issue I reported
    which has an early issue number [https://github.com/Significant-Gravitas/AutoGPT/issues/666](https://github.com/Significant-Gravitas/AutoGPT/issues/666),
    where my Auto-GPT Agent managed to break out of its own boundaries using an exploit
    it found by itself.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 已成为软件开发领域的一个动态工具，特别是在管理和分发复杂应用程序（如 Auto-GPT）方面。因此，本章旨在为您提供有关 Auto-GPT
    如何利用 Docker 的全面了解。使用 Docker 可以确保我们始终保持同步。此外，您可以阅读几个案例，比如我报告的这个 GitHub 问题，其中我的
    Auto-GPT Agent 通过自身发现的漏洞突破了自己的边界，问题编号为 [https://github.com/Significant-Gravitas/AutoGPT/issues/666](https://github.com/Significant-Gravitas/AutoGPT/issues/666)。
- en: We will also explore the continuous mode functionality in Auto-GPT and discuss
    its implications. The power of Auto-GPT is not only in its ability to generate
    creative and coherent content but also in its capability to operate autonomously.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将探讨 Auto-GPT 中连续模式的功能，并讨论其影响。Auto-GPT 的强大之处不仅在于它生成创造性且连贯的内容的能力，还在于它独立运作的能力。
- en: 'This chapter will also delve into one of Auto-GPT’s key features: continuous
    mode. We will explore what it is, its potential applications, and the precautions
    required when using it.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章还将深入探讨 Auto-GPT 的一个关键功能：连续模式。我们将探索它是什么、它的潜在应用以及使用时需要注意的事项。
- en: Continuous mode in Auto-GPT allows the program to run without requiring user
    approval at every step. This means that it can generate content, perform tasks,
    and even make decisions independently. This feature is particularly useful for
    automating tasks that would otherwise require constant human intervention. However,
    as with any powerful tool, it is essential to use it responsibly.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Auto-GPT 的连续模式允许程序在每个步骤无需用户确认的情况下运行。这意味着它可以独立生成内容、执行任务，甚至做出决策。这个功能对于自动化那些本来需要不断人工干预的任务尤为有用。然而，正如任何强大工具一样，使用时必须负责任。
- en: 'This chapter covers the following topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖以下主题：
- en: An overview of how Auto-GPT utilizes Docker
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Auto-GPT 如何利用 Docker 的概述
- en: Fixing potential loopholes or bugs
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复潜在的漏洞或错误
- en: Example run scripts
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例运行脚本
- en: What is continuous mode?
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是连续模式？
- en: Known use cases of continuous mode
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已知的连续模式使用案例
- en: Safeguards and best practices
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全措施和最佳实践
- en: Potential risks and how to mitigate them
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 潜在风险及其缓解措施
- en: Gracefully stopping a continuous process
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优雅地停止一个连续的过程
- en: An overview of how AutoGPT utilizes Docker
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Auto-GPT 如何利用 Docker 的概述
- en: Docker operates on the principle of containerization – a streamlined and isolated
    way to run applications securely and efficiently. Consider these containers as
    self-sufficient units housing all the components required to run an application.
    Auto-GPT’s integration with Docker empowers users to bypass the strenuous process
    of setting up environments manually, turning Auto-GPT’s focus towards customizing
    AI experiences instead.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 基于容器化原则运行——这是一种高效且隔离的方式来安全地运行应用程序。可以将这些容器视为自给自足的单元，包含运行应用所需的所有组件。Auto-GPT
    与 Docker 的集成使得用户能够跳过手动设置环境的繁琐过程，将 Auto-GPT 的焦点转向定制 AI 体验。
- en: Essentially, Docker encapsulates Auto-GPT’s computational environment. The Docker
    container for Auto-GPT includes the Python environment, the necessary libraries,
    as well as the application itself. The Dockerfile, located in the root directory
    of Auto-GPT, holds the instructions for Docker to build this image.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，Docker 封装了 Auto-GPT 的计算环境。Auto-GPT 的 Docker 容器包括 Python 环境、必要的库以及应用程序本身。位于
    Auto-GPT 根目录中的 Dockerfile 包含了 Docker 用来构建此镜像的指令。
- en: So, how it works is that Docker creates an isolated environment, or *container*,
    where Auto-GPT runs. Every interaction between Auto-GPT and your system goes through
    Docker, which interprets these interactions and ensures they’re safe and compatible
    with the environment within the container. Isolation also means that if anything
    goes wrong inside the container, your system remains unaffected.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 它的工作原理是，Docker 创建了一个隔离的环境，或者说是一个*容器*，Auto-GPT 就在这个容器里运行。Auto-GPT 与系统之间的每一次交互都会通过
    Docker，Docker 会解释这些交互并确保它们是安全的，且与容器内的环境兼容。隔离性也意味着，如果容器内发生任何问题，你的系统不会受到影响。
- en: The Dockerfile for this often just contains a few commands, such as which environment
    is supposed to be loaded, which is `python:3.10-slim` on top of poetry in the
    case of Auto-GPT.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 Dockerfile 通常只包含几个命令，例如需要加载哪个环境，在 Auto-GPT 的情况下，就是在 poetry 上加载 `python:3.10-slim`。
- en: Let’s now see how this integration works.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看看这个集成是如何工作的。
- en: Understanding Auto-GPT’s integration with Docker
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 Auto-GPT 与 Docker 的集成
- en: The integration of Docker with Auto-GPT provides several advantages. The encapsulation
    ensures that each user experiences precisely the same computational environment,
    thereby reducing disparities that could arise due to different operating systems
    or Python distributions. This encapsulation also permits seamless sharing and
    easy version control, and eliminates the *It works on my* *machine* problem!
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 与 Auto-GPT 的集成带来了几个优势。封装性确保每个用户体验完全相同的计算环境，从而减少了由于操作系统或 Python 发行版不同而可能产生的差异。这种封装性还允许无缝共享和轻松的版本控制，并且消除了*它在我的*
    *机器* 上能运行的问题！
- en: Auto-GPT had a memory database with SQLite running that contained the actions
    and messages of prior runs. This was first augmented with a few vector database
    solutions at the beginning of 2023, but was completely dropped by the middle of
    2023 because some of them did not work with most users. Since then, a VectorDB
    or any memory apart from saving into a file locally has not been implemented because
    supporting too many solutions was too much work. Instead, the memory is held in
    a JSON file locally, whose position may vary in each release version of Auto-GPT.
    Using Docker was a necessary step here, although many users then (including me)
    complained that Auto-GPT was less supportive of local running instances. Fortunately,
    it changed later, as the memory system is again a very basic JSON file now, which
    is better than nothing.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Auto-GPT 之前有一个包含 SQLite 的内存数据库，用于存储先前运行的操作和消息。2023 年初，内存数据库第一次通过一些向量数据库解决方案进行了扩展，但到
    2023 年中期被完全放弃，因为其中一些解决方案无法与大多数用户兼容。从那时起，除了本地保存到文件外，未再实现任何其他向量数据库或内存方案，因为支持过多的解决方案工作量太大了。相反，内存保存在本地的
    JSON 文件中，其位置可能在每个 Auto-GPT 版本中有所不同。使用 Docker 是这一过程中必须的一步，尽管当时许多用户（包括我）抱怨 Auto-GPT
    对本地运行实例的支持不够好。幸运的是，后来情况发生了变化，内存系统现在又变回了一个非常基础的 JSON 文件，这总比没有好。
- en: Having delved into why Auto-GPT supports Docker, we may now move forward to
    how to start our Auto-GPT Docker instance.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入探讨为什么 Auto-GPT 支持 Docker 后，我们现在可以继续了解如何启动 Auto-GPT Docker 实例了。
- en: Starting a Docker instance
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动 Docker 实例
- en: While this may sound complex, running a Docker container is remarkably straightforward.
    Firstly, if you haven’t already, you need to make sure Docker is installed on
    your system. Several guides can assist you with this process, such as Docker’s
    official installation instructions ([https://docs.docker.com/get-docker/](https://docs.docker.com/get-docker/)),
    which can guide you through the process for Windows, MacOS, and various Linux
    distributions.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这听起来可能很复杂，但运行 Docker 容器实际上非常简单。首先，如果你还没有安装 Docker，需要确保你的系统上已经安装了 Docker。有许多指南可以帮助你完成这个过程，例如
    Docker 官方的安装说明（[https://docs.docker.com/get-docker/](https://docs.docker.com/get-docker/)），它可以引导你完成
    Windows、MacOS 和各种 Linux 发行版的安装过程。
- en: 'To run an instance of Auto-GPT in a Docker container, you’ll first need to
    build the Docker image using the Dockerfile. Here’s a quick rundown:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Docker 容器中运行 Auto-GPT 实例，首先需要使用 Dockerfile 构建 Docker 镜像。这里是一个简要的概述：
- en: 'Navigate to the directory that contains the Dockerfile (it should be the root
    directory of Auto-GPT): `cd path/to/Auto-GPT`.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到包含 Dockerfile 的目录（它应该是 Auto-GPT 的根目录）：`cd path/to/Auto-GPT`。
- en: Build the Docker image with `docker build -t auto-gpt .`. (make sure it ends
    with a space and dot; it may not be clearly visible).
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `docker build -t auto-gpt .` 构建 Docker 镜像。（确保命令以空格和点结束；点可能不明显）。
- en: 'The easy way to run the instance is to execute the following:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启动实例的简单方法是执行以下命令：
- en: '[PRE0]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you dare, you can also build and run it with vanilla Docker commands:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你敢的话，你也可以使用纯粹的 Docker 命令来构建和运行它：
- en: '[PRE1]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you have followed all the steps correctly, you should be greeted with Auto-GPT’s
    chat input. If not, we will go through the common ways it may not work. Also,
    you can refer to the previously mentioned Docker documentation if the functionality
    may have changed.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你按照所有步骤正确操作，应该会看到 Auto-GPT 的聊天输入界面。如果没有，我们将一起排查常见的不能工作的原因。此外，你也可以参考前面提到的 Docker
    文档，如果功能有所变化。
- en: Although Docker is often easy to just install and go, we may still run into
    some problems.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Docker 通常很容易安装并直接使用，但我们仍然可能遇到一些问题。
- en: Fixing potential loopholes or bugs
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复潜在的漏洞或 bug
- en: To use Docker on a PC, you have to make sure virtualization is activated.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 PC 上使用 Docker，必须确保启用了虚拟化。
- en: On macOS, you do not have to change anything. Virtualization is already working
    there; you only have to download and install Docker Desktop.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在 macOS 上，你无需更改任何设置。虚拟化已经在该系统上工作；你只需要下载并安装 Docker Desktop。
- en: As each motherboard manufacturer has different BIOS settings, the way you activate
    it may vary, but normally you would go to the BIOS by restarting your machine
    and pressing the *Setup*/*BIOS* button that is displayed. For me, it’s *F2* or
    *DEL*. If no button is displayed, you will have to do some research.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 由于每个主板厂商的 BIOS 设置不同，激活方式可能有所不同，但通常你需要通过重启电脑并按下显示的*Setup*/*BIOS* 按钮进入 BIOS。对我来说是
    *F2* 或 *DEL*。如果没有显示按钮，你需要做一些研究。
- en: Depending on which CPU manufacturer you have, the setting may be less obvious.
    For example, Intel has a setting named **Intel Virtualization Technology**, while
    AMD has **AMD-V**. Once you have found it, make sure to enable it and save the
    change.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的 CPU 厂商，设置可能不太明显。例如，Intel 有一个名为**Intel 虚拟化技术**的设置，而 AMD 有**AMD-V**。一旦找到它，确保启用它并保存更改。
- en: It’s important to mention that working with Docker can sometimes lead to bugs
    or issues that are not apparent at first. An example of such is the notorious
    `docker system` `prune` command.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 需要提到的是，使用 Docker 时，有时会遇到一些在开始时并不明显的 bug 或问题。一个例子就是臭名昭著的`docker system` `prune`命令。
- en: Despite Docker’s advantages, it isn’t without potential challenges. One common
    issue involves insufficient memory allocation. When you start Docker, it reserves
    a certain amount of memory which, if depleted, can cause unexpected behavior or
    crashes. To resolve this, try to increase Docker’s memory allocation in Docker’s
    settings.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Docker 有很多优点，但也不是没有潜在的挑战。一个常见的问题是内存分配不足。当你启动 Docker 时，它会保留一定量的内存，如果内存耗尽，可能会导致意外的行为或崩溃。为了解决这个问题，可以尝试在
    Docker 设置中增加内存分配。
- en: Another common issue is when Docker fails to start a container because it claims
    the selected port is already in use. Even if you’re certain it isn’t, a misbehaving
    application could be invisibly binding to that port. In this case, rebooting the
    system or manually killing the process occupying the port can help.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见的问题是 Docker 无法启动容器，因为它声称所选的端口已经被占用。即使你确信该端口没有被占用，某个行为不当的应用程序可能也在悄悄地绑定到这个端口。在这种情况下，重新启动系统或手动终止占用端口的进程可能会有所帮助。
- en: I personally recommend either the Docker Desktop app on Windows and Mac, or
    for Linux, I use Portainer. This is a web-based Docker manager application that
    is just as powerful as the official counterpart.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人推荐在 Windows 和 Mac 上使用 Docker Desktop 应用，或者在 Linux 上使用 Portainer。这是一个基于 Web
    的 Docker 管理应用，其功能与官方应用一样强大。
- en: 'You can install and run it by executing these commands:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过执行以下命令来安装和运行它：
- en: 'First, create the volume that the Portainer Server will use to store its database:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建 Portainer Server 用来存储其数据库的卷：
- en: '[PRE2]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, download and install the Portainer Server container. Keep in mind that
    this should all be on one line:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，下载并安装 Portainer Server 容器。请记住，所有内容应该写在同一行上：
- en: '[PRE3]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Docker also creates intermediate images during the build process. These images
    can take up a substantial amount of disk space. Check your Docker system by running
    `docker system df`, and clean up unneeded images with the `docker system` `prune`
    command.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 在构建过程中还会创建中间镜像。这些镜像可能会占用大量磁盘空间。通过运行 `docker system df` 检查你的 Docker 系统，并使用
    `docker system` `prune` 命令清理不需要的镜像。
- en: Sometimes, it is not the project’s fault; sometimes, the software we use may
    experience some issues. Docker is very commonly used, but it can also cause some
    problems.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，并不是项目本身的问题；有时，我们使用的软件可能会遇到一些问题。Docker 被广泛使用，但也可能导致一些问题。
- en: Identifying and fixing potential issues related to Docker
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 识别并修复与 Docker 相关的潜在问题。
- en: Utilizing Docker alongside Auto-GPT can be a rewarding experience, but like
    all tech integrations, it comes with a set of challenges.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Auto-GPT 一起使用 Docker 可以是一次有益的体验，但像所有技术集成一样，它也伴随着一系列挑战。
- en: 'Here’s an in-depth guide to tackling these challenges:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这是解决这些挑战的深入指南：
- en: 'Docker daemon not running:'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker 守护进程未运行：
- en: '`sudo systemctl start docker` to initiate the Docker service.'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `sudo systemctl start docker` 来启动 Docker 服务。
- en: '`Applications` folder. If Docker is running correctly, you’ll see the Docker
    whale icon in your top menu bar.'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Applications` 文件夹。如果 Docker 正常运行，你将在顶部菜单栏看到 Docker 鲸鱼图标。'
- en: 'Auto-GPT packages or modules missing:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺少 Auto-GPT 包或模块：
- en: '`cd /app/`.'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cd /app/`。'
- en: '`requirements.txt` file that lists all necessary packages. Use `pip` to install
    these requirements:'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`requirements.txt` 文件列出了所有必要的包。使用 `pip` 来安装这些依赖：'
- en: '`python -m pip install -``r requirements.txt`.'
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python -m pip install -r requirements.txt`。'
- en: This command will ensure all listed packages in the `requirements.txt` file
    are installed within the container’s environment. If there are any additional
    modules or packages you know are missing, you can install them individually using
    `pip` as well.
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此命令将确保在容器环境中安装 `requirements.txt` 文件中列出的所有包。如果知道缺少其他模块或包，你也可以单独使用 `pip` 安装它们。
- en: '`exit`.'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exit`。'
- en: 'Remember, Docker containers are isolated environments. Any changes you make
    inside a container (such as installing packages) won’t affect your host system.
    However, these changes will be lost if the container is removed. To make persistent
    changes, you might consider creating a new Docker image or using Docker volumes.*   Insufficient
    memory or disk space: Docker may sometimes use up too much space, or maybe you
    just do not have enough storage available. Docker may just shut down and not even
    tell you what was wrong:'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请记住，Docker 容器是隔离的环境。你在容器内所做的任何更改（如安装包）不会影响主机系统。然而，如果容器被删除，这些更改将会丢失。为了保持持久的更改，你可以考虑创建新的
    Docker 镜像或使用 Docker 卷。* 内存或磁盘空间不足：Docker 有时可能会占用过多空间，或者可能你的存储空间不足。Docker 可能会直接关闭，但并不会告诉你问题是什么：
- en: '`docker system prune -a` to remove unused data. Note: This will delete unused
    containers, networks, and images. Always backup essential data.'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `docker system prune -a` 来删除未使用的数据。注意：这将删除未使用的容器、网络和镜像。务必备份重要数据。
- en: '**Adjust resources (Windows/macOS)**: Open **Docker Desktop** | **Settings**
    | **Resources** to modify memory or disk allocations.*   Networking issues: Sometimes,
    the port forwarding to and from Docker containers may be broken. For example,
    when we want to open the frontend website of our Auto-GPT instance, it may be
    that we cannot access it:'
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调整资源（Windows/macOS）**：打开 **Docker Desktop** | **Settings** | **Resources**
    来修改内存或磁盘分配。* 网络问题：有时，Docker 容器的端口转发可能会出现问题。例如，当我们想要打开 Auto-GPT 实例的前端网站时，可能会发现无法访问：'
- en: '`docker port <container_name>`, you can check which ports are active'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `docker port <container_name>`，可以检查哪些端口是活动的。
- en: '`-p` flag, such as `docker run -p 4000:80 <image_name>`, to bind container
    ports to host ports*   Version conflicts:'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `-p` 标志，例如 `docker run -p 4000:80 <image_name>`，将容器端口绑定到主机端口* 版本冲突：
- en: '`sudo apt-get update && sudo apt-get upgrade docker-ce` or similar commands
    to update Docker.'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `sudo apt-get update && sudo apt-get upgrade docker-ce` 或类似命令来更新 Docker。
- en: '**Windows/macOS**: Docker Desktop will notify you of available updates. Ensure
    you keep it up to date.*   For Auto-GPT updates, regularly check the official
    Auto-GPT repository or documentation for the latest versions and update instructions.*   Container
    isolation:'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows/macOS**：Docker Desktop 会通知你有可用更新。确保保持更新。* 对于 Auto-GPT 更新，定期查看官方 Auto-GPT
    仓库或文档，以获取最新版本和更新说明。* 容器隔离：'
- en: '`-v` to mount host directories to the container, such as `docker run -v /``host/directory:/container/directory
    <image_name>`'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-v` 用于将主机目录挂载到容器中，例如 `docker run -v /host/directory:/container/directory <image_name>`'
- en: '`docker network inspect <network_name>` to check the network configuration
    and ensure containers are correctly connected*   Logs and diagnostics:'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `docker network inspect <network_name>` 检查网络配置，确保容器正确连接。* 日志与诊断：
- en: '`docker logs <container_name>` command will display the logs of your container.
    These logs are invaluable for diagnosing issues. If an error occurs, it’s likely
    detailed in these logs.'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `docker logs <container_name>` 命令将显示容器的日志。这些日志对于诊断问题至关重要。如果发生错误，日志中很可能会有详细信息。
- en: Remember, the keys to troubleshooting are patience and systematic exploration.
    With these detailed steps, you’ll be well equipped to handle most Docker-related
    challenges that come your way when working with Auto-GPT.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，故障排除的关键是耐心和系统化的探索。通过这些详细步骤，当你在使用Auto-GPT时，面对大多数与Docker相关的挑战，你将能够从容应对。
- en: Sometimes the issues we experience are deeper, and for those, we need to access
    the container that Auto-GPT is running on.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们遇到的问题可能更为复杂，对于这些问题，我们需要访问Auto-GPT所运行的容器。
- en: To get an idea of how else you may start Auto-GPT using Docker, I have made
    a few examples.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你了解如何通过Docker启动Auto-GPT，我列出了一些示例。
- en: Example run scripts
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例运行脚本
- en: 'To familiarize yourself with run scripts, you can refer to the ones listed
    here:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要熟悉运行脚本，可以参考此处列出的脚本：
- en: 'To run an interactive shell in the Docker container (useful for debugging),
    use the following command:'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在Docker容器中运行交互式Shell（有助于调试），请使用以下命令：
- en: '[PRE4]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This command starts an interactive shell within the Docker container, allowing
    you to directly access and debug Auto-GPT.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此命令启动Docker容器中的交互式Shell，允许你直接访问并调试Auto-GPT。
- en: 'To run Auto-GPT on a different port, try this:'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在不同端口上运行Auto-GPT，可以尝试以下命令：
- en: '[PRE5]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To forward all traffic from port 80 to Auto-GPT (this requires administrator/`sudo`
    privileges), run the following:'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将所有流量从端口80转发到Auto-GPT（这需要管理员/`sudo`权限），请运行以下命令：
- en: '[PRE6]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: By utilizing these run scripts, you can enhance your efficiency and productivity
    when working with Auto-GPT in the Docker environment. Feel free to experiment
    with different port mappings or explore the interactive shell for debugging purposes.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用这些运行脚本，你可以在Docker环境中提高使用Auto-GPT时的效率和生产力。你可以尝试不同的端口映射或探索交互式Shell以进行调试。
- en: As we move forward, brace yourself for an exploration of the intriguing world
    of Auto-GPT’s continuous mode. We will delve deep into its mechanics, understanding
    the potential consequences and benefits it brings to the table, and as the chapters
    unfold, we will also touch upon integrating different LLM models, making the most
    of prompts, and much more. The journey with Auto-GPT is about to get even more
    exciting!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们深入，准备好探索Auto-GPT连续模式的奇妙世界吧。我们将深入研究其机制，理解它带来的潜在后果和好处，随着章节的展开，我们还将讨论如何整合不同的LLM模型、充分利用提示语，等等。与Auto-GPT的旅程即将变得更加激动人心！
- en: Let’s move onto continuous mode and its consequences.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续探讨连续模式及其后果。
- en: What is continuous mode?
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是连续模式？
- en: We will start by explaining what continuous mode is. It allows Auto-GPT to run
    without requiring user approval at each step. This enables automation without
    constant human oversight.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从解释什么是连续模式开始。它允许Auto-GPT在每个步骤无需用户批准的情况下运行，这使得自动化得以在无需持续人工监督的情况下进行。
- en: We will then look at some known use cases and examples of continuous mode, such
    as automating research tasks, content generation, and code compilation. While
    continuous mode is powerful, note that caution should be exercised given the lack
    of human verification.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将看看一些已知的连续模式使用案例和示例，比如自动化研究任务、内容生成和代码编译。虽然连续模式非常强大，但请注意，由于缺乏人工验证，需要谨慎使用。
- en: Next, we will provide tips for using continuous mode safely and effectively.
    This includes setting clearly defined goals, constraints, and limits in the configuration
    to restrict unwanted behavior. Monitoring logs and outputs is also advised.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将提供一些关于如何安全有效地使用连续模式的提示。这包括在配置中设置明确的目标、约束和限制，以防止不必要的行为。同时，建议监控日志和输出。
- en: Furthermore, we will discuss potential risks, such as generating falsities,
    getting stuck in loops, and cost overruns. Mitigation strategies such as kill
    switches, usage limits, and sandboxing will be suggested.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还将讨论一些潜在的风险，如生成虚假信息、陷入循环以及成本超支。我们将提出一些缓解策略，如杀死开关、使用限制和沙盒化。
- en: Lastly, we will explain how to gracefully stop a continuous process, such as
    using keyboard interrupts or the `task_complete` command. We will also explore
    active research into enhancements such as pause commands and timed takeovers.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将解释如何优雅地停止一个连续进程，比如使用键盘中断或`task_complete`命令。我们还将探讨正在进行的研究，以改进暂停命令和定时接管等功能。
- en: Continuous mode allows Auto-GPT to operate autonomously without requiring user
    approval at each step. By keeping the core loop running uninterrupted, it enables
    the automation of tasks without constant human oversight. However, caution is
    advised. When used judiciously with appropriate safeguards, continuous mode can
    boost efficiency. When deployed carelessly, it can have regrettable consequences.
    Finding the right balance requires an understanding of its capabilities and risks.
    This part of the chapter aims to provide that holistic perspective.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 持续模式允许 Auto-GPT 在不需要用户每次确认的情况下自主运行。通过保持核心循环不中断，它使得任务自动化而无需持续的人类监督。然而，使用时需要小心。当谨慎使用并配备适当的安全措施时，持续模式可以提升效率。若使用不当，可能会产生遗憾的后果。找到合适的平衡点需要了解其能力和风险。本章这一部分旨在提供这种全面的视角。
- en: Known use cases of continuous mode
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 已知的持续模式用例
- en: My own favorite use case is a personal assistant that only reports or asks when
    input is needed. While most AI chatbots currently work one step at a time, I prefer
    Auto-GPT to run continuously, and I wrote my Sophie-Plugin so that Auto-GPT only
    texts me when it either wants to report something and keeps going (it then adds
    `...` (it’s just three dots; I did not add any other symbols, as it may create
    confusion) at the end of the message), or it asks me to make a certain decision
    or provide feedback.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人最喜欢的用例是一个个人助手，它只在需要输入时报告或提问。虽然目前大多数 AI 聊天机器人都是一步一步进行操作的，但我更喜欢让 Auto-GPT 持续运行，我编写了我的
    Sophie-Plugin 插件，使得 Auto-GPT 只有在需要报告某些信息时才会发送消息，并且会继续执行（然后它会在消息的末尾加上 `...`（只是三个点，我没有添加任何其他符号，因为这可能会造成混淆）），或者它会要求我做出某个决策或提供反馈。
- en: This way, the assistants’ use case is broader, and you can also give it multiple
    tasks and tell it to get back to you once they are done, in combination with other
    plugins, such as email plugins, discord plugins, and SSH terminal plugins. Your
    AI is even capable of managing communication for you, which could be risky but
    is at the same time very cool. Auto-GPT once even negotiated competitive salaries
    for me for a coding project it was supposed to do as it reached out to companies
    to test the code. On a side note, that was GPT 3.5 before it was Turbo. The new
    models are not as bold or aware of what the context is anymore, which could maybe
    be achieved with alternative LLM models, which were used in my mini-autogpt project
    ([https://github.com/Wladastic/mini_autogpt](https://github.com/Wladastic/mini_autogpt)),
    where I lined up several LLM models and tested their congruence. As OpenAI seemingly
    tries to minimize the cost of running its new LLMs, it has become less and less
    sure about what they do and they are either ambivalent or repetitive. Also, they
    feel like they do not really listen to you and stick to what they said previously.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，助手的使用场景更广泛，你还可以给它分配多个任务，并让它在完成后再向你报告，结合其他插件使用，如电子邮件插件、Discord 插件和 SSH
    终端插件。你的 AI 甚至能够为你管理沟通，虽然这可能存在风险，但同时也非常酷。Auto-GPT 甚至曾为我谈判过编程项目的竞争性薪资，它在联系公司测试代码时达成了这一目标。顺便提一下，那是
    GPT 3.5 版本，还未升级为 Turbo。新的模型似乎不再那么大胆，也不再意识到上下文是什么，这或许可以通过其他 LLM 模型来实现，这些模型被我用于我的
    mini-autogpt 项目（[https://github.com/Wladastic/mini_autogpt](https://github.com/Wladastic/mini_autogpt)），在这个项目中，我将多个
    LLM 模型排在一起并测试它们的一致性。由于 OpenAI 似乎在尽量减少运行其新 LLM 模型的成本，这些模型已经越来越不确定它们在做什么，要么态度模糊，要么显得重复。此外，它们感觉不像是完全在听你说话，而是坚持之前的说法。
- en: Automating research and analysis
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化研究与分析
- en: One of the most compelling applications of Auto-GPT’s continuous mode is in
    the field of research and analysis. By activating continuous mode, Auto-GPT can
    endlessly mine information from multiple sources, such as academic journals, news
    feeds, and social media platforms. Market researchers can deploy this feature
    to keep an ongoing tab on consumer sentiments, emerging trends, and competitor
    strategies. The feature is also highly beneficial for academic research, as it
    can scan newly published papers and add new insights in real time to an ongoing
    study.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Auto-GPT 持续模式最引人注目的应用之一是研究与分析领域。通过启用持续模式，Auto-GPT 可以不断从多个来源挖掘信息，如学术期刊、新闻源和社交媒体平台。市场研究人员可以利用此功能持续跟踪消费者情绪、新兴趋势和竞争对手策略。这个功能对学术研究也非常有益，因为它可以扫描新发布的论文，并实时将新的见解添加到正在进行的研究中。
- en: Streamlining content creation
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精简内容创作
- en: Content creators and marketing departments can significantly benefit from Auto-GPT’s
    continuous mode. The AI can be programmed to scan trending topics and produce
    relevant articles, blog posts, or social media updates without human intervention.
    Furthermore, because the model can generate content in various styles and formats,
    it allows a diversified content strategy. Imagine running a news website where
    the AI continually updates content based on emerging global events, freeing up
    human editors to focus on more complex tasks, such as investigative reporting
    or opinion pieces.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 内容创作者和营销部门可以显著受益于 Auto-GPT 的连续模式。AI 可以被编程为扫描流行话题，并生成相关的文章、博客帖子或社交媒体更新，而无需人工干预。此外，由于模型可以生成各种风格和格式的内容，它允许多元化的内容策略。想象一下运行一个新闻网站，AI
    会根据全球新兴事件持续更新内容，让人类编辑专注于更复杂的任务，比如调查性报道或评论文章。
- en: Supercharging code compilation
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超级加速代码编译
- en: Developers often find themselves waiting for code to compile, which interrupts
    the flow of work. Auto-GPT in continuous mode can manage these mundane tasks.
    It can be set up to automatically compile code, run test cases, and even push
    updates to a repository. This enables a more seamless development process and
    ensures that the latest changes are always integrated and tested. By offloading
    routine tasks to Auto-GPT, developers can focus on problem-solving and innovation.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员常常发现自己在等待代码编译，这会打断工作流程。Auto-GPT 在连续模式下可以管理这些琐碎的任务。它可以设置为自动编译代码、运行测试用例，甚至将更新推送到代码库。这使得开发过程更加无缝，确保最新的变更始终被集成并测试。通过将常规任务交给
    Auto-GPT，开发人员可以专注于解决问题和创新。
- en: Always-on customer support
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续提供的客户支持
- en: Customer support is an area where Auto-GPT’s continuous mode can be transformative.
    By enabling this feature, the chatbot can handle an infinite number of queries
    and concerns without requiring human intervention. This makes for a 24/7 customer
    support system that can handle most issues and only escalates complex or sensitive
    matters to human agents. This not only improves customer satisfaction but also
    significantly reduces the operational costs associated with customer service.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 客户支持是 Auto-GPT 连续模式能够带来变革的领域之一。启用此功能后，聊天机器人可以处理无限数量的查询和问题，而无需人工干预。这使得客户支持系统可以
    24/7 运作，处理大多数问题，只会将复杂或敏感的事务升级给人工代理。这不仅提高了客户满意度，还大幅降低了与客户服务相关的运营成本。
- en: Before we dive into using continuous mode, let’s first make sure we learn some
    best practices.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用连续模式之前，让我们首先学习一些最佳实践。
- en: Safeguards and best practices
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全保障和最佳实践
- en: 'While the capabilities of Auto-GPT’s continuous mode are impressive, it is
    essential to approach its deployment with caution. Here are some measures you
    can take:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Auto-GPT 连续模式的能力令人印象深刻，但部署时需要谨慎。以下是一些你可以采取的措施：
- en: '**Enable confirmation prompts**: For commands that could potentially incur
    costs or are irreversible, enable confirmation prompts. For example, if you set
    up Auto-GPT to handle emails, a confirmation prompt sent to the user before sending
    could prevent unwanted communications.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用确认提示**：对于可能产生费用或不可逆的命令，启用确认提示。例如，如果你设置了 Auto-GPT 处理电子邮件，可以在发送前向用户发送确认提示，以防止不必要的通信。'
- en: '**Use allowlists and blocklists**: Restrict the model’s capabilities by using
    allowlists for approved actions and blocklists for prohibited ones. For example,
    you could use an allowlist to specify which external databases the AI can access
    for information.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用白名单和黑名单**：通过使用白名单来限制已批准的操作，黑名单来禁止不被允许的操作，从而限制模型的能力。例如，你可以使用白名单来指定 AI 可以访问哪些外部数据库以获取信息。'
- en: '**Gradual resource scaling**: Begin with conservative computational and financial
    limits. As you observe the system’s behavior and performance, you can slowly relax
    these constraints. This minimizes the risk of runaway costs or overutilization
    of resources.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**渐进式资源扩展**：从保守的计算和财务限制开始。当你观察到系统的行为和性能时，可以逐渐放宽这些限制。这有助于最小化成本失控或资源过度利用的风险。'
- en: '**Sandboxed testing**: Before rolling out the system in a live environment,
    it is advisable to test it in a sandboxed or isolated setting. This allows you
    to identify and correct any bugs or vulnerabilities without affecting real-world
    operations.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**沙箱测试**：在将系统投入生产环境之前，建议在沙箱或隔离的环境中进行测试。这可以让你发现并修复任何 bug 或漏洞，而不会影响实际的运营。'
- en: We have discussed ways to ensure good behavior. Now, we can assess how human
    monitoring through user prompts relates to general human oversight.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了确保良好行为的方法。现在，我们可以评估用户提示下的人类监督与一般人类监控之间的关系。
- en: Regular monitoring and human oversight
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定期监控和人工监督
- en: While continuous mode aims to minimize human intervention, periodic reviews
    and adjustments are necessary. Monitor logs to detect any anomalies or irregular
    behavior and have a plan in place for immediate human takeover in high-risk scenarios.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然持续模式旨在尽量减少人工干预，但定期的审查和调整是必要的。监控日志以检测任何异常或不规则行为，并在高风险情况下准备好立即由人工接管。
- en: However, human oversight is still indispensable. Adjust configurations based
    on feedback, establish approval workflows for high-risk scenarios, and default
    to human takeover when unsure.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，人类监督依然是不可或缺的。根据反馈调整配置，针对高风险场景建立审批流程，并在不确定时默认由人工接管。
- en: If you want to fully trust GPT to make all the decisions itself and are confident
    that it might run perfectly, let’s discuss the downside of having GPT make decisions
    for all actions and shake up your trust towards it a little.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想完全信任GPT让它自己做出所有决定，并且有信心它可能会完美运行，那我们就来讨论一下让GPT决定所有操作的弊端，并稍微动摇一下你对它的信任。
- en: Potential risks and how to mitigate them
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 潜在的风险及其缓解措施
- en: As GPT is the core of our Auto-GPT application, it can and will at some point
    make absurd decisions.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 由于GPT是我们Auto-GPT应用的核心，它迟早会做出一些荒谬的决策。
- en: 'For example, I let Auto-GPT run for a while with instructions to write me a
    web-based browser game whose genre is RPG that should be running with `Three.js`,
    and I got this:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我让Auto-GPT运行了一段时间，指示它为我写一个基于Web的浏览器游戏，类型是RPG，且应该使用`Three.js`，我得到的是：
- en: First, Auto-GPT created some empty files of the code it wanted to write but
    only added TODOs in them that indicate that the code has to be finished.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最初，Auto-GPT创建了一些空的代码文件，但只在其中添加了TODOs，表明代码需要完成。
- en: Then it wrote some actual unit tests that might even partially work, but it
    got so confident that it finished the whole project and tested it. Then, it started
    searching Google to find companies to test the game and even wrote an email to
    one of them negotiating a price of only $100 per day as I set that as the budget
    for the project.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后它写了一些实际的单元测试，可能部分有效，但它变得非常自信，完成了整个项目并进行了测试。接着，它开始搜索Google，找寻公司来测试这个游戏，甚至给其中一家公司发了一封邮件，谈判价格为每天仅100美元，因为我设置的项目预算就是如此。
- en: The way it wrote emails was scary and interesting at the same time. It found
    a coding website that just runs code you enter into a box, which also allowed
    URL params that accept code that is to be executed. Auto-GPT created a URL with
    the code it wrote as the parameters that sent an email to some company it found
    on Google that offered cheap QA testing.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 它写邮件的方式既让人害怕又让人感兴趣。它找到了一个可以运行你输入代码的编程网站，这个网站还允许URL参数，这些参数可以接受要执行的代码。Auto-GPT创建了一个URL，把它编写的代码作为参数，并向它在Google上找到的一家提供廉价QA测试的公司发送了邮件。
- en: It also managed to receive the email that was sent back with an answer for the
    price asked by the company employee, although to this day I have no idea how it
    created that email account because it was done by an agent that it created, and
    back then, they did not log what they did.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 它还成功接收了公司员工发送的电子邮件，其中包含关于价格的答复，尽管直到今天我仍然不知道它是如何创建该电子邮件帐户的，因为是它创建的一个代理完成了这项操作，而当时他们没有记录自己的操作。
- en: I was sitting on the couch and listening to the *speak* outputs of Auto-GPT.
    I set it to use a female voice for the main agent and for any other agent, it
    was a male voice, so I just thought it sounded like a conversation in an office
    until the male voice said *finished negotiating the daily price for testing with
    ****, reporting back* *from duty*.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我坐在沙发上，听着Auto-GPT的*讲话*输出。我设置它使用女性声音作为主要代理的声音，其他任何代理则使用男性声音，因此我以为听起来像是办公室里的对话，直到那个男性声音说：“*已完成与****的日常价格谈判，正在汇报*
    *任务结束*。”
- en: Auto-GPT has changed since then. It is a bit stricter with the agents. Back
    then, the agents did whatever they wanted until they decided they were done with
    the task.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 自那时以来，Auto-GPT发生了变化。它对代理的管理更加严格。当时，代理可以随心所欲地执行任务，直到他们决定任务完成为止。
- en: 'Despite precautions, preparedness to forcibly stop is crucial. But balance
    is key: avoid prematurely halting long-running tasks.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管采取了预防措施，但准备好强制停止操作仍然至关重要。但平衡是关键：避免过早停止长时间运行的任务。
- en: If we do run into a situation where we want to stop Auto-GPT from going further,
    but we do not want to break it, we will explore how to avoid abruptly killing
    it.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们遇到需要停止 Auto-GPT 继续运行的情况，但又不希望将其破坏，我们将探讨如何避免突然终止它。
- en: Gracefully stopping a continuous process
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优雅地停止一个持续进行的过程
- en: Sometimes, we may observe Auto-GPT behaving totally incorrectly and performing
    very wrong actions, or we just get a feeling that it is not doing anything productive,
    or it might even get so off track that it may run into a loop of researching a
    topic over and over without ever finalizing its search.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们可能会看到 Auto-GPT 完全错误地执行任务，或者我们仅仅有感觉它没有执行任何有意义的操作，甚至它可能完全偏离轨道，陷入无休止地研究某个话题而永远无法完成搜索的循环。
- en: For example, when you see in the logs that Auto-GPT is stuck in a loop of doing
    the same few tasks over and over, you may want to stop it to prevent high running
    costs for using the API.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当你在日志中看到 Auto-GPT 因重复做同样几项任务而陷入循环时，你可能会想停止它，以防止使用 API 的高额费用。
- en: Keyboard shortcuts such as *Ctrl* + *C* send immediate cancellation requests.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 像 *Ctrl* + *C* 这样的快捷键会立即发送取消请求。
- en: Make sure to have the terminal in which Auto-GPT is running active by clicking
    on it if you are not sure.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 确保 Auto-GPT 正在运行的终端处于活动状态，如果不确定，请点击它。
- en: If this does not work, for example, when Auto-GPT is *thinking* or a plugin
    is doing something and ignores the key interruption, you can always use a Process
    Explorer tool such as **Windows Task Manager**, **Mac OS Activities**, or **htop/top**
    on Linux to find the Python process of Auto-GPT and kill it manually.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这个方法不起作用，例如当 Auto-GPT 正在 *思考* 或插件正在执行某些操作并忽略键盘中断时，你可以随时使用进程管理工具，如 **Windows
    任务管理器**、**Mac OS 活动监视器** 或 Linux 上的 **htop/top**，找到 Auto-GPT 的 Python 进程并手动终止它。
- en: When your Auto-GPT instance is running on Docker and continuous mode is enabled,
    always make sure that you have at least the Docker Desktop app open so you can
    shut down the Docker container of Auto-GPT if you see that it does something unexpected
    and does not react to *Ctrl* + *C*.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的 Auto-GPT 实例在 Docker 上运行且启用了持续模式时，始终确保至少打开 Docker Desktop 应用程序，这样如果你看到它执行了意外的操作且没有响应
    *Ctrl* + *C*，你可以关闭 Auto-GPT 的 Docker 容器。
- en: If you are away from your computer and only communicate to Auto-GPT over Telegram
    or Discord, for example, make sure to have a failsafe that always works to prevent
    Auto-GPT from becoming destructive.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不在电脑旁，仅通过 Telegram 或 Discord 与 Auto-GPT 进行通信，请确保有一个始终有效的保障措施，以防止 Auto-GPT
    变得具有破坏性。
- en: When Auto-GPT decides that it has no other tasks, it also executes the `task_complete`
    command, which cleanly finishes ongoing tasks before stopping.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Auto-GPT 决定没有其他任务时，它还会执行 `task_complete` 命令，干净利落地完成正在进行的任务后再停止。
- en: Pause/resume functionality is being explored to delay Auto-GPT actions without
    disrupting them. These delays could enable periodic human reviews to make sure
    no odd behavior starts happening.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 正在探索暂停/恢复功能，以便在不打断 Auto-GPT 行动的情况下延迟其执行。这些延迟可以使定期的人类审查成为可能，确保没有出现异常行为。
- en: In this section, we’ve examined continuous mode in Auto-GPT, a feature that
    allows the AI to operate autonomously without requiring user input at every step.
    This mode is very useful for automating tasks such as research, content creation,
    code compilation, and customer support, providing significant efficiency gains.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了 Auto-GPT 的持续模式，这一功能使 AI 能够在无需每一步都获得用户输入的情况下独立运行。这个模式对于自动化任务非常有用，例如研究、内容创作、代码编译和客户支持，能够显著提高效率。
- en: We discussed practical use cases, such as personal assistants and automated
    research tools, highlighting how continuous mode can streamline various processes.
    However, using this mode requires careful planning and safeguards. Best practices
    include enabling confirmation prompts, using allowlists and blocklists, starting
    with conservative limits, and conducting sandbox testing.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了实际的使用案例，例如个人助手和自动化研究工具，重点介绍了持续模式如何简化各种流程。然而，使用此模式需要谨慎规划和防护措施。最佳实践包括启用确认提示，使用允许列表和阻止列表，设置保守的限制，并进行沙盒测试。
- en: Regular monitoring and human oversight remain essential, even with continuous
    mode enabled. It’s important to review logs and have a plan for immediate intervention
    if necessary. Potential risks, such as generating false information or getting
    stuck in loops, can be mitigated with strategies such as kill switches and usage
    limits.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 即使启用了持续模式，定期监控和人工监督依然至关重要。审查日志并制定紧急干预计划是很重要的。如果有必要，可以采取像关闭开关和使用限制等策略，来降低潜在风险，如生成虚假信息或陷入死循环。
- en: Lastly, we covered how to stop a continuous process gracefully and the ongoing
    research into adding pause and resume functionalities. By understanding and implementing
    these strategies, you can effectively use continuous mode while maintaining control
    and safety.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们介绍了如何优雅地停止持续过程，以及对暂停和恢复功能的持续研究。通过理解并实施这些策略，你可以在保持控制和安全的前提下，充分利用持续模式。
- en: Summary
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Docker provides a powerful platform to easily develop, distribute, and run your
    AI models built with Auto-GPT. Understanding how Docker integrates with Auto-GPT,
    how to begin a Docker instance, and troubleshooting Docker-related issues can
    fast-track your Auto-GPT deployment. Coupled with the power of customization discussed
    in [*Chapter 5*](B21128_05.xhtml#_idTextAnchor063), Docker takes Auto-GPT’s prowess
    a notch higher, consolidating it as a wonderfully adaptable, shareable, and user-friendly
    tool in your AI toolkit.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Docker提供了一个强大的平台，可以轻松开发、分发和运行通过Auto-GPT构建的AI模型。了解Docker如何与Auto-GPT集成，如何启动Docker实例，以及如何解决与Docker相关的问题，可以加速你Auto-GPT的部署。结合在[*第5章*](B21128_05.xhtml#_idTextAnchor063)中讨论的定制化能力，Docker进一步提升了Auto-GPT的功能，使其成为一个高度适应性、易共享且用户友好的AI工具。
- en: With more to be learned about Docker, feel free to visit the official page at
    [https://docs.docker.com/](https://docs.docker.com/).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Docker的更多内容，可以访问官方网站 [https://docs.docker.com/](https://docs.docker.com/)。
- en: Next, we saw how continuous mode is a double-edged sword requiring thoughtful
    configuration and oversight. Used judiciously, it can automate workflows, enhancing
    productivity. Used carelessly, it can have regrettable outcomes. Find the right
    equilibrium for your use case. But regardless of safeguards, exercise caution,
    start small, and keep humans in the loop, especially for high-risk applications.
    Because beneficial AI, like all powerful technologies, necessitates responsibility.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们看到了持续模式作为一把双刃剑，需要经过深思熟虑的配置和监督。合理使用时，它可以自动化工作流程，提高生产力；使用不当时，它可能导致令人遗憾的后果。为你的应用场景找到合适的平衡点。但无论有何保障措施，都需要保持谨慎，从小规模开始，并始终让人类保持在环路中，尤其是在高风险应用场景中。因为有益的AI，就像所有强大的技术一样，必须负责任地使用。
- en: We’ve explored how Docker encapsulates Auto-GPT’s computational environment,
    simplifying setup, sharing, and version control, and ensuring consistent experiences
    across users.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们探索了Docker如何封装Auto-GPT的计算环境，简化了设置、共享和版本控制，并确保了用户之间的一致体验。
- en: We’ve demystified what continuous mode is and how it allows Auto-GPT to function
    autonomously, highlighting its significance in driving efficiency and productivity
    across various tasks and industries.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经解开了持续模式的神秘面纱，展示了它如何让Auto-GPT实现自主运作，强调了它在推动各类任务和行业的效率与生产力方面的重要性。
- en: Through real-world use cases, we’ve seen the transformative power of continuous
    mode in research, content creation, software development, and customer service,
    showcasing its versatility.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实际的使用案例，我们看到了持续模式在研究、内容创作、软件开发和客户服务等方面的变革性力量，展示了其多样性。
- en: We explored strategies for deploying continuous mode effectively while mitigating
    risks, including the implementation of safeguards, monitoring mechanisms, and
    limits to ensure responsible usage.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们探讨了有效部署持续模式的策略，并降低风险，包括实施保障措施、监控机制和限制，以确保负责任的使用。
- en: We’ve tackled potential pitfalls, from generating inaccuracies to running into
    infinite loops, offering practical solutions to prevent, detect, and correct such
    issues.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们解决了潜在的陷阱，从生成不准确信息到陷入无限循环，并提供了实际的解决方案来预防、检测和修正这些问题。
- en: The importance of knowing how to stop or pause continuous mode operations safely
    was discussed, ensuring that interventions are possible without causing disruption.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了如何安全地停止或暂停持续模式操作的重要性，确保在不造成中断的情况下可以进行干预。
- en: As we move forward, we will dive into using our own LLM models for Auto-GPT
    and see how they compare to GPT-4.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在未来，我们将深入探索如何使用我们自己的LLM模型来运行Auto-GPT，并比较它们与GPT-4的表现。
