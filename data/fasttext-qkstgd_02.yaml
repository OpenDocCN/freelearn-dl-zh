- en: Introducing FastText
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 FastText
- en: Welcome to *fastText Quick Start Guide*. In this first chapter, you will find
    out how to install fastText and create a stable environment in which to learn
    how to use fastText applications as part of your Natural Language Processing applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到 *fastText 快速入门指南*。在本章中，你将学习如何安装 fastText，并创建一个稳定的环境，以便将 fastText 应用到你的自然语言处理应用中。
- en: 'fastText is a library that helps you to generate efficient word representations
    and gives you support for text classification out of the box. In this book, we
    will take a look at a specific use case, namely machine translation, and use fastText
    for that. We have chosen machine translation because fastText claims that it is
    superior in terms of yet unknown words, and can handle different languages for
    which sufficiently large data sources and corpora may not be available. In different
    chapters, we will see how fastText fares in such cases. General techniques will
    also be discussed so that you will be able to extend those techniques to your
    specific use case. We will cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: fastText 是一个库，它帮助你生成高效的词向量表示，并且提供开箱即用的文本分类支持。在本书中，我们将看一个特定的应用案例，即机器翻译，并使用 fastText
    来实现。我们选择机器翻译作为案例，因为 fastText 声称它在处理未知词汇时具有优势，并且可以应对不同语言，即使这些语言的足够大数据集和语料库可能并不存在。在接下来的章节中，我们将看看
    fastText 在这种情况下的表现。同时，我们还会讨论一些通用的技术，帮助你将这些技术扩展到你的特定应用场景。我们将在本章中涵盖以下主题：
- en: Introducing fastText
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 fastText
- en: Installing fastText in Windows, Linux, and macOS
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows、Linux 和 macOS 上安装 fastText
- en: Using a Docker image for fastText
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Docker 镜像部署 fastText
- en: Installing dependencies on Mac systems
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Mac系统上安装依赖项
- en: Installing Python dependencies
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Python 依赖项
- en: Installing dependencies on RHEL machines using the `yum` package manager
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `yum` 包管理器在 RHEL 系统上安装依赖项
- en: Installing dependencies on Debian-based machines such as Ubuntu
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在基于 Debian 的机器（如 Ubuntu）上安装依赖项
- en: Installing dependencies on Arch Linux using pacman
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 pacman 在 Arch Linux 上安装依赖项
- en: Introducing fastText
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 fastText
- en: 'In today''s interconnected world, a lot of text data gets generated around
    the world. This text information includes descriptions of things. Take, for example,
    people writing about products in Amazon reviews, or people writing about their
    thoughts through their Facebook posts. **Natural Language Processing** (**NLP**)
    is the application of machine learning and other computational techniques to understanding
    and representating spoken and written text. The following are the major challenges
    that NLP seeks to solve:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在今天互联互通的世界中，全球各地生成了大量的文本数据。这些文本信息包含了对事物的描述。例如，人们在亚马逊评论中写关于产品的内容，或者通过Facebook帖子表达自己的想法。**自然语言处理**（**NLP**）是将机器学习和其他计算技术应用于理解和表示口语及书面文本。以下是NLP需要解决的主要挑战：
- en: '**Topic modeling**: In general, texts deal with a topic. Topic modeling is
    frequently used to determine hidden structures or "abstract topics" that may be
    present in a collection of documents. An effective application of topic modeling
    would be summarization. For example, legal documents are quite complex and verbose,
    and hence systems such as these would help the reader to get the gist of the document
    and a high-level description of what is happening.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主题建模**：一般来说，文本会涉及一个主题。主题建模常用于确定集合文档中可能存在的隐藏结构或“抽象主题”。主题建模的有效应用之一是摘要生成。例如，法律文件通常较为复杂且冗长，因此像这样的系统将帮助读者抓住文件的要点，并提供对事件的高层次描述。'
- en: '**Sentence classification**: Text classification is a important challenge,
    where we are able to take in blobs of text and classify them into different labels.
    For example, a system should be able to correctly classify something like "Shahrukh
    Khan was on fire at Dubai event" as belonging to the label "Entertainment" and
    another sentence, "Fire breaks out in store opposite Breach Candy Hospital," to
    be categorized as "News."'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**句子分类**：文本分类是一个重要的挑战，能够将一大段文本分类到不同的标签。例如，一个系统应该能够将“Shahrukh Khan在迪拜活动中表现出色”正确分类为“娱乐”标签，而将“在Breach
    Candy医院对面的商店发生火灾”分类为“新闻”标签。'
- en: '**Machine translation**: The total number of languages in the world is at least
    3,000\. About half of these languages have fewer than 10,000 speakers and about
    25 percent have less than 1,000 speakers. Hence, we can imagine that a lot of
    languages are dying and when a language dies, collectively we lose a lot of our
    cultural heritage. The best translation system right now is made by Google, but
    it covers only 103 languages at the time of writing, so it is very important that
    we develop machine learning translation models that are able to train from few
    sources with a high degree of predictive power.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机器翻译**：世界上语言的总数至少有3,000种。大约一半的语言使用者少于10,000人，约25%的语言使用者不到1,000人。因此，我们可以想象，许多语言正在消失，而当一种语言消失时，我们共同失去了大量的文化遗产。目前最好的翻译系统是谷歌的，但在写作时它仅覆盖103种语言，因此开发能够从少量来源训练并具有高度预测能力的机器学习翻译模型非常重要。'
- en: '**Question and answer (QA) systems**: The focus here is to build a system that
    automatically answers questions based on the questions that people ask in natural
    language. QA systems that can be built around closed domain systems can be highly
    accurate as they can retrieve documents and text that are relevant to the search
    item.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问答（QA）系统**：这里的重点是构建一个基于人们用自然语言提出的问题自动回答问题的系统。围绕封闭领域系统构建的问答系统可以非常精确，因为它们可以检索与搜索项目相关的文档和文本。'
- en: '**Sentiment analysis**: Sentiment analysis is about understanding the needs
    and intents that the users share when talking about something. People make choices
    based on emotions. The needs of many people are largely emotional and, generally,
    people are very forthcoming about how they feel. Creating a system that takes
    this into account will always add a lot of value to the business.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**情感分析**：情感分析是理解用户在谈论某事时分享的需求和意图。人们根据情感做出选择。许多人的需求在很大程度上是情感性的，通常人们会非常坦率地表达他们的感受。创建一个能够考虑这一点的系统，将始终为业务增添大量价值。'
- en: '**Event extraction**: Use cases involve where a lot of data is stored in the
    form of text. For example, some legal text may be describing a "crime" event,
    which is followed by an "investigation" event, which is followed by multiple "hearing"
    events. The events themselves may be nested such that the "hearing" events may
    consist of a "presenting arguments" events and a "presenting evidence" events.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件提取**：使用场景涉及大量数据以文本形式存储。例如，某些法律文本可能描述一个“犯罪”事件，接着是一个“调查”事件，再接着是多个“听证”事件。事件本身可能是嵌套的，例如“听证”事件可能包含“陈述论点”事件和“呈现证据”事件。'
- en: '**Named entity detection**: The focus of building this system is to extract
    and classify entities or specific information as per some predefined categories,
    such as people, organization, geography, and so on. For example, if we take the
    following text: "We''re used to spicy foods down here in South Texas," we can
    understand that the "buyer" likes "spicy foods" and his "geography" is South Texas.
    If there is sufficient evidence received from the data that buyers in South Texas
    like spicy foods, more such foods can be marketed to them.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命名实体检测**：构建该系统的重点是提取并根据一些预定义的类别（如人名、组织、地理等）分类实体或特定信息。例如，如果我们看以下文本：“我们在德州南部习惯了辣味食物，”我们可以理解“买家”喜欢“辣味食物”，他的“地理位置”是德州南部。如果数据中有足够的证据表明德州南部的买家喜欢辣味食物，就可以向他们营销更多类似的食品。'
- en: '**Relation detection**: A relation detection system parses text and identifies
    focal points and agents, then tries to find the relationship between them. For
    example, the sentence "Mike has the flu" can be converted to `Person-[RELATION:HAS]->Disease`.
    These relations can then be explored in a business context to build intelligent
    apps.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**关系检测**：关系检测系统解析文本并识别焦点和主体，然后尝试找出它们之间的关系。例如，句子“Mike has the flu”可以转换为`Person-[RELATION:HAS]->Disease`。这些关系随后可以在商业环境中进行探讨，以构建智能应用。'
- en: The previous list has many of the problems that NLP practitioners are targeting.
    Depending on the use case, you can pick up any of these challenges and try to
    solve them in your domain. The challenge with many previous approaches and modeling
    techniques is that NLP requires a lot of textual data and there is a lot of contextual
    information in the data. It is quite hard for a computational model to get a sense
    of all the data in an efficient manner.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的列表涵盖了许多 NLP 从业者所面临的问题。根据使用案例，你可以选择其中的任何挑战，并尝试在你的领域中解决它们。许多先前方法和建模技术的挑战在于，NLP
    需要大量的文本数据，并且数据中包含了大量的上下文信息。计算模型很难高效地处理所有这些数据。
- en: NLP models up to now have only targeted English as textual data is available in
    English. But only 20 percent of the population of the world speak English and
    even among them, the majority are non-native speakers. The biggest deterrent to
    building non-English NLP models is the lack of data. Hence, we desperately need
    libraries that can build models even when the data is limited. fastText has the
    potential to change all that. The fastText team has published pretrained word
    vectors for 294 languages. By the time the book is published, more languages will
    have been added to it.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 迄今为止，NLP 模型仅针对英语进行构建，因为英语文本数据较为丰富。但全球只有 20% 的人口讲英语，且其中大多数为非母语者。构建非英语 NLP 模型的最大障碍是数据的匮乏。因此，我们迫切需要能够在数据有限的情况下构建模型的库。fastText
    有潜力改变这一切。fastText 团队发布了 294 种语言的预训练词向量。到本书发布时，更多语言将被添加到其中。
- en: In this chapter, we will see how to install fastText so that you can start tinkering
    with this amazing software.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看到如何安装 fastText，以便你可以开始使用这个令人惊叹的软件。
- en: Some of the descriptions provided may not be applicable to you; for example,
    instructions for Mac users may not be directly relevant to Linux users and vice
    versa. Still, I would suggest that you read through the whole description for
    each of the dependencies for a better understanding.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的一些描述可能不适用于你；例如，针对 Mac 用户的说明可能与 Linux 用户不直接相关，反之亦然。不过，我建议你阅读每个依赖项的完整描述，以便更好地理解。
- en: Installing fastText
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 fastText
- en: Depending on your operating system, you will need to make sure that you have
    some dependencies installed in your machine. In this section, you will get to
    know how to install fastText based on whether you are using a Linux, Windows,
    or macOS operating system. Additionally, you will get to know what additional
    dependencies you should install depending on your usage. My recommendation is
    to install all the software packages, as we will be exploring all the various
    ways we can use fastText in this book.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的操作系统，你需要确保你的计算机上安装了一些依赖项。在这一部分，你将了解如何根据自己使用的操作系统（Linux、Windows 或 macOS）来安装
    fastText。此外，你还将了解根据你的使用需求，应该安装哪些额外的依赖项。我的建议是安装所有软件包，因为在本书中我们将探索使用 fastText 的各种方式。
- en: Prerequisites
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前提条件
- en: FastText works on Windows, Linux, and macOS. FastText is built using the C++
    language, so you will first need a good C++ compiler.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: FastText 可以在 Windows、Linux 和 macOS 上运行。FastText 是使用 C++ 语言构建的，因此你首先需要一个良好的 C++
    编译器。
- en: Windows
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows
- en: 'Official binaries for Windows are not available, but you can download the latest
    Windows binaries compiled by Meng Xuan Xia at the following link: [https://github.com/xiamx/fastText/releases](https://github.com/xiamx/fastText/releases).
    To run these binaries, you will need to install Visual C++ 2017\. You can download
    the 64-bit versions of Visual C++ from this link: [https://support.microsoft.com/en-in/help/2977003/the-latest-supported-visual-c-downloads](https://support.microsoft.com/en-in/help/2977003/the-latest-supported-visual-c-downloads).
    Next, the usual way of installing, by double-clicking on the installer file for
    Visual C++, should install it on your Windows machine.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 官方的 Windows 二进制文件不可用，但你可以通过以下链接下载由孟轩霞编译的最新 Windows 二进制文件：[https://github.com/xiamx/fastText/releases](https://github.com/xiamx/fastText/releases)。要运行这些二进制文件，你需要安装
    Visual C++ 2017。你可以从以下链接下载 Visual C++ 的 64 位版本：[https://support.microsoft.com/en-in/help/2977003/the-latest-supported-visual-c-downloads](https://support.microsoft.com/en-in/help/2977003/the-latest-supported-visual-c-downloads)。接下来，按照通常的安装方式，双击
    Visual C++ 安装程序文件即可将其安装到你的 Windows 计算机上。
- en: Linux
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux
- en: 'The list of prerequisite software that you need to install is as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要安装的前提软件列表如下：
- en: GCC-C++; if you are using Clang, you will need 3.3 or newer
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCC-C++；如果你使用 Clang，则需要 3.3 或更高版本。
- en: Cmake
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cmake
- en: Python 3.5 (you can work with Python 2.7, but we are going to focus on Python
    3 in this book)
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3.5（你也可以使用 Python 2.7，但我们在本书中将重点讨论 Python 3）
- en: NumPy and SciPy
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NumPy 和 SciPy
- en: pybind
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pybind
- en: 'Optional requirements, depending on your system, are as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 可选的依赖项根据你的系统如下：
- en: Zip
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zip
- en: Docker
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker
- en: Git
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git
- en: Installing dependencies on RHEL machines supporting the yum package manager
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在支持 yum 包管理器的 RHEL 机器上安装依赖项
- en: 'On Linux machines, you will need to have `g++` installed. On Fedora/CentOS,
    which supports the `yum` package manager, you can install `g++` using the following
    command. Open the Terminal or connect to the server where you are installing this
    using your favorite SSH tool and run the following command:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 系统中，你需要安装 `g++`。在支持 `yum` 包管理工具的 Fedora/CentOS 上，你可以使用以下命令安装 `g++`。打开终端或通过你喜欢的
    SSH 工具连接到安装服务器并运行以下命令：
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'CMake should be installed by default. The official docs have the installation
    instructions in `make` and `cmake`. I would recommend installing `cmake` on your
    machine and using it to build fastText. You can directly install `cmake` using
    the `yum` generic command like before:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: CMake 应该默认安装。官方文档中提供了 `make` 和 `cmake` 的安装说明。我建议在你的机器上安装 `cmake` 并使用它来构建 fastText。你可以像之前一样使用
    `yum` 通用命令直接安装 `cmake`：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To get a full list of `cmake` commands, take a look at the following link:
    [https://cmake.org/cmake/help/v3.2/manual/cmake.1.html](https://cmake.org/cmake/help/v3.2/manual/cmake.1.html).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取完整的 `cmake` 命令列表，请查看以下链接：[https://cmake.org/cmake/help/v3.2/manual/cmake.1.html](https://cmake.org/cmake/help/v3.2/manual/cmake.1.html)。
- en: 'To install the optional software, run the following command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装可选软件，运行以下命令：
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you are starting on a new server and running `yum` commands there, then
    you may encounter the following warning:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在新服务器上开始并在那里运行 `yum` 命令，你可能会遇到以下警告：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In this case, install the `glibc` language pack:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，安装 `glibc` 语言包：
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now, you can jump to the installation instructions for Anaconda to install the
    Python dependencies.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以跳转到 Anaconda 安装说明部分，安装 Python 依赖项。
- en: Installing dependencies on Debian-based machines such as Ubuntu
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在基于 Debian 的机器（如 Ubuntu）上安装依赖项
- en: In Ubuntu and Debian machines, `apt-get` or `apt` is your package manager. `apt`
    is basically a wrapper around `apt-get` and other similar tools, and hence you
    should be able to use them interchangeably. I will be showing `apt` commands here
    but if you are using older versions of Ubuntu and Debian, and see that apt is
    not working on your machines, then you can replace `apt` with `apt-get` and it
    should work. Also, consider upgrading your machine if possible.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 和 Debian 系统中，`apt-get` 或 `apt` 是你的包管理工具。`apt` 基本上是 `apt-get` 和其他类似工具的包装器，因此你应该能够互换使用它们。我将展示
    `apt` 命令，如果你使用的是旧版本的 Ubuntu 或 Debian，发现 `apt` 在你的机器上不起作用，可以将 `apt` 替换为 `apt-get`，它应该可以正常工作。此外，如果可能的话，考虑升级你的机器。
- en: 'Similar to Fedora, to install C++, open a Terminal or SSH into the server where
    you are going to install fastText and run the following command. This will also
    install the `cmake` command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 Fedora，要安装 C++，打开终端或通过 SSH 连接到你要安装 fastText 的服务器并运行以下命令。这也会安装 `cmake` 命令：
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now install `cmake`:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在安装 `cmake`：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To install the optional requirements, run the following command:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装可选的依赖项，运行以下命令：
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now, check the Anaconda section to see how to install Anaconda for the Python
    dependencies.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，查看 Anaconda 部分，了解如何为 Python 依赖项安装 Anaconda。
- en: The `apt` command only works from Ubuntu-16 onwards. If you are using an older
    Ubuntu version, you should use the `apt-get` command.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`apt` 命令仅适用于 Ubuntu-16 及之后版本。如果你使用的是旧版 Ubuntu，应该使用 `apt-get` 命令。'
- en: Installing dependencies on Arch Linux using pacman
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 pacman 在 Arch Linux 上安装依赖项
- en: 'The package manager of choice on Arch Linux is `pacman` and you can run the
    following command to install the essential build tools:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Arch Linux 的首选包管理工具是 `pacman`，你可以运行以下命令安装必要的构建工具：
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This should install the `make`, `cmake`, and `g++` compiler that you need to
    build fastText. Although Arch distributions already have Python 3.x installed,
    I would recommend installing Anaconda as described later in this chapter so that
    you don't miss out on any of the Python dependencies.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会安装你构建 fastText 所需要的 `make`、`cmake` 和 `g++` 编译器。虽然 Arch 系统已经安装了 Python 3.x，但我建议按照本章稍后的说明安装
    Anaconda，这样你就不会错过任何 Python 依赖项。
- en: 'To install the optional requirements, run the following command:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装可选的依赖项，运行以下命令：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Installing dependencies on Mac systems
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Mac 系统上安装依赖项
- en: 'On macOS, you should have Clang installed by default, which is designed to
    be a drop-in replacement for the normal compilers for C, C++, and other similar
    languages. Check whether the version is 3.3 or later using `clang --version` in
    a Terminal. If you do not have Clang or something from the older versions, then
    you can install using the `xcode` command-line tools using a Terminal:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在 macOS 上，你应该默认安装了 Clang，它设计为替代普通的 C、C++ 和其他类似语言的编译器。可以在终端中使用 `clang --version`
    检查版本是否为 3.3 或更高版本。如果没有 Clang 或版本较旧，可以使用终端中的 `xcode` 命令行工具进行安装：
- en: '[PRE10]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: A dialog should appear next that asks if you want to install the developer tools.
    Click on the Install button.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来应该会弹出一个对话框，询问你是否要安装开发工具。点击安装按钮。
- en: Installing Python dependencies
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Python 依赖项
- en: I recommend that you install Anaconda so that there are no issues with installing
    Python and using it for fastText. Detailed instructions for installing Anaconda
    are given on the official documentation page, which can be accessed at[ https://conda.io/docs/user-guide/install/linux.html](https://conda.io/docs/user-guide/install/linux.html).
    Simply stated, if you are on Windows, then download the Windows installer, double-click
    on it, and then follow the instructions on the screen. Installing it using a GUI
    is also possible for macOS.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议你安装 Anaconda，这样可以避免安装 Python 并使用它进行 fastText 时遇到问题。关于安装 Anaconda 的详细说明，请参考官方文档页面，网址为
    [https://conda.io/docs/user-guide/install/linux.html](https://conda.io/docs/user-guide/install/linux.html)。简而言之，如果你使用
    Windows，下载 Windows 安装程序，双击并按照屏幕上的指示操作。对于 macOS，也可以使用图形界面安装。
- en: 'In the case of Linux and macOS, download the corresponding bash file and then
    run the following command in a Terminal:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Linux 和 macOS，下载相应的 bash 文件，然后在终端中运行以下命令：
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Please take care to download and install it using installers that are tagged
    for Python 3.x. The Python code snippets that will be shown in this book will
    be shown for Python 3.x.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保使用标记为 Python 3.x 的安装程序来下载和安装。书中展示的 Python 代码片段将以 Python 3.x 的版本展示。
- en: Installing fastText on Windows
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 fastText
- en: 'Currently, official binaries are not provided for fastText on Windows, and
    hence there is no GUI to install fastText on your machine. To use fastText, you
    will need to perform the following steps:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Windows 上并未提供 fastText 的官方二进制文件，因此没有图形界面可以直接安装 fastText。在 Windows 上使用 fastText，你需要执行以下步骤：
- en: Download the latest binary named [**fasttext-win64-latest-Release.zip**](https://github.com/xiamx/fastText/releases/download/fastText-latest-build40/fasttext-win64-latest-Release.zip)
    from the release page provided by Xua ([https://github.com/xiamx/fastText/releases](https://github.com/xiamx/fastText/releases)).
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Xua 提供的发布页面下载最新的二进制文件，文件名为 [**fasttext-win64-latest-Release.zip**](https://github.com/xiamx/fastText/releases/download/fastText-latest-build40/fasttext-win64-latest-Release.zip)
    ([https://github.com/xiamx/fastText/releases](https://github.com/xiamx/fastText/releases))。
- en: 'This is a ZIP file and hence you will need to extract the contents. You will
    find the `fasttext_pic.lib`, `fasttext.lib`, `fasttext.exe`, and `fasttext.dll` files in
    the extracted folder. This folder will be your working directory for fastText:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个 ZIP 文件，你需要解压缩内容。你会在解压后的文件夹中找到 `fasttext_pic.lib`、`fasttext.lib`、`fasttext.exe`
    和 `fasttext.dll` 文件。这个文件夹将是你进行 fastText 操作的工作目录：
- en: '![](img/00005.jpeg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00005.jpeg)'
- en: Create a folder, `data` where you will keep all your data files. Now, open PowerShell
    and change directory to the folder.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个文件夹 `data`，用于存放所有数据文件。现在，打开 PowerShell 并切换到该文件夹。
- en: Type `.\fasttext.exe` in Powershell and you should be able to see the output.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 PowerShell 中输入 `.\fasttext.exe`，你应该能看到输出。
- en: If you don't see any output at the end, then you probably don't have Visual
    C++ Redistributable in your machine and will need to install that.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有任何输出，则可能是你的机器上没有安装 Visual C++ Redistributable，你需要安装它。
- en: Installing fastText in Linux and macOS
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Linux 和 macOS 上安装 fastText
- en: 'To install fastText, run the following commands to clone the image and build
    it in a Terminal:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 fastText，请运行以下命令在终端中克隆镜像并进行构建：
- en: '[PRE12]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'In this book, a lot of focus will be on building systems for Python. So, run
    the following commands as well in the same directory:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中将重点介绍为 Python 构建系统。因此，请在相同目录下运行以下命令：
- en: '[PRE13]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '`pip` is the package manager for Python. fastText assumes UTF-8 encoded text,
    which is the default in Python 3.x. The Python code examples in this book will
    be shown using Python 3.x. One of the advantages of fastText is that you can build
    fastText models for multiple languages and if you are not using Python 3.x, then
    you will not be able to take advantage of this. If that is not a concern and you
    are trying to use fastText using Python 2.7, then take a look at the *Appendix*
    at the end, which will give you guidelines on how to develop, keeping in mind
    UTF-8 in Python 2.7.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip`是Python的包管理器。fastText假设使用UTF-8编码的文本，这在Python 3.x中是默认的。本书中的Python代码示例将使用Python
    3.x展示。fastText的一个优点是您可以为多种语言构建fastText模型，如果您不使用Python 3.x，则无法利用此功能。如果这不是问题，并且您尝试在Python
    2.7中使用fastText，则请参阅末尾的*附录*，其中将为您提供如何在Python 2.7中开发时考虑UTF-8的指导。'
- en: Using a Docker image for fastText
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Docker镜像来运行fastText
- en: You can also use Docker to run fastText on your machine and not worry about
    building it. This can be done to maintain version control between specific versions
    and thus gives us predictability and consistency. You can get information on how
    to install Docker from the following link:[ https://docs.docker.com/install/#cloud](https://docs.docker.com/install/#cloud).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用Docker在您的计算机上运行fastText，无需担心构建它。这可以用来在特定版本之间保持版本控制，从而提供预测性和一致性。您可以从以下链接获取有关如何安装Docker的信息：[https://docs.docker.com/install/#cloud](https://docs.docker.com/install/#cloud)。
- en: 'After installing, start the Docker service before running the following commands:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，在运行以下命令之前，请启动Docker服务：
- en: '[PRE14]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You should now be able to run fastText:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在应该能够运行fastText了：
- en: '[PRE15]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You may need to provide permissions and create the specific directories to run
    the `docker run` command.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 若要运行`docker run`命令，您可能需要提供权限并创建特定目录。
- en: Summary
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you have taken a look at how to install and start using fastText
    in the environment of your choice.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经学习了如何在您选择的环境中安装并开始使用fastText。
- en: In the next chapter, we will be taking a look at how to train fastText models
    using the command line and how to use them.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看看如何使用命令行训练fastText模型以及如何使用它们。
