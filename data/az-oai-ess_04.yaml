- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Developing an Enterprise Document Question-Answer Solution
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发企业文档问答解决方案
- en: In the previous chapter, we delved into advanced topics that expanded our understanding
    of language models. We became familiar with concepts such as embedding, which
    involves representing words or phrases in a numerical form for language model
    processing and storing the embedding into Azure Cognitive Search for use in relevance
    searches. Additionally, we explored the Model Context Window, which determines
    the amount of context a language model considers for generating predictions. We
    also discovered features such as Azure OpenAI On Your Data, which allows customer
    chat, model fine-tuning, and OpenAI function calling, enabling the execution of
    specific functions within the language model. The chapter further introduced OpenAI
    plugins, offering extensibility options for enhancing the functionality of language
    models. Finally, we were introduced to LangChain and Semantic Kernel, an application
    development framework for large language models.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章，我们深入探讨了扩展我们对语言模型理解的高级话题。我们了解了诸如嵌入（embedding）等概念，嵌入是指将单词或短语以数字形式表示，供语言模型处理，并将嵌入存储到
    Azure Cognitive Search 中，便于相关性搜索。此外，我们还探讨了模型上下文窗口（Model Context Window），它决定了语言模型生成预测时所考虑的上下文量。我们还发现了诸如
    Azure OpenAI On Your Data 的功能，它允许客户进行聊天、模型微调和 OpenAI 函数调用，支持在语言模型内执行特定功能。本章还介绍了
    OpenAI 插件，提供了扩展语言模型功能的选项。最后，我们了解了 LangChain 和 Semantic Kernel，这是一个为大语言模型开发应用的框架。
- en: 'This chapter covers the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涉及以下主题：
- en: Enterprise use case with unstructured documents
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业使用非结构化文档的案例
- en: Architecture design
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构设计
- en: Developing a question-answering solution using Azure OpenAI and the Azure Cognitive
    Search index
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Azure OpenAI 和 Azure Cognitive Search 索引开发问答解决方案
- en: 'Before we dive into the enterprise use case with unstructured documents, let’s
    address a common challenge faced by many: navigating through a vast array of documents
    to find specific information. Each subject or project often comes with numerous
    documents, generously provided by various sources. These documents hold the keys
    to success, but they can be overwhelming and disorganized.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入探讨企业使用非结构化文档的案例之前，让我们先解决一个许多人都会遇到的常见挑战：如何在大量文档中找到特定的信息。每个主题或项目通常都会附带大量文档，这些文档由各种来源提供，涵盖了成功的关键，但它们往往是零散且混乱的。
- en: When the need arises to find specific information, the task can become daunting.
    Hours can be spent meticulously combing through page after page, document after
    document, in search of that crucial piece of information. This process can be
    time-consuming and frustrating.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要查找特定信息时，这项任务可能变得让人望而却步。你可能会花费数小时，仔细翻阅一页又一页、一个又一个文档，只为寻找那一条关键信息。这一过程既费时又令人沮丧。
- en: However, there is hope. Imagine a solution that could streamline this process,
    making it easier and faster to find the information you need. Today, we will explore
    such a game-changing solution with Azure OpenAI, designed to solve these problems
    efficiently.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还是有希望的。试想有一个解决方案能够简化这一过程，让查找所需信息变得更加轻松和快速。今天，我们将探索这样一个革命性的解决方案，它利用 Azure
    OpenAI，旨在高效解决这些问题。
- en: Enterprises possess a multitude of unstructured documents that hold a wealth
    of knowledge to answer specific questions. This challenge is not unique to businesses;
    it’s a dilemma faced by organizations across various industries. Let’s dive into
    a real-world scenario to grasp the gravity of this situation.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 企业拥有大量非结构化文档，这些文档中蕴藏着能够回答特定问题的宝贵知识。这一挑战不仅仅是企业面临的问题，许多行业的组织也都面临这一困境。让我们通过一个真实的案例来感受这一问题的严重性。
- en: Imagine you’re the owner of a thriving tourism company specializing in crafting
    customized travel experiences for adventurous souls. Your company has been curating
    unique journeys for travelers for years, leading to the accumulation of a significant
    number of unstructured documents.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你是一个成功的旅游公司老板，专门为热爱冒险的旅客定制旅行体验。多年来，你的公司为旅行者策划了许多独特的旅程，积累了大量的非结构化文档。
- en: 'Within this digital vault, you’ll find an array of materials: detailed itineraries,
    travel guides, customer reviews, booking records, and a vast array of communications
    with hotels, airlines, and local tour operators from destinations all around the
    world. These documents encapsulate a wealth of information, from travelers’ preferences
    to hidden gems and logistical intricacies for crafting unforgettable trips.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个数字化的宝库中，你会发现各种各样的资料：详细的行程安排、旅游指南、客户评价、预订记录，以及与世界各地的酒店、航空公司和当地旅游运营商之间的大量通讯。这些文档蕴含着丰富的信息，从游客的偏好到隐藏的瑰宝，再到为打造难忘旅行而涉及的物流复杂性。
- en: 'Now, let’s zoom in on a particular scenario. A loyal client, who has enjoyed
    several of your remarkable adventures, approaches you with a special request.
    They seek a meticulously planned trip that caters to their specific interests:
    hiking through pristine landscapes, capturing wildlife through the lens, and immersing
    themselves in authentic cultural experiences. Their request is clear—they want
    a detailed itinerary that seamlessly weaves together these unique elements into
    an unforgettable journey.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们聚焦于一个特定的场景。一位忠实的客户，在经历了你们几次非凡的冒险后，带着特殊的请求找到了你。他们寻求一趟精心策划的旅行，能够满足他们的特定兴趣：穿越原始的自然风光，通过镜头捕捉野生动植物，沉浸于真实的文化体验中。他们的要求很明确——他们需要一份详细的行程，能够无缝地将这些独特的元素融合成一场难忘的旅程。
- en: As you and your team embark on this mission, the challenge becomes starkly evident.
    The process of manually sifting through thousands of unstructured documents to
    uncover relevant travel destinations, accommodation options, tour activities,
    and logistical details is not just time-consuming but also fraught with the risk
    of missing critical details. This painstaking endeavor could stretch into weeks,
    and even then, the outcome may not be as precise as you desire.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当你和你的团队踏上这项任务时，挑战变得尤为明显。手动筛选成千上万的无结构文档，去发掘相关的旅游目的地、住宿选项、旅游活动和物流细节，不仅耗时，而且还存在遗漏关键信息的风险。这项艰苦的工作可能会延续数周，即便如此，最终结果也未必如你所愿。
- en: The predicament faced by travel companies is not unique. Many enterprises grapple
    with a similar situation, where they have gathered a wealth of unstructured documents,
    each holding the key to unlocking exceptional experiences. In this chapter, we
    are going to see how we can solve this using Azure OpenAI and the Azure Cognitive
    Search index.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 旅游公司面临的困境并非独特。许多企业也在处理类似的情况，他们收集了大量无结构的文档，每份文档都承载着开启非凡体验的钥匙。在本章中，我们将看到如何通过使用
    Azure OpenAI 和 Azure Cognitive Search 索引来解决这个问题。
- en: Technical requirements
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow along with the practical exercises in this chapter, access the source
    code available in this chapter's GitHub repository at [https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter4.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter4.ipynb).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章中的实践练习，访问本章在 GitHub 上的源代码，链接为：[https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter4.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter4.ipynb)。
- en: 'Install the following tools on your local machine to start working on the solution:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地机器上安装以下工具以开始解决方案的工作：
- en: Python 3.9, 3.10, or 3.11 – [https://www.python.org/downloads/](https://www.python.org/downloads/)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3.9、3.10 或 3.11 – [https://www.python.org/downloads/](https://www.python.org/downloads/)
- en: Azure Developer CLI – [https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/install-azd?tabs=winget-windows%2Cbrew-mac%2Cscript-linux&pivots=os-windows](https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/install-azd?tabs=winget-windows%2Cbrew-mac%2Cscript-linux&pivots=os-windows)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 开发者 CLI – [https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/install-azd?tabs=winget-windows%2Cbrew-mac%2Cscript-linux&pivots=os-windows](https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/install-azd?tabs=winget-windows%2Cbrew-mac%2Cscript-linux&pivots=os-windows)
- en: Node.js 14+ – [https://nodejs.org/en/download](https://nodejs.org/en/download)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js 14+ – [https://nodejs.org/en/download](https://nodejs.org/en/download)
- en: Git – [https://git-scm.com/downloads](https://git-scm.com/downloads)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git – [https://git-scm.com/downloads](https://git-scm.com/downloads)
- en: PowerShell 7+ (pwsh) – [https://github.com/powershell/powershell](https://github.com/powershell/powershell)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell 7+（pwsh）– [https://github.com/powershell/powershell](https://github.com/powershell/powershell)
- en: Azure account – If you’re new to Azure, get an Azure account for free and you’ll
    get some free Azure credits to get started
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 账户 – 如果你是 Azure 新手，可以免费创建一个 Azure 账户，开始时还会获得一些免费的 Azure 信用额度。
- en: 'Azure subscription with access enabled for the Azure OpenAI Service (you can
    request access with this form: [https://learn.microsoft.com/en-in/legal/cognitive-services/openai/limited-access](https://learn.microsoft.com/en-in/legal/cognitive-services/openai/limited-access))'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用访问的 Azure 订阅（你可以通过此表单请求访问：[https://learn.microsoft.com/en-in/legal/cognitive-services/openai/limited-access](https://learn.microsoft.com/en-in/legal/cognitive-services/openai/limited-access))
- en: 'Azure OpenAI connection and model information:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure OpenAI 连接和模型信息：
- en: OpenAI API key
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI API 密钥
- en: OpenAI embedding model deployment name
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI 嵌入模型部署名称
- en: OpenAI API version
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI API 版本
- en: In addition to the aforementioned system requirements, it is crucial to have
    a solid foundation in fundamental Azure services and a basic proficiency in the
    Python programming language, equivalent to a beginner level (Python 100). These
    skills are vital for efficiently harnessing and leveraging Azure services in the
    context of this chapter. Rest assured, even if you are new to the Azure environment,
    we have designed this chapter to be beginner friendly. It offers clear explanations
    and includes detailed screenshots to facilitate your learning and get you started
    on the right track.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 除了上述系统要求外，掌握基础的 Azure 服务和 Python 编程语言的基本能力（相当于初学者水平，Python 100）非常重要。这些技能对于在本章中高效地使用
    Azure 服务至关重要。放心，即使你是 Azure 环境的新手，我们已将本章设计为适合初学者。它提供了清晰的解释并包括详细的截图，帮助你更好地学习并顺利入门。
- en: Architecture design
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构设计
- en: 'To construct this system, we need the following essential services:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建这个系统，我们需要以下基本服务：
- en: Azure Cognitive Search
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Cognitive Search
- en: Azure OpenAI Service
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure OpenAI 服务
- en: Our primary objective is to transform unstructured data into embeddings, which
    will be stored within a vector database. When a user submits a query, the system
    leverages Azure OpenAI embeddings for processing. Subsequently, a vector search
    operation is performed on the vector database to retrieve the top K paragraphs.
    These selected paragraphs are then sent to the Azure OpenAI answering prompt,
    which extracts the answers and delivers them to the user.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的主要目标是将非结构化数据转化为嵌入向量，这些向量将存储在向量数据库中。当用户提交查询时，系统会利用 Azure OpenAI 嵌入向量进行处理。随后，执行向量搜索操作，从向量数据库中检索出前
    K 段内容。这些选中的段落将被发送到 Azure OpenAI 回答提示中，提取答案并将其交付给用户。
- en: 'The following is a simple architecture diagram for a question-and-answer solution
    using Azure OpenAI:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用 Azure OpenAI 的问答解决方案的简单架构图：
- en: '![Figure 4.1: Architecture design](img/B21019_04_1.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.1：架构设计](img/B21019_04_1.jpg)'
- en: 'Figure 4.1: Architecture design'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1：架构设计
- en: In the preceding diagram, we are sending Azure OpenAI Service embeddings to
    a vector database, and the questions asked by the user are sent to those embeddings
    and the results will be extracted. Now, wewill develop a solution to our problem
    using this design.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图示中，我们将 Azure OpenAI 服务的嵌入向量发送到向量数据库，用户提出的问题会被发送到这些嵌入向量，结果将被提取。现在，我们将使用这个设计来开发我们的解决方案。
- en: Developing a question-answering solution using Azure OpenAI and the Azure Cognitive
    Search index
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Azure OpenAI 和 Azure Cognitive Search 索引开发问答解决方案
- en: Now that we’re familiar with the architectural elements necessary for creating
    this solution, let’s proceed with the implementation of these components in the
    Azure portal. As previously mentioned, having an active Azure account is a prerequisite
    for building this application.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经熟悉了创建这个解决方案所需的架构元素，让我们继续在 Azure 门户中实现这些组件。如前所述，拥有一个有效的 Azure 账户是构建此应用程序的先决条件。
- en: Azure subscription prerequisites
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure 订阅先决条件
- en: 'The following prerequisites are established in [*Chapter 2*](B21019_02.xhtml#_idTextAnchor023)
    and can be reused:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 以下先决条件在[*第 2 章*](B21019_02.xhtml#_idTextAnchor023)中已经建立，并且可以重复使用：
- en: Azure subscription
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 订阅
- en: Azure OpenAI resource
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure OpenAI 资源
- en: Deployed Azure OpenAI models
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署的 Azure OpenAI 模型
- en: Create the following tools, excluding those already established in [*Chapter
    2*](B21019_02.xhtml#_idTextAnchor023).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 创建以下工具，排除在[*第 2 章*](B21019_02.xhtml#_idTextAnchor023)中已经建立的内容。
- en: 'Since we have already set up Azure OpenAI and its deployments, the next step
    is to create Azure Cognitive Search within the same resource group where we established
    Azure OpenAI:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经设置好了 Azure OpenAI 及其部署，下一步是在我们设置 Azure OpenAI 的同一资源组中创建 Azure Cognitive
    Search：
- en: 'Navigate to the search bar in the top navigation and search for `Azure Cognitive
    Search`, as illustrated here:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部导航栏的搜索框中搜索`Azure Cognitive Search`，如图所示：
- en: '![Figure 4.2: Azure Cognitive Search](img/B21019_04_2.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.2：Azure Cognitive Search](img/B21019_04_2.jpg)'
- en: 'Figure 4.2: Azure Cognitive Search'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2：Azure Cognitive Search
- en: 'When you access the Azure OpenAI service page, you’ll find a **Create** option,
    as indicated here:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当您访问 Azure OpenAI 服务页面时，您会看到一个**创建**选项，如此处所示：
- en: '![Figure 4.3: Azure Cognitive Search creation](img/B21019_04_3.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.3：Azure Cognitive Search 创建](img/B21019_04_3.jpg)'
- en: 'Figure 4.3: Azure Cognitive Search creation'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3：Azure Cognitive Search 创建
- en: 'After clicking on the **Create** option, a form will appear, similar to the
    one in *Figure 4**.4*. Choose the **Resource Group**—in my case, I’ve selected
    **azure-openai-rg**, which was created earlier. In the final step of this section,
    select a pricing tier; I’ve chosen **Standard S0**. This is how it should appear
    after completing step 1:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**选项后，将出现一个表单，类似于*图 4.4*所示。选择**资源组**——在我的案例中，我选择了之前创建的**azure-openai-rg**。在此部分的最后一步中，选择定价层级；我选择了**标准
    S0**。完成第一步后，它应该显示如下：
- en: '![Figure 4.4: Azure Cognitive Search basics](img/B21019_04_4.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.4：Azure Cognitive Search 基础](img/B21019_04_4.jpg)'
- en: 'Figure 4.4: Azure Cognitive Search basics'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4：Azure Cognitive Search 基础
- en: 'After completing step 2, click on the **Next** button to proceed to the scale
    step, where you can review the pricing details based on your selected tier. You
    can leave the default settings as they are and then click on the **Next** button
    to continue:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成第二步后，点击**下一步**按钮进入规模设置步骤，在此步骤中您可以根据所选的服务层级查看定价详情。您可以保持默认设置，然后点击**下一步**继续：
- en: '![Figure 4.5: Azure Cognitive Search scale](img/B21019_04_5.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.5：Azure Cognitive Search 规模](img/B21019_04_5.jpg)'
- en: 'Figure 4.5: Azure Cognitive Search scale'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5：Azure Cognitive Search 规模
- en: 'After clicking **Next**, you will be directed to the **Networking** tab, where
    the endpoint connectivity is set to **Public** by default. Please leave it as
    **Public** and click on **Next** to proceed:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**后，您将进入**网络**选项卡，默认情况下，端点连接性设置为**公开**。请保持为**公开**，然后点击**下一步**继续：
- en: '![Figure 4.6: Azure Cognitive Search networking](img/B21019_04_6.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.6：Azure Cognitive Search 网络](img/B21019_04_6.jpg)'
- en: 'Figure 4.6: Azure Cognitive Search networking'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6：Azure Cognitive Search 网络
- en: After clicking the **Next** button, you will be directed to the **Tags** step.
    You can ignore this section for now. Tags are name/value pairs that allow you
    to categorize resources and facilitate consolidated billing by applying the same
    tag to multiple search and resource groups. You can find similar details on the
    **Tags** step. Proceed by clicking **Next** and then go to the **Review +** **create**
    step.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**按钮后，您将进入**标签**步骤。现在可以忽略此部分。标签是名称/值对，它允许您对资源进行分类，并通过将相同标签应用于多个搜索和资源组来简化集中计费。您可以在**标签**步骤中找到类似的详细信息。继续点击**下一步**，然后进入**审查
    + 创建**步骤。
- en: 'Here, it will display the details you’ve chosen in the previous steps. Review
    all the information and click on the **Create** button:'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此处将显示您在前一步骤中选择的详细信息。审核所有信息后，点击**创建**按钮：
- en: '![Figure 4.7: Azure Cognitive Search tags](img/B21019_04_7.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.7：Azure Cognitive Search 标签](img/B21019_04_7.jpg)'
- en: 'Figure 4.7: Azure Cognitive Search tags'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7：Azure Cognitive Search 标签
- en: 'The creation of Cognitive Search may take a few moments. Once the search deployment
    is finished, you can access the resource page, which appears as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 Cognitive Search 可能需要几分钟时间。一旦搜索部署完成，您可以访问资源页面，页面如下所示：
- en: '![Figure 4.8: Azure Cognitive Search overview](img/B21019_04_8.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.8：Azure Cognitive Search 概览](img/B21019_04_8.jpg)'
- en: 'Figure 4.8: Azure Cognitive Search overview'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8：Azure Cognitive Search 概览
- en: 'To create an index that will be used for vector searches and to add documents
    to the vector store, click on the **Add index** link. Alternatively, you can create
    one from the **Indexes** tab:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建用于向量搜索的索引并将文档添加到向量存储中，请点击**添加索引**链接。或者，您也可以从**索引**选项卡创建：
- en: '![Figure 4.9: Azure Cognitive Search index creation](img/B21019_04_9.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.9：Azure Cognitive Search 索引创建](img/B21019_04_9.jpg)'
- en: 'Figure 4.9: Azure Cognitive Search index creation'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9：Azure Cognitive Search 索引创建
- en: 'When you click on the **Add index** option, a form will appear, as shown in
    *Figure 4**.10*. Fill in the necessary fields for your application, including
    **Index name**:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您点击**添加索引**选项时，将会出现一个表单，如*图 4.10*所示。填写应用程序所需的字段，包括**索引名称**：
- en: '![Figure 4.10: Azure Cognitive Search index creation](img/B21019_04_10.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.10：Azure 认知搜索索引创建](img/B21019_04_10.jpg)'
- en: 'Figure 4.10: Azure Cognitive Search index creation'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10：Azure 认知搜索索引创建
- en: 'Click on **Create**, and it will take a few moments to create the index. You
    can verify its creation when you navigate to the **Indexes** tab:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**，创建索引需要几分钟时间。当您导航到**索引**选项卡时，可以验证其创建：
- en: '![Figure 4.11: Azure Cognitive Search index overview](img/B21019_04_11.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.11：Azure 认知搜索索引概述](img/B21019_04_11.jpg)'
- en: 'Figure 4.11: Azure Cognitive Search index overview'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11：Azure 认知搜索索引概述
- en: In the preceding screenshot, we can clearly see the **azureblob-index** created.
    So, with this, we have created the required infrastructure for building our solution.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们可以清楚地看到已创建的**azureblob-index**。因此，借此，我们已经创建了构建解决方案所需的基础设施。
- en: In the next section, we will start with implementing the code for our solution.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将从实现我们解决方案的代码开始。
- en: Solution using Azure OpenAI
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Azure OpenAI 的解决方案
- en: 'Now that we have set up all the essential services in our Azure portal, we
    can begin constructing our solution. To develop the code, I will be working within
    the Azure ML Studio notebook. For this solution, I’m utilizing Python version
    3.12\. As mentioned earlier, any version above 3.7.1 should work seamlessly. You
    can access the code we’re using on our GitHub repo; I recommend referring to it
    as you progress through this chapter. Within the repository, you’ll find a `requirements.txt`
    file that lists all the Python libraries necessary for our solution. Please review
    this file and use the following command to install the required packages:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经在 Azure 门户中设置了所有基本服务，可以开始构建我们的解决方案。为了开发代码，我将使用 Azure ML Studio notebook。在这个解决方案中，我将使用
    Python 版本 3.12。如前所述，任何高于 3.7.1 的版本都应能无缝工作。您可以访问我们 GitHub 仓库中的代码；我建议在本章进展过程中参考它。在仓库中，您将找到一个
    `requirements.txt` 文件，列出了我们解决方案所需的所有 Python 库。请查看该文件，并使用以下命令安装所需的包：
- en: '[PRE0]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once you’ve successfully configured these constants in your `.env` file, you’re
    ready to proceed with integrating them into your code:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您成功配置了 `.env` 文件中的这些常量，您就可以继续将它们集成到代码中：
- en: 'We’ll start by importing packages:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将首先导入包：
- en: '[PRE1]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can see a variety of libraries being used in the previous code. Let’s delve
    into each of these libraries in the following table:'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以在前面的代码中看到使用了多种库。让我们在下面的表格中深入了解这些库：
- en: '| **Module/Library** | **Description** |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| **模块/库** | **描述** |'
- en: '| --- | --- |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `os` | Provides functions to interact with the operating system |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `os` | 提供与操作系统交互的功能 |'
- en: '| `dotenv` | Loads environment variables from a .env file |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `dotenv` | 从 .env 文件加载环境变量 |'
- en: '| `openai` | Python library for interacting with OpenAI’s services, including
    GPT-3 |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `openai` | 用于与 OpenAI 服务交互的 Python 库，包括 GPT-3 |'
- en: '| `langchain` | Custom library or package related to natural language processing
    and **machine** **learning** (**ML**) |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `langchain` | 与自然语言处理和**机器** **学习**（**ML**）相关的自定义库或包 |'
- en: '| `langchain.llms.AzureOpenAI` | Implementation or class related to OpenAI’s
    language models on Azure |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `langchain.llms.AzureOpenAI` | 与 OpenAI 在 Azure 上的语言模型相关的实现或类 |'
- en: '| `langchain.retrievers.AzureCognitiveSearchRetriever` | Module or class for
    retrieving information from Azure Cognitive Search |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `langchain.retrievers.AzureCognitiveSearchRetriever` | 用于从 Azure 认知搜索中检索信息的模块或类
    |'
- en: '| `langchain.embeddings.OpenAIEmbeddings` | Possibly related to extracting
    vector embeddings from text using OpenAI models |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `langchain.embeddings.OpenAIEmbeddings` | 可能与使用 OpenAI 模型从文本中提取向量嵌入相关 |'
- en: '| `langchain.vectorstores.Chroma` | Custom vector store or data structure,
    potentially for working with vectors in ML |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| `langchain.vectorstores.Chroma` | 自定义向量存储或数据结构，可能用于处理机器学习中的向量 |'
- en: '| `langchain.chains.RetrievalQA` | Module or class for building a question-answering
    system using a retrieval-based approach |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| `langchain.chains.RetrievalQA` | 用于构建基于检索方法的问答系统的模块或类 |'
- en: 'Table 4.1: Modules used and their description'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 表 4.1：使用的模块及其描述
- en: 'Now, let’s initialize all the necessary constants using the keys provided in
    the `.``env` file:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `.env` 文件中提供的密钥初始化所有必要的常量：
- en: '[PRE2]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: By completing these configurations, you’ll have the necessary connection settings
    for your resources.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些配置后，您将拥有连接资源所需的设置。
- en: 'We will now test the connectivity with Azure OpenAI as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将按照以下步骤测试与 Azure OpenAI 的连接：
- en: '[PRE3]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The language model (referred to as `llm`) is being initialized using the `AzureOpenAI`
    class with the specified engine (presumably an OpenAI model) named `OPENAI_MODEL_NAME`
    and a temperature setting of `0`, which controls the randomness of the model’s
    responses. It then uses the initialized model to generate a response to the `tell
    me about yourself` input prompt and prints the generated response to test the
    connectivity and functionality of the OpenAI language model.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 语言模型（简称`llm`）使用`AzureOpenAI`类进行初始化，并指定引擎（可能是OpenAI模型），该引擎名为`OPENAI_MODEL_NAME`，温度设置为`0`，温度控制模型回应的随机性。随后，使用初始化后的模型生成对`tell
    me about yourself`输入提示的回应，并打印出生成的回应以测试OpenAI语言模型的连接性和功能。
- en: 'This is the output:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这是输出：
- en: '![Figure 4.12: Connectivity output](img/B21019_04_12.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.12：连接性输出](img/B21019_04_12.jpg)'
- en: 'Figure 4.12: Connectivity output'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12：连接性输出
- en: 'Next, we will load documents, create embeddings, and add them to the vector
    search:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将加载文档，创建嵌入，并将它们添加到向量搜索中：
- en: '[PRE4]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the previous code, we loaded all the files with the `.pdf` extension from
    the data folder into the loader.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的代码中，我们将数据文件夹中所有`.pdf`扩展名的文件加载到加载器中。
- en: 'In the next line, we are loading them into a `documents` object:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一行，我们将它们加载到`documents`对象中：
- en: '[PRE5]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We are initializing the `CharacterTextSplitter` and using that for splitting
    the documents with a chunk size of 1,000:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在初始化`CharacterTextSplitter`并使用它来分割文档，分割大小为1000：
- en: '[PRE6]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In the previous code, we initialized the vector store as `AzureSearch` and added
    the documents to the vector store.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的代码中，我们将向量存储初始化为`AzureSearch`并将文档添加到向量存储中。
- en: Let’s recap the code we have written so far.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下到目前为止写的代码。
- en: The code first loads PDF documents from a specified directory using *DocumentLoader*,
    then splits them into smaller text chunks using `CharacterTextSplitter`. It subsequently
    creates embeddings using the `OpenAIEmbeddings` module, and finally sets up an
    *Azure Search service* for vector-based document search and adds the previously
    split text documents (`docs`) to the vector store using the `vector_store` instance.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 代码首先使用*DocumentLoader*从指定目录加载PDF文档，然后使用`CharacterTextSplitter`将其分割成更小的文本块。接着，它使用`OpenAIEmbeddings`模块创建嵌入，最后设置一个*Azure
    Search服务*用于基于向量的文档搜索，并通过`vector_store`实例将之前分割的文本文档（`docs`）添加到向量存储中。
- en: 'Output:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![Figure 4.13: Documents and embeddings output](img/B21019_04_13.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.13：文档和嵌入输出](img/B21019_04_13.jpg)'
- en: 'Figure 4.13: Documents and embeddings output'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13：文档和嵌入输出
- en: 'Now, we will perform a similarity search on the vector database:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将对向量数据库执行相似度搜索：
- en: '[PRE7]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: A similarity search is conducted using the `vector_search` object. It takes
    the query “What are some good places in Goa to visit in December?” and retrieves
    the top three documents that are most similar to this query from the vector store.
    The content of the most similar document is then printed, allowing you to find
    and display documents that closely match the query based on their vector representations.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`vector_search`对象进行相似度搜索。它接收查询“在十二月，果阿有哪些好去处？”并从向量存储中检索出与此查询最相似的前三个文档。然后打印出最相似文档的内容，使你能够基于文档的向量表示找到并展示与查询紧密匹配的文档。
- en: 'Output:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![Figure 4.14: Similarity search output](img/B21019_04_14.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.14：相似度搜索输出](img/B21019_04_14.jpg)'
- en: 'Figure 4.14: Similarity search output'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14：相似度搜索输出
- en: 'Finally, we will create a chain using `llm –` `AzureOpenAI`:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将使用`llm –` `AzureOpenAI`创建一个链：
- en: '[PRE8]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The code initializes a `RetrievalQA` chain. It employs an `AzureOpenAI` model
    (configured with a specific deployment and model) to answer questions related
    to a `stuff` category. The retrieval of relevant information for answering questions
    is facilitated by the `vector_search` object acting as the retriever.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 代码初始化了一个`RetrievalQA`链。它使用一个`AzureOpenAI`模型（配置了特定的部署和模型）来回答与`stuff`类别相关的问题。通过`vector_search`对象作为检索器，辅助进行相关信息的检索以回答问题。
- en: 'Output:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![Figure 4.15: Chain output using RetrievalQA](img/B21019_04_15.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.15：使用RetrievalQA的链输出](img/B21019_04_15.jpg)'
- en: 'Figure 4.15: Chain output using RetrievalQA'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.15：使用RetrievalQA的链输出
- en: 'We will test it using the following query:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下查询进行测试：
- en: '[PRE9]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The specific question “What are some good places in Goa to visit in December?”
    is submitted to a configured QA system represented by the *chain*. The system
    utilizes an `AzureOpenAI` model and a vector search retriever to find and generate
    a response to the question. The actual answer to the question is determined by
    the model’s understanding and the content available in the system’s index.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 具体问题“在12月，Goa有哪些值得游览的好地方？”被提交给配置好的QA系统，该系统由*链*表示。该系统利用`AzureOpenAI`模型和向量搜索检索器来查找并生成对该问题的回答。问题的实际答案由模型的理解和系统索引中可用的内容决定。
- en: 'Output:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![Figure 4.16: Query output](img/B21019_04_16.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图4.16：查询输出](img/B21019_04_16.jpg)'
- en: 'Figure 4.16: Query output'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.16：查询输出
- en: Now our solution has clearly given the required response from our vector search.
    With this, we have achieved the desired output.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的解决方案已经清晰地给出了来自向量搜索的所需响应。通过这一点，我们已经达到了期望的输出。
- en: Summary
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored the development of an enterprise-level document
    QA solution by leveraging Azure OpenAI and Azure Cognitive Search. We addressed
    the common organizational challenge of managing vast amounts of unstructured documents
    containing valuable information and highlighted the transformative potential of
    such a solution. We outlined the essential tools and software required to set
    up the development environment, ensuring readiness for implementation. We also
    detailed the architecture, explaining how Azure Cognitive Search and Azure OpenAI
    Service work together to convert unstructured data into embeddings for efficient
    searching. Finally, we provided a practical guide to building the solution, including
    setting up an Azure OpenAI deployment and Azure Cognitive Search components.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们探讨了通过利用Azure OpenAI和Azure Cognitive Search来开发企业级文档QA解决方案。我们解决了一个常见的组织挑战——管理大量包含宝贵信息的非结构化文档，并突出了这种解决方案的变革潜力。我们概述了设置开发环境所需的基本工具和软件，确保了实施的准备工作。我们还详细讲解了架构，解释了Azure
    Cognitive Search和Azure OpenAI服务如何协同工作，将非结构化数据转换为嵌入，以便高效检索。最后，我们提供了构建该解决方案的实用指南，包括设置Azure
    OpenAI部署和Azure Cognitive Search组件。
- en: In the next chapter, we will integrate OpenAI and Azure Communications Services
    to build an advanced analytics solution.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将集成OpenAI和Azure通讯服务，构建一个先进的分析解决方案。
