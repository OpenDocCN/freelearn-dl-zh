- en: Sensing Market Sentiment for Algorithmic Marketing at Sell Side
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 在卖方感知市场情感的算法营销
- en: In the previous chapter, we learned about investment portfolio management. We
    also learned some of the portfolio management techniques, such as the Markowitz
    mean-variance model and the Treynor–Black model for portfolio construction. We
    also learned about how to predict a trend for a security. So, the previous chapter
    was based on the buy side of a market. It depicted the behavior of portfolio managers
    or asset managers.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了投资组合管理。我们还学习了一些投资组合管理技术，例如马克维茨均值-方差模型和特雷诺–布莱克模型，用于投资组合构建。我们还了解了如何预测证券的趋势。因此，上一章是基于市场的买方部分，描述了投资组合经理或资产管理人的行为。
- en: In this chapter, we will look at the sell side of the market. We will understand
    the behavior of the counterpart of the portfolio managers. Sell side refers to
    securities firms/investment banks and their main services, including sales, trading,
    and research. Sales refers to the marketing of securities to inform investors
    about the securities available for selling. Trading refers to the services that
    investors use to buy and sell off securities and the research performed to assist
    investors in evaluating securities. Being client-centric, one of the key functions
    of a bank is sensing the needs and sentiments of the end investors, who in turn
    push the asset managers to buy the product from banks. We will begin this chapter
    by looking at a few concepts and techniques. We will look at an example that illustrates
    how to sense the needs of an investor. We will look at another example to analyze
    the annual report and extract information from it.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨市场的卖方部分。我们将了解投资组合经理对手的行为。卖方指的是证券公司/投资银行及其主要服务，包括销售、交易和研究。销售指的是向投资者营销证券，告知他们可以出售的证券。交易指的是投资者用来买卖证券的服务，以及为了帮助投资者评估证券而进行的研究。银行的一个关键职能是以客户为中心，感知终端投资者的需求和情感，进而推动资产管理人从银行购买产品。我们将通过几个概念和技术来开始本章的讨论。我们将通过一个例子来说明如何感知投资者的需求。我们还将通过另一个例子分析年报并从中提取信息。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding sentiment analysis
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解情感分析
- en: Sensing market requirements using sentiment analysis
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用情感分析感知市场需求
- en: Network building and analysis using Neo4j
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Neo4j进行网络构建与分析
- en: Understanding sentiment analysis
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解情感分析
- en: 'Sentiment analysis is a technique in which text mining is done for contextual
    information. The contextual information is identified and extracted from the source
    material. It helps businesses understand the sentiment for their products, securities,
    or assets. It can be very effective to use the advanced techniques of artificial
    intelligence for in-depth research in the area of text analysis. It is important
    to classify the transactions around the following concepts:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 情感分析是一种文本挖掘技术，用于提取上下文信息。上下文信息从源材料中识别并提取出来。它帮助企业理解其产品、证券或资产的情感。利用人工智能的先进技术进行深入研究，在文本分析领域非常有效。对交易进行分类时，重要的是围绕以下概念进行分类：
- en: The aspect of security the buyers and sellers care about
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 买卖双方关心的证券方面
- en: Customers' intentions and reactions concerning the securities
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户对证券的意图和反应
- en: Sentiment analysis is known to be the most common text analysis and classification
    tool. It receives an incoming message or transaction and classifies it depending
    on whether the sentiment associated with the transaction is positive, negative,
    or neutral. By using the sentiment analysis technique, it is possible to input
    a sentence and understand the sentiment behind the sentence.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 情感分析被认为是最常见的文本分析和分类工具。它接收一条传入的消息或交易，并根据该交易所涉及的情感是积极、消极还是中性进行分类。通过使用情感分析技术，可以输入一句话并理解该句背后的情感。
- en: Now that we have understood what sentiment analysis is, let's find out how to
    sense market requirements in the following section.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经理解了什么是情感分析，接下来我们来看看如何在以下章节中感知市场需求。
- en: Sensing market requirements using sentiment analysis
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用情感分析感知市场需求
- en: One of the key requirements of a security firm/investment bank on the sell side
    is to manufacture the relevant securities for the market. We have explored the
    fundamental behaviors and responsibilities of companies in [Chapter 4](0c281efb-a1b8-423f-976b-0fa47f5da990.xhtml), *Mechanizing
    Capital Market Decisions*, and [Chapter 5](bbb73cab-df58-462a-8b5e-c1574611aff2.xhtml),
    *Predicting the Future of Investment Bankers*. We learned about the momentum approach
    in [Chapter 6](0e7c4e25-941b-4bd6-a04a-55924bdbaa43.xhtml), *Automated Portfolio
    Management Using the Treynor–Black Model and ResNet*. While the market does not
    always act rationally, it could be interesting to hear about the market's feelings.
    That is what we will be doing in this chapter.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一家证券公司/投资银行在卖方的一个关键要求是为市场制造相关的证券。我们在[第4章](0c281efb-a1b8-423f-976b-0fa47f5da990.xhtml)《*机械化资本市场决策*》和[第5章](bbb73cab-df58-462a-8b5e-c1574611aff2.xhtml)《*预测投资银行家未来*》中探讨了公司在这方面的基本行为和责任。我们在[第6章](0e7c4e25-941b-4bd6-a04a-55924bdbaa43.xhtml)《*使用Treynor-Black模型和ResNet的自动化投资组合管理*》中了解了动量方法。尽管市场并不总是理性运作，但听听市场的情绪可能会很有趣。这也是我们在本章中要做的。
- en: In this example, we will be playing the role of the salesperson of an investment
    bank on the trading floor, trading in equities. What we want to find out is the
    likes and dislikes regarding securities so that they can market the relevant securities,
    including derivatives. We got our insights from Twitter Search, and the stock
    price from Quandl. All of this data requires a paid license.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将扮演投资银行交易大厅的销售员角色，进行股票交易。我们想要了解的是市场对证券的喜好和厌恶，以便能够营销相关证券，包括衍生品。我们的见解来自Twitter
    Search，股价数据来自Quandl。所有这些数据都需要付费许可。
- en: Solution and steps
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案与步骤
- en: 'There are a total of three major steps to get the market sentiment using coding
    implementation. The data is used as shown in the following diagram:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用编码实现获取市场情绪的过程总共有三个主要步骤。数据如下面的图所示：
- en: '![](img/f4bbac19-98e7-4dc2-8e09-d4c83ca5d8d0.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f4bbac19-98e7-4dc2-8e09-d4c83ca5d8d0.png)'
- en: 'The steps are as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤如下：
- en: Data will be retrieved from Twitter and be saved locally as a JSON file.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据将从Twitter获取并以JSON文件格式保存在本地。
- en: The JSON file will then be read, further processed by counting the positive
    and negative words, and input as records into a SQL Lite database.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: JSON文件将被读取，进一步处理，通过计算正面和负面词汇的数量，并作为记录输入到SQL Lite数据库中。
- en: Lastly, the sentiment will be read from the database and compared against stock
    prices retrieved from Quandl.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，情感将从数据库中读取，并与从Quandl获取的股票价格进行比较。
- en: We will elaborate on these steps in more detail in the following sections.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的部分中更详细地阐述这些步骤。
- en: Downloading the data from Twitter
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从Twitter下载数据
- en: By using a Twitter Search commercial license, we download data on the same industry
    as defined by the Shalender (Quandl) industry classification. We will use the
    API key to search and download the latest 500 tweets containing or tagged with
    the company name, one by one. All tweets are received in JSON format, which looks
    like a Python dictionary. The JSON file will then be saved on the computer for
    further processing.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用Twitter Search商业许可，我们下载与Shalender（Quandl）行业分类定义的相同行业的数据。我们将使用API密钥逐一搜索并下载包含公司名称或标记为公司名称的最新500条推文。所有推文都以JSON格式接收，看起来像一个Python字典。然后，JSON文件将保存在计算机中，供进一步处理。
- en: 'Sample Python codes can be found on GitHub ([https://github.com/twitterdev/search-tweets-python](https://github.com/twitterdev/search-tweets-python)),
    especially regarding authentication. The following is the code snippet for downloading
    tweets from Twitter:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在GitHub上找到示例Python代码（[https://github.com/twitterdev/search-tweets-python](https://github.com/twitterdev/search-tweets-python)），特别是关于身份验证的部分。以下是从Twitter下载推文的代码片段：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Converting the downloaded tweets into records
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将下载的推文转换为记录
- en: The tweet's message and any linked page will then be loaded and read by a simple
    language processing program, which will count the number of positive and negative
    words in the message and linked page body. The parsed tweet will be converted
    to a structured SQL database format and stored in a SQL Lite database.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 推文的消息及任何链接的页面将被一个简单的语言处理程序加载并读取，该程序将计算消息和链接页面正文中正面和负面词汇的数量。解析后的推文将被转换为结构化的SQL数据库格式并存储在SQL
    Lite数据库中。
- en: 'The following is the code snippet to convert tweets into records:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将推文转换为记录的代码片段：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There are three functions that are called by the preceding program. One is used
    to count the positive and negative words, one looks at the topic concerned, and
    one retrieves the text in the URL given in the tweet.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的程序调用了三个函数。一个是用于计算正面和负面词汇，另一个是分析关注的主题，最后一个是从推文中给定的URL中提取文本。
- en: 'The following code snippet defines the functions used in the program:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段定义了程序中使用的函数：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Performing sentiment analysis
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 执行情感分析
- en: 'The database that stored the parsed tweet will be read by another program.
    For each record, the sentiment will be represented by aggregate sentiment on a
    daily basis. Each tweet''s sentiment is calculated as the total number of negative
    sentiments subtracted from positive sentiments. The range of this sentiment score
    should be in the range of -1 to +1, with -1 representing a totally negative score
    and +1 a totally positive score. Each day’s sentiment score is calculated as the
    average of all the tweets'' sentiment scores for the security. Sentiment scores
    of all securities in the same industry are plotted on a graph, similar to the
    following:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 存储解析过的推文的数据库将被另一个程序读取。对于每一条记录，情感将以每日汇总情感的形式表示。每条推文的情感得分是通过将负面情感的总数从正面情感的总数中减去来计算的。这个情感得分的范围应该在-1到+1之间，-1代表完全负面，+1代表完全正面。每一天的情感得分是所有推文的情感得分的平均值。相同领域中所有证券的情感得分将绘制在图表上，类似于以下内容：
- en: '![](img/2c1f9e69-f7f9-4bf3-a0d5-73c88093fa9c.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2c1f9e69-f7f9-4bf3-a0d5-73c88093fa9c.png)'
- en: For example, in the short period of our coverage, Dominion Energy has one of
    the most favorable sentiment scores (between Oct 29 and Oct 30).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在我们覆盖的短时间段内，Dominion Energy（道明能源）有着最有利的情感评分（在10月29日至10月30日之间）。
- en: 'The sample output of Dominion Energy is shown in the following graph:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Dominion Energy（道明能源）的示例输出如下图所示：
- en: '![](img/f65f340f-ad37-4161-92dc-02daf067caf3.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f65f340f-ad37-4161-92dc-02daf067caf3.png)'
- en: The sentiment is the orange line and the price is the blue line (please refer
    to the color graph provided in the graphic bundle of this book).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 情感是橙色线，股价是蓝色线（请参阅本书提供的彩色图表）。
- en: 'The following is the code snippet for sentiment analysis:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是情感分析的代码片段：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Comparing the daily sentiment against the daily price
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 比较每日情感与每日价格
- en: 'After we obtain the sentiment score for each stock, we also want to know the
    predictive power or the influence of the sentiment on the stock price. The stock
    price of the day is calculated by the middle-of-day high and low. For each stock,
    we plot and compare the sentiment and stock price over a period of time. The following
    screenshot is an illustration of PG&E Corp''s sentiment versus stock price:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们获得每只股票的情感得分后，我们还想了解情感对股价的预测能力或影响。当天的股价是通过中午时分的最高价和最低价来计算的。对于每只股票，我们绘制并比较情感和股价在一段时间内的变化。以下截图展示了PG&E公司情感与股价的对比：
- en: '![](img/057a323b-721b-4faa-810c-fbe1aac920d0.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/057a323b-721b-4faa-810c-fbe1aac920d0.png)'
- en: 'The following is the code snippet for daily sentiment analysis data against
    the daily price:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是针对每日价格的情感分析数据的代码片段：
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Congratulations! You have developed a program to assist sales in finding popular
    securities to develop products for.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经开发了一个程序，帮助销售人员找到热门证券以开发产品。
- en: From what we have seen, comparing this example to the technical analysis examples,
    we can see that the information from the sentiment is far higher than the technical
    trend. So far, we have only looked at the primary impact of the trend, fundamental,
    and sentiment; however, companies are interconnected in our society. So how can
    we model the linkage of firms and individuals? This brings us to the next topic—network
    analysis.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 从我们看到的情况来看，比较这个例子与技术分析例子，我们可以发现情感数据所提供的信息远高于技术趋势。到目前为止，我们只看到了趋势、基本面和情感的初步影响；然而，企业在我们的社会中是相互关联的。那么，我们如何才能建模公司和个人之间的关联呢？这将引出下一个话题——网络分析。
- en: Network building and analysis using Neo4j
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Neo4j构建和分析网络
- en: As sell-side analysts, besides finding out the primary impact of news on the
    company, we should also find out the secondary effect of any news. In our example,
    we will find out the suppliers, customers, and competitors of any news on the
    stocks.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 作为卖方分析师，除了找出新闻对公司产生的主要影响外，我们还应该找出任何新闻的次级影响。在我们的例子中，我们将找出新闻对股票的供应商、客户和竞争对手的影响。
- en: 'We can do this using three approaches:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下三种方法来实现：
- en: By means of direct disclosure, such as annual reports
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过直接披露，例如年度报告
- en: By means of secondary sources (media reporting)
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过次级来源（媒体报道）
- en: By means of industry inferences (for example, raw materials industries, such
    as oil industries, provide the output for transportation industries)
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过行业推断（例如，原材料行业，如石油行业，为交通行业提供输出）
- en: In this book, we use direct disclosure from the company to illustrate the point.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们使用公司直接披露的信息来说明这一点。
- en: We are playing the role of equity researchers for the company stock, and one
    of our key roles is to understand the relevant parties' connections to the company.
    We seek to find out the related parties of the company—Duke Energy—by reading
    the company's annual report.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们扮演的是公司股票的股权研究员，其中一个关键角色是理解相关方与公司之间的联系。我们通过阅读公司年报，寻找公司——杜克能源的相关方。
- en: Solution
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'There are a total of four steps. The following diagram shows the data flow:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有四个步骤。下图展示了数据流：
- en: '![](img/11af5ce3-eb8c-41bd-89dd-3add22b17e89.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/11af5ce3-eb8c-41bd-89dd-3add22b17e89.png)'
- en: We will now look at the steps in more detail in the following sections.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将更详细地介绍以下各个步骤。
- en: Using PDFMiner to extract text from a PDF
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用PDFMiner从PDF中提取文本
- en: Besides storage, we also need to extract the relationship from text documents.
    Before we can start dealing with text, we need to convert the PDF data to text.
    To do this, we use a library called **PDFMiner** (specifically, the module is
    called **pdfminer.six** ([https://github.com/pdfminer/pdfminer.six](https://github.com/pdfminer/pdfminer.six)) for
    Python 3+). PDF is an open standard to describe a document. It stores the lines,
    text, images, and their exact locations in the document. We will only be using
    a basic function in PDFMiner to extract the texts from it. Even though we could
    extract the coordinates, we will skip this to simplify our work. Upon extracting
    the text, we append all lines into one super long line.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 除了存储外，我们还需要从文本文档中提取关系。在开始处理文本之前，我们需要将PDF数据转换为文本。为此，我们使用一个叫做**PDFMiner**的库（具体来说，该模块叫做**pdfminer.six**，适用于Python
    3+）进行转换。PDF是一种开放标准，用于描述文档。它存储了文档中的行、文本、图片以及它们在文档中的精确位置。我们仅使用PDFMiner中的一个基础函数来提取其中的文本。尽管我们也可以提取坐标，但为了简化工作，我们将跳过这一部分。在提取文本后，我们将所有行拼接成一行超长文本。
- en: 'The following code snippet imports the necessary libraries and initializes
    a PDF file to be processed:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段导入了必要的库，并初始化了一个待处理的PDF文件：
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Entity extractions
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实体提取
- en: We deploy a linguistic analysis approach called **part-of-speech** (**POS**)
    tagging to decide whether words X and Z are a company or person, and whether Y
    is a product or service. Because of the sentence structure, we know that these
    are nouns, not because we know what X, Y, and Z are.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们采用了一种叫做**词性**（**POS**）标注的语言分析方法来决定词汇X和Z是公司还是个人，以及Y是产品还是服务。由于句子的结构，我们知道这些是名词，而不是因为我们知道X、Y和Z是什么。
- en: However, it is still not enough to label the entity. An entity is a standalone
    subject or object. Since there are too many entities, we should only tag entities
    with an uppercase first letter as those unique organizations or assets that are
    pertinent to our work.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，仅仅标注实体仍然不够。一个实体是一个独立的主语或宾语。由于实体种类繁多，我们应当仅仅标注首字母大写的实体，作为那些对我们的工作相关的独特组织或资产。
- en: The types of entity include `ORG`, `PERSON`, `FAC`, `NORP`, `GPE`, `LOC`, and `PRODUCT`—that
    is, Organization, Person, Facilities, Nationalities or religious or political
    groups, Geo-spatial, Location, and Product, using the SpaCy model.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 实体类型包括`ORG`、`PERSON`、`FAC`、`NORP`、`GPE`、`LOC`和`PRODUCT`——即使用SpaCy模型的组织、个人、设施、国籍或宗教或政治团体、地理空间、地点和产品。
- en: Upon getting the text chunk from the PDF of step 1, we run SpaCy to extract
    the entities from each of the sentences. For each sentence, we store the entity
    types and entities in a database record. SpaCy will have a technical limitation
    on the length of the documents it analyzes; therefore, we cut the very long text
    chunk into different chunks to respect the technical limitation. However, this
    comes with the price of chopping sentences at the cut-off point of the text chunk.
    Considering that we are handling hundreds of pages, we will take the short cut.
    Of course, the best way to cut this is to cut it approximately around the chunk,
    while respecting the punctuation in order to preserve the complete sentences.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在从步骤1的PDF中获取文本片段后，我们运行SpaCy提取每个句子中的实体。对于每个句子，我们将实体类型和实体存储在数据库记录中。SpaCy在分析文档时有技术限制，因此我们将非常长的文本片段切割成不同的块，以遵守技术限制。然而，这样做的代价是会在文本片段的切割点拆分句子。考虑到我们正在处理数百页的内容，我们将采取这个快捷方式。当然，最好的切割方法是大致围绕文本块切割，同时遵守标点符号，以保持完整的句子。
- en: 'The following code snippet depicts how to extract various entities:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段演示了如何提取各种实体：
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Entity classification via the lexicon:** For our use case, we need to further
    classify the organizations as suppliers, customers, competitors, investors, governments,
    or sister companies/assets—for example, banks that are the credit investors of
    the company will first be classified as **Banks** before they are inferred as
    the Credit Investors/Bankers for the company in its annual report. So some of
    the relationships require us to check against a database of organizations to classify
    them further. Acquiring such knowledge requires us to download the relevant databases—in
    our case, we use Wikipedia to download the list of banks. Only when we check against
    the list of names of banks will we be able to classify the organization as banks
    or not. We did not perform this step in our example, as we do not have the lexicon
    set that is normally available to banks.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**通过词汇表进行实体分类：** 在我们的用例中，我们需要进一步将组织分类为供应商、客户、竞争者、投资者、政府或姊妹公司/资产——例如，作为公司信用投资者的银行，首先会被分类为**银行**，然后在其年度报告中被推断为公司的信用投资者/银行家。因此，一些关系需要我们与组织数据库核对，以进一步分类它们。获取此类知识需要我们下载相关数据库——在我们的案例中，我们使用Wikipedia下载银行列表。只有在与银行名称列表核对后，我们才能将组织分类为银行与否。在我们的示例中，我们没有执行此步骤，因为我们没有通常可供银行使用的词汇集。'
- en: Using NetworkX to store the network structure
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用NetworkX存储网络结构
- en: After processing the data, the entities will be stored in SQL databases and
    further analyzed by NetworkX—a Python package that handles network data. Edge
    and Node are the building blocks of any graph; however, there are a lot more indicators
    to measure and describe the graph, as well as the position of the node and edge
    within the graph. What matters for our work now is to see whether the nodes are
    connected to the company in focus, and the type of connection they have.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 处理完数据后，实体将被存储在SQL数据库中，并通过NetworkX进一步分析——这是一个处理网络数据的Python包。边和节点是任何图的构建块；然而，还有许多其他指标可以用来衡量和描述图，以及节点和边在图中的位置。现在对我们工作来说，重要的是看看节点是否与我们关注的公司相连接，以及它们之间的连接类型。
- en: At the end of NetworkX, the graph data is still pretty abstract. We need better
    interactive software to query and handle the data. Therefore, we will output the
    data as a CSV for Neo4j to further handle, as it provides a user interface to
    interact with the data.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在NetworkX的最终图中，数据仍然非常抽象。我们需要更好的交互式软件来查询和处理这些数据。因此，我们将把数据输出为CSV格式，供Neo4j进一步处理，因为它提供了与数据交互的用户界面。
- en: It is, however, still far from being used—a lot of time is required to cleanse
    the dataset and define the types of relationship involved. Neo4j is a full-blown
    graph database that could satisfy the complex relationship structures.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，距离实际使用仍然很远——需要大量时间来清理数据集并定义所涉及的关系类型。Neo4j是一个完整的图形数据库，能够满足复杂的关系结构。
- en: A relationship must be established between the entities mentioned in the company's
    annual report and the entities stored in the database. In our example, we did
    not do any filtering of entities as the NLP model in the previous step has a lift
    of 85%, and so it does not have perfect performance when it comes to spotting
    the entities. We extract only the people and organizations as entities. For the
    type of relationship (edge), we do not differentiate between the different edge
    types.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 必须在公司年报中提到的实体与数据库中存储的实体之间建立关系。在我们的示例中，我们没有对实体进行任何过滤，因为前一步的 NLP 模型具有 85% 的提升率，因此它在识别实体时并不完美。我们仅提取人物和组织作为实体。对于关系类型（边），我们不区分不同的边类型。
- en: After defining the network structure, we prepare a list that stores the nodes
    and edges and generates a graph via `matplotlib`, which itself is not sufficient
    for manipulation or visualization. Therefore,  we output the data from NetworkX
    to CSV files—one storing the nodes and the other one storing the edges.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义网络结构后，我们准备了一个列表，用于存储节点和边，并通过 `matplotlib` 生成图形，但它本身不足以进行操作或可视化。因此，我们将 NetworkX
    的数据输出为 CSV 文件—一个存储节点，另一个存储边。
- en: 'The following is the code snippet for generating a network of entities:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是生成实体网络的代码片段：
- en: '[PRE7]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Using Neo4j for graph visualization and querying
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Neo4j 进行图形可视化和查询
- en: We will install Neo4j and import the CSV files to construct the data network
    in Neo4j—the industry-grade graph database. Unfortunately, Neo4j itself requires
    another set of programming languages to manipulate its data, called **Cypher**.
    This allows us to extract and search the data we need.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将安装 Neo4j 并导入 CSV 文件，以在 Neo4j——这一行业级图形数据库中构建数据网络。不幸的是，Neo4j 本身需要另一套编程语言来操作其数据，称为**Cypher**。这使我们能够提取和搜索我们需要的数据。
- en: 'We generate the files required for Neo4j. The following code snippet initializes
    Neo4j:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生成 Neo4j 所需的文件。以下代码片段初始化 Neo4j：
- en: '[PRE8]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In the terminal, we copy the output files to the home directory of Neo4j. The
    following are the commands to be executed from the terminal:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中，我们将输出文件复制到 Neo4j 的主目录。以下是从终端执行的命令：
- en: '[PRE9]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'At Neo4j, we log in via the browser. The following is the URL to enter into
    the browser:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Neo4j 中，我们通过浏览器登录。以下是输入到浏览器中的 URL：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following is the sample code snippet for Neo4j Cypher:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Neo4j Cypher 的示例代码片段：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following screenshot is the resulting output:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是结果输出的截图：
- en: '![](img/be090852-8478-4554-b0f5-4e4c7293ee44.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/be090852-8478-4554-b0f5-4e4c7293ee44.png)'
- en: Congratulations! You have managed to extract lots of important names/parties
    from the annual report that you need to focus your research on for further analysis.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经成功提取了年报中大量需要聚焦进一步分析的重要名称/主体。
- en: Summary
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about the behavior of the sell side of a market.
    We learned about what sentiment analysis is and how to use it. We also looked
    at an example to sense market needs using sentiment analysis. We learned about
    network analysis using Neo4j, which is a NoSQL database technique. We learned
    about text mining using the PDF miner tool.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了市场卖方的行为。我们了解了什么是情感分析，以及如何使用它。我们还看了一个例子，使用情感分析来感知市场需求。我们学习了使用 Neo4j
    进行网络分析，Neo4j 是一种 NoSQL 数据库技术。我们学习了使用 PDF miner 工具进行文本挖掘。
- en: In the next chapter, we will learn how to use bank APIs to build personal wealth
    advisers. Consumer banking will be a focus of the chapter. We will learn how to
    access the Open Bank Project to retrieve financial health data. We will also learn
    about document layout analysis in the chapter. Let's jump into it without any
    further ado.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将学习如何使用银行 API 来构建个人财富顾问。本章将重点关注消费者银行业务。我们将学习如何访问开放银行项目（Open Bank Project）以获取财务健康数据。我们还将学习文档布局分析。让我们不再拖延，直接开始吧。
