- en: '*Preface*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*前言*'
- en: About
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于
- en: This section briefly introduces the author, the coverage of this book, the technical
    skills you'll need to get started, and the hardware and software requirements
    required to complete all of the included activities and exercises.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节简要介绍了作者、本书的内容、你开始时所需的技术技能，以及完成所有包括的活动和练习所需的硬件和软件要求。
- en: About the Book
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书介绍
- en: '*Artificial Vision and Language Processing for Robotics* begins by discussing
    the theory behind robots. You’ll compare different methods used to work with robots
    and explore computer vision, its algorithms, and limits. You’ll then learn how
    to control the robot with natural language processing commands. As you make your
    way through this book, you’ll study Word2Vec and GloVe embedding techniques, non-numeric
    data, as well as recurrent neural networks (RNNs) and their advanced models. You’ll
    create a simple Word2Vec model with Keras, build a convolutional neural network
    (CNN), and improve it with data augmentation and transfer learning. You’ll walk
    through ROS and build a conversational agent to manage your robot. You’ll also
    integrate your agent with ROS and convert an image to text and text to speech.
    You’ll learn how to build an object recognition system with the help of a video
    clip.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*机器人学中的人工视觉与语言处理* 书籍首先讨论了机器人的理论。你将比较不同的机器人工作方法，探索计算机视觉、其算法和局限性。然后你将学习如何通过自然语言处理命令来控制机器人。在这本书的过程中，你将学习Word2Vec和GloVe嵌入技术、非数值数据以及循环神经网络（RNN）及其高级模型。你将使用Keras创建一个简单的Word2Vec模型，构建一个卷积神经网络（CNN），并通过数据增强和迁移学习来改进它。你将学习ROS并构建一个对话代理来管理你的机器人。你还将把你的代理与ROS集成，并将图像转换为文本，文本转换为语音。你将学习如何借助视频剪辑构建一个物体识别系统。'
- en: By the end of this book, you’ll have the skills you need to build a functional
    application that can integrate with ROS to extract useful information from your
    environment.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书结束时，你将具备构建一个功能性应用程序的技能，该应用程序可以与ROS集成，从你的环境中提取有用的信息。
- en: About the Authors
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作者介绍
- en: '**Álvaro Morena Alberola** is a computer engineer and loves robotics and artificial
    intelligence. Currently, he is working as a software developer. He is extremely
    interested in the core part of AI, which is based on artificial vision. Álvaro
    likes working with new technologies and learning how to use advanced tools. He
    perceives robotics as a way of easing human lives; a way of helping people perform
    tasks that they cannot do on their own.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**Álvaro Morena Alberola** 是一名计算机工程师，热爱机器人技术和人工智能。目前，他正在担任软件开发人员。他对AI的核心部分——人工视觉非常感兴趣。Álvaro喜欢使用新技术并学习如何利用先进工具。他认为机器人技术是改善人类生活的一种方式，是帮助人们完成他们自己无法完成的任务的一种手段。'
- en: '**Gonzalo Molina Gallego** is a computer science graduate and specializes in
    artificial intelligence and natural language processing. He has experience of
    working on text-based dialog systems, creating conversational agents, and advising
    good methodologies. Currently, he is researching new techniques on hybrid-domain
    conversational systems. Gonzalo thinks that conversational user interfaces are
    the future.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gonzalo Molina Gallego** 是一名计算机科学毕业生，专注于人工智能和自然语言处理。他有丰富的文本对话系统工作经验，创建过对话代理，并提供过良好的方法论建议。目前，他正在研究混合领域对话系统的新技术。Gonzalo认为对话用户界面是未来的发展趋势。'
- en: '**Unai Garay Maestre** is a computer science graduate and specializes in the
    field of artificial intelligence and computer vision. He successfully contributed
    to the CIARP conference of 2018 with a paper that takes a new approach to data
    augmentation using variational autoencoders. He also works as a machine learning
    developer using deep neural networks applied to images.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**Unai Garay Maestre** 是一名计算机科学毕业生，专注于人工智能和计算机视觉领域。他曾成功地为2018年CIARP会议贡献了一篇论文，提出了使用变分自编码器的新数据增强方法。他还从事机器学习开发工作，使用深度神经网络处理图像。'
- en: Objectives
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目标
- en: Explore ROS and build a basic robotic system
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索ROS并构建一个基本的机器人系统
- en: Identify conversation intents with NLP techniques
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用NLP技术识别对话意图
- en: Learn and use word embedding with Word2Vec and GloVe
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习并使用Word2Vec和GloVe的词嵌入
- en: Use deep learning to implement artificial intelligence (AI) and object recognition
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用深度学习实现人工智能（AI）和物体识别
- en: Develop a simple object recognition system using CNNs
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发一个简单的物体识别系统，使用CNN
- en: Integrate AI with ROS to enable your robot to recognize objects
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将AI与ROS集成，使你的机器人能够识别物体
- en: Audience
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 读者群体
- en: '*Artificial Vision and Language Processing for Robotics* is for robotics engineers
    who want to learn how to integrate computer vision and deep learning techniques
    to create complete robotic systems. It will be beneficial if you have a working
    knowledge of Python and a background in deep learning. Knowledge of ROS is a plus.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*人工视觉和语言处理技术在机器人学中的应用* 针对想要学习如何集成计算机视觉和深度学习技术以创建完整机器人系统的机器人工程师。如果你具备 Python
    的工作知识和深度学习背景，那将会很有帮助。对 ROS 的了解是一个加分项。'
- en: Approach
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '*Artificial Vision and Language Processing for Robotics* takes a practical
    approach to equip you with tools for creating systems that integrate computer
    vision and NLP to control a robot. The book is divided into three parts: NLP,
    computer vision, and robotics. It introduces advanced topics after a detailed
    introduction to the basics. It also contains multiple activities for you to practice
    and apply your new skills in a highly relevant context.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*人工视觉和语言处理技术在机器人学中的应用* 采用实用方法，为你提供了创建集成计算机视觉和自然语言处理控制机器人系统的工具。本书分为三个部分：自然语言处理、计算机视觉和机器人学。它在详细介绍基础知识后引入高级主题。书中还包含多个活动，供你在高度相关的背景下练习和应用你的新技能。'
- en: Minimum Hardware Requirements
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最低硬件要求
- en: 'For the optimal student experience, we recommend the following hardware configuration:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最佳的学生体验，我们建议以下硬件配置：
- en: 'Processor: 2GHz dual core processor or better'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理器：2GHz 双核处理器或更好
- en: 'Memory: 8 GB RAM'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存：8 GB RAM
- en: 'Storage: 5 GB available hard disk space'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储空间：5 GB 可用硬盘空间
- en: A good internet connection
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 良好的互联网连接
- en: 'To train neural networks, we recommend using **Google Colab**. But if you want
    to train these networks with your computer, you will need:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了训练神经网络，我们建议使用 **Google Colab**。但如果你想用自己的计算机训练这些网络，你需要：
- en: NVIDIA GPU
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVIDIA GPU
- en: Software Requirements
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 软件要求
- en: We don’t recommend using Ubuntu 16.04 for this book because of compatibility
    issues with ROS Kinetic. But if you want to use Ubuntu 18.04, there is a version
    that is ROS supported, named Melodic. During the project, you will need to install
    several libraries to complete all of the exercises, such as `NLTK` (<= 3.4), `spaCy`
    (<=2.0.18), `gensim` (<=3.7.0), `NumPy` (<=1.15.4), `sklearn` (<=0.20.1), `Matplotlib`
    (<=3.0.2), `OpenCV` (<=4.0.0.21), `Keras` (<=2.2.4), and `Tensorflow` (<=1.5,
    >=2.0). The installation process for each library is explained in the exercises.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 不推荐在本书中使用 Ubuntu 16.04，因为它与 ROS Kinetic 存在兼容性问题。但如果你想使用 Ubuntu 18.04，有一个 ROS
    支持的版本，名为 Melodic。在项目进行过程中，你需要安装几个库以完成所有练习，如 `NLTK` (<= 3.4)、`spaCy` (<=2.0.18)、`gensim`
    (<=3.7.0)、`NumPy` (<=1.15.4)、`sklearn` (<=0.20.1)、`Matplotlib` (<=3.0.2)、`OpenCV`
    (<=4.0.0.21)、`Keras` (<=2.2.4) 和 `Tensorflow` (<=1.5, >=2.0)。每个库的安装过程在练习中有详细说明。
- en: To use YOLO in your Ubuntu system, you will need to install the **NVIDIA** drivers
    of your GPU and the NVIDIA **CUDA** toolkit.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Ubuntu 系统中使用 YOLO，你需要安装你的 GPU 的 **NVIDIA** 驱动程序和 NVIDIA **CUDA** 工具包。
- en: Conventions
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 约定
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "With
    the `TfidfVectorizer` method, we can convert the collection of documents in our
    corpus to a matrix of TF-IDF features"'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟的 URL、用户输入和 Twitter 句柄显示如下："使用 `TfidfVectorizer`
    方法，我们可以将语料库中的文档集合转换为 TF-IDF 特征矩阵"
- en: 'A block of code is set as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块如下所示：
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'New terms and important words are shown in bold. Words that you see on the
    screen, for example, in menus or dialog boxes, appear in the text like this: "**Morphological
    analysis**: Focused on the words of a sentence and analyzing its morphemes"'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 新术语和重要词汇以粗体显示。在屏幕上看到的词汇，例如菜单或对话框中的内容，会在文本中这样显示："**形态分析**：专注于分析句子中的词和其形态素"
- en: Installation and Setup
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装和设置
- en: 'Before you start this book, you need to install the following software. You
    will find the steps to install these here:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在你开始本书之前，你需要安装以下软件。你可以在这里找到安装步骤：
- en: '**Installing Git LFS**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装 Git LFS**'
- en: In order to download all the resources from the GitHub of this book and be able
    to use images to train your neural network model, you will need to install **Git
    LFS** (Git Large File Storage). It replaces large files such as audio samples,
    videos, datasets, and graphics with text pointers inside Git.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从本书的 GitHub 下载所有资源并能够使用图像来训练你的神经网络模型，你需要安装 **Git LFS**（Git Large File Storage）。它用
    Git 内部的文本指针替换大文件，如音频样本、视频、数据集和图形。
- en: 'If you have not cloned the repository:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有克隆存储库：
- en: Install Git LFS
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Git LFS
- en: Clone the Git repository
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克隆 Git 仓库
- en: From the repository folder, execute `gitlfs pull`
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从仓库文件夹执行 `gitlfs pull`
- en: Done
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成
- en: 'If the repository is already cloned:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果仓库已经克隆：
- en: Install Git LFS
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Git LFS
- en: 'From the repository folder, execute: `gitlfs pull`'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从仓库文件夹执行：`gitlfs pull`
- en: Done
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成
- en: 'Installing Git LFS: [https://github.com/git-lfs/git-lfs/wiki/Installation](https://github.com/git-lfs/git-lfs/wiki/Installation)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Git LFS：[https://github.com/git-lfs/git-lfs/wiki/Installation](https://github.com/git-lfs/git-lfs/wiki/Installation)
- en: '**[Recommended] Google Colaboratory**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**[推荐] Google Colaboratory**'
- en: If you have the option, use Google Colaboratory. It is a free Jupyter notebook
    environment that requires no setup and runs entirely in the cloud. You can also
    take advantage of running it on a GPU.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可能，使用 Google Colaboratory。它是一个免费的 Jupyter notebook 环境，无需设置，完全运行在云端。你还可以利用
    GPU 来运行它。
- en: 'The steps for using it are as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用它的步骤如下：
- en: Upload the entire GitHub to your Google Drive account, so you can use the files
    that are stored in the repository. Make sure you have made use of Git LFS first
    to load all the files.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将整个 GitHub 上传到你的 Google Drive 账户中，这样你就可以使用存储在仓库中的文件。确保你先使用 Git LFS 加载了所有文件。
- en: Go to the folder where you want to open a new Google Colab Notebook, click New
    > More > Colaboratory. Now, you have a Google Colab Notebook opened and saved
    in the corresponding folder, and you are ready to use Python, Keras, or any other
    library that is already installed.![](img/C13550_Preface_01.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往你想打开新 Google Colab Notebook 的文件夹，点击“新建”>“更多”>“Colaboratory”。现在，你有一个已打开并保存在相应文件夹中的
    Google Colab Notebook，你可以开始使用 Python、Keras 或任何已安装的库。![](img/C13550_Preface_01.jpg)
- en: If you want to install a specific library, you can do so using the “pip” package
    installation or any other command-line installation and adding “!” at the beginning.
    For instance, “!pip install sklearn”, which would install scikit-learn.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想安装特定的库，你可以使用“pip”包安装或其他命令行安装，并在开头加上“！”。例如，“!pip install sklearn”将安装 scikit-learn。
- en: 'If you want to be able to load files from your Google Drive, you need to execute
    these two lines of code in a Google Colab cell:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想从 Google Drive 加载文件，你需要在 Google Colab 单元格中执行以下两行代码：
- en: '[PRE1]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then, open the link that appears in the output and log in with the Google account
    that you used to create the Google Colab Notebook.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，打开输出中出现的链接，并使用你创建 Google Colab Notebook 时所用的 Google 账户登录。
- en: You can now navigate to where the files were uploaded using `ls` to list the
    files in the current directory and `cd` to navigate to a specific folder:![](img/C13550_Preface_02.jpg)
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以使用`ls`列出当前目录中的文件，并使用`cd`导航到特定的文件夹，以便找到上传的文件位置。![](img/C13550_Preface_02.jpg)
- en: Now, the Google Colab Notebook is capable of loading any file and performing
    any task, just like a Jupyter notebook opened in that folder would do.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，Google Colab Notebook 可以像在该文件夹中打开的 Jupyter notebook 一样加载任何文件并执行任何任务。
- en: '**Installing ROS Kinetic**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装 ROS Kinetic**'
- en: 'These are the steps you must follow to install the framework in your Ubuntu
    system:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你必须遵循的步骤，以在你的 Ubuntu 系统上安装该框架：
- en: 'Prepare Ubuntu for accepting the ROS software:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备 Ubuntu 接受 ROS 软件：
- en: '[PRE2]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Configure the download keys:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置下载密钥：
- en: '[PRE3]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Ensure that the system is updated:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保系统已更新：
- en: '[PRE4]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Install the full framework to not miss functionalities:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完整框架，以免遗漏功能：
- en: '[PRE5]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Initialize and update `rosdep`:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化并更新 `rosdep`：
- en: '[PRE6]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Add environment variables to the `bashrc` file if you want to avoid declaring
    them each time you work with ROS:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不想每次工作时都声明环境变量，可以将它们添加到 `bashrc` 文件中：
- en: '[PRE7]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: It might be appropriate to reboot your computer after this process for the system
    to implement the new configuration.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成此过程后，可能需要重启计算机以使系统应用新的配置。
- en: 'Check that the framework is correctly working by starting it:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过启动框架检查它是否正常工作：
- en: '[PRE8]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Configuring TurtleBot**'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**配置 TurtleBot**'
- en: Note
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: It may happen that TurtleBot is not compatible with your ROS distribution (we
    are using Kinetic Kame), but don’t worry, there are lots of robots that you can
    simulate in Gazebo. You can look up different robots and try to use them with
    your ROS distribution.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会出现 TurtleBot 与你的 ROS 发行版不兼容的情况（我们使用的是 Kinetic Kame），但不用担心，Gazebo 中有很多机器人可以模拟。你可以查找不同的机器人并尝试在你的
    ROS 发行版中使用它们。
- en: 'This is the configuration process for TurtleBot:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 TurtleBot 的配置过程：
- en: 'Install its dependencies:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装其依赖项：
- en: '[PRE9]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Download the TurtleBot simulator package in your `catkin` workspace:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 `catkin` 工作空间中下载 TurtleBot 模拟器包：
- en: '[PRE10]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: After that, you should be able to use TurtleBot with Gazebo.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，您应该能够在 Gazebo 中使用 TurtleBot。
- en: If you get an error trying to visualize TurtleBot in Gazebo, download the `turtlebot_simulator`
    folder from our GitHub and replace it.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在 Gazebo 中尝试可视化 TurtleBot 时遇到错误，请从我们的 GitHub 下载 `turtlebot_simulator` 文件夹并替换它。
- en: 'Start ROS services:'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启动 ROS 服务：
- en: '[PRE11]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Launch TurtleBot World:'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启动 TurtleBot World：
- en: '[PRE12]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**Basic Installation of Darknet**'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**Darknet 基本安装**'
- en: 'Follow these steps for installing Darknet:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤安装 Darknet：
- en: 'Download the framework:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载框架：
- en: '[PRE13]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Switch to the downloaded folder and run the compilation command:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到下载的文件夹并运行编译命令：
- en: '[PRE14]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You should see an output like the following if the compilation process was
    correctly completed:'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果编译过程正确完成，您应该看到类似以下的输出：
- en: '![](img/C13550_Preface_03.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/C13550_Preface_03.jpg)'
- en: The Darknet compilation output
  id: totrans-102
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Darknet 编译输出
- en: '**Advanced Installation of Darknet**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**Darknet 高级安装**'
- en: 'This is the installation process that you must complete in order to achieve
    the chapter objectives. It will allow you to use GPU computation to detect and
    recognize objects in real time. Before performing this installation, you must
    have some dependencies installed on your Ubuntu system, such as:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您必须完成的安装过程，以实现章节目标。这将允许您使用 GPU 计算实时检测和识别物体。在执行此安装之前，您必须在 Ubuntu 系统上安装一些依赖项，如下所示：
- en: '**NVIDIA drivers**: Drivers that will allow your system to correctly work with
    your GPU. As you may know, it must be an NVIDIA model.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NVIDIA 驱动程序**：这些驱动程序将使您的系统能够正确地与 GPU 配合工作。正如您所知，它必须是 NVIDIA 型号。'
- en: '**CUDA**: This is an NVIDIA toolkit that provides a development environment
    for building applications that need GPU usage.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CUDA**：这是一个 NVIDIA 工具包，为构建需要 GPU 使用的应用程序提供开发环境。'
- en: '**OpenCV**: This is a free artificial vision library, which is very useful
    for working with images.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenCV**：这是一个免费的人工视觉库，非常适合处理图像。'
- en: Note
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: It is important to consider that all these dependencies are available in several
    versions. You must find the version of each tool that is compatible with your
    specific GPU and system.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 需要注意的是，所有这些依赖项都有多个版本。您必须找到与您的特定 GPU 和系统兼容的每个工具的版本。
- en: 'Once your system is ready, you can perform the advanced installation:'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦系统准备就绪，您可以执行高级安装：
- en: 'Download the framework if you didn’t do the basic installation:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您还没有完成基本安装，请下载框架：
- en: '[PRE15]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Modify the Makefile first lines to enable OpenCV and CUDA. It should be as
    follows:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改 Makefile 文件的前几行以启用 OpenCV 和 CUDA，内容应该如下：
- en: '[PRE16]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Save Makefile changes, switch to `darknet` directory and run the compilation
    command:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存 Makefile 修改，切换到 `darknet` 目录并运行编译命令：
- en: '[PRE17]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now, you should see an output similar to this one:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，您应该看到类似以下的输出：
- en: '![](img/C13550_Preface_04.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/C13550_Preface_04.jpg)'
- en: The Darknet compilation with CUDA and OpenCV
  id: totrans-119
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Darknet 编译带有 CUDA 和 OpenCV
- en: '**Installing YOLO**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装 YOLO**'
- en: Before performing this installation, you must have some dependencies installed
    on your Ubuntu system, as mentioned in the *advanced installation of Darknet.*
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行此安装之前，您必须在 Ubuntu 系统上安装一些依赖项，如 *Darknet 的高级安装* 部分所述。
- en: Note
  id: totrans-122
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: It is important to take into account that all these dependencies are available
    in several versions. You must find the version of each tool that is compatible
    with your specific GPU and system.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 需要考虑的是，所有这些依赖项都有多个版本。您必须找到与您的特定 GPU 和系统兼容的每个工具的版本。
- en: 'Once your system is ready, you can perform the advanced installation:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦系统准备好，您可以执行高级安装：
- en: 'Download the framework:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载框架：
- en: '[PRE18]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Modify the Makefile first lines to enable OpenCV and CUDA. It should be as
    follows:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改 Makefile 文件的前几行以启用 OpenCV 和 CUDA，内容应该如下：
- en: '[PRE19]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Save Makefile changes, switch to the darknet directory, and run the compilation
    command:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存 Makefile 修改，切换到 darknet 目录并运行编译命令：
- en: '[PRE20]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Additional Resources
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 额外资源
- en: 'The code bundle for this book is also hosted on GitHub at: [https://github.com/PacktPublishing/Artificial-Vision-and-Language-Processing-for-Robotics](https://github.com/PacktPublishing/Artificial-Vision-and-Language-Processing-for-Robotics).'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的代码包也托管在 GitHub 上，地址为：[https://github.com/PacktPublishing/Artificial-Vision-and-Language-Processing-for-Robotics](https://github.com/PacktPublishing/Artificial-Vision-and-Language-Processing-for-Robotics)。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他代码包，来自我们丰富的书籍和视频目录，可以在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。快来看看吧！
- en: 'Links to documentation:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 文档链接：
- en: ROS Kinetic - [http://wiki.ros.org/kinetic/Installation](http://wiki.ros.org/kinetic/Installation)
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: ROS Kinetic - [http://wiki.ros.org/kinetic/Installation](http://wiki.ros.org/kinetic/Installation)
- en: Git Large File Storage - [https://git-lfs.github.com/](https://git-lfs.github.com/)
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Git 大文件存储 - [https://git-lfs.github.com/](https://git-lfs.github.com/)
