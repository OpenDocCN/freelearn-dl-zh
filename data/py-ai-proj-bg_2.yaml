- en: Prediction with Random Forests
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用随机森林进行预测
- en: In this chapter, we're going to look at classification techniques with random
    forests. We're going to use scikit-learn, just like we did in the previous chapter.
    We're going to look at examples of predicting bird species from descriptive attributes
    and then use a confusion matrix on them.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论使用随机森林的分类技术。我们将像上一章那样使用scikit-learn。我们将展示如何使用描述性属性预测鸟类物种，并在其上应用混淆矩阵。
- en: 'Here''s a detailed list of the topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是详细的主题列表：
- en: Classification and techniques for evaluation
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类与评估技术
- en: Predicting bird species with random forests
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用随机森林预测鸟类物种
- en: Confusion matrix
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混淆矩阵
- en: Random forests
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 随机森林
- en: Random forests are extensions of decision trees and are a kind of ensemble method.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 随机森林是决策树的扩展，是一种集成方法。
- en: Ensemble methods can achieve high accuracy by building several classifiers and
    running a each one independently. When a classifier makes a decision, you can
    make use of the most common and the average decision. If we use the most common
    method, it is called **voting**.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 集成方法通过构建多个分类器并独立运行每个分类器来实现高准确性。当一个分类器做出决策时，可以利用最常见的决策和平均决策。如果我们使用最常见的方法，这称为**投票**。
- en: 'Here''s a diagram depicting the ensemble method:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个描述集成方法的图示：
- en: '![](img/00031.jpeg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00031.jpeg)'
- en: You can think of each classifier as being specialized for a unique perspective
    on the data. Each classifier may be a different type. For example, you can combine
    a decision tree and a logistic regression and a neural net, or the classifiers
    may be the same type but trained on different parts or subsets of the training
    data.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以把每个分类器看作是专门针对数据的独特视角。每个分类器可能是不同类型的。例如，你可以将决策树、逻辑回归和神经网络结合起来，或者分类器可能是相同类型的，但训练于不同的训练数据部分或子集。
- en: 'A random forest is a collection or ensemble of decision trees. Each tree is
    trained on a random subset of the attributes, as shown in the following diagram:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 随机森林是决策树的集合或集成。每棵树都在属性的随机子集上进行训练，如下图所示：
- en: '![](img/00032.jpeg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00032.jpeg)'
- en: These decision trees are typical decision trees, but there are several of them.
    The difference, compared with a single decision tree, particularly in a random
    forest, is that each tree is only allowed to look at some of the attributes, typically
    a small number relative to the total number of attributes available. Each tree
    is specialized to just those attributes. These specialized trees are collected
    and each offers a vote for its prediction. Whichever outcome gets the most votes
    from the ensemble of specialized trees is the winner. That is the final prediction
    of the random forest.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这些决策树是典型的决策树，但它们有很多棵。与单棵决策树相比，特别是在随机森林中，区别在于每棵树仅允许查看一些属性，通常这些属性的数量相对于可用的总属性数量较少。每棵树都专门针对这些属性。这些专门化的树被收集起来，每棵树都会为其预测投票。获得最多投票的结果就是最终的随机森林预测结果。
- en: Usage of random forest
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 随机森林的使用
- en: We should consider using a random forest when there is a sufficient number of
    attributes to make trees and the accuracy is paramount. When there are fewer trees,
    the interpretability is difficult compared to a single decision tree. You should
    avoid using random forests if interpretability is important because if there are
    too many trees, the models are quite large and can take a lot of memory during
    training and prediction. Hence, resource-limited environments may not be able
    to use random forests. The next section will explain the prediction of bird species
    using random forests.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当属性足够多以构建树且准确性至关重要时，我们应该考虑使用随机森林。当树的数量较少时，与单一决策树相比，模型的可解释性较差。如果可解释性很重要，应该避免使用随机森林，因为如果树的数量过多，模型会非常庞大，并且在训练和预测过程中可能需要大量内存。因此，资源有限的环境可能无法使用随机森林。接下来的部分将解释如何使用随机森林预测鸟类物种。
- en: Predicting bird species with random forests
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用随机森林预测鸟类物种
- en: Here we will be using random forests to predict a bird's species. We will use
    the Caltech-UC San Diego dataset ([http://www.vision.caltech.edu/visipedia/CUB-200-2011.html](http://www.vision.caltech.edu/visipedia/CUB-200-2011.html)),
    which contains about 12,000 photos of birds from 200 different species. Here we
    are not going to look at the pictures because that would need a **convolutional
    neural network** (**CNN**) and this will be covered in later chapters. CNNs can
    handle pictures much better than a random forest. Instead, we will be using attributes
    of the birds such as size, shape, and color.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将使用随机森林来预测鸟类的物种。我们将使用加州理工学院和加州大学圣地亚哥分校的数据集（[http://www.vision.caltech.edu/visipedia/CUB-200-2011.html](http://www.vision.caltech.edu/visipedia/CUB-200-2011.html)），其中包含来自200种不同鸟类的大约12,000张照片。在这里，我们不会查看图片，因为那需要用到**卷积神经网络**（**CNN**），这将在后续章节中讲解。CNN可以比随机森林更好地处理图片。相反，我们将使用鸟类的属性，如大小、形状和颜色。
- en: 'Here are just some of the species in the dataset:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是数据集中的一些物种：
- en: '![](img/00033.jpeg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00033.jpeg)'
- en: Some, such as the **American Crow** and the **Fish Crow**, are almost indistinguishable,
    at least visually. The attributes for each photo, such as color and size, have
    actually been labeled by humans. Caltech and UCSD used human workers on Amazon's
    Mechanical Turk to label the dataset. Researchers often use Mechanical Turk, which
    is a website service in which a person gets paid a tiny amount of money for each
    photo they label to improve the dataset using human insight rather than machine
    predictions.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一些鸟类，例如**美洲乌鸦**和**鱼乌鸦**，几乎无法区分，至少从视觉上看是这样的。每张照片的属性，如颜色和大小，实际上是由人类标注的。加州理工学院和加州大学圣地亚哥分校使用了亚马逊机械土耳其平台的人工劳动力来标注这个数据集。研究人员通常使用机械土耳其平台，这是一个网站服务，用户每标注一张照片就能获得少量报酬，用以通过人类的直觉而非机器预测来改善数据集。
- en: If you have your own dataset that needs lots of human-provided labels, you might
    consider spending some money on Mechanical Turk to complete that task.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有自己的数据集，需要大量人工标注，或许可以考虑花钱通过机械土耳其平台来完成这个任务。
- en: 'Here''s an example of a single photo and its labels:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是单张照片及其标签的示例：
- en: '![](img/00034.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00034.jpeg)'
- en: http://www.vision.caltech.edu/visipedia-data/CUB-200-2011/browse/Summer_Tanager.html
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[夏季山雀的页面](http://www.vision.caltech.edu/visipedia-data/CUB-200-2011/browse/Summer_Tanager.html)'
- en: We can see that the Summer Tanager is marked as having a red throat, a solid
    belly pattern, a perching-like shape, and so on. The dataset includes information
    about how long it took each person to decide on the labels and how confident the
    person is with their decisions, but we're not going to use that information.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，夏季山雀被标记为拥有红色喉部、固态腹部花纹、栖息形态等特征。数据集还包括每个人决定标签所花的时间以及他们对标签决定的信心，但我们暂时不打算使用这些信息。
- en: 'The data is split into several files. We''ll discuss those files before jumping
    into the code:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 数据被分割成多个文件。在进入代码之前，我们将讨论这些文件：
- en: '![](img/00035.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00035.jpeg)'
- en: The `classes.txt` file shows class IDs with the bird species names. The `images.txt`
    file shows image IDs and filenames. The species for each photo is given in the
    `image_class_labels.txt` file, which connects the class IDs with the image IDs.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`classes.txt`文件显示了带有鸟类物种名称的类ID。`images.txt`文件显示了图像ID和文件名。每张照片的物种信息存储在`image_class_labels.txt`文件中，该文件将类ID与图像ID关联。'
- en: 'The `attributes.txt` file gives the name of each attribute, which ultimately
    is not going to be that important to us. We''re only going to need the attribute
    IDs:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`attributes.txt`文件列出了每个属性的名称，这对于我们来说最终并不是很重要。我们只需要属性的ID：'
- en: '![](img/00036.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00036.jpeg)'
- en: 'Finally, the most important file is `image_attribute_labels.txt`:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的文件是`image_attribute_labels.txt`：
- en: '![](img/00037.jpeg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00037.jpeg)'
- en: It connects each image with its attributes in a binary value that's either present
    or absent for that attribute. Users on Mechanical Turk produced each row in this
    file.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 它通过二进制值将每个图像与其属性连接起来，该值表示该属性是否存在。每行数据由机械土耳其平台的用户生成。
- en: 'Now, let''s look at the code:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一下代码：
- en: '![](img/00038.gif)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00038.gif)'
- en: We will first load the CSV file with all the image attribute labels.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先加载包含所有图像属性标签的CSV文件。
- en: 'Here are few things that need to be noted:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意以下几点：
- en: Space separation for all the values
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有值都以空格分隔
- en: No header column or row
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有标题列或行
- en: Ignore the messages or warnings, such as `error_bad_lines= False` and `warn_bad_lines=
    False`
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 忽略诸如`error_bad_lines= False`和`warn_bad_lines= False`的消息或警告。
- en: Use columns `0`, `1`, and `2`, which have the image ID, the attribute ID, and
    the present or non-present value
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用列`0`、`1`和`2`，它们分别是图像ID、属性ID，以及存在或不存在的值。
- en: You don't need to worry about the attributes and the time taken to select them.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要担心选择属性的过程和所花费的时间。
- en: 'Here, at the top of that dataset:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据集的顶部是这样的：
- en: '![](img/00039.gif)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00039.gif)'
- en: Image ID number 1 does not have attributes 1, 2, 3, or 4, but it does have attribute
    5.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图像ID为1的图像没有属性1、2、3或4，但它有属性5。
- en: 'The shape will tell us how many rows and columns we have:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 形状将告诉我们有多少行和列：
- en: '![](img/00040.gif)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00040.gif)'
- en: It has 3.7 million rows and three columns. This is not the actual formula that
    you want. You want attributes to be the columns, not rows.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 它有370万行和三列。这不是你想要的实际公式。你希望属性是列，而不是行。
- en: '![](img/00041.gif)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00041.gif)'
- en: 'Therefore, we have to use pivot, just like Excel has a pivot method:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们必须使用透视操作，就像Excel中的透视方法一样：
- en: Pivot on the image ID and make one row for each image ID. There will be only
    one row for image number one.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对图像ID进行透视操作，为每个图像ID创建一行。图像1将只有一行数据。
- en: Turn the attributes into distinct columns, and the values will be ones or twos.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将属性转化为独立的列，值将是1或2。
- en: 'We can now see that each image ID is just one row and each attribute is its
    own column, and we have the ones and the twos:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以看到每个图像ID只有一行，每个属性都有一个单独的列，值为1和2：
- en: '![](img/00042.gif)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00042.gif)'
- en: 'Let''s feed this data into a random forest. In the previous example, we have
    312 columns and 312 attributes, which is ultimately about 12,000 images or 12,000
    different examples of birds:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将这些数据输入到随机森林中。在之前的示例中，我们有312列和312个属性，最终大约有12,000张图像或12,000个不同的鸟类示例：
- en: '![](img/00043.gif)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00043.gif)'
- en: 'Now, we need to load the answers, such as whether it''s a bird and which species
    it is. Since it is an image class labels file, the separators are spaces. There
    is no header row and the two columns are `imgid` and `label`. We will be using `set_index(''imgid'')`
    to have the same result produced by `imgatt2.head()`, where the rows are identified
    by the image ID:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要加载答案，比如它是否是鸟类，属于哪个物种。由于这是一个图像分类标签文件，分隔符是空格。没有标题行，两个列分别是`imgid`和`label`。我们将使用`set_index('imgid')`，以便产生与`imgatt2.head()`相同的结果，其中行由图像ID标识：
- en: '![](img/00044.gif)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00044.gif)'
- en: 'Here''s what it looks like:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 它的样子如下：
- en: '![](img/00045.gif)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00045.gif)'
- en: 'The `imgid` column has `1`, `2`, `3`, `4`, and `5`, all are labeled as `1`.
    They''re all albatrossed at the top of the file. As seen, there are about 12,000
    rows, which is perfect:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`imgid`列的值为`1`、`2`、`3`、`4`和`5`，它们都标记为`1`。它们都位于文件的顶部。如所见，大约有12,000行数据，这样的规模非常合适：'
- en: '![](img/00046.gif)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00046.gif)'
- en: This is the same number as the attributes data. We will be using join.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这与属性数据的数量相同。我们将使用连接操作。
- en: In the join, we will use the index on the image ID to join the two data frames.
    Effectively, what we're going to get is that the label is stuck on as the last
    column.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在连接过程中，我们将使用图像ID的索引来连接两个数据框。实际上，我们将获得的是标签被附加为最后一列。
- en: 'We will be now shuffling and then be splitting off the attributes. In other
    words, we want to drop the label from the label. So, here are the attributes,
    with the first 312 columns and the last column being a label:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将进行洗牌，然后分离出属性。换句话说，我们想从标签中去除标签。所以，这里是属性，前312列和最后一列是标签：
- en: '![](img/00047.gif)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00047.gif)'
- en: After shuffling, we have the first row as image 527, the second row as image
    1532, and so forth. The attributes in the label data are in agreement. On the
    first row, it's image 527, which is the number 10\. You will not know which bird
    it is, but it's of the kind, and these are its attributes. But it is finally in
    the right form. We need to do a training test split.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 洗牌后，第一行是图像527，第二行是图像1532，以此类推。标签数据中的属性一致。在第一行，它是图像527，对应的是编号10。你不知道它是哪种鸟，但它属于某个类别，并且有这些属性。最终，它已经是正确的格式。我们需要进行训练和测试集划分。
- en: 'There were 12,000 rows, so let''s take the first 8,000 and call them training,
    and the call rest of them testing (4,000). We''ll get the answers using `RandomForestClassifier`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有12,000行数据，所以我们取前8,000行作为训练集，剩下的4,000行作为测试集。我们将使用`RandomForestClassifier`来获取答案：
- en: '![](img/00048.gif)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00048.gif)'
- en: Max features show the number of different columns each tree can look at.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最大特征显示每棵树可以查看的不同列的数量。
- en: For an instance, if we say something like, *look at two attributes*, that's
    probably not enough to actually figure out which bird it is. Some birds are unique,
    so you might need a lot more attributes. Later if we say `max_features=50` and
    the number of estimators denote the number of trees created. The fit actually
    builds it.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 比如说，*看两个属性*，这可能不足以真正搞清楚是哪只鸟。有些鸟类是独特的，因此可能需要更多的属性。稍后如果我们设置`max_features=50`，而估算器的数量表示创建的树的数量。实际的拟合过程会建立它。
- en: '![](img/00049.gif)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00049.gif)'
- en: 'Let''s predict a few cases. Let''s use attributes from the first five rows
    of the training set, which will predict species 10, 28, 156, 10, and 43\. After
    testing, we get 44% accuracy:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们预测几个案例。我们将使用训练集前五行的属性，预测物种编号10、28、156、10和43。经过测试，我们得到了44%的准确率：
- en: '![](img/00050.gif)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00050.gif)'
- en: Even 44% accuracy is not the best result. There are 200 species, so having 0.5%
    accuracy is much better than randomly guessing.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是44%的准确率也不是最好的结果。毕竟有200个物种，因此0.5%的准确率比随便猜测要好得多。
- en: Making a confusion matrix for the data
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为数据制作混淆矩阵
- en: 'Let''s make a confusion matrix to see which birds the dataset confuses. The
    `confusion_matrix` function from scikit-learn will produce the matrix, but it''s
    a pretty big matrix:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们制作一个混淆矩阵，看看数据集混淆了哪些鸟类。来自scikit-learn的`confusion_matrix`函数将生成矩阵，但它是一个相当大的矩阵：
- en: '![](img/00051.gif)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00051.gif)'
- en: Two hundred by two hundred is not easy to understand in a numeric form like
    this.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 200乘200这种数字形式不太容易理解。
- en: 'Here''s some code from the scikit-learn documentation that allows us to plot
    the matrix and the color in the matrix:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些来自scikit-learn文档的代码，它可以帮助我们绘制矩阵并在矩阵中加上颜色：
- en: '![](img/00052.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00052.jpeg)'
- en: 'We will need the actual names of the birds on the matrix so that we know the
    species that are being confused for each other. So, let''s load the classes file:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要矩阵中鸟类的实际名称，以便知道哪些物种彼此之间产生了混淆。因此，让我们加载类别文件：
- en: '![](img/00053.gif)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00053.gif)'
- en: 'Plot the matrix. This is the confusion matrix for this dataset:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制矩阵。这是该数据集的混淆矩阵：
- en: '![](img/00054.gif)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00054.gif)'
- en: 'The output looks like the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![](img/00055.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00055.jpeg)'
- en: 'The output is unreadable because there are 200 rows and columns. But if we
    open it separately and then start zooming in, on the *y* axis you will see the
    actual birds, and on the *x* axis, you will see the predicted birds:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 输出是不可读的，因为有200行和200列。但如果我们单独打开它并开始放大，在*y*轴上你会看到实际的鸟类，在*x*轴上，你会看到预测的鸟类：
- en: '![](img/00056.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00056.jpeg)'
- en: 'For example, the common yellow throat is the true one. Looking at the following
    graph, we can see that the common yellow throat is confused with the black-footed
    albatross. When we zoom out, we will see the confusion:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，常见的黄喉是正确的。从下图可以看出，常见黄喉与黑脚信天翁被混淆。当我们放大时，可以看到这种混淆：
- en: '![](img/00057.jpeg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00057.jpeg)'
- en: It's like a square of confusion that was there between the common yellow throat
    and the black-footed albatross. Some features are terns, such as the arctic tern,
    black tern, Caspian tern, and the common tern. Terns are apparently easy to confuse
    because they look similar.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这就像是常见的黄喉和黑脚信天翁之间的混淆方块。有些特征是海鸥，例如北极海鸥、黑海鸥、里海海鸥和普通海鸥。海鸥显然很容易混淆，因为它们看起来相似。
- en: 'This set is a little bit confused too:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这个集数据也有些混淆：
- en: '![](img/00058.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00058.jpeg)'
- en: This is the set regarding sparrows. The confusion matrix tells us the things
    that we expect, that is, birds that look similar are confused with each other.
    There are little squares of confusion, as seen in the previous screenshot.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这是关于麻雀的数据集。混淆矩阵告诉我们我们预期的结果，即，看起来相似的鸟类会互相混淆。正如之前的截图所见，这里有一些混淆的小方块。
- en: For the most part, you don't want to confuse an albatross with a common yellow
    throat because this means that the dataset doesn't know with what it's doing.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，你不希望把信天翁和常见黄喉混淆，因为这意味着数据集根本不知道自己在做什么。
- en: 'Since the bird''s names are sorted, lesser is the square of confusion. Let''s
    compare this with the simple decision tree:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 由于鸟类的名称已经排序，混淆的方块就较少。我们可以将其与简单的决策树进行比较：
- en: '![](img/00059.gif)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00059.gif)'
- en: 'Here, the accuracy is 27%, which is less than the previous 44% accuracy. Therefore,
    the decision tree is worse. If we use a **Support Vector Machine** (**SVM**),
    which is the neural network approach, the output is 29%:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的准确率是27%，低于之前44%的准确率。因此，决策树效果较差。如果我们使用**支持向量机**（**SVM**），也就是神经网络方法，输出为29%：
- en: '![](img/00060.gif)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00060.gif)'
- en: The random forest is still better.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 随机森林仍然更好。
- en: 'Let''s perform cross-validation to make sure that we split the training test
    in different ways. The output is still 44% for the random forest, 25% for our
    decision tree, and 27% for SVM, as shown in the following screenshot:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们进行交叉验证，以确保我们以不同的方式划分训练集和测试集。输出结果仍然是随机森林为44%，决策树为25%，SVM为27%，如下图所示：
- en: '![](img/00061.jpeg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00061.jpeg)'
- en: The best results are reflected through random forests since we had some options
    and questions with random forests.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 随机森林表现最优，因为我们在随机森林中有一些选项和问题。
- en: 'For example, how many different questions can each tree ask? How many attributes
    does it look at, and how many trees are there? Well, there are a lot of parameters
    to look through, so let''s just make a loop and try them all:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，每棵树能问多少个不同的问题？它查看多少个属性，又有多少棵树？嗯，有很多参数需要查看，所以我们不妨做个循环，把它们都试一遍：
- en: '![](img/00062.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00062.jpeg)'
- en: 'These are all the accuracies, but it would be better to visualize this in a
    graph, as shown here:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是所有的准确率，但最好通过图表来可视化，如下所示：
- en: '![](img/00063.jpeg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00063.jpeg)'
- en: We can see that increasing the number of trees produces a better outcome. Also,
    increasing the number of features produces better outcomes if you are able to
    see more features, but ultimately, if you're at about 20 to 30 features and you
    have about 75 to 100 trees, that's about as good as you're going to get an accuracy
    of 45%.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，增加树的数量可以得到更好的结果。此外，如果能够查看更多的特征，增加特征数量也能带来更好的结果，但最终，如果特征数量大约在20到30之间，树的数量在75到100棵之间，那时准确率大约能达到45%，这是你能得到的最佳结果。
- en: Summary
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about random forests and classify bird species .
    Later, we discussed the confusion matrix and different graphs that gave us output
    based on random trees, decision trees, and SVM.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了随机森林并对鸟类物种进行了分类。接着，我们讨论了混淆矩阵和不同的图表，这些图表基于随机树、决策树和SVM给出了结果。
- en: In the next chapter, we'll go look at comment classification using bag-of-words
    models and Word2Vec models.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨使用词袋模型和Word2Vec模型进行评论分类。
