- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Graph Deep Learning in Practice
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图神经网络在实践中的应用
- en: Having explored the theoretical aspects of graph deep learning in the previous
    chapters, now is a good time to get our hands dirty by diving into its practical
    applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章探讨了图深度学习的理论方面之后，现在是时候通过实际应用来深入了解它了。
- en: Social networks have become an integral part of our digital lives, generating
    vast amounts of data that can provide valuable insights into human behavior, relationships,
    and social dynamics. Graph deep learning offers powerful tools to analyze and
    extract meaningful information from these complex networks. In this chapter, we
    will explore practical applications of graph deep learning techniques to social
    network analysis using **PyTorch** **Geometric** ( **PyG** ).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 社交网络已经成为我们数字生活的一个重要部分，生成了大量数据，可以提供有价值的关于人类行为、关系和社会动态的见解。图深度学习提供了强大的工具，可以分析和提取这些复杂网络中的有意义信息。在本章中，我们将使用**PyTorch**
    **Geometric**（**PyG**）探讨图深度学习技术在社交网络分析中的实际应用。
- en: Here, we will focus on a hypothetical dataset representing a social network
    of university students. This example will demonstrate how graph-based machine
    learning can be applied to real-world scenarios, such as predicting user interests,
    recommending new connections, and identifying community structures.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将专注于一个假设的数据集，代表大学生的社交网络。这个示例将展示图机器学习如何应用于现实场景，比如预测用户兴趣、推荐新连接以及识别社区结构。
- en: 'Our dataset consists of the following elements:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数据集包含以下元素：
- en: '**Nodes** : Each node represents a student in the university.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点**：每个节点代表大学中的一个学生。'
- en: '**Edges** : Edges between nodes represent friendships or connections between
    students.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边缘**：节点之间的边表示学生之间的友谊或连接。'
- en: '**Node features** : Each student (node) has associated features, including
    the following:'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点特征**：每个学生（节点）都有相关特征，包括以下内容：'
- en: Age
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 年龄
- en: Year of study
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学年
- en: Academic major (encoded as a one-hot vector)
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学术专业（编码为独热向量）
- en: '**Node labels** : Each student is assigned to one of five interest groups,
    which we’ll use for our node classification task.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点标签**：每个学生被分配到五个兴趣组之一，我们将用这个进行节点分类任务。'
- en: 'Throughout this chapter, we will tackle two main tasks:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们将解决两个主要任务：
- en: '**Node classification** : We’ll predict student interests based on their features
    and connections within the network. This task demonstrates how **graph neural
    networks** ( **GNNs** ) can leverage both node attributes and network structure
    to make predictions about individual nodes.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点分类**：我们将基于学生的特征和网络中的连接来预测学生兴趣。此任务展示了**图神经网络**（**GNNs**）如何利用节点属性和网络结构来预测单个节点的情况。'
- en: '**Link prediction** : We’ll develop a model to recommend new friendships by
    predicting potential edges in the graph. This showcases how graph deep learning
    can be used for recommendation systems and network growth prediction.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**链接预测**：我们将开发一个模型，通过预测图中的潜在边缘来推荐新朋友。这展示了图深度学习如何应用于推荐系统和网络增长预测。'
- en: We’ll implement these tasks using state-of-the-art GNN architectures. Additionally,
    we’ll visualize our results to gain intuitive insights into the network structure
    and our model’s performance.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用最先进的GNN架构来实现这些任务。此外，我们将可视化我们的结果，以便直观地了解网络结构和模型的性能。
- en: By the end of this chapter, you’ll have a practical understanding of how to
    apply graph deep learning techniques to social network data, interpret the results,
    and adapt these methods to your own projects. While we use a synthetic dataset
    for demonstration, the techniques covered here can be readily applied to real-world
    social network data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将对如何将图深度学习技术应用于社交网络数据有实际的理解，能够解读结果，并将这些方法应用到自己的项目中。虽然我们使用合成数据集进行演示，但这里涉及的技术可以很容易地应用于现实世界的社交网络数据。
- en: 'Let’s begin our journey into the practical world of graph deep learning for
    social network analysis! We will be exploring the following topics at length:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始进入图深度学习在社交网络分析中的实际应用世界吧！我们将深入探索以下主题：
- en: Setting up the environment
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置环境
- en: Creating the graph dataset
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建图数据集
- en: Node classification – predicting student interests
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点分类 – 预测学生兴趣
- en: Link prediction – recommending new friendships
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 链接预测 – 推荐新朋友
- en: Setting up the environment
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置环境
- en: Before we dive into the implementation of our graph deep learning models, it’s
    crucial to set up our development environment with the necessary libraries and
    tools. In this section, we’ll cover the essential imports and explain their roles
    in our project.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入实现我们的图形深度学习模型之前，首先需要设置开发环境，安装必要的库和工具。在这一部分，我们将涵盖必需的导入，并解释它们在项目中的作用。
- en: 'First, let’s start by importing the required libraries:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们开始导入所需的库：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let’s break down these imports and their purposes:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解这些导入及其用途：
- en: '**torch** : The core PyTorch library used for tensor operations and building
    neural networks'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**torch** ：用于张量操作和构建神经网络的核心PyTorch库。'
- en: '**torch_geometric** : PyG, an extension library to PyTorch for deep learning
    on graphs and other irregular structures'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**torch_geometric** ：PyG，是一个针对图形和其他不规则结构的深度学习扩展库，基于PyTorch。'
- en: '**torch_geometric.data.Data** : A class used to create graph data objects in
    PyG that hold node features, edge indices, and labels'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**torch_geometric.data.Data** ：一个用于创建PyG中图形数据对象的类，包含节点特征、边索引和标签。'
- en: '**torch_geometric.nn.GCNConv** : The **graph convolutional network** ( **GCN**
    ) layer, used for node classification'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**torch_geometric.nn.GCNConv** ：**图卷积网络**（**GCN**）层，用于节点分类。'
- en: '**torch_geometric.nn.GAE** : The **graph autoencoder** ( **GAE** ), used for
    link prediction'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**torch_geometric.nn.GAE** ：**图自编码器**（**GAE**），用于链接预测。'
- en: '**torch_geometric.utils.train_test_split_edges** : A utility function that
    helps split the graph data for link prediction tasks'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**torch_geometric.utils.train_test_split_edges** ：一个实用函数，帮助拆分图形数据，用于链接预测任务。'
- en: '**torch_geometric.transforms.RandomLinkSplit** : A transform used to prepare
    the data for link prediction by splitting it into train, validation, and test
    sets'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**torch_geometric.transforms.RandomLinkSplit** ：一种用于通过将数据拆分为训练集、验证集和测试集来准备链接预测的变换。'
- en: '**sklearn.manifold.TSNE** : **t-Distributed Stochastic Neighbor Embedding**
    ( **t-SNE** ), used for dimensionality reduction when visualizing node embeddings'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sklearn.manifold.TSNE** ：**t-分布随机邻居嵌入**（**t-SNE**），用于在可视化节点嵌入时进行降维。'
- en: '**sklearn.cluster.KMeans** : Used for clustering node embeddings to identify
    social groups'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sklearn.cluster.KMeans** ：用于聚类节点嵌入，以识别社交群体。'
- en: '**matplotlib.pyplot** : A library used for creating visualizations of graphs
    and results'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**matplotlib.pyplot** ：用于创建图形和结果可视化的库。'
- en: '**networkx** : A library providing additional tools for working with graphs,
    used for some visualizations'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**networkx** ：提供额外工具用于处理图形的库，用于一些可视化。'
- en: 'Make sure you have all these libraries installed in your Python environment.
    You can install them using **pip** :'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在Python环境中安装了所有这些库。你可以使用**pip**进行安装：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Note that the installation of PyG ( **torch_geometric** ) might require additional
    steps depending on your system and CUDA version. Please refer to the official
    documentation for detailed installation instructions: [https://pytorch-geometric.readthedocs.io/en/latest/](https://pytorch-geometric.readthedocs.io/en/latest/)
    .'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，安装PyG（**torch_geometric**）可能需要根据您的系统和CUDA版本进行额外的步骤。请参考官方文档以获取详细的安装说明：[https://pytorch-geometric.readthedocs.io/en/latest/](https://pytorch-geometric.readthedocs.io/en/latest/)。
- en: With these libraries imported, we’re now ready to start working with our social
    network data and implementing our graph deep learning models.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 导入了这些库后，我们现在准备好开始使用我们的社交网络数据，并实现我们的图形深度学习模型。
- en: Creating the graph dataset
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建图形数据集
- en: The next step is to create a synthetic social network dataset to demonstrate
    our graph deep learning techniques. While real-world data would be ideal, using
    synthetic data allows us to focus on the implementation and understanding of the
    algorithms without the complexities of data acquisition and preprocessing.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是创建一个合成的社交网络数据集，以展示我们的图形深度学习技术。虽然真实世界的数据理想，但使用合成数据可以让我们专注于算法的实现和理解，而不必担心数据获取和预处理的复杂性。
- en: Here, we will create a social network dataset representing university students.
    The complete code can be found at [https://github.com/PacktPublishing/Applied-Deep-Learning-on-Graphs](https://github.com/PacktPublishing/Applied-Deep-Learning-on-Graphs)
    .
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将创建一个代表大学生的社交网络数据集。完整代码可以在[https://github.com/PacktPublishing/Applied-Deep-Learning-on-Graphs](https://github.com/PacktPublishing/Applied-Deep-Learning-on-Graphs)找到。
- en: Let’s break down this code and explain each part.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解这段代码，并解释每一部分。
- en: 'We set a random seed for reproducibility:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们设置一个随机种子以保证可复现性：
- en: '[PRE2]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This ensures that we generate the same “random” data each time we run the code.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这确保了每次运行代码时生成相同的“随机”数据。
- en: 'We define our dataset parameters:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们定义我们的数据集参数：
- en: '[PRE3]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**num_nodes** is the number of students (nodes) in our network.'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**num_nodes**是我们网络中学生（节点）的数量。'
- en: '**num_features** is the number of features for each student. We’re using 10
    features to represent age, year of study, and 8 possible academic majors.'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**num_features**是每个学生的特征数。我们使用10个特征来表示年龄、年级和8个可能的学术专业。'
- en: '**num_classes** is the number of different interest groups, which will be our
    target for node classification.'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**num_classes**是不同兴趣组的数量，它将作为我们进行节点分类的目标。'
- en: 'We create node features ( **x** ) using **torch.randn()** :'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用**torch.randn()**创建节点特征（**x**）：
- en: '[PRE4]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This generates a tensor of size **(num_nodes, num_features)** filled with random
    values from a standard normal distribution. In a real dataset, these features
    would be actual attributes of the students.
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这生成了一个大小为**(num_nodes, num_features)**的张量，填充了来自标准正态分布的随机值。在实际的数据集中，这些特征将是学生的实际属性。
- en: 'We create edges ( **edge_index** ) using **torch.randint()** :'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用**torch.randint()**创建边（**edge_index**）：
- en: '[PRE5]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This generates 5,000 random edges between nodes. The **edge_index** tensor has
    the shape **(2, 5000)** , where each column represents an edge with **[** **source_node,
    target_node]** .
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将在节点之间生成5,000个随机边。**edge_index**张量的形状为**(2, 5000)**，其中每一列表示一条边，格式为**[源节点，目标节点]**。
- en: 'We create node labels ( **y** ) using **torch.randint()** :'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用**torch.randint()**创建节点标签（**y**）：
- en: '[PRE6]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This assigns each node (student) to one of the five interest groups randomly.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将每个节点（学生）随机分配到五个兴趣组中的一个。
- en: 'We create a PyG **Data** object, which efficiently holds our graph data. We
    pass in our node features ( **x** ), edge indices ( **edge_index** ), and node
    labels ( **y** ):'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们创建一个PyG的**Data**对象，它有效地存储我们的图数据。我们传入节点特征（**x**）、边索引（**edge_index**）和节点标签（**y**）：
- en: '[PRE7]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Finally, we print some information about our dataset to verify its structure:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们打印一些关于数据集的信息，以验证其结构：
- en: '[PRE8]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This synthetic dataset now represents a social network:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这个合成数据集现在代表了一个社交网络：
- en: Each *node* is a student with 10 features (representing attributes such as age,
    year, and major).
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个*node*都是一个拥有10个特征（表示年龄、年级和专业等属性）的学生。
- en: '*Edges* represent friendships between students.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Edges*代表学生之间的友谊。'
- en: Each student belongs to one of five interest groups.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个学生属于五个兴趣组中的一个。
- en: 'The output of the code will be as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的输出将如下所示：
- en: '[PRE9]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In a real-world scenario, you would typically load your data from files or databases
    and preprocess it to fit this structure. The **Data** object we’ve created is
    now ready to be used with PyG’s GNN models.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际的场景中，你通常会从文件或数据库中加载数据并进行预处理，以适应这种结构。我们创建的**Data**对象现在可以与PyG的GNN模型一起使用。
- en: In the next sections, we’ll use this dataset to perform node classification,
    link prediction, and graph clustering tasks.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将使用这个数据集执行节点分类、链路预测和图聚类任务。
- en: Node classification – predicting student interests
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 节点分类——预测学生兴趣
- en: In this section, we’ll implement a GCN to predict student interests based on
    their features and connections in the social network. This task demonstrates how
    GNNs can leverage both node attributes and network structure to make predictions
    about individual nodes.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将实现一个GCN，以根据学生的特征和社交网络中的连接预测学生的兴趣。这个任务展示了GNN如何利用节点属性和网络结构来做出关于单个节点的预测。
- en: 'Let’s start by defining our GCN model:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从定义我们的GCN模型开始：
- en: '[PRE10]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As you can see, our GCN model consists of two graph convolutional layers. The
    first layer takes the input features and produces hidden representations, while
    the second layer produces the final class predictions.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们的GCN模型由两个图卷积层组成。第一个层接收输入特征并生成隐藏表示，而第二个层则生成最终的类别预测。
- en: 'Now, let’s train the model. You can view the complete code at [https://github.com/PacktPublishing/Applied-Deep-Learning-on-Graphs](https://github.com/PacktPublishing/Applied-Deep-Learning-on-Graphs)
    . Let’s break down the training process here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来训练模型。你可以在[https://github.com/PacktPublishing/Applied-Deep-Learning-on-Graphs](https://github.com/PacktPublishing/Applied-Deep-Learning-on-Graphs)查看完整的代码。我们来分解训练过程：
- en: 'We define an optimizer ( **Adam** ) and a loss function ( **CrossEntropyLoss**
    ) for training our model:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们定义了一个优化器（**Adam**）和一个损失函数（**CrossEntropyLoss**）来训练我们的模型：
- en: '[PRE11]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The **train()** function performs one step of training:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**train()**函数执行训练的一个步骤：'
- en: '[PRE12]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: It sets the model to training mode.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它将模型设置为训练模式。
- en: It computes the forward pass of the model.
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它计算模型的前向传播。
- en: It calculates the loss between predictions and true labels.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它计算预测结果与真实标签之间的损失。
- en: It performs backpropagation and updates the model parameters.
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它执行反向传播并更新模型参数。
- en: 'The **test()** function evaluates the model’s performance:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**test()**函数评估模型的性能：'
- en: '[PRE13]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: It sets the model to evaluation mode.
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它将模型设置为评估模式。
- en: It computes the forward pass.
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它计算前向传播。
- en: It calculates the accuracy of predictions.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它计算预测的准确性。
- en: 'We train the model for **200** epochs, printing the loss and accuracy every
    **10** epochs:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们训练模型**200**个周期，每**10**个周期打印一次损失和准确性：
- en: '[PRE14]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Finally, we evaluate the model one last time to get the final accuracy:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们再次评估模型，以获得最终的准确性：
- en: '[PRE15]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To visualize how well our model is performing, let’s create a function to plot
    the predicted versus true interest groups:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为了可视化我们的模型表现如何，让我们创建一个函数来绘制预测的兴趣组与真实兴趣组的对比：
- en: '[PRE16]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This function creates two scatter plots: one showing the true interest groups
    and another showing the predicted interest groups.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数创建两个散点图：一个显示真实的兴趣组，另一个显示预测的兴趣组。
- en: '![Figure 7.1: Model performance: true versus predicted interests](img/B22118_07_1.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.1：模型性能：真实兴趣与预测兴趣](img/B22118_07_1.jpg)'
- en: 'Figure 7.1: Model performance: true versus predicted interests'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1：模型性能：真实兴趣与预测兴趣
- en: In *Figure 7* *.1* , each point represents a student, positioned based on their
    first two features. The visualization consists of two scatter plots labeled **True
    Interests** and **Predicted Interests** . Each point in these plots represents
    one of the students. The colors in both plots, ranging from purple ( **0.0** )
    to yellow ( **4.0** ), indicate different interest groups. The left plot shows
    the actual or “true” interest groups of the students, while the right plot displays
    the model’s predictions of these interest groups. The similarity between the distributions
    conveys the effectiveness of graph learning techniques in such predictions.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图 7.1*中，每个点代表一个学生，基于他们的前两个特征进行定位。可视化包括两个散点图，分别标记为**真实兴趣**和**预测兴趣**。这些图中的每个点都代表一个学生。这些图中的颜色从紫色（**0.0**）到黄色（**4.0**），表示不同的兴趣组。左图显示了学生的实际或“真实”兴趣组，而右图展示了模型对这些兴趣组的预测。这些分布之间的相似性传达了图学习技术在此类预测中的有效性。
- en: In a real-world application, this node classification task could be used to
    predict student interests based on their profile information and social connections.
    This could be valuable for personalized content recommendations, targeted advertising,
    or improving student engagement in university activities.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际应用中，这个节点分类任务可以用于根据学生的个人信息和社交连接预测他们的兴趣。这对于个性化内容推荐、定向广告或提升学生在大学活动中的参与度具有重要价值。
- en: Remember that while our synthetic dataset provides a clean example, real-world
    data often requires more preprocessing, handling of missing values, and careful
    consideration of privacy and ethical concerns when working with personal data.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，虽然我们的合成数据集提供了一个干净的示例，现实世界中的数据往往需要更多的预处理、处理缺失值，并且在处理个人数据时需要仔细考虑隐私和伦理问题。
- en: Another aspect of graph learning is the task of link prediction. This comes
    up in a lot of real-world scenarios, especially ones where we are trying to predict
    certain connections.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图学习的另一个方面是链路预测任务。这在许多现实场景中都会出现，特别是在我们尝试预测某些连接的情况下。
- en: Link prediction – recommending new friendships
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 链路预测——推荐新朋友关系
- en: In this section, we’ll implement a GAE for link prediction. This task aims to
    predict potential new connections in the network, which can be used to recommend
    new friendships among students.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将实现一个用于链路预测的GAE。该任务旨在预测网络中的潜在新连接，可用于推荐学生之间的新朋友关系。
- en: 'First, let’s define our GAE model:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们定义我们的GAE模型：
- en: '[PRE17]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Our **LinkPredictor** model uses a GCN layer for encoding node features into
    embeddings, and a simple dot product operation for decoding ( predicting links).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的**LinkPredictor**模型使用GCN层将节点特征编码为嵌入，并使用简单的点积操作进行解码（预测链接）。
- en: 'Now, let’s prepare our data for link prediction using the following code:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用以下代码为链路预测准备数据：
- en: '[PRE18]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The **RandomLinkSplit** transform splits our graph into training, validation,
    and test sets for link prediction. It removes some edges for validation and testing
    and generates negative samples ( non-existent edges).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**RandomLinkSplit**变换将我们的图分成训练集、验证集和测试集，用于链路预测。它删除一些边以进行验证和测试，并生成负样本（不存在的边）。'
- en: 'Now, let’s define our training and evaluation functions:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们定义训练和评估函数：
- en: 'Initialize the training process, prepare the optimizer, and encode the input
    data:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化训练过程，准备优化器，并对输入数据进行编码：
- en: '[PRE19]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now, we define positive edges and generate negative edges for training:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们定义正向边并为训练生成负向边：
- en: '[PRE20]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Combine positive and negative edges and create corresponding labels:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 结合正向和负向边并创建相应的标签：
- en: '[PRE21]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The model makes predictions, calculates the loss, performs backpropagation,
    and updates the model parameters:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 模型进行预测，计算损失，执行反向传播，并更新模型参数：
- en: '[PRE22]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This begins the testing function, setting the model to evaluation mode and
    making predictions without gradient calculation:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这开始了测试函数，设置模型为评估模式，并在没有梯度计算的情况下进行预测：
- en: '[PRE23]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Finally, we convert the predictions to NumPy arrays and calculate the **Area
    Under the Receiver Operating Characteristic Curve** ( **ROC AUC)** score to evaluate
    the model’s performance:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将预测结果转换为NumPy数组，并计算**接收者操作特征曲线下面积**（**ROC AUC**）得分，以评估模型的表现：
- en: '[PRE24]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now, let’s write the training and prediction modules:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们编写训练和预测模块：
- en: 'We train the model for **100** epochs, printing the loss and validation AUC
    every **10** epochs:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们训练模型 **100** 轮，每 **10** 轮打印一次损失和验证AUC：
- en: '[PRE25]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The **train_link_predictor()** function encodes the node features, predicts
    links for both positive and negative samples, and computes the binary cross-entropy
    loss.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**train_link_predictor()** 函数编码节点特征，预测正负样本的链接，并计算二元交叉熵损失。'
- en: 'The **test_link_predictor()** function evaluates the model’s performance using
    the AUC metric:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**test_link_predictor()** 函数使用AUC指标评估模型的性能：'
- en: '[PRE26]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Finally, we evaluate the model on the test set to get the final AUC score:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们在测试集上评估模型，得到最终的AUC评分：
- en: '[PRE27]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Here is the code output:'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里是代码输出：
- en: '[PRE28]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'To demonstrate how we can use this model to recommend new friendships, let’s
    create a function that predicts the most likely new connections for a given student:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示我们如何使用这个模型推荐新的友谊关系，我们创建一个函数，用于预测给定学生最可能的新连接：
- en: 'Define the function, set the model to evaluation mode, and encode the graph
    data:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义函数，设置模型为评估模式，并编码图数据：
- en: '[PRE29]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Here, we create an edge index for all possible connections between the given
    student and other students:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里，我们为给定学生与其他学生之间的所有可能连接创建一个边索引：
- en: '[PRE30]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'This code predicts scores for all possible connections and selects the top
    *k* recommendations based on these scores:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这段代码为所有可能的连接预测分数，并根据这些分数选择前 *k* 个推荐：
- en: '[PRE31]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Finally, the function returns the recommended friends and their corresponding
    scores, as you can see in the following example:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，函数返回推荐的朋友及其相应的分数，以下是一个示例：
- en: '[PRE32]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The code output is as follows:'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 代码输出如下：
- en: '[PRE33]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: This **recommend_friends** function takes a student ID and returns the top *k*
    recommended new connections based on the link prediction model.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 **recommend_friends** 函数接受学生ID，并基于链接预测模型返回前 *k* 个推荐的新连接。
- en: In a real-world application, this link prediction model could be used to power
    a friend recommendation system in a university’s social network platform. It could
    help students expand their social circles based on shared characteristics and
    network structure.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际应用中，这个链接预测模型可以用于为大学社交网络平台提供好友推荐系统。它可以帮助学生根据共享的特征和网络结构扩展他们的社交圈。
- en: The link prediction model’s applications extend far beyond just university social
    networks, encompassing diverse domains such as professional networking platforms
    such as LinkedIn for career connections and business collaborations, academic
    research networks for finding potential co-authors and research partners, business
    applications for supply chain partner matching and B2B networking, healthcare
    networks for patient referrals and provider collaborations, community building
    through interest-based group recommendations and event participant matching, and
    content recommendation systems for discovering similar resources and expert-content
    matching. These applications demonstrate the model’s versatility in enhancing
    connectivity and collaboration opportunities across various sectors and use cases.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 链接预测模型的应用远不止大学社交网络，它还涵盖了多个领域，例如职业社交平台（如LinkedIn）用于职业连接和商业合作，学术研究网络用于寻找潜在的合著者和研究伙伴，商业应用用于供应链伙伴匹配和B2B网络，医疗保健网络用于患者转诊和提供者合作，通过兴趣小组推荐和活动参与者匹配来构建社区，以及内容推荐系统用于发现相似资源和专家内容匹配。这些应用展示了该模型在提升各行业和用例的连接性和合作机会方面的多功能性。
- en: Remember that when implementing such systems with real user data, it’s crucial
    to consider privacy implications and potentially incorporate additional factors
    (such as user preferences or mutual friends) into the recommendation algorithm.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在使用真实用户数据实现此类系统时，必须考虑隐私问题，并可能需要将其他因素（如用户偏好或共同朋友）纳入推荐算法中。
- en: Summary
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we covered the practical applications of graph deep learning
    in social network analysis using PyG. We focused on a hypothetical dataset representing
    a university student social network, demonstrating how graph-based machine learning
    can be applied to real-world scenarios.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们介绍了图深度学习在社交网络分析中的实际应用，使用了PyG（PyTorch Geometric）。我们聚焦于一个假设的数据集，代表了大学生社交网络，展示了如何将基于图的机器学习应用于实际场景。
- en: 'Together, we achieved two main tasks: node classification for predicting user
    interests and link prediction for recommending new connections. By following step-by-step
    instructions, you learned how to create a synthetic dataset, implement GCNs for
    node classification, and use GAEs for link prediction. We broke down our code
    into snippets in relation to data preparation, model training, evaluation, and
    visualization, allowing you to understand the practical aspects of applying graph
    deep learning techniques to social network data.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们共同完成了两个主要任务：节点分类用于预测用户兴趣，链接预测用于推荐新连接。通过逐步的指导，你学会了如何创建一个合成数据集，实现GCN（图卷积网络）进行节点分类，并使用GAE（图自编码器）进行链接预测。我们将代码分解成多个片段，涉及数据准备、模型训练、评估和可视化，帮助你理解将图深度学习技术应用于社交网络数据的实际操作。
- en: In the upcoming chapters, we will explore how graph deep learning is being applied
    to various domains, starting with natural language processing.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将探讨图深度学习在多个领域的应用，从自然语言处理开始。
