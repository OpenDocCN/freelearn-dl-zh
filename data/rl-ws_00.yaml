- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: About the Book
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于本书
- en: Various intelligent applications such as video games, inventory management software,
    warehouse robots, and translation tools use **Reinforcement Learning** (**RL**)
    to make decisions and perform actions that maximize the probability of the desired
    outcome. This book will help you to get to grips with the techniques and the algorithms
    for implementing RL in your machine learning models.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 各种智能应用，如视频游戏、库存管理软件、仓库机器人和翻译工具，利用**强化学习**（**RL**）做出决策并执行动作，以最大化期望结果的概率。本书将帮助你掌握在机器学习模型中实现强化学习的技术和算法。
- en: Starting with an introduction to RL, you'll be guided through different RL environments
    and frameworks. You'll learn how to implement your own custom environments and
    use OpenAI baselines to run RL algorithms. Once you've explored classic RL techniques
    such as Dynamic Programming, Monte Carlo, and TD Learning, you'll understand when
    to apply the different deep learning methods in RL and advance to deep Q-learning.
    The book will even help you understand the different stages of machine-based problem-solving
    by using DARQN on a popular video game Breakout. Finally, you'll find out when
    to use a policy-based method to tackle an RL problem.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从强化学习的介绍开始，你将被引导了解不同的强化学习环境和框架。你将学习如何实现自己的自定义环境，并使用OpenAI基线运行强化学习算法。在你探索了经典的强化学习技术，如动态规划、蒙特卡洛方法和时序差分学习后，你将理解在强化学习中何时应用不同的深度学习方法，并进阶到深度Q学习。书中甚至会通过在热门视频游戏《Breakout》上使用DARQN，帮助你理解基于机器的问题解决不同阶段。最后，你将了解在何时使用基于策略的方法来解决强化学习问题。
- en: By the end of *The Reinforcement Learning Workshop*, you'll be equipped with
    the knowledge and skills needed to solve challenging machine learning problems
    using reinforcement learning.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 完成*强化学习工作坊*后，你将掌握利用强化学习解决具有挑战性的机器学习问题所需的知识和技能。
- en: Audience
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读者对象
- en: If you are a data scientist, machine learning enthusiast, or a Python developer
    who wants to learn basic to advanced deep reinforcement learning algorithms, this
    workshop is for you. A basic understanding of the Python language is necessary.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是数据科学家、机器学习爱好者，或者是想学习从基础到高级的深度强化学习算法的Python开发者，本工作坊适合你。需要具备基础的Python语言理解。
- en: About the Chapters
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于各章
- en: '*Chapter 1*, *Introduction to Reinforcement Learning*, introduces you to RL,
    which is one of the most exciting fields in machine learning and artificial intelligence.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*第1章*，*强化学习简介*，将带你了解强化学习，这是机器学习和人工智能中最令人兴奋的领域之一。'
- en: '*Chapter 2*, *Markov Decision Processes and Bellman Equations*, teaches you
    about Markov chains, Markov reward processes, and Markov decision processes. You
    will learn about state values and action values, as well as using the Bellman
    equation to calculate these quantities.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*第2章*，*马尔可夫决策过程与贝尔曼方程*，教你关于马尔可夫链、马尔可夫奖励过程和马尔可夫决策过程的知识。你将学习状态值和动作值，并使用贝尔曼方程计算这些量。'
- en: '*Chapter 3*, *Deep Learning in Practice with TensorFlow 2*, introduces you
    to TensorFlow and Keras, giving you an overview of their key features and applications
    and how they work in synergy.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*第3章*，*使用TensorFlow 2进行深度学习实践*，介绍了TensorFlow和Keras，概述了它们的关键特性、应用及其如何协同工作。'
- en: '*Chapter 4*, *Getting Started with OpenAI and TensorFlow for Reinforcement
    Learning*, sees you working with two popular OpenAI tools, Gym and Universe. You
    will learn how to formalize the interfaces of these environments, how to interact
    with them, and how to create a custom environment for a specific problem.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*第4章*，*开始使用OpenAI和TensorFlow进行强化学习*，带你了解两个流行的OpenAI工具，Gym和Universe。你将学习如何将这些环境的接口形式化，如何与它们交互，以及如何为特定问题创建自定义环境。'
- en: '*Chapter 5*, *Dynamic Programming*, teaches you how to use dynamic programming
    to solve problems in RL. You will learn about the concepts of policy evaluation,
    policy iteration, and value iteration, and see how to implement them.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*第5章*，*动态规划*，教你如何使用动态规划解决强化学习中的问题。你将学习策略评估、策略迭代和价值迭代的概念，并学习如何实现它们。'
- en: '*Chapter 6*, *Monte Carlo Methods,* teaches you how to implement the various
    types of Monte Carlo methods, including the "first visit" and "every visit" techniques.
    You will see how to use these Monte Carlo methods to solve the frozen lake problem.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*第6章*，*蒙特卡洛方法*，教你如何实现各种类型的蒙特卡洛方法，包括“首次访问”和“每次访问”技术。你将学习如何使用这些蒙特卡洛方法解决冰湖问题。'
- en: '*Chapter 7*, *Temporal Difference Learning*, prepares you to implement TD(0),
    SARSA, and TD(λ) Q-learning algorithms in both stochastic and deterministic environments.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 7 章*，*时序差分学习*，为你准备实现 TD(0)、SARSA 和 TD(λ) Q 学习算法，适用于随机和确定性环境。'
- en: '*Chapter 8*, *The Multi-Armed Bandit Problem*, introduces you to the popular
    multi-armed bandit problem and shows you some of the most commonly used algorithms
    to solve the problem.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 8 章*，*多臂老虎机问题*，介绍了流行的多臂老虎机问题，并展示了几种最常用的算法来解决该问题。'
- en: '*Chapter 9*, *What Is Deep Q-Learning?*, educates you on deep Q-learning and
    covers some hands-on implementations of advanced variants of deep Q-learning,
    such as double deep Q-learning, with PyTorch.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 9 章*，*什么是深度 Q 学习？*，向你讲解深度 Q 学习，并介绍一些深度 Q 学习的高级变体实现，如双重深度 Q 学习，使用 PyTorch
    实现。'
- en: '*Chapter 10*, *Playing an Atari Game with Deep Recurrent Q-Networks*, introduces
    you to **Deep Recurrent Q-Networks** and its variants. You will get hands-on experience
    in training RL agents to play an Atari game.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 10 章*，*使用深度循环 Q 网络玩 Atari 游戏*，介绍了 **深度循环 Q 网络** 及其变体。你将通过实际操作，训练强化学习代理程序来玩
    Atari 游戏。'
- en: '*Chapter 11*, *Policy-Based Methods for Reinforcement Learning*, teaches you
    how to implement different policy-based methods of RL, such as policy gradients,
    deep deterministic policy gradients, trust region policy optimization, and proximal
    policy optimization.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 11 章*，*基于策略的方法进行强化学习*，教你如何实现不同的强化学习策略方法，如策略梯度、深度确定性策略梯度、信任区域策略优化和近端策略优化。'
- en: '*Chapter 12*, *Evolutionary Strategies for RL*, combines evolutionary strategies
    with traditional machine learning methods, specifically in the selection of neural
    network hyperparameters. You will also identify the limitations of these evolutionary
    methods.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 12 章*，*进化策略与强化学习*，将进化策略与传统的机器学习方法结合，特别是在神经网络超参数选择方面。你还将识别这些进化方法的局限性。'
- en: Note
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The interactive version of *The Reinforcement Learning Workshop* contains a
    bonus chapter, *Recent Advancements* and *Next Steps*. This chapter teaches you
    novel methods of implementing reinforcement learning algorithms with an emphasis
    on areas of further exploration such as one-shot learning and transferable domain
    priors. You can find the interactive version here: [courses.packtpub.com](http://courses.packtpub.com).'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 《强化学习研讨会》的互动版本包含了一个额外章节，*近期进展* 和 *下一步*。本章教授了强化学习算法的新方法，重点探讨进一步探索的领域，如单次学习和可迁移的领域先验。你可以在这里找到互动版本：[courses.packtpub.com](http://courses.packtpub.com)。
- en: Conventions
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 约定
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "Recall
    that an algorithm class'' implementation needs two specific methods to interact
    with the bandit API, `decide()` and `update()`, the latter of which is simpler
    and is implemented."'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名称、文件名、文件扩展名、路径名、虚拟网址、用户输入和 Twitter 账号如下所示：“请记住，一个算法类的实现需要两个特定的方法与
    bandit API 进行交互，`decide()` 和 `update()`，后者更简单且已经实现。”
- en: 'Words that you see onscreen (for example, in menus or dialog boxes) also appear
    in the text like this: "The `DISTRIBUTIONS` tab provides an overview of how the
    model parameters are distributed across epochs."'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上显示的单词（例如，菜单或对话框中的内容）也以这种方式出现在文本中：“`DISTRIBUTIONS` 标签提供了模型参数在各个 epoch 之间如何分布的概述。”
- en: 'A block of code is set as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一段代码设置如下：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'New terms and important words are shown like this: "Its architecture allows
    users to run it on a wide variety of hardware, from CPUs to **Tensor Processing
    Units** (**TPUs**), including GPUs as well as mobile and embedded platforms."'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 新术语和重要单词以此方式显示：“它的架构允许用户在各种硬件上运行，从 CPU 到 **张量处理单元** (**TPUs**)，包括 GPU 以及移动和嵌入式平台。”
- en: Code Presentation
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码呈现
- en: Lines of code that span multiple lines are split using a backslash ( `\` ).
    When the code is executed, Python will ignore the backslash, and treat the code
    on the next line as a direct continuation of the current line.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 跨越多行的代码使用反斜杠 (`\`) 进行分割。当代码执行时，Python 会忽略反斜杠，并将下一行的代码视为当前行的直接延续。
- en: 'For example:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Comments are added into code to help explain specific bits of logic. Single-line
    comments are denoted using the `#` symbol, as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注释被添加到代码中，以帮助解释特定的逻辑部分。单行注释使用 `#` 符号表示，如下所示：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Multi-line comments are enclosed by triple quotes, as shown below:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 多行注释被三引号包围，如下所示：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Setting up Your Environment
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置你的环境
- en: Before we explore the book in detail, we need to set up specific software and
    tools. In the following section, we shall see how to do that.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们详细探索本书之前，需要先设置特定的软件和工具。在接下来的部分，我们将展示如何操作。
- en: Installing Anaconda for Jupyter Notebook
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为 Jupyter Notebook 安装 Anaconda
- en: Jupyter notebooks are available once you install Anaconda on your system. Anaconda
    can be installed on Windows systems using the steps available at [https://docs.anaconda.com/anaconda/install/windows/](https://docs.anaconda.com/anaconda/install/windows/).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Anaconda 后，你可以使用 Jupyter notebooks。可以按照 [https://docs.anaconda.com/anaconda/install/windows/](https://docs.anaconda.com/anaconda/install/windows/)
    上的步骤在 Windows 系统上安装 Anaconda。
- en: For other systems, navigate to the respective installation guide from [https://docs.anaconda.com/anaconda/install/](https://docs.anaconda.com/anaconda/install/).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他系统，请访问 [https://docs.anaconda.com/anaconda/install/](https://docs.anaconda.com/anaconda/install/)
    获取相应的安装指南。
- en: Installing a Virtual Environment
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装虚拟环境
- en: In general, it is good practice to use separate virtual environments when installing
    Python modules, to be sure that the dependencies of different projects do not
    conflict with one another. So, it is recommended that you adopt this approach
    before executing these instructions.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 通常来说，在安装 Python 模块时使用独立的虚拟环境是个好习惯，以确保不同项目的依赖项不会发生冲突。因此，建议你在执行这些指令之前采用这种方法。
- en: 'Since we are using Anaconda here, it is highly recommended that you use conda-based
    environment management. Run the following commands in Anaconda Prompt to create
    an environment and activate it:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在这里使用 Anaconda，强烈建议使用基于 conda 的环境管理。请在 Anaconda Prompt 中运行以下命令以创建并激活环境：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Installing Gym
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Gym
- en: 'To install Gym, please make sure you have Python 3.5+ installed on your system.
    You can simply install Gym using `pip`. Run the code in Anaconda Prompt, as shown
    in the following code snippet:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Gym，请确保你的系统中已安装 Python 3.5+。你可以通过 `pip` 简单地安装 Gym。按以下代码片段中的步骤在 Anaconda
    Prompt 中运行代码：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You can also build the Gym installation from source, by cloning the Gym Git
    repository directly. This type of installation proves useful when modifying Gym
    or adding environments if required. Use the following code to install Gym from
    source:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过直接克隆 Gym Git 仓库来从源代码构建 Gym 安装。当需要修改 Gym 或添加环境时，这种安装方式非常有用。使用以下代码从源代码安装
    Gym：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Run the following code to perform a full installation of Gym. This installation
    may need you to install other dependencies, which include `cmake` and a recent
    version of `pip`:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下代码以完成 Gym 的完整安装。此安装可能需要你安装其他依赖项，包括`cmake`和最新版本的`pip`：
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In *Chapter 11, Policy-Based Methods for Reinforcement Learning*, you will
    be working in the `Box2D` environment available in Gym. You can install the `Box2D`
    environment by using the following command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第 11 章，基于策略的强化学习方法*中，你将使用 Gym 中提供的 `Box2D` 环境。你可以通过以下命令安装 `Box2D` 环境：
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Installing TensorFlow 2
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 TensorFlow 2
- en: 'To install TensorFlow 2, run the following command in Anaconda Prompt:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 TensorFlow 2，请在 Anaconda Prompt 中运行以下命令：
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you are using a GPU, you can use the following command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用 GPU，可以使用以下命令：
- en: '[PRE10]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Installing PyTorch
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 PyTorch
- en: PyTorch can be installed on Windows using the steps available at [https://pytorch.org/](https://pytorch.org/).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 可以按照 [https://pytorch.org/](https://pytorch.org/) 上的步骤在 Windows 上安装 PyTorch。
- en: 'In the case of non-availability of a GPU on your system, you can install the
    CPU version of PyTorch by running the following code in Anaconda Prompt:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的系统没有 GPU，可以通过在 Anaconda Prompt 中运行以下代码安装 PyTorch 的 CPU 版本：
- en: '[PRE11]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Installing OpenAI Baselines
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 OpenAI Baselines
- en: OpenAI Baselines can be installed using the instructions at [https://github.com/openai/baselines](https://github.com/openai/baselines).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 可以按照 [https://github.com/openai/baselines](https://github.com/openai/baselines)
    上的说明安装 OpenAI Baselines。
- en: 'Download the OpenAI Baselines repository, check out the TensorFlow 2 branch,
    and install it as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 OpenAI Baselines 仓库，切换到 TensorFlow 2 分支，然后按照以下步骤安装：
- en: '[PRE12]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We use OpenAI Baselines in *Chapter 1, Introduction to Reinforcement Learning*,
    and *Chapter 4, Getting Started with OpenAI and TensorFlow* for Reinforcement
    Learning. As OpenAI Baselines uses a version of Gym that is not the latest version,
    `0.14`, you might get an error as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在*第1章 强化学习简介*和*第4章 与OpenAI及TensorFlow一起入门*中使用了OpenAI Baselines进行强化学习。由于OpenAI
    Baselines使用的Gym版本不是最新版本`0.14`，您可能会遇到如下错误：
- en: '[PRE13]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The solution to this bug is to change the two `env.entry_point` attributes in
    `baselines/run.py` back to `env._entry_point`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 解决此 bug 的方法是将`baselines/run.py`中的两个`env.entry_point`属性改回`env._entry_point`。
- en: The detailed solution is available at [https://github.com/openai/baselines/issues/977#issuecomment-518569750](https://github.com/openai/baselines/issues/977#issuecomment-518569750).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 详细的解决方案请参见[https://github.com/openai/baselines/issues/977#issuecomment-518569750](https://github.com/openai/baselines/issues/977#issuecomment-518569750)。
- en: 'Alternatively, you can also use the following command to upgrade the Gym installation
    in that environment:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，您也可以使用以下命令来升级该环境中的Gym安装：
- en: '[PRE14]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Installing Pillow
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Pillow
- en: 'Use the following command in Anaconda Prompt to install Pillow:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在Anaconda提示符中使用以下命令安装Pillow：
- en: '[PRE15]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Alternatively, you can also run the following command using `pip`:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，您也可以运行以下命令使用`pip`：
- en: '[PRE16]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You can read more about Pillow at [https://pypi.org/project/Pillow/2.2.1/](https://pypi.org/project/Pillow/2.2.1/).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://pypi.org/project/Pillow/2.2.1/](https://pypi.org/project/Pillow/2.2.1/)了解更多关于Pillow的信息。
- en: Installing Torch
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Torch
- en: 'Use the following command to install `torch` using `pip`:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令通过`pip`安装`torch`：
- en: '[PRE17]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note that you will be using version `0.4.1` of `torch` only in *Chapter 11,
    Policy-Based Methods for Reinforcement Learning*. You can revert to the updated
    version of PyTorch by using the command under the *Installing PyTorch* section
    for the other chapters.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您将只在*第11章 强化学习的基于策略的方法*中使用版本`0.4.1`的`torch`。对于其他章节，您可以通过*安装PyTorch*部分中的命令恢复到PyTorch的更新版本。
- en: Installing Other Libraries
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装其他库
- en: '`pip` comes pre-installed with Anaconda. Once Anaconda is installed on your
    machine, all the required libraries can be installed using `pip`, for example,
    `pip install numpy`. Alternatively, you can install all the required libraries
    using `pip install –r requirements.txt`. You can find the `requirements.txt` file
    at [https://packt.live/311jlIu](https://packt.live/311jlIu).'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip`在Anaconda中是预装的。安装好Anaconda后，所有必需的库可以通过`pip`安装，例如，`pip install numpy`。另外，您也可以使用`pip
    install –r requirements.txt`安装所有必需的库。您可以在[https://packt.live/311jlIu](https://packt.live/311jlIu)找到`requirements.txt`文件。'
- en: The exercises and activities will be executed in Jupyter Notebooks. Jupyter
    is a Python library and can be installed in the same way as the other Python libraries
    – that is, with `pip install jupyter`, but fortunately, it comes pre-installed
    with Anaconda. To open a notebook, simply run the command `jupyter notebook` in
    the Terminal or Command Prompt.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 练习和活动将通过Jupyter Notebook执行。Jupyter是一个Python库，可以像其他Python库一样安装——也就是使用`pip install
    jupyter`，但幸运的是，它已经预装在Anaconda中。要打开一个Notebook，只需在终端或命令提示符中运行命令`jupyter notebook`。
- en: Accessing the Code Files
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问代码文件
- en: You can find the complete code files of this book at [https://packt.live/2V1MwHi](https://packt.live/2V1MwHi).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://packt.live/2V1MwHi](https://packt.live/2V1MwHi)找到本书的完整代码文件。
- en: We've tried to support interactive versions of all activities and exercises,
    but we recommend a local installation as well for instances where this support
    isn't available.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们尽力为所有活动和练习提供互动版本的支持，但我们建议您也进行本地安装，以便在无法使用该支持时可以正常进行。
- en: If you have any issues or questions about installation, please email us at `workshops@packt.com`.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在安装过程中遇到任何问题或有任何疑问，请通过电子邮件联系我们：`workshops@packt.com`。
