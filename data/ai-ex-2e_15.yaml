- en: '15'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '15'
- en: Setting Up a Cognitive NLP UI/CUI Chatbot
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置一个认知NLP UI/CUI聊天机器人
- en: There are 300,000+ chatbots on Facebook alone. Adding another brick in that
    wall means next to nothing unless you give your chatbot a purpose and provide
    it with real content. Cognitive content represents the core goal of attracting
    more attention than your hundreds of thousands of competitors and SEO experts.
    We will put RBM-PCA chained algorithms to work in this chapter to bring a chatbot
    to another level. We will use the information provided by the RBM-PCA to design
    our dialog.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 仅Facebook上就有超过30万个聊天机器人。再加上一块砖石几乎毫无意义，除非你给你的聊天机器人一个目的，并为其提供真实的内容。认知内容代表了吸引比成千上万的竞争者和SEO专家更多注意力的核心目标。我们将在本章中使用RBM-PCA链式算法，使聊天机器人更上一层楼。我们将使用RBM-PCA提供的信息来设计我们的对话。
- en: As you will discover in this first section, creating an agent with Dialogflow
    and beginning a dialog represents no effort at all. Google Dialogflow provides
    the intuitive features to get a chatbot running in no time. The Dialogflow tutorial
    can guide you to reach this simple goal in a few minutes. Understanding what an agent
    is, teaching it to ask a question, and providing an answer can be done by a 10-year-old
    child. I experimented with this by letting a 5-year-old and a 9-year-old child
    loose on this software. They both did not even realize it was work. They were
    having fun!
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你将在第一部分中发现的那样，使用Dialogflow创建一个代理并开始一个对话几乎不需要任何努力。Google Dialogflow提供了直观的功能，可以在短时间内启动聊天机器人。Dialogflow的教程可以在几分钟内帮助你实现这个简单目标。理解什么是代理，教它提问并提供答案，这些都能由一个10岁的孩子完成。我通过让一个5岁和9岁的孩子使用这个软件进行了实验。他们甚至没有意识到这是一项工作，他们玩得很开心！
- en: On Dialogflow, you don't need to know how to program, and you don't need to
    be a linguist or any other kind of expert. So, what will your market differentiation
    be? *Content*. Your chatbot needs to have a purpose, with well-prepared content
    beyond asking and answering simple questions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dialogflow中，你不需要知道如何编程，也不需要是语言学家或其他任何类型的专家。那么，你的市场差异化会是什么呢？*内容*。你的聊天机器人需要有一个目的，提供精心准备的内容，而不仅仅是问答简单问题。
- en: Beyond creating your first dialog, the goal of this chapter will provide you
    with a sense of purpose and content that will help you produce meaningful chatbots.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 除了创建你的第一个对话框，本章的目标将为你提供一种目的感和内容，这将帮助你制作有意义的聊天机器人。
- en: That being said, let's create an agent together and a short dialog to illustrate
    both how to create a chatbot and also to provide meaningful content.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，让我们一起创建一个代理和一个简短的对话，以说明如何创建聊天机器人，同时也提供有意义的内容。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Creating a cognitive agent based on the preparation of *Chapter 14*, *Preparing
    the Input of Chatbots with Restricted Boltzmann Machines (RBMs) and Principal
    Component Analysis (PCA)*
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于*第14章*的准备工作，创建一个认知代理，*使用限制玻尔兹曼机（RBMs）和主成分分析（PCA）准备聊天机器人的输入*
- en: Learning the basic concepts of Dialogflow and chatbots in general
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习Dialogflow和聊天机器人的基本概念
- en: Deploying the chatbot on your website
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将聊天机器人部署到你的网站上
- en: We will start with basic concepts and then create an agent with entities, intents,
    dialogs, and a fulfillment function. We will be using the preparation established
    in the previous chapter. We will test its UI with spelling correction and dialogs.
    Then, we will test the chatbot's **conversational user interface** (**CUI**) capability
    by setting up machine learning speech recognition and speech functions.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从基本概念开始，然后创建一个包含实体、意图、对话和履行功能的代理。我们将使用上一章中建立的准备工作。我们将通过拼写修正和对话来测试其UI。然后，我们将通过设置机器学习语音识别和语音功能来测试聊天机器人的**对话用户界面**（**CUI**）能力。
- en: Basic concepts
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本概念
- en: Before creating an agent, we'll want to have an understanding of the basic concepts.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建代理之前，我们需要了解基本概念。
- en: This is not a Dialogflow course, but rather an introductory chapter to get us
    started on making our own NLP CUI chatbot. We'll begin by defining some key terms.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是一个Dialogflow课程，而是一个入门章节，帮助我们开始制作自己的NLP CUI聊天机器人。我们将从定义一些关键术语开始。
- en: Defining NLU
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义NLU
- en: '**NLU** means **natural language understanding**. NLU is a subset of **natural
    language processing** (**NLP**). Natural language refers to the everyday language
    we use without having to force ourselves to learn precise words in order to obtain
    information from a machine.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**NLU** 代表 **自然语言理解**。NLU 是 **自然语言处理**（**NLP**）的一个子集。自然语言指的是我们日常使用的语言，无需强迫自己学习准确的词汇来从机器中获取信息。'
- en: If we had to learn a dictionary of the only words that would work with a system,
    it would be easier just to read a text. NLP encompasses all forms of natural language
    processing including NLU. Through AI, NLU has become more involved in trying to understand
    what a given sentence means.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们必须学习一个仅包含能与系统兼容的词汇的字典，那么直接阅读文本会更容易。自然语言处理（NLP）涵盖了所有形式的自然语言处理，包括自然语言理解（NLU）。通过人工智能，NLU
    在尝试理解给定句子的意思方面变得更加深入。
- en: Why do we call chatbots "agents"?
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么我们称聊天机器人为“代理”？
- en: 'A chatbot entails a chat between at least two parties. In our case, the bot
    is an NLU module. That''s not a very nice marketing way to put it. It sounds like:
    "you are now talking to an NLU module." You cannot pretend a bot is a person.
    The word *agent* conveys the impression of a business agent, a sports agent, or
    a secret agent, which is mysterious! It came to mean a computer system that gathers
    information. Now it''s an NLP agent with NLU capability.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 聊天机器人是指至少有两方参与的对话。在我们的例子中，机器人是一个 NLU 模块。虽然这么说并不算是一个很吸引人的营销方式，它听起来像是：“你现在正在与一个
    NLU 模块对话。”你不能假装一个机器人是一个人。*代理* 这个词传递了商务代理、体育经纪人或特工的印象，这听起来很神秘！它的含义是指一个收集信息的计算机系统。现在，它是一个具备
    NLU 能力的 NLP 代理。
- en: Creating an agent to understand Dialogflow
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个代理以了解 Dialogflow
- en: 'The fastest way to learn Dialogflow is to create a dialog from scratch. Log
    into Dialogflow and go to the console. The following is part of a screenshot of
    Dialogflow''s dashboard. You can see the link to the console on the top right:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 学习 Dialogflow 的最快方法是从头开始创建一个对话。登录 Dialogflow 并进入控制台。以下是 Dialogflow 仪表板的一个截图，你可以看到右上角有控制台的链接：
- en: '![](img/B15438_15_01.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_01.png)'
- en: 'Figure 15.1: Accessing Dialogflow''s console'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.1：访问 Dialogflow 控制台
- en: 'Once you click on **Go to console**, you will be asked to sign in if you haven''t
    signed in yet. A Google account is a prerequisite:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击 **转到控制台**，如果你尚未登录系统，将要求你登录。拥有 Google 账号是前提条件：
- en: '![](img/B15438_15_02.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_02.png)'
- en: 'Figure 15.2: Signing in with a Google account'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.2：使用 Google 账号登录
- en: Once you have followed the sign in instructions and are signed in, you will
    reach the Dialogflow console.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 按照登录指引操作并成功登录后，你将进入 Dialogflow 控制台。
- en: 'Click on the drop-down list in the top-right corner, irrespective of which
    default agent is displayed. A list of existing or default agents will be displayed:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 点击右上角的下拉菜单，不论当前显示的是哪个默认代理。会显示现有的或默认的代理列表：
- en: '![](img/B15438_15_03.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_03.png)'
- en: 'Figure 15.3: The list of agents'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.3：代理列表
- en: 'Scroll down the list until you reach **Create new agent** (if none, click on
    the **Create agent** option). Click on **Create new agent**, and you will reach
    the following window:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 向下滚动列表，直到你看到 **创建新代理**（如果没有此选项，请点击 **创建代理**）。点击 **创建新代理**，你将进入以下窗口：
- en: '![](img/B15438_15_04.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_04.png)'
- en: 'Figure 15.4: Entering the agent''s name'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.4：输入代理的名称
- en: Call the agent `Agent + <your name or initials>` to make sure you will have
    a unique name. I will call the one for this chapter `cogfilmdr`. The agent in
    the chapter will thus be referred to as `cogfilmdr`. Let Google create a default
    agent structure with English as the main language.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 将代理命名为 `Agent + <你的名字或首字母>`，以确保你将拥有一个唯一的名字。我将本章的代理命名为 `cogfilmdr`。因此，本章中的代理将被称为
    `cogfilmdr`。让 Google 创建一个默认的代理结构，主语言为英语。
- en: 'Once that is done, click on the settings button in the top left:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，点击左上角的设置按钮：
- en: '![](img/B15438_15_05.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_05.png)'
- en: 'Figure 15.5: The settings button'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.5：设置按钮
- en: You will reach the configuration window of your agent.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你将进入你的代理配置窗口。
- en: 'For the moment, we just have one important option to check. The version of
    the API must be V2 API. V1 API will shut down on March 2020:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们只有一个重要的选项需要检查。API 的版本必须是 V2 API。V1 API 将于 2020 年 3 月停止使用：
- en: '![](img/B15438_15_06.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_06.png)'
- en: 'Figure 15.6: Using the V2 API'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.6：使用 V2 API
- en: The agent is now created, and we can create entities.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 代理已经创建，我们可以开始创建实体。
- en: Entities
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实体
- en: Most chatbot tutorials explain intents first. I do not agree. Once you know
    where you're going, in this case, choosing a movie based on *Chapter 14*, *Preparing
    the Input of Chatbots with Restricted Boltzmann Machines (RBMs) and Principal
    Component Analysis (PCA)*, it makes sense to build some bricks before building
    your structure.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数聊天机器人教程首先讲解意图。我不同意这个做法。一旦你知道你的目标，在这种情况下是根据*第14章*的内容，选择一部电影，*使用限制玻尔兹曼机（RBM）和主成分分析（PCA）准备聊天机器人的输入*，那么在构建结构之前，先搭建一些砖块是很有道理的。
- en: Dialogflow (or any chatbot) uses entities to extract useful information in a
    user's utterance (not necessarily a sentence) to understand their motivation.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Dialogflow（或任何聊天机器人）使用实体从用户的发言中提取有用的信息（不一定是一个句子）来理解他们的动机。
- en: We will use the entities created in *Chapter 14*. We will first create an entity
    named `movies` that will contain the 10 target movies used in *Chapter 14*.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用*第14章*中创建的实体。我们将首先创建一个名为`movies`的实体，其中包含在*第14章*中使用的10部目标电影。
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Click on **Entities** on the left-hand side of the window:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在窗口左侧点击**Entities**：
- en: '![](img/B15438_15_07.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_07.png)'
- en: 'Figure 15.7: Dialogflow menu'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图15.7：Dialogflow菜单
- en: 'Then, click on **CREATE ENTITY**:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，点击**CREATE ENTITY**：
- en: '![](img/B15438_15_08.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_08.png)'
- en: 'Figure 15.8: Creating an entity'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图15.8：创建一个实体
- en: 'You will be asked to provide an entity name:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你将被要求提供一个实体名称：
- en: '![](img/B15438_15_09.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_09.png)'
- en: 'Figure 15.9: Entering the name of entity'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图15.9：输入实体名称
- en: 'Enter `movies`. Before saving the entity, we must enter the movies we have
    chosen:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 输入`movies`。在保存实体之前，我们必须输入我们选择的电影：
- en: '![](img/B15438_15_10.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_10.png)'
- en: 'Figure 15.10: Entity list'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图15.10：实体列表
- en: You will notice that once you add a movie, a default synonym is filled in automatically.
    You can add other synonyms if you wish.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，一旦你添加了一个电影，默认的同义词会自动填充。如果你愿意，可以添加其他同义词。
- en: 'Once the titles are entered, click on the **SAVE** button, which is mandatory
    (it is not an auto-save interface):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦输入标题，点击**SAVE**按钮，这是必须的（这不是自动保存接口）：
- en: '![](img/B15438_15_11.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_11.png)'
- en: 'Figure 15.11: Saving an entity'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图15.11：保存实体
- en: 'We will now create the feature entity. The features in the `RBM.py` program
    in *Chapter 14* were as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将创建特征实体。在*第14章*中的`RBM.py`程序中的特征如下：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We will name it `features`, follow the same process as for the `movies` entity,
    and then click on **SAVE**:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将它命名为`features`，按照与`movies`实体相同的过程，然后点击**SAVE**：
- en: '![](img/B15438_15_12.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_12.png)'
- en: 'Figure 15.12: Creating a feature entity'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图15.12：创建一个特征实体
- en: 'Click on **Entities** under your agent, and you will see a list of entities
    for the agent, as shown in the following diagram:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 点击代理下方的**Entities**，你将看到代理的实体列表，如下图所示：
- en: '![](img/B15438_15_13.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_13.png)'
- en: 'Figure 15.13: List of entities'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图15.13：实体列表
- en: If you click an entity, a list of possible choices will appear.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击一个实体，会出现可能的选择列表。
- en: Now that your agent knows the movie and feature entities, creating the intents
    makes sense.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的代理已经知道了电影和特征实体，创建意图就有意义了。
- en: Intents
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 意图
- en: An intent is a clear formulation intention to do something. I named the agent
    `cogfilmdr`. For the agent, the user's intention may be to ask for a movie to
    watch.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一个意图是明确的意图，表示要做某件事。我将代理命名为`cogfilmdr`。对于这个代理，用户的意图可能是请求推荐一部电影。
- en: To trigger a response, we must enter training phrases.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要触发响应，我们必须输入训练短语。
- en: '**Training phrases** are groups of words that the user will enter through text
    or speech. The more sentences you enter, the better your chatbot will become.
    This is why starting with a ready-to-use Dialogflow makes sense if an existing
    agent satisfies your needs.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练短语**是用户通过文本或语音输入的一组词汇。你输入的句子越多，你的聊天机器人就会越智能。这就是为什么如果现有的代理满足你的需求，从一个现成的Dialogflow开始是有意义的。'
- en: 'To create our sample dialog, we will use the dataset results supplied on GitHub
    for *Chapter 14*, *Preparing the Input of Chatbots with Restricted Boltzmann Machines
    (RBMs) and Principal Component Analysis (PCA)*. The main terms have been extracted
    with their features that we displayed with TensorBoard. When we extracted the
    data from the RBM, we sorted the features as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建我们的示例对话，我们将使用GitHub上提供的*第14章*的数据集结果，*使用限制玻尔兹曼机（RBM）和主成分分析（PCA）准备聊天机器人的输入*。主要术语已经提取，并显示了其特征，这些特征我们用TensorBoard进行了展示。当我们从RBM中提取数据时，我们按照以下方式对特征进行了排序：
- en: '[PRE2]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We displayed the feature space in a PCA:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在PCA中展示了特征空间：
- en: '![](img/B15438_15_14.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_14.png)'
- en: 'Figure 15.14: TensorBoard representation of features'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.14：特征的TensorBoard表示
- en: '**Reminder**: This result will naturally change if `RBM_launcher.py` runs again
    since it''s a random viewer-movie choice process.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**提醒**：如果`RBM_launcher.py`再次运行，这个结果会自然改变，因为它是一个随机的观众-电影选择过程。'
- en: When starting a chatbot project, it is best to be very careful with going straight
    to generating dialogs automatically. It is much better to start with a simple,
    well-structured chatbot that works on a limited amount of tasks. I call this a
    "closed chatbot" meaning that we control every aspect of dialog. An "open chatbot"
    means that information flows in automatically to create automatic dialogs. That
    can be a goal after getting the chatbot to run as a "closed chatbot" for some
    time using the information prepared with AI algorithms.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始聊天机器人项目时，最好非常小心，不要直接跳到自动生成对话的阶段。最好从一个简单且结构良好的聊天机器人开始，它仅执行有限数量的任务。我称之为“封闭型聊天机器人”，意味着我们控制对话的每个方面。“开放型聊天机器人”意味着信息会自动流入，从而创建自动对话。这可以作为目标，在聊天机器人作为“封闭型聊天机器人”运行一段时间后，利用AI算法准备的信息创建自动对话。
- en: The results of the work we did in *Chapter 14* provide interesting information
    on the marketing segment we are targeting for the chatbot.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在*第14章*所做的工作结果提供了关于我们为聊天机器人目标市场所针对的营销细分的有趣信息。
- en: Violence and action point to action movies. Family=0 points to younger viewers,
    teenagers, for example, more interested in action than creating a family. Discovering
    happiness and love is part of the horizons they are looking for. This is typical
    of superhero series and movies. Superheroes are often solitary individuals.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 暴力和动作指向动作片。家庭=0指向年轻观众，比如青少年，他们更感兴趣的是动作而不是创建一个家庭。发现幸福和爱是他们正在寻找的目标之一。这在超级英雄系列和电影中非常典型。超级英雄往往是孤独的个体。
- en: 'We will now create an intent by entering the **Intents** window:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将通过进入**意图**窗口来创建一个意图：
- en: '![](img/B15438_15_15.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_15.png)'
- en: 'Figure 15.15: Choosing the Intents option'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.15：选择意图选项
- en: 'The **Intents** window appears. Click on **CREATE INTENT**:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**意图**窗口出现。点击**创建意图**：'
- en: '![](img/B15438_15_16.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_16.png)'
- en: 'Figure 15.16: Creating an intent'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.16：创建意图
- en: 'The intent window will appear to create a question-and-answer dialog in a few
    steps:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 意图窗口会出现，几步之内就能创建一个问答对话：
- en: First, enter `choose_movie` as the name of the intent.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，输入`choose_movie`作为意图名称。
- en: 'Then, in the training phrases section, enter: "I would like to watch one of
    your movies."'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，在训练短语部分，输入：“我想看你们的一部电影。”
- en: 'At this point, we have an intent name and a possible user question:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们有了一个意图名称和一个可能的用户问题：
- en: '![](img/B15438_15_17.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_17.png)'
- en: 'Figure 15.17: Entering intent information'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.17：输入意图信息
- en: 'Now, we need to provide a response based on the statistics for this market
    segment we drew from *Chapter 14*. We will use the word *action* to encompass
    a movie that contains violence and a happy ending as in the typical superhero
    movies. To do that, scroll down to the **Text Response** section to add a response
    and enter "Would you like to watch an action movie?", as shown in the following
    screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要根据从*第14章*中获取的该市场细分的统计数据来提供响应。我们将使用*动作*这个词来涵盖那些包含暴力和幸福结局的电影，就像典型的超级英雄电影一样。为此，请滚动到**文本响应**部分，添加响应并输入“你想看一部动作片吗？”，如下图所示：
- en: '![](img/B15438_15_18.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_18.png)'
- en: 'Figure 15.18: Entering the text response'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.18：输入文本响应
- en: 'Now that we have a basic dialog, let''s save and test it. To do that, go to
    the test console in the top right of the console window:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了一个基本的对话，接下来保存并测试它。为此，请前往控制台窗口右上角的测试控制台：
- en: '![](img/B15438_15_19.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_19.png)'
- en: 'Figure 15.19: Test console'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.19：测试控制台
- en: 'We can use a CUI or text:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用CUI或文本：
- en: '**Text dialog**: Enter the user phrase: "I would like to watch one of your
    movies."'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本对话**：输入用户短语：“我想看你们的一部电影。”'
- en: The user will be surprised to see the agent's answer, which is, "Would you like
    to watch an action movie?"
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用户会对代理人的回答感到惊讶：“你想看一部动作片吗？”
- en: '![](img/B15438_15_20.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_20.png)'
- en: 'Figure 15.20: Responses'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.20：响应
- en: This suggestion comes as a surprise for the user and might seem strange. This
    is because the RBM-PCA approach we used to prepare the dialog targets a market
    segment.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这个建议对用户来说是一个惊喜，可能看起来有些奇怪。这是因为我们用来准备对话的RBM-PCA方法是针对一个市场细分的。
- en: Advanced machine learning shortens the path of a user request to a satisfactory
    response. It constitutes both a time saving and an energy saving process for the
    user.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 高级机器学习缩短了用户请求到满意回应的路径。它为用户节省了时间和精力。
- en: '**CUI**: Click on the microphone icon in the test console. Make sure that this
    microphone is authorized, or it will not work:'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CUI**：点击测试控制台中的麦克风图标。确保麦克风已授权，否则它将无法工作：'
- en: '![](img/B15438_15_21.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_21.png)'
- en: 'Figure 15.21: Microphone'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.21：麦克风
- en: 'When you click on the microphone, this will trigger a recording of your request.
    Say, "I would like to watch one of your movies." Then, click on the stop button
    to stop the recording. The response to the request will appear:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击麦克风时，这将触发对你请求的录音。说：“我想观看你的一部电影。”然后，点击停止按钮来停止录音。请求的回应将显示：
- en: '![](img/B15438_15_22.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_22.png)'
- en: 'Figure 15.22: Text responses'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.22：文本回应
- en: To answer the question, we will need to use the context functionality of Dialogflow.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这个问题，我们需要使用Dialogflow的上下文功能。
- en: Context
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上下文
- en: Context means that Dialogflow is going to remember a dialog and use follow-up
    exchanges without starting from scratch each time.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文意味着Dialogflow将记住对话，并使用后续交流，而不必每次从头开始。
- en: The user has asked to watch a movie, and the bot suggested an action movie.
    The bot will remember this through context as it continues the dialog.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 用户请求观看一部电影，而机器人建议了一部动作片。机器人会通过上下文记住这一点，并继续对话。
- en: Click on the agent's **Intent** in the menu and hover over **choose_movie**.
    You will see **Add follow-up intent** appear. This means that all of the variables
    of the main intent can be stored, and a follow-up intent added that would remember
    what was said previously, just like us in a conversation.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 点击菜单中的代理**意图**，然后悬停在**选择电影**上。你将看到**添加后续意图**出现。这意味着主意图的所有变量都可以存储，并且可以添加一个后续意图，记住之前说过的话，就像我们在对话中一样。
- en: 'Click on **Add follow-up intent**:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**添加后续意图**：
- en: '![](img/B15438_15_23.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_23.png)'
- en: 'Figure 15.23: Add follow-up intent button'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.23：添加后续意图按钮
- en: In this case, the agent has planned two cases, *yes* or *no*. We will explore
    the *yes* answers in this chapter, and the more complex *no* answers in *Chapter
    16*, *Improving the Emotional Intelligence Deficiencies of Chatbots*.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，代理已经计划了两个选项，*是*或*否*。我们将在本章探讨*是*的答案，而更复杂的*否*的答案将在*第16章*，“提高聊天机器人情商缺陷”中讨论。
- en: 'In *Chapter 14*, we created a movie feature matrix with the movie titles and
    features:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第14章*中，我们创建了一个电影特征矩阵，包含了电影标题和特征：
- en: '[PRE3]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We now need to transpose this information in a chart we can use to add content
    depth to the dialog:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在需要将这些信息转置到一个可以用来为对话添加内容深度的图表中：
- en: '| **MOVIE/FEATURE** | LOVE | HAPPINESS | FAMILY | HORIZONS | ACTION | VIOLENCE
    |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| **电影/特征** | 爱情 | 幸福 | 家庭 | 视野 | 动作 | 暴力 |'
- en: '| 24H in Kamba | 1 | 1 | 0 | 0 | 1 | 1 |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| 24小时在坎巴 | 1 | 1 | 0 | 0 | 1 | 1 |'
- en: '| Lost | 1 | 1 | 0 | 1 | 1 | 1 |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| 丢失 | 1 | 1 | 0 | 1 | 1 | 1 |'
- en: '| Cube Adventures | 1 | 0 | 0 | 0 | 0 | 1 |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| 立方体冒险 | 1 | 0 | 0 | 0 | 0 | 1 |'
- en: '| A Holiday | 1 | 1 | 0 | 1 | 1 | 1 |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| 假期 | 1 | 1 | 0 | 1 | 1 | 1 |'
- en: '| Jonathan Brooks | 1 | 0 | 0 | 0 | 1 | 1 |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| 乔纳森·布鲁克斯 | 1 | 0 | 0 | 0 | 1 | 1 |'
- en: '| The Melbourne File | 1 | 1 | 0 | 1 | 1 | 0 |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| 墨尔本档案 | 1 | 1 | 0 | 1 | 1 | 0 |'
- en: '| WNC Detectives | 1 | 0 | 0 | 0 | 0 | 0 |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| WNC 侦探 | 1 | 0 | 0 | 0 | 0 | 0 |'
- en: '| Stars | 1 | 1 | 0 | 1 | 1 | 0 |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| 星星 | 1 | 1 | 0 | 1 | 1 | 0 |'
- en: '| Space L | 1 | 1 | 0 | 0 | 0 | 1 |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| 太空 L | 1 | 1 | 0 | 0 | 0 | 1 |'
- en: '| Zone 77 | 1 | 0 | 0 | 1 | 1 | 1 |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| 区域 77 | 1 | 0 | 0 | 1 | 1 | 1 |'
- en: We have already surprised the user a bit by proposing an action movie directly
    without going through tedious lists. We are using all of the information we obtained through
    inputs, intermediate AI outputs, and final outputs.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经通过直接提议一部动作片来稍微惊讶了用户，而无需通过冗长的列表。我们正在使用所有通过输入、中间AI输出和最终输出获得的信息。
- en: Now, we are going even further by filtering the movies that fit the action-violence-happiness
    features extracted with the RBM-PCA chained algorithms.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们通过使用RBM-PCA链式算法提取的动作-暴力-幸福特征，进一步筛选符合这些特征的电影。
- en: 'Only the following movies in the chart match action-violence-happiness:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图表中只有以下电影符合动作-暴力-幸福特征：
- en: 24H in Kamba
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 24小时在坎巴
- en: Lost
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 丢失
- en: A Holiday
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假期
- en: Zone 77
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区域 77
- en: At random, we will choose "Zone 77." Once we have entered many possibilities,
    a random choice can be suggested either in the response area or with scripts.
    This development is beyond the scope of this chapter. For this example, we suppose
    it is probable that the viewer will be satisfied with this suggestion we make.
    We are in a *yes* scenario of the dialog. In *Chapter 16*, *Improving the Emotional
    Intelligence Deficiencies of Chatbots*, we will explore the *no* scenarios of
    this dialog, which requires more cognitive designing to keep the satisfaction
    path short.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们会随机选择“Zone 77”。一旦我们输入了许多可能性，可以在回应区域或通过脚本提出随机选择。这个开发超出了本章的范围。在这个例子中，我们假设观众会对我们提出的建议感到满意。我们处于对话的*yes*场景中。在*第16章*《提高聊天机器人的情商缺陷》中，我们将探索这个对话的*no*场景，这需要更多的认知设计来保持满意度路径的简短。
- en: 'For the moment, let''s suggest "Zone 77." To do this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，让我们建议“Zone 77”。为此：
- en: Click on **Add follow-up intent**.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加后续意图**。
- en: Select **yes**.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**yes**。
- en: 'You now have a follow-up intent linked to the dialog:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你有了一个与对话关联的后续意图：
- en: '![](img/B15438_15_24.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_24.png)'
- en: 'Figure 15.24: Follow-up intents'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.24：后续意图
- en: 'Click on **choose_movie - yes**. The intent will appear. You will notice that
    Dialogflow has already filled in several forms of *yes* in the **Training phrases**
    section, as shown in the following screenshot:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**choose_movie - yes**。意图将会出现。你会注意到，Dialogflow 已经在**训练短语**部分填写了几个*yes*的形式，如下图所示：
- en: '![](img/B15438_15_25.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_25.png)'
- en: 'Figure 15.25: Training phrases'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.25：训练短语
- en: 'All that is left to do in this scenario is to scroll down to the **Responses**
    section and add our answer:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，剩下的工作就是滚动到**回应**部分并添加我们的回答：
- en: '![](img/B15438_15_26.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_26.png)'
- en: 'Figure 15.26: Text response'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.26：文本回应
- en: 'Now, we go back to the intent and add a *yes* follow-up to this follow-up to
    process the viewer''s *yes* answer, just as we did previously:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们回到意图，并为这个后续添加一个*yes*后续，用来处理观众的*yes*回答，就像我们之前做的一样：
- en: '![](img/B15438_15_27.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_27.png)'
- en: 'Figure 15.27: Follow-up intents'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.27：后续意图
- en: 'Now, we click on **choose_movie - yes - yes**, and we will see the *yes* answers
    that Dialogflow prepared for us:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们点击**choose_movie - yes - yes**，我们将看到 Dialogflow 为我们准备的*yes*回答：
- en: '![](img/B15438_15_28.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_28.png)'
- en: 'Figure 15.28: Training phrases for a follow-up intent'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.28：后续意图的训练短语
- en: However, this time, we would like to answer with a script and not an answer
    we type in.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这次我们希望用脚本来回答，而不是我们手动输入的回答。
- en: To do that, we can use fulfillment.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们可以使用履行。
- en: Adding fulfillment functionality to an agent
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向代理添加履行功能
- en: A dialog can quickly become boring in everyday life and even more so in a chatbot.
    When we begin to guess everything that an interlocutor has to say, our mind slowly
    drifts away. We cannot help it. Humans are a curious species. **Fulfillment**
    will change the perspective of dialog. That is what I call *purpose* beyond the
    pragmatic approach that says fulfillment adds business logic to a dialog.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 对话在日常生活中很容易变得无聊，尤其是在聊天机器人中。当我们开始猜测对方要说什么时，我们的大脑会慢慢漂移开来。我们无法控制。人类是一个好奇的物种。**履行**将改变对话的视角。这就是我所说的超越实用方法的*目标*，它表示履行将商业逻辑添加到对话中。
- en: To make the dialog sustainable, even from a practical point of view, it has
    to excite the user enough to want it to come back and discover more about your
    chatbot beyond obtaining business information from it.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使对话具备可持续性，即使从实际角度来看，它也必须足够吸引用户，让用户想要回来，探索更多关于你的聊天机器人的内容，而不仅仅是获取业务信息。
- en: If you look **fulfilling** up in a dictionary, you will find that it means providing
    happiness or satisfaction, which is exactly the feeling of purpose you want your
    chatbot to convey.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查阅字典中的**fulfilling**，你会发现它的意思是提供幸福或满足感，这正是你希望你的聊天机器人传达的目标感。
- en: That being said, there is work to do in order to reach that goal. Dialogflow
    provides a wide array of tools to reach fulfillment for the user, the designer,
    and the developers.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，为了达到这一目标，还需要做一些工作。Dialogflow 提供了多种工具，帮助用户、设计师和开发人员实现履行。
- en: To start with, Dialogflow uses an inbuilt, seamless version of Node.js for fulfilling
    functions.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 一开始，Dialogflow 使用内置的、无缝的 Node.js 版本来实现履行功能。
- en: Defining fulfillment
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义履行
- en: 'Various fulfillment or additional dialog functions are available:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 提供各种履行或附加对话功能：
- en: '**Webhook**: A webhook is an event transmitted via HTTP. It is sent as a `POST`,
    which contains data posted to a predetermined URL. It works as an HTTP callback.
    The data sent to the URL will be parsed by a script on the server side. Once the
    service has processed the information, it will perform an action and send data
    back as a response.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Webhook**：Webhook 是通过 HTTP 传输的事件。它作为一个`POST`发送，其中包含发送到预定 URL 的数据。它作为 HTTP
    回调工作。发送到该 URL 的数据将由服务器端的脚本进行解析。一旦服务处理完信息，它将执行某个操作并将数据作为响应发送回来。'
- en: We will not use the webhook for this example. However, it is important to note
    that you can use a webhook to create dialogs of your own in another environment.
    You can even generate automatic dialogs and call them from Dialogflow.
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们在这个示例中不会使用 webhook。然而，需要注意的是，你可以使用 webhook 在另一个环境中创建自己的对话。你甚至可以生成自动对话并从 Dialogflow
    调用它们。
- en: 'If you are interested in preparing dialogs and uploading them, you can go to the
    **Training** page of the agent on the left-hand side of the screen and upload
    phrases:'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你有兴趣准备对话并上传它们，你可以转到屏幕左侧代理的**训练**页面并上传短语：
- en: '![](img/B15438_15_29.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_29.png)'
- en: 'Figure 15.29: Training window'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.29：训练窗口
- en: You can also upload an agent or even a prebuilt agent designed by Google Dialogflow.
    For our example, we will use the inline editor.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以上传代理，甚至是由 Google Dialogflow 设计的预构建代理。对于我们的示例，我们将使用内联编辑器。
- en: '**Fulfillment with the inline Node.js editor**: Defining a webhook URL can
    be the simplest approach. However, using the inline editor provides Node.js functionality
    for even more potential.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用内联 Node.js 编辑器进行履行**：定义一个 webhook URL 可能是最简单的方法。然而，使用内联编辑器提供了 Node.js 功能，带来更多潜力。'
- en: '**Fulfillment with the inline Node.js editor and Cloud Functions for Firebase**:
    The inline Node.js can call a large variety of Cloud Functions for Firebase in
    a few time-saving lines of code.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用内联 Node.js 编辑器和 Firebase Cloud Functions 进行履行**：内联 Node.js 可以在几行节省时间的代码中调用大量
    Firebase Cloud Functions。'
- en: Enhancing the cogfilmdr agent with a fulfillment webhook
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用履行 webhook 增强 cogfilmdr 代理
- en: 'When the user answers *yes* to watch "Zone 77," we can answer with a response
    or a link to a website. To use a response, go to the yes - yes follow-up of our
    dialog in the **Intents** window:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户回答*是*想观看《Zone 77》时，我们可以用回应或链接到网站来回答。要使用回应，请转到**意图**窗口中的 yes - yes 后续对话：
- en: '![](img/B15438_15_30.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_30.png)'
- en: 'Figure 15.30: Intents and follow-up intents'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.30：意图和后续意图
- en: 'Click on **choose_movie - yes - yes** and scroll down to **Text Response**
    and add a response such as "Sure, click on the movie and watch it," as shown in
    the following screenshot:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**choose_movie - yes - yes**并向下滚动到**文本响应**，然后添加类似“好的，点击电影并观看”的回应，如下图所示：
- en: '![](img/B15438_15_31.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_31.png)'
- en: 'Figure 15.31: Text response'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.31：文本响应
- en: 'We would also decide that this is final and that it is the end of the conversation
    by activating the **Set this intent as end of conversation** option:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过激活**将此意图设置为对话结束**选项来决定这是最终的，并且是对话的结束：
- en: '![](img/B15438_15_32.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_32.png)'
- en: 'Figure 15.32: End of conversation option'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.32：对话结束选项
- en: 'But we will not do this for the moment; let''s scroll down further to activate
    the inline webhook functionality:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们现在不会这样做；让我们继续向下滚动，激活内联 webhook 功能：
- en: '![](img/B15438_15_33.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_33.png)'
- en: 'Figure 15.33: Enabling the webhook functionality'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.33：启用 webhook 功能
- en: 'Now we will go to the **Fulfillment** window:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将进入**履行**窗口：
- en: '![](img/B15438_15_34.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_34.png)'
- en: 'Figure 15.34: Access to the Fulfillment interface'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.34：访问履行界面
- en: 'First, enable the inline editor:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，启用内联编辑器：
- en: '![](img/B15438_15_35.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_35.png)'
- en: 'Figure 15.35: Inline editor'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.35：内联编辑器
- en: To add some fun to the dialog, let's suppose that chatbot is in a cool start-up
    coffee shop and that watching movies on individual screens is a service to attract
    customers. You can watch the movie with headsets (you, friends, family), for example.
    We add this service to our dialog.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 为了给对话增添一些趣味，假设聊天机器人在一个酷炫的创业咖啡店里，并且在个人屏幕上观看电影是一项吸引顾客的服务。你可以与耳机一起观看电影（你、朋友、家人），例如。我们将这项服务添加到对话中。
- en: 'We go to the `intentMap` of the script and add a `gotomovie` function:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 我们进入脚本的`intentMap`并添加一个`gotomovie`函数：
- en: '[PRE4]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The recommended format is `intentMap.set(<Intent>,<function>)`.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐的格式是`intentMap.set(<Intent>,<function>)`。
- en: 'That done, we now write the function with our own text and website link:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，我们现在编写带有我们自己文本和网站链接的函数：
- en: '[PRE5]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: All we have to do now is click on **DEPLOY**, and that's it!
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们要做的就是点击**部署**，就完成了！
- en: I added a link to Amazon Prime Video to show that you can use IBM Watson, Google,
    Microsoft, Amazon services, and more to enhance your chatbots!
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我添加了一个链接到 Amazon Prime Video，表明您可以使用 IBM Watson、Google、Microsoft、Amazon 等服务来增强您的聊天机器人！
- en: '**Important**: You can customize all the dialogs you wish in this editor and
    use a range of Google Cloud functions. The sky is not even the limit. You can
    go to Mars!'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要**：您可以在此编辑器中自定义所有对话，并使用一系列 Google Cloud 函数。天空甚至都不是极限，您可以飞往火星！'
- en: For our example, once the script has been deployed, we go back to the beginning
    of our dialog until we reach this point, which will take us to the movie we wish
    to watch. In this case, I just displayed a streaming site.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 以我们的示例为例，一旦脚本被部署，我们会回到对话的开头，直到我们到达这一点，这将带我们到我们希望观看的电影。在此示例中，我只是展示了一个流媒体网站。
- en: You can obtain the full script of `index.js` in the `dialogflowFulfillment.zip`
    on GitHub in `CH15` and copy it into the editor without importing the whole package.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 GitHub 上的`dialogflowFulfillment.zip`中的`CH15`获取完整的`index.js`脚本，并将其复制到编辑器中，而无需导入整个包。
- en: Getting the bot to work on your website
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 让机器人在您的网站上运行
- en: Let's get a bot running on your website in a few clicks.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过几个点击，在您的网站上运行一个机器人。
- en: 'Scroll down to **Integrations** for the agent you wish to deploy: either your
    own agent or the coffee shop agent.'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动到**集成**，选择您希望部署的代理：无论是您自己的代理还是咖啡店代理。
- en: Activate the **Web Demo** option.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用**Web 演示**选项。
- en: 'An embedded code will appear along the lines of the following:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将显示类似以下内容的嵌入代码：
- en: '[PRE6]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Copy the code on the page of the website you wish to implement it on.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 复制您希望实现它的网站页面上的代码。
- en: To test it first, you can copy the URL in your browser and test it.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 要先进行测试，您可以将网址复制到浏览器中并进行测试。
- en: '**Note**: You can use a speech dialog if you activate your microphone for this
    site on your browser. Don''t forget to access the page using `https`, otherwise
    the microphone might be blocked. Also, fulfillment cannot be activated in this
    HTML page without some additional development.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**：如果您在浏览器中启用该站点的麦克风，您可以使用语音对话。不要忘记通过`https`访问页面，否则麦克风可能会被阻止。此外，在没有一些额外开发的情况下，无法在此
    HTML 页面中激活履行。'
- en: However, you can also click on Google Assistant in the console and create an
    application in a few clicks, and then deploy it on smartphones and Google Home,
    for example. If you create a nice chatbot, you can have the whole world use it
    in a few clicks!
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，您也可以在控制台中点击 Google Assistant，通过几个点击创建一个应用程序，然后将其部署到智能手机和 Google Home 等设备上。如果您创建了一个不错的聊天机器人，您可以让全世界在几个点击内使用它！
- en: Machine learning agents
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习代理
- en: An NLP chatbot cannot function without machine learning for text recognition,
    utterances, sentences, speech, entities, intents, and many other aspects of a
    dialog.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: NLP 聊天机器人如果没有机器学习来进行文本识别、语音、句子、语音实体、意图以及对话的其他许多方面，是无法正常工作的。
- en: 'In this section, we will explore the following:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨以下内容：
- en: Speech-to-text
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语音转文本
- en: Text-to-speech
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本转语音
- en: Spelling correction
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拼写修正
- en: Let's see how we can apply machine learning in each of these contexts.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在这些上下文中应用机器学习。
- en: Using machine learning in a chatbot
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在聊天机器人中使用机器学习
- en: Generally, when we hear of machine learning in a chatbot, we think of a machine
    learning program running during a dialog as a response.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当我们听到聊天机器人中的机器学习时，我们会想到在对话过程中作为响应运行的机器学习程序。
- en: In this section, we will focus on how machine learning is used to improve a
    chatbot and to make it work.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将重点介绍机器学习如何用于改进聊天机器人并使其正常工作。
- en: Speech-to-text
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 语音转文本
- en: Without a speech-to-text function, there is no way you can implement a chatbot
    or any speech application on a smart speaker such as Google Home or Amazon Echo.
    Smart speakers are going to play an increasing part in our lives in the years
    to come.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有语音转文本功能，您就无法在像 Google Home 或 Amazon Echo 这样的智能扬声器上实现聊天机器人或任何语音应用。智能扬声器将在未来几年在我们的生活中发挥越来越重要的作用。
- en: 'Click on the settings button next to the name of the agent and then on **Speech**:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 点击代理名称旁边的设置按钮，然后点击**语音**：
- en: '![](img/B15438_15_36.png)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_36.png)'
- en: 'Figure 15.36: Speech options'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.36：语音选项
- en: 'We will focus on the main settings of the speech recognition functions:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重点介绍语音识别功能的主要设置：
- en: '**Enhanced Speech Models**: This is an advanced machine learning option that
    comes with the Enterprise Edition. It shows how far speech recognition has come.
    In the standard version, the system already works fairly well. In the advanced
    version, it uses data logging functionality to enhance speech recognition.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强语音模型**：这是一个高级机器学习选项，仅限企业版。它展示了语音识别技术的进步。在标准版中，系统已经能够相当不错地工作；而在高级版中，它使用数据记录功能来增强语音识别。'
- en: '**Auto Speech Adaptation**: This is interesting because this function uses
    the intents and entities created to train and adapt to speech recognition of the
    agent''s dialog. It can be activated in the free version as follows:'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动语音适应**：这非常有趣，因为此功能使用创建的意图和实体来训练并适应代理对话的语音识别。在免费版中也可以按以下方式激活：'
- en: '![](img/B15438_15_37.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_37.png)'
- en: 'Figure 15.37: Enabling Auto Speech Adaptation'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.37：启用自动语音适应
- en: Save the settings before leaving this interface.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在离开此界面之前，请保存设置。
- en: Text-to-speech
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 语音合成
- en: Now, we can go to the **Speech** tab and enable the **Automatic Text to Speech**
    function. I have a cloud account. If you cannot activate this in the lab, we will
    use the free online site to test the possibilities and limits of the machine learning
    algorithm.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以进入 **语音** 标签并启用 **自动语音合成** 功能。我有一个云账户。如果你在实验室无法激活此功能，我们将使用免费的在线网站测试机器学习算法的可能性和限制。
- en: '**Note**: There is an enhanced speech recognition model option, but you have
    to upgrade to the enterprise version.'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**：有一个增强版语音识别模型选项，但你必须升级到企业版才能使用。'
- en: 'Click on the settings button next to the name of the agent and then on **Speech**:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 点击代理名称旁边的设置按钮，然后点击 **语音**：
- en: '![](img/B15438_15_38.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_38.png)'
- en: 'Figure 15.38: Speech options'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.38：语音选项
- en: 'We will first configure the main settings of text-to-speech:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先配置语音合成的主要设置：
- en: '**Agent language**: Start with `en(English)` to reach the largest audience.
    However, bear in mind that Dialogflow produces good voice results in several languages.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代理语言**：从 `en(English)` 开始，以覆盖最广泛的受众。然而，值得注意的是，Dialogflow 在多种语言中都能产生不错的语音效果。'
- en: '**Voice**: Start with `Automatic` before trying the different WaveNet model
    variations. WaveNet models build voices from scratch with neural networks.'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语音**：在尝试不同的 WaveNet 模型变体之前，先从 `Automatic` 开始。WaveNet 模型通过神经网络从零开始构建语音。'
- en: '**Speaking rate**: You can leave it at `1`, or accelerate the rate or slow
    it down. For sports commentaries, for example, it could be faster.'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语速**：你可以将其保持在 `1`，或者加速语速或减慢语速。例如，对于体育解说，语速可以更快。'
- en: '**Pitch**: You can make the voice higher or lower in semitones.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**音调**：你可以将语音的音高调整为高音或低音。'
- en: '**Volume gain**: You can reduce or increase the volume. The best is to leave
    it at `0` to start. Then, while testing the agent, see if it needs to be changed.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**音量增益**：你可以调整音量大小，最好的做法是初始时将其设置为 `0`。然后，在测试代理时，看看是否需要调整。'
- en: 'Once these parameters are set, save the model:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 设置好这些参数后，保存模型：
- en: '![](img/B15438_15_39.png)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_39.png)'
- en: 'Figure 15.39: Voice configuration'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.39：语音配置
- en: 'Now, test your configuration or experiment with different settings by entering
    a sentence and clicking on the **PLAY** button:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过输入一句话并点击 **播放** 按钮，测试你的配置或尝试不同的设置：
- en: '![](img/B15438_15_40.png)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_40.png)'
- en: 'Figure 15.40: Experimenting with different voice settings'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.40：尝试不同的语音设置
- en: Once we have finished setting up the voice parameters, we need to set up the
    spelling machine learning features.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成语音参数的设置，我们需要设置拼写机器学习功能。
- en: Spelling
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 拼写
- en: We have one step left before we explore the possibilities and limits of the
    machine learning algorithms provided by Google. The machine learning spelling
    feature needs to be activated.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们探索 Google 提供的机器学习算法的可能性和限制之前，剩下的一步是需要激活机器学习拼写功能。
- en: For that, we are going to click on the **ML Settings** tab, activate **AUTOMATIC
    SPELL CORRECTION**, and define an acceptable threshold below which our agent will
    refuse to recognize errors.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将点击 **ML 设置** 标签，激活 **自动拼写修正**，并定义一个可接受的阈值，低于此值，我们的代理将拒绝识别错误。
- en: 'Click on the settings button next to the name of the agent and then on **ML
    Settings**:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 点击代理名称旁边的设置按钮，然后点击 **ML 设置**：
- en: '![](img/B15438_15_41.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_41.png)'
- en: 'Figure 15.41: ML Settings tab'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.41：ML 设置标签
- en: You will have access to a variety of options to work around a user's spelling
    mistakes. It works like the spelling corrector of a search engine when we mistype
    our request and Google, for example, suggests the correct spelling.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 你将有多种选项来解决用户的拼写错误。它的工作方式类似于搜索引擎的拼写校正，当我们输入错误时，例如 Google 会建议正确的拼写。
- en: 'The options are as follows:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 选项如下：
- en: '**ML CLASSIFICATION THRESHOLD** determines a confidence score below which an
    intent will not be triggered unless there is a fallback intent (a general response).'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机器学习分类阈值**确定一个信心分数，低于该分数时，意图将不会被触发，除非存在回退意图（一个通用响应）。'
- en: '**AUTOMATIC SPELL CORRECTION** uses machine learning to correct user spelling
    mistakes. It should be activated.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动拼写校正**使用机器学习来纠正用户的拼写错误。它应该被激活。'
- en: '**AUTOMATIC TRAINING** may slow the dialog down, so careful use of this function
    is recommended.'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动训练**可能会减慢对话速度，因此建议谨慎使用此功能。'
- en: '**AGENT VALIDATION** automatically validates an agent during the training process.
    Notice that training is triggered every time you save an intent, for example.'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代理验证**在训练过程中自动验证代理。请注意，每次保存一个意图时，训练都会被触发，例如。'
- en: 'The following screenshot shows default values you might want to start with:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了你可能希望开始使用的默认值：
- en: '![](img/B15438_15_42.png)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15438_15_42.png)'
- en: 'Figure 15.42: ML Settings options'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.42：机器学习设置选项
- en: Click on the **TRAIN** button every time you change an option.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 每次更改选项时，请点击**训练**按钮。
- en: Why are these machine learning algorithms important?
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么这些机器学习算法很重要？
- en: If it's just an educational chatbot like the `cogfilmdr` agent example, mistakes
    are acceptable. It's unpleasant, but acceptable. As we are going to see in *Chapter
    16*, *Improving the Emotional Intelligence Deficiencies of Chatbots*, if a chatbot
    is going to be used by a large number of people, this means many days of training,
    tests, and creating workarounds to the machine learning limits of these functions.
    And that's just for one language!
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它只是一个教育类聊天机器人，例如 `cogfilmdr` 代理示例，错误是可以接受的。这虽然令人不悦，但可以接受。正如我们在*第 16 章*《提高聊天机器人的情感智能缺陷》中看到的那样，如果聊天机器人将被大量用户使用，这意味着需要多天的训练、测试以及为这些功能的机器学习限制创造解决方法。而这仅仅是针对一种语言！
- en: If we are deploying in several languages, this means many days times the number
    of languages! Even with machine learning, it's tough work. Without machine learning,
    it's impossible.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们部署多种语言，这意味着需要很多天，乘以语言数量！即使是机器学习，工作也非常艰难。没有机器学习的话，那就不可能完成。
- en: 'Machine learning is not merely important; it is vital:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习不仅仅重要，它是至关重要的：
- en: If the chatbot cannot recognize a written utterance because of a simple spelling
    mistake, we will get complaints, bad comments, and the SEO ship will sink.
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果聊天机器人无法识别因为简单拼写错误而出现的书面话语，我们会收到投诉、差评，搜索引擎优化的船也会沉没。
- en: If the chatbot cannot recognize what you are saying on Google Home or any smart
    speaker, then that means a lot of trouble, maybe even a refund.
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果聊天机器人无法识别你在 Google Home 或任何智能音响上的语音，那就意味着很多麻烦，甚至可能需要退款。
- en: If the chatbot's answer comes out in a phony voice that sounds like a 20th century
    robot, then nobody will want to use it.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果聊天机器人的回答听起来像一个 20 世纪的机器人假声音，那么没有人会愿意使用它。
- en: Machine learning in chatbots is here to stay, but there are improvements to
    make in terms of emotional intelligence, like we must now explore in the next
    chapter.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 聊天机器人中的机器学习将持续存在，但在情感智能方面仍有改进的空间，正如我们将在下一章中探讨的那样。
- en: Summary
  id: totrans-289
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Google Dialogflow provides a complete set of tools on Google Cloud to build
    a chatbot, add services to it, and customize it with your cognitive programs.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: Google Dialogflow 提供了一整套工具，允许你在 Google Cloud 上构建聊天机器人，为其添加服务，并通过你的认知程序进行自定义。
- en: A good chatbot fits the requirements. Thinking the architecture through before
    starting development avoids underfitting (not enough functionality) or overfitting
    (functions that will not be used) of the model.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的聊天机器人符合需求。在开发之前思考架构，避免模型的欠拟合（功能不足）或过拟合（不会使用的功能）。
- en: Careful AI preparation, as accomplished in *Chapter 14*, *Preparing the Input
    of Chatbots with Restricted Boltzmann Machines (RBMs) and Principal Component
    Analysis (PCA)*, provides a solid basis for a chatbot by making the path from
    the start of the dialog to the goal of the dialog much shorter and efficient.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 精心准备的人工智能，如*第 14 章*《使用限制玻尔兹曼机（RBM）和主成分分析（PCA）准备聊天机器人输入》中所展示的，为聊天机器人提供了坚实的基础，通过使对话从开始到目标的路径更短且高效。
- en: Determining the right intent (what is expected of the chatbot), determining
    the entities to describe the intent (the subsets of phrases and words), and creating
    a proper dialog will take quite some time.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 确定正确的意图（聊天机器人需要完成的任务）、确定描述意图的实体（短语和词语的子集），以及创建恰当的对话将需要相当长的时间。
- en: If necessary, adding services and specially customized machine learning functions
    will enhance the quality of the system. CUI with speech recognition, voice dialogs,
    and spelling correction features makes a chatbot frictionless to use.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，添加服务和特别定制的机器学习功能将提升系统的质量。具有语音识别、语音对话和拼写纠正功能的CUI使聊天机器人使用起来更加流畅。
- en: The dialog we built in this chapter was based on *yes* answers. We supposed
    that the probabilities generated with the RBM and PCA in *Chapter 14* were correct.
    However, humans are not easily confined to stereotypes.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章构建的对话基于*是*的答案。我们假设在*第14章*中使用RBM和PCA生成的概率是正确的。然而，人类并不容易被固守在刻板印象中。
- en: The *Chapter 16*, *Improving the Emotional Intelligence Deficiencies of Chatbots*,
    explores emotional intelligence through basic concepts, Dialogflow functions,
    and a cognitive approach to improve the content of a chatbot.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '*第16章*，*改善聊天机器人情商不足*，通过基本概念、Dialogflow功能和认知方法来探讨情商，从而提升聊天机器人的内容。'
- en: Questions
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Can a chatbot communicate like a human? (Yes | No)
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 聊天机器人能像人类一样沟通吗？（是 | 否）
- en: Are chatbots necessarily AI programs? (Yes | No)
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 聊天机器人一定是人工智能程序吗？（是 | 否）
- en: Chatbots only need words to communicate. (Yes | No)
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 聊天机器人仅需要语言进行沟通。 （是 | 否）
- en: Do humans only chat with words? (Yes | No)
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 人类仅仅用语言聊天吗？（是 | 否）
- en: Humans only think in words and numbers. (Yes | No)
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 人类只用语言和数字思考。 （是 | 否）
- en: Careful machine learning preparation is necessary to build a cognitive chatbot.
    (Yes | No)
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建认知型聊天机器人需要精心的机器学习准备。 （是 | 否）
- en: For a chatbot to function, a dialog flow needs to be planned. (Yes | No)
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使聊天机器人发挥作用，需要规划对话流程。 （是 | 否）
- en: A chatbot possesses general AI, so no prior development is required. (Yes |
    No)
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 聊天机器人具备通用人工智能，因此无需预先开发。 （是 | 否）
- en: A chatbot translates fine without any function other than a translation API.
    (Yes | No)
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了翻译API外，聊天机器人没有其他功能也能很好地进行翻译。 （是 | 否）
- en: Chatbots can already chat like humans in most cases. (Yes | No)
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在大多数情况下，聊天机器人已经能够像人类一样进行对话。 （是 | 否）
- en: Further reading
  id: totrans-308
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'For more on Google Dialogflow, refer to this link: [https://dialogflow.com/](https://dialogflow.com/)'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于Google Dialogflow的更多信息，请参考此链接：[https://dialogflow.com/](https://dialogflow.com/)
- en: 'For more on chatbots and UI development, refer to this link: [https://www.packtpub.com/application-development/hands-chatbots-and-conversational-ui-development](https://www.packtpub.com/application-development/hands-chatbots-and-conversational-ui-development)'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于聊天机器人和UI开发的更多信息，请参考此链接：[https://www.packtpub.com/application-development/hands-chatbots-and-conversational-ui-development](https://www.packtpub.com/application-development/hands-chatbots-and-conversational-ui-development)
