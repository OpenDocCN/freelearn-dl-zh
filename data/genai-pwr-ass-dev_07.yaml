- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Boost Coding Efficiency for SQL with Auto-Code Generation
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自动代码生成提高SQL的编码效率
- en: 'In this chapter, we will look at the following key topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下关键主题：
- en: An overview of database management languages
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库管理语言的概述
- en: SQL auto-code generation for **d****atabase** **a****dministrators** (**DBAs**)
    using Amazon Q Developer
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Amazon Q Developer为**数据库管理员**（**DBAs**）进行SQL自动代码生成
- en: SQL auto-code generation for **d****ata** **e****ngineers** (**DEs**) using
    Amazon Q Developer
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Amazon Q Developer为**数据工程师**（**DEs**）进行SQL自动代码生成
- en: SQL code explainability and optimization using Amazon Q Developer
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Amazon Q Developer进行SQL代码的可解释性和优化
- en: In our previous chapter, we discussed an overview of web programming languages
    before focusing on two dominant ones used in the software industry – **JavaScript**
    (**JS**) and PHP. We demonstrated how auto-code generation, especially Amazon
    Q Developer, is integrated and can be used by JS and PHP developers to understand
    the basics, learn syntax, and automatically generate code.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们上一章中，我们讨论了网络编程语言的概述，然后重点介绍了在软件行业中使用的两种主导语言——**JavaScript**（**JS**）和PHP。我们展示了自动代码生成，特别是Amazon
    Q Developer，是如何集成并可以被JS和PHP开发者用来理解基础知识、学习语法以及自动生成代码的。
- en: In this chapter, we will focus on database management languages. We’ll dive
    into one of the most dominant database management languages in the software industry,
    **Structured Query Language** (**SQL**). Using two user personas, DBAs and DEs,
    we will introduce how auto-code generation through Amazon Q Developer can help
    you understand the basics, learn syntax, and automatically generate code for common
    DBA and DE activities. Then, we will explore code explainability to support documentation
    and code optimization recommendations provided by Amazon Q Developer for SQL.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将专注于数据库管理语言。我们将深入研究软件行业中占主导地位的数据库管理语言之一——**结构化查询语言**（**SQL**）。使用两个用户角色，数据库管理员（DBAs）和数据库工程师（DEs），我们将介绍如何通过Amazon
    Q Developer的自动代码生成来帮助您理解基础知识、学习语法以及为常见的数据库管理员活动自动生成代码。然后，我们将探讨代码可解释性，以支持Amazon
    Q Developer为SQL提供的文档和代码优化建议。
- en: Overview of database management languages
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库管理语言概述
- en: Let’s dive into another widely used area of systems across industries – database
    management – and explore SQL, a crucial language for handling large datasets,
    tables, views, users, and so on.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解另一个在各个行业中广泛使用的系统领域——数据库管理——并探索SQL，这是处理大型数据集、表、视图、用户等的关键语言。
- en: In the dynamic landscape of database management, SQL serves as the fundamental
    language for interacting with relational databases. SQL enables DBAs and DEs to
    retrieve, manipulate, and manage data efficiently across various **Database Management
    Systems** (**DBMs**). SQL is vital when working on projects that interact with
    relational and/or columnar databases, such as MySQL, PostgreSQL, Oracle Database,
    SQL Server, Teradata, and Amazon RedShift. As databases become increasingly complex
    and critical to business operations, the ability to write efficient and reliable
    SQL code is paramount. Auto-code generation has emerged as a transformative approach
    to streamline SQL development processes, automate routine tasks, and enhance productivity
    for DBAs and DEs alike. Amazon Q Developer, leveraging advanced artificial intelligence
    and machine learning capabilities, offers robust support for SQL code generation.
    This section explores how Amazon Q Developer revolutionizes SQL development, empowers
    DBAs and DEs, and facilitates efficient database management and data manipulation.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据库管理的动态环境中，SQL作为与关系数据库交互的基本语言。SQL使数据库管理员（DBAs）和数据库工程师（DEs）能够高效地在各种**数据库管理系统**（**DBMs**）中检索、操作和管理数据。当在涉及关系数据库和/或列数据库的项目上工作时，如MySQL、PostgreSQL、Oracle数据库、SQL
    Server、Teradata和Amazon RedShift，SQL至关重要。随着数据库变得越来越复杂，对业务运营至关重要，编写高效和可靠的SQL代码的能力变得至关重要。自动代码生成已成为简化SQL开发流程、自动化常规任务并提高数据库管理员和数据库工程师
    alike 生产力的一种变革性方法。Amazon Q Developer利用先进的人工智能和机器学习功能，为SQL代码生成提供强大的支持。本节探讨了Amazon
    Q Developer如何革新SQL开发，赋予数据库管理员和数据库工程师权力，并促进高效的数据库管理和数据操作。
- en: For DBAs, SQL plays a pivotal role in database administration and application
    development by enabling tasks such as defining database structures, managing access
    control, monitoring log tables, and ensuring data integrity. For DEs, SQL is key
    for tasks such as loading data in tables, querying data by joining multiple tables,
    manipulating data using store procedures, and unloading data. However, writing
    SQL queries and maintaining database schemas can be time-consuming and prone to
    errors, particularly in environments with extensive data requirements and complex
    relationships. Amazon Q Developer simplifies SQL development by automating the
    generation of SQL queries, database schema definitions, and data manipulation
    scripts. Through its intuitive chat-style interface, DBAs and DEs can interact
    with Amazon Q Developer to request specific SQL queries or tasks using natural
    language prompts.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据库管理员（DBAs）来说，SQL在数据库管理和应用开发中扮演着至关重要的角色，它使得定义数据库结构、管理访问控制、监控日志表和确保数据完整性等任务成为可能。对于数据工程师（DEs）而言，SQL是执行诸如在表中加载数据、通过连接多个表查询数据、使用存储过程操作数据以及卸载数据等任务的关键。然而，编写SQL查询和维护数据库模式可能会非常耗时且容易出错，尤其是在数据需求广泛且关系复杂的环境中。Amazon
    Q Developer通过自动化生成SQL查询、数据库模式定义和数据操作脚本，简化了SQL开发过程。通过其直观的聊天式界面，DBAs和数据工程师可以使用自然语言提示与Amazon
    Q Developer交互，请求特定的SQL查询或任务。
- en: Furthermore, Amazon Q Developer serves as an educational resource for SQL learners
    and novice DE. It offers interactive tutorials, explanations of SQL concepts,
    and practical examples of SQL queries through its chat interface. This educational
    aspect helps DBAs and DEs grasp SQL fundamentals more effectively and apply them
    to real-world database management and data manipulation scenarios.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Amazon Q Developer还作为SQL学习者和新手数据工程师的教育资源。它通过聊天界面提供交互式教程、SQL概念的说明以及SQL查询的实际示例。这一教育特性帮助DBAs和数据工程师更有效地掌握SQL基础知识，并将其应用于实际的数据库管理和数据操作场景中。
- en: Experienced DBAs and DEs can use Amazon Q Developer’s advanced features, such
    as query optimization and performance tuning suggestions. It analyzes SQL queries
    generated by users, identifies potential performance bottlenecks or inefficiencies,
    and offers recommendations to enhance query execution speed and resource utilization.
    These optimization capabilities are crucial for maintaining optimal database performance
    and scalability in production environments. Teams working on database-driven applications
    can benefit from standardized SQL code templates, shared best practices, and streamlined
    code review processes.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 经验丰富的DBAs和数据工程师可以使用Amazon Q Developer的高级功能，例如查询优化和性能调整建议。它分析用户生成的SQL查询，识别潜在的性能瓶颈或低效之处，并提供建议以提升查询执行速度和资源利用率。这些优化能力对于在生产环境中保持最佳数据库性能和可扩展性至关重要。致力于数据库驱动应用程序的团队可以从标准化的SQL代码模板、共享的最佳实践和简化的代码审查流程中受益。
- en: Now, let’s dive deep to see how Amazon Q Developer can help a DBA and DE. To
    illustrate, I will use Amazon **Relational Database Service** (**RDS**) for MySQL,
    which is an offering from **Amazon Web Services** (**AWS**), and the Amazon Q
    Developer interface with VS Code (refer to [*Chapter 2*](B21378_02.xhtml#_idTextAnchor022)
    for configuration steps for Amazon Q Developer with VS Code).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们深入探讨Amazon Q Developer如何帮助DBAs和数据工程师。为了说明，我将使用Amazon **关系数据库服务**（**RDS**）的MySQL版本，这是Amazon
    Web Services（**AWS**）提供的一项服务，以及与VS Code集成的Amazon Q Developer界面（有关Amazon Q Developer与VS
    Code的配置步骤，请参阅[*第2章*](B21378_02.xhtml#_idTextAnchor022)）。
- en: Note
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Amazon Q Developer uses **large language models** (**LLMs**), which by nature
    are non-deterministic, so you may not get exactly the same answers/code blocks
    shown in the code snapshots. Try to update prompts to get your desired recommendations.
    However, logically, the generated answer/code should meet the requirements.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q Developer使用**大型语言模型**（**LLMs**），这些模型本质上是非确定性的，因此您可能不会得到与代码快照中显示的完全相同的答案/代码块。尝试更新提示以获取您期望的建议。然而，从逻辑上讲，生成的答案/代码应满足要求。
- en: SQL auto-code generation for DBAs using Amazon Q Developer
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon Q Developer为DBAs自动生成SQL代码
- en: First, assume a new DBA is planning to work with Amazon RDS for MySQL and does
    not have any background in this service offering. Let’s use Amazon Q Developer’s
    chat-style interface to educate DBAs, where they can simply ask questions in natural
    language to learn about DBA activities and best practices when it comes to Amazon
    RDS for MySQL.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，假设一位新的DBA计划使用Amazon RDS for MySQL，并且对该服务没有任何背景知识。让我们使用Amazon Q开发者的聊天风格界面来教育DBA，在那里他们可以简单地用自然语言提问，了解关于Amazon
    RDS for MySQL的DBA活动和最佳实践。
- en: Amazon RDS for MySQL basics for DBAs
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon RDS for MySQL的基本知识，适用于DBA
- en: 'Let’s first learn about Amazon RDS for MySQL:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先了解Amazon RDS for MySQL：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Figure 7.1 – Chat style – DBA Amazon RDS for MySQL basic](img/B21378_07_1.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图7.1 – 聊天风格 – MySQL DBA的Amazon RDS基本操作](img/B21378_07_1.jpg)'
- en: Figure 7.1 – Chat style – DBA Amazon RDS for MySQL basic
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.1 – 聊天风格 – MySQL DBA的Amazon RDS基本
- en: Note that Amazon Q Developer provided the key information about Amazon RDS for
    MySQL, related to important topics such as **Managed Service**, **Scalability**,
    **High** **Availability**, **Read Replicas**, and **Automated Backups**.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Amazon Q开发者提供了关于Amazon RDS for MySQL的关键信息，涉及重要主题，如**托管服务**、**可伸缩性**、**高可用性**、**只读副本**和**自动备份**。
- en: 'Now, let’s dive deep to understand DBA-specific information related to Amazon
    RDS for MySQL:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们深入了解与Amazon RDS for MySQL相关的DBA特定信息：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Figure 7.2 – Chat style – Amazon RDS for basic MySQL DBA activities](img/B21378_07_2.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图7.2 – 聊天风格 – Amazon RDS for MySQL的基本DBA活动](img/B21378_07_2.jpg)'
- en: Figure 7.2 – Chat style – Amazon RDS for basic MySQL DBA activities
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.2 – 聊天风格 – Amazon RDS for MySQL的基本MySQL DBA活动
- en: We will not dive deep into each DBA activity suggested by Amazon Q Developer;
    just note that Amazon Q Developer utilized the key areas of responsibilities of
    a DBA, such as creating and managing databases, monitoring and optimizing performance,
    backup and recovery, high availability and replication, security management, and
    upgrading and patching to provide Amazon RDS with MySQL-specific information.
    In addition, it also provided resources that can be used for further reading.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会深入探讨Amazon Q开发者建议的每个DBA活动；只需注意，Amazon Q开发者利用了DBA职责的关键领域，如创建和管理数据库、监控和优化性能、备份和恢复、高可用性和复制、安全管理以及升级和打补丁，为Amazon
    RDS提供MySQL特定的信息。此外，它还提供了可用于进一步阅读的资源。
- en: Security management is one of the most important responsibilities of DBAs. Managed
    AWS services such as Amazon RDS have mechanisms that differ from on-premises databases,
    so it’s essential that DBAs understand these differences. Let’s ask Amazon Q Developer
    to provide more information to help DBAs understand specific details and best
    practices.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 安全管理是数据库管理员（DBA）最重要的职责之一。管理型AWS服务，如Amazon RDS，具有与本地数据库不同的机制，因此DBA了解这些差异至关重要。让我们请Amazon
    Q开发者提供更多信息，以帮助DBA了解Amazon RDS for MySQL的具体细节和最佳实践。
- en: To illustrate the best practice recommendations, we’ll ask Amazon Q Developer
    about key security resource configurations, such as security groups for Amazon
    RDS for MySQL databases.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明最佳实践建议，我们将询问Amazon Q开发者关于关键安全资源配置，例如Amazon RDS for MySQL数据库的安全组。
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Figure 7.3 – Chat style – Amazon RDS for MySQL security group best practices](img/B21378_07_3.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图7.3 – 聊天风格 – Amazon RDS for MySQL安全组最佳实践](img/B21378_07_3.jpg)'
- en: Figure 7.3 – Chat style – Amazon RDS for MySQL security group best practices
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3 – 聊天风格 – Amazon RDS for MySQL安全组最佳实践
- en: As shown in the preceding screenshot, Amazon Q Developer provided the top 10
    best practices that DBAs can follow to configure security groups for Amazon RDS
    for MySQL.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示，Amazon Q开发者提供了DBA可以遵循的10个最佳实践，以配置Amazon RDS for MySQL的安全组。
- en: SQL generation for DBAs
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为DBA生成SQL
- en: 'Now, let’s ask Amazon Q Developer about the common SQL commands used by Amazon
    RDS for MySQL DBAs:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们询问Amazon Q开发者关于Amazon RDS for MySQL DBA使用的常见SQL命令：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Figure 7.4 – Chat style – an Amazon RDS for MySQL common SQL command](img/B21378_07_4.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图7.4 – 聊天风格 – Amazon RDS for MySQL的常见SQL命令](img/B21378_07_4.jpg)'
- en: Figure 7.4 – Chat style – an Amazon RDS for MySQL common SQL command
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4 – 聊天风格 – Amazon RDS for MySQL的常见SQL命令
- en: As shown in the preceding screenshot, the Amazon Q Developer chat-style interface
    provides multiple commonly used SQL commands with syntax to make it easy to understand.
    New Amazon RDS for MySQL DBAs will realize that while some traditional DBA activities
    are managed by Amazon RDS, activities such as creating databases and schemas,
    simple tables, and database users with specific access permissions still require
    DBA attention.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如前截图所示，Amazon Q Developer的聊天式界面提供了多个常用SQL命令及其语法，以便于理解。新Amazon RDS for MySQL
    DBA将意识到，虽然一些传统的DBA活动由Amazon RDS管理，但创建数据库和模式、简单的表以及具有特定访问权限的数据库用户等活动仍需要DBA的关注。
- en: So, based on the preceding information for DBAs, let’s start writing SQL commands
    to carry out common DBA tasks with Amazon Q Developer’s help. To illustrate, I
    am going to use the VS Code script editor window with single-line and multi-line
    prompts.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，基于之前为DBA提供的信息，让我们开始编写SQL命令，在Amazon Q Developer的帮助下执行常见的DBA任务。为了说明，我将使用VS
    Code脚本编辑器窗口的单行和多行提示。
- en: 'Let’s ask Amazon Q Developer to provide a SQL command to create a database
    and schema:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们让Amazon Q Developer提供一个创建数据库和模式的SQL命令：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure 7.5 – A prompt for Amazon RDS for MySQL to create a database and schema](img/B21378_07_5.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图7.5 – 为Amazon RDS for MySQL创建数据库和模式的提示](img/B21378_07_5.jpg)'
- en: Figure 7.5 – A prompt for Amazon RDS for MySQL to create a database and schema
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5 – 为Amazon RDS for MySQL创建数据库和模式的提示
- en: Note that Amazon Q Developer provided complete, error-free SQL code to create
    the database and schema, as per the names provided in the prompt following MySQL
    specifics.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Amazon Q Developer提供了创建数据库和模式所需的完整、无错误的SQL代码，按照提示中提供的MySQL具体名称。
- en: 'Now, let’s ask Amazon Q Developer to create a simple table:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们让Amazon Q Developer创建一个简单的表：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Figure 7.6 – A prompt for Amazon RDS for MySQL to create a table](img/B21378_07_6.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图7.6 – 为Amazon RDS for MySQL创建表的提示](img/B21378_07_6.jpg)'
- en: Figure 7.6 – A prompt for Amazon RDS for MySQL to create a table
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.6 – 为Amazon RDS for MySQL创建表的提示
- en: Note that, as prompted, Amazon Q Developer provided table DDL with a primary
    key constraint.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，正如提示的那样，Amazon Q Developer提供了带有主键约束的表DDL。
- en: 'Now, let’s ask Amazon Q Developer to create a database user and grant specific
    access permission to the user in the preceding table:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们让Amazon Q Developer创建一个数据库用户，并在前表中授予用户特定的访问权限：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We get the SQL code for this as shown in *Figure 7**.7*.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到的SQL代码如图*图7.7*所示。
- en: '![Figure 7.7 – A prompt for Amazon RDS for MySQL to create a user and grant
    user access](img/B21378_07_7.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图7.7 – 为Amazon RDS for MySQL创建用户和授予用户访问权限的提示](img/B21378_07_7.jpg)'
- en: Figure 7.7 – A prompt for Amazon RDS for MySQL to create a user and grant user
    access
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.7 – 为Amazon RDS for MySQL创建用户和授予用户访问权限的提示
- en: 'Now, let’s create SQL to remove the previously granted `update` privilege:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们编写SQL语句来移除之前授予的`update`权限：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Figure 7.8 – A prompt for Amazon RDS for MySQL to revoke access](img/B21378_07_8.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图7.8 – 为Amazon RDS for MySQL撤销访问权限的提示](img/B21378_07_8.jpg)'
- en: Figure 7.8 – A prompt for Amazon RDS for MySQL to revoke access
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.8 – 为Amazon RDS for MySQL撤销访问权限的提示
- en: 'Now, let’s carry out the clean-up tasks to drop the user, table, schema, and
    database:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们执行清理任务，删除用户、表、模式和数据库：
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We get the SQL code for this as shown in *Figure 7**.9*.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到的SQL代码如图*图7.9*所示。
- en: '![Figure 7.9 – A prompt for Amazon RDS for MySQL to drop objects](img/B21378_07_9.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图7.9 – 为Amazon RDS for MySQL撤销对象的提示](img/B21378_07_9.jpg)'
- en: Figure 7.9 – A prompt for Amazon RDS for MySQL to drop objects
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.9 – 为Amazon RDS for MySQL撤销对象的提示
- en: As illustrated here, by using Amazon RDS for MySQL, a DBA can simply use a chat-style
    and/or prompt-style interface to interact with Amazon Q Developer, receiving error-free
    SQL code to carry out daily activities. To explore further, feel free to use additional
    prompts to get SQL code from Amazon Q Developer related to DBA activities.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如此所示，通过使用Amazon RDS for MySQL，DBA可以简单地使用聊天式和/或提示式界面与Amazon Q Developer交互，接收无错误的SQL代码以执行日常活动。为了进一步探索，请随意使用额外的提示从Amazon
    Q Developer获取与DBA活动相关的SQL代码。
- en: In the next section, let’s see how Amazon Q Developer can help a DE who is mainly
    responsible for writing SQL code to understand data, join multiple tables, manipulate
    data, and load data into tables.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看看Amazon Q Developer如何帮助一个主要负责编写SQL代码以理解数据、连接多个表、操作数据以及将数据加载到表中的DE。
- en: SQL auto-code generation for DEs using Amazon Q Developer
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon Q Developer为DEs自动生成SQL代码
- en: First, let’s assume that a new DE is planning to work with Amazon RDS for MySQL
    and does not have any background in the SQL command offerings. In the next sections,
    we will explore how Amazon Q Developer can support DEs with common **Data Manipulation
    Language** (**DML**) support, syntaxes, and basic SQL queries. Let’s start with
    basic DML support.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们假设一个新 DE 正在计划使用 Amazon RDS for MySQL，并且对 SQL 命令提供没有背景知识。在接下来的几节中，我们将探讨
    Amazon Q Developer 如何支持 DE 的常见 **数据操作语言** (**DML**) 支持、语法和基本 SQL 查询。让我们从基本的 DML
    支持开始。
- en: Amazon RDS for MySQL basics for DEs
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon RDS for MySQL 基础知识对 DE
- en: 'Let’s use Amazon Q Developer’s chat-style interface to educate DEs, where they
    can simply ask questions in a natural language to learn about the available commands
    and functions for Amazon RDS for MySQL. Since data manipulation is a crucial activity
    for DEs, which falls under a DML, let’s ask Amazon Q Developer to provide information
    on the support offered by Amazon RDS for DML operations:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 Amazon Q Developer 的聊天风格界面来教育 DE，他们可以简单地用自然语言提出问题，了解 Amazon RDS for MySQL
    可用的命令和函数。由于数据操作是 DE 的关键活动，属于 DML，让我们请 Amazon Q Developer 提供有关 Amazon RDS 对 DML
    操作支持的信息：
- en: '[PRE9]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As you can see in the following screenshot, Amazon Q Developer provides commonly
    used available SQL commands such as **SELECT**, **INSERT**, **UPDATE**, and **DELETE**.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如以下截图所示，Amazon Q Developer 提供了常用的可用 SQL 命令，如 **SELECT**、**INSERT**、**UPDATE**
    和 **DELETE**。
- en: '![Figure 7.10 – Chat style – Amazon RDS for MySQL DMLs for a DE](img/B21378_07_10.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.10 – 聊天风格 – Amazon RDS for MySQL 对 DE 的 DML](img/B21378_07_10.jpg)'
- en: Figure 7.10 – Chat style – Amazon RDS for MySQL DMLs for a DE
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.10 – 聊天风格 – Amazon RDS for MySQL 对 DE 的 DML
- en: SQL generation for DEs
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为 DE 生成 SQL
- en: Let’s dive deeper and ask about the SQL commands, working with some of the common
    SQL operations to understand how Amazon Q Developer can help DEs learn more, as
    well as auto-generate SQL code using different prompting techniques.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解并询问 SQL 命令，通过一些常见的 SQL 操作来了解 Amazon Q Developer 如何帮助 DE 学习更多，以及使用不同的提示技术自动生成
    SQL 代码。
- en: 'Let’s ask one more question about SQL syntax before we start writing SQL code:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写 SQL 代码之前，让我们再问一个关于 SQL 语法的问题：
- en: '[PRE10]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Figure 7.11 – Chat style – an Amazon RDS for MySQL SELECT command for a DE](img/B21378_07_11.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.11 – 聊天风格 – Amazon RDS for MySQL 对 DE 的 SELECT 命令提示](img/B21378_07_11.jpg)'
- en: Figure 7.11 – Chat style – an Amazon RDS for MySQL SELECT command for a DE
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.11 – 聊天风格 – Amazon RDS for MySQL 对 DE 的 SELECT 命令提示
- en: Note that Amazon Q Developer provided detailed clauses and a sample example
    at the end to help users understand the usage of the `select` command.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 Amazon Q Developer 在末尾提供了详细的子句和示例，以帮助用户理解 `select` 命令的使用。
- en: Now, let’s start writing SQL commands to carry out common DE tasks with Amazon
    Q Developer’s help. To illustrate, I am going to use the VS Code script editor
    window with single-line and multi-line prompts.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在 Amazon Q Developer 的帮助下开始编写 SQL 命令，以执行常见的 DE 任务。为了说明，我将使用 VS Code 脚本编辑器窗口的单行和多行提示。
- en: 'Let’s start with simple `select` commands from tables, assuming that tables
    are already present and the user has access to select from them:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从简单的 `select` 命令开始，假设表已经存在，并且用户有权从中选择：
- en: '[PRE11]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Figure 7.12 – A prompt for an Amazon RDS for MySQL select SQL command for
    a DE](img/B21378_07_12.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.12 – Amazon RDS for MySQL 对 DE 的 select SQL 命令提示](img/B21378_07_12.jpg)'
- en: Figure 7.12 – A prompt for an Amazon RDS for MySQL select SQL command for a
    DE
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.12 – Amazon RDS for MySQL 对 DE 的 select SQL 命令提示
- en: 'Now, let’s join these two tables to de-normalize the data, by using `join`:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过使用 `join` 来将这两个表连接起来，以去规范化数据：
- en: '[PRE12]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Figure 7.13 – A prompt for an Amazon RDS for MySQL join SQL command for a
    DE](img/B21378_07_13.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.13 – Amazon RDS for MySQL 对 DE 的 join SQL 命令提示](img/B21378_07_13.jpg)'
- en: Figure 7.13 – A prompt for an Amazon RDS for MySQL join SQL command for a DE
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.13 – Amazon RDS for MySQL 对 DE 的 join SQL 命令提示
- en: Note the `pull all records from table_emp` instruction in our prompt, which
    Amazon Q Developer correctly converted to `LEFT OUTER JOIN` between two tables.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们提示中的 `pull all records from table_emp` 指令，Amazon Q Developer 正确将其转换为两个表之间的
    `LEFT OUTER JOIN`。
- en: 'Now, let’s use prompts to create a “store procedure” with output from the preceding
    join to load into an existing table:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用提示来创建一个“存储过程”，将前面的 join 输出加载到现有的表中：
- en: '[PRE13]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Figure 7.14 – A prompt for an Amazon RDS for MySQL join SQL command for DE](img/B21378_07_14.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.14 – Amazon RDS for MySQL 对 DE 的 join SQL 命令提示](img/B21378_07_14.jpg)'
- en: Figure 7.14 – A prompt for an Amazon RDS for MySQL join SQL command for DE
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.14 – Amazon RDS for MySQL 对 DE 的 join SQL 命令提示
- en: Note that Amazon Q Developer created error-free code to create a “procedure”
    based on our instructions, and it also added the appropriate function to handle
    uppercase instructions for `emp_id`.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Amazon Q 开发者根据我们的指示创建了无错误的代码来创建一个“过程”，并且它还添加了适当的函数来处理 `emp_id` 的大写指令。
- en: In the preceding examples, we just scratched the surface of Amazon Q Developer’s
    integration for SQL code development. Feel free to try different questions in
    chat-style prompts and interactive coding to explore further.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们只是触及了 Amazon Q 开发者对 SQL 代码开发的集成表面。请随意尝试不同的聊天式提示和交互式编码来进一步探索。
- en: Now, let’s explore how the Amazon Q Developer supports code explainability and
    optimization for SQL.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们探索 Amazon Q 开发者如何支持 SQL 代码的可解释性和优化。
- en: SQL code explainability and optimization using Amazon Q Developer
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon Q 开发者进行 SQL 代码可解释性和优化
- en: Amazon Q Developer offers a simple interface to achieve code explainability
    and optimization. For more details on the explainability and optimization topic,
    refer to [*Chapter 12*](B21378_12.xhtml#_idTextAnchor181).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q 开发者提供了一个简单的界面来实现代码的可解释性和优化。有关可解释性和优化主题的更多详细信息，请参阅 [*第 12 章*](B21378_12.xhtml#_idTextAnchor181)。
- en: To illustrate, I am going to use the previously auto-generated code during the
    store procedure creation task. As shown in the following screenshot, highlight
    the code section generated during the store procedure, right-click to open the
    pop-up menu, select **Amazon Q**, and then choose **Explain** for code explainability
    or **Optimize** for optimization recommendations.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明，我将在存储过程创建任务期间使用之前自动生成的代码。如图下所示，突出显示存储过程中生成的代码部分，右键单击以打开弹出菜单，选择 **Amazon
    Q**，然后选择 **解释** 以实现代码可解释性或选择 **优化** 以获取优化建议。
- en: '![Figure 7.15 –SQL code explainability and optimization](img/B21378_07_15.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.15 –SQL 代码可解释性和优化](img/B21378_07_15.jpg)'
- en: Figure 7.15 –SQL code explainability and optimization
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.15 –SQL 代码可解释性和优化
- en: This will pop up Amazon Q Developer’s chat-style interface and use the full
    code for analysis.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这将弹出 Amazon Q 开发者的聊天式界面，并使用完整的代码进行分析。
- en: 'For explainability, Amazon Q Developer provides details for almost every line
    of code and at the end provides a summary, such as the following: “**When the
    join_emp_dept stored procedure is called, it will execute the SELECT statement,
    which performs a left outer join between the table_emp and table_dept tables based
    on the emp_id column. The resulting data, including the employee ID in uppercase,
    employee name, and department name, will be inserted into the** **derom_data table****”**.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 对于可解释性，Amazon Q 开发者为几乎每一行代码提供详细信息，并在最后提供一个总结，例如以下内容：“**当调用 join_emp_dept 存储过程时，它将执行
    SELECT 语句，根据 emp_id 列在 table_emp 和 table_dept 表之间执行左外连接。包括大写员工 ID、员工姓名和部门名称的结果数据将被插入到**
    **derom_data 表** **中** **”****。
- en: For optimization, even though we had a small code fragment with relatively simple
    logic, Amazon Q Developer still provided recommendations to improve the code and
    rewrite it, following the best practices on `join` implementation, added column
    listing to the `insert` statement, added `coalesce`, and so on.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 对于优化，尽管我们有一个相对简单的逻辑的小代码片段，但 Amazon Q 开发者仍然提供了改进代码和重写代码的建议，遵循 `join` 实现的最佳实践，添加到
    `insert` 语句中的列列表，添加 `coalesce` 等。
- en: As we can see in the preceding topics, Amazon Q Developer provides meaningful
    inputs for DBAs and Des, with auto-generated SQL for relational databases such
    as Amazon RDS MySQL. Additionally, Amazon Q Developer seamlessly integrates with
    columnar databases such as Amazon Redshift. AWS has integrated Amazon Redshift,
    a fully managed AI-powered data warehouse service, with a code assistant that
    allows users to use **natural language processing** (**NLP**) to generate complete
    SQL queries. We will explore this topic in [*Chapter 14*](B21378_14.xhtml#_idTextAnchor210)
    in the *Code assistance integration with Amazon* *Redshift* section.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Amazon Q 开发者为数据库管理员（DBA）和开发者提供了有意义的输入，为关系数据库（如 Amazon RDS MySQL）自动生成 SQL
    代码。此外，Amazon Q 开发者与列式数据库（如 Amazon Redshift）无缝集成。AWS 将完全托管的人工智能数据仓库服务 Amazon Redshift
    与代码助手集成，允许用户使用**自然语言处理**（**NLP**）生成完整的 SQL 查询。我们将在 *第 14 章*（[B21378_14.xhtml#_idTextAnchor210]）的
    *与 Amazon Redshift 的代码辅助集成* 部分探讨此主题。
- en: In addition to SQL, Amazon Q Developer supports several other programming languages.
    There are many developments happening in this area, and we anticipate several
    of these in support of additional languages (check the *References* section at
    the end of the chapter).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 SQL 之外，Amazon Q Developer 还支持多种其他编程语言。该领域正在进行许多开发，我们预计其中一些将支持额外的语言（请参阅本章末尾的*参考文献*部分）。
- en: Summary
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Amazon Q Developer represents a groundbreaking innovation in SQL code generation
    and database management for DBAs and DEs. Through various prompting techniques
    and chat-style interactions, professionals can obtain SQL code from Amazon Q Developer.
    This capability helps automate routine SQL tasks, improve code consistency, and
    offer advanced optimization capabilities. It empowers database professionals to
    focus on strategic initiatives, innovation, and delivering superior database-driven
    applications.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q Developer 代表了 DBA 和 DE 在 SQL 代码生成和数据库管理方面的突破性创新。通过各种提示技术和聊天式交互，专业人士可以从
    Amazon Q Developer 获取 SQL 代码。这一功能有助于自动化常规的 SQL 任务，提高代码一致性，并提供高级优化功能。它使数据库专业人士能够专注于战略举措、创新和交付高质量的数据库驱动应用程序。
- en: The integration of Amazon Q Developer with SQL also facilitates collaborative
    database development. Teams working on database-driven applications benefit from
    standardized SQL code templates, shared best practices, and streamlined code review
    processes. This consistency enhances team productivity, reduces the risk of errors
    during database schema modifications or data migrations, and accelerates the time-to-market
    for database-driven applications.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Amazon Q Developer 与 SQL 集成也促进了协作数据库开发。致力于数据库驱动应用程序的团队可从标准化的 SQL 代码模板、共享的最佳实践和简化的代码审查流程中受益。这种一致性提高了团队的生产力，降低了在数据库架构修改或数据迁移过程中出现错误的风险，并加快了数据库驱动应用程序的上市时间。
- en: Additionally, Amazon Q Developer offers insights into SQL code optimization,
    ensuring efficient query performance and resource utilization. By continuously
    improving its recommendations, Amazon Q Developer adapts to the evolving needs
    of database professionals, providing cutting-edge solutions to complex database
    challenges.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Amazon Q Developer 提供了关于 SQL 代码优化的见解，确保高效的查询性能和资源利用。通过不断改进其建议，Amazon Q Developer
    适应数据库专业人士不断变化的需求，为复杂的数据库挑战提供尖端解决方案。
- en: Thus, Amazon Q Developer not only automates routine SQL tasks but also fosters
    collaboration and innovation within database teams, ultimately leading to higher
    quality and more efficient database-driven applications.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Amazon Q Developer 不仅自动化了常规的 SQL 任务，而且促进了数据库团队内的协作和创新，最终导致更高质量和更高效的数据库驱动应用程序。
- en: In this chapter, we scratched the surface of Amazon Q Developer’s support for
    DBAs and DEs. Feel free to explore other SQL options related to creating common
    database objects, such as views, materialized views, functions, and complex SQL
    queries.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们只是触及了 Amazon Q Developer 对 DBA 和 DE 的支持。您可以自由探索与创建常见数据库对象相关的其他 SQL 选项，例如视图、物化视图、函数和复杂的
    SQL 查询。
- en: In the next chapter, we will introduce how Amazon Q Developer benefits system
    administration and automation using shell scripts.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍 Amazon Q Developer 如何通过使用 shell 脚本来帮助系统管理和自动化。
- en: References
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Supported languages for Amazon Q Developer in the IDE: [https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/q-language-ide-support.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/q-language-ide-support.html)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在 IDE 中支持 Amazon Q Developer 的语言：[https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/q-language-ide-support.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/q-language-ide-support.html)
