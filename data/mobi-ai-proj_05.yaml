- en: Building an ML Model to Predict Car Damage Using TensorFlow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 TensorFlow 构建一个预测汽车损坏的 ML 模型
- en: In this chapter, we will build a system that detects the level of damage  that's
    been done to a vehicle by analyzing photographs using **transfer learning**. A
    solution like this will be helpful in reducing the cost of insurance claims, as
    well as making the process simpler for vehicle owners. If the system is implemented
    properly, in an ideal scenario, the user will upload a bunch of photographs of
    the damaged vehicle, the photos will go through damage assessment, and the insurance
    claim will be processed automatically.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将建立一个系统，通过分析照片使用**迁移学习**来检测车辆的损坏程度。这样的解决方案将有助于降低保险索赔成本，并简化车主的流程。如果系统被正确实施，在理想的情况下，用户将上传一组损坏车辆的照片，照片将经过损伤评估，保险索赔将自动处理。
- en: There are a lot of risks and challenges involved in implementing a perfect solution
    for this use case. To start with, there are multiple unknown conditions that could
    have caused damage to the car. We are not aware of the outdoor environment, surrounding
    objects, light in the area, and the quality of the vehicle before the incident.
    Passing through all these hurdles and figuring out a common solution for the problem
    is challenging. This is a common problem across any computer vision-based scenario.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在实施这种用例的完美解决方案中涉及许多风险和挑战。首先，存在多种未知条件可能导致车辆损坏。我们不了解室外环境、周围物体、区域内的光线以及事故前车辆的质量。通过所有这些障碍并找出问题的共同解决方案是具有挑战性的。这是任何基于计算机视觉的场景中的常见问题。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Transfer learning basics
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移学习基础知识
- en: Image dataset collections
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像数据集收集
- en: Setting up a web application
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置一个 Web 应用程序
- en: Training our own TensorFlow model
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练我们自己的 TensorFlow 模型
- en: Building a web app that consumes the model
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搭建一个消费模型的 Web 应用程序
- en: Transfer learning basics
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 迁移学习基础知识
- en: To implement the car damage prediction system, we are going to build our own
    TensorFlow-based **machine learning** (**ML**) model for the vehicle datasets.
    Millions of parameters are needed with modern recognition models. We need a lot
    of time and data to train a new model from scratch, as well as hundreds of **Graphical
    Processing Units** (**GPUs**) or **Tensor Processing Units** (**TPUs**) that run
    for hours.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现汽车损坏预测系统，我们将基于 TensorFlow 构建我们自己的机器学习（**ML**）模型，用于车辆数据集。现代识别模型需要数百万个参数。我们需要大量时间和数据来从头开始训练新模型，以及数百个**图形处理单元**（**GPUs**）或**张量处理单元**（**TPUs**）运行数小时。
- en: Transfer learning makes this task easier by taking an existing model that is
    already trained and reusing it on a new model. In our example, we will use the
    feature extraction capabilities from the **MobileNet** model and train our own
    classifiers on top of it. Even if we don't get 100% accuracy, this works best
    in a lot of cases, especially on a mobile phone where we don't have heavy resources.
    We can easily train this model on a typical laptop for a few hours, even without
    a GPU. The model was built on a MacBook Pro with a 2.6 GHz Intel i5 processor
    and 8 GB RAM.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用已经训练好的现有模型和在其上重新训练我们自己的分类器，**迁移学习**使这项任务变得更加容易。在我们的示例中，我们将使用**MobileNet**模型的特征提取能力。即使我们不能达到100%的准确率，这在许多情况下仍然有效，特别是在手机上，我们没有重型资源的情况下。我们甚至可以在典型的笔记本电脑上轻松训练这个模型数小时，即使没有GPU。该模型是在配备2.6
    GHz 英特尔 i5 处理器和 8 GB 内存的 MacBook Pro 上构建的。
- en: Transfer learning is one of the most popular approaches in deep learning, where
    a model that's been developed for one task is reused for another model on a different
    task. Here, pre-trained models are used as a first step in computer vision-based
    tasks or **natural language processing** (**NLP**) based tasks, provided we have
    very limited computational resources and time.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在深度学习中，**迁移学习**是最流行的方法之一，其中一个为一项任务开发的模型被重用于另一个不同任务的模型上。在基于计算机视觉的任务或基于**自然语言处理**（**NLP**）的任务中，我们可以利用预训练模型作为第一步，前提是我们拥有非常有限的计算资源和时间。
- en: In a typical computer vision-based problem, neural networks try to detect edges
    in their initial level layers, shapes in the middle level layers, and more specific
    features in the final level layers. With transfer learning, we will use the initial
    and middle level layers and only retrain the final level layers.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的基于计算机视觉的问题中，神经网络尝试在其初始级别层中检测边缘，在中间级别层中检测形状，并在最终级别层中检测更具体的特征。通过迁移学习，我们将使用初始和中间级别的层，并仅重新训练最终级别的层。
- en: 'For example, if we have a model that''s trained to recognize an apple from
    the input image, it could be reused to detect water bottles. In the initial layers,
    the model has been trained to recognize objects, so we will retrain only the final
    level layers. In that way, our model will learn what will differentiate water
    bottles from other objects. This process can be seen in the following diagram:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，如果我们有一个训练用于识别苹果的模型，我们可以将其重用于检测水瓶。在初始层中，模型已被训练识别物体，因此我们只需重新训练最后几层。这样，我们的模型就能学到如何区分水瓶与其他物体。这个过程可以通过下图看到：
- en: '![](img/72e3df71-eb01-438a-b39c-4ccd737203f9.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/72e3df71-eb01-438a-b39c-4ccd737203f9.png)'
- en: Typically, we need a lot of data to train our model, but most of the time we
    will not have enough relevant data. That is where transfer learning comes into
    the picture, and is where you can train your model with very little data.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们需要大量数据来训练我们的模型，但大多数时候我们没有足够的相关数据。这时迁移学习就派上用场了，它允许你用很少的数据来训练模型。
- en: If your old classifier was developed and trained using TensorFlow, you can reuse
    the same model to retrain a few of the layers for your new classifier. This will
    work perfectly, but only if the features that were learned from the old task are
    more generic in nature. For example, you can't reuse a model that was developed
    for a text classifier on an image classification-based task. Also, the input data
    size should match for both the models. If the size doesn't match, we need to add
    an additional preprocessing step to resize the input data accordingly.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你之前的分类器是使用 TensorFlow 开发并训练的，你可以重复使用相同的模型，并重新训练其中一些层以适应新的分类器。这是完全可行的，但前提是从旧任务中学到的特征具有更通用的性质。例如，你不能将为文本分类器开发的模型直接用于图像分类任务。此外，两个模型的输入数据大小必须一致。如果大小不匹配，我们需要添加一个额外的预处理步骤来调整输入数据的大小。
- en: Approaches to transfer learning
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 迁移学习方法
- en: 'Let''s look into different approaches to transfer learning. There could be
    different names given to the approaches, but the concepts remain the same:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨迁移学习的不同方法。可能有不同的名称用于描述这些方法，但概念保持一致：
- en: '**Using a pre-trained model**: There are a lot of pre-trained models out there
    to satisfy your basic deep learning research. In this book, we have used a lot
    of pre-trained models from where we derive our results.'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用预训练模型**：目前有很多预训练模型可以满足你基本的深度学习研究需求。在本书中，我们使用了很多预训练模型，并从中得出我们的结果。'
- en: '**Training a model for reuse**: Let''s assume that you want to solve problem
    A, but you don''t have enough data to achieve the results. To solve this issue,
    we have another problem, B, where we have enough data. In that case, we can develop
    a model for problem B, and use the model as a starting point for problem A. Whether
    we need to reuse all the layers or only a few layers is dependent on the type
    of problem that we are solving.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**训练一个可重用的模型**：假设你想解决问题 A，但你没有足够的数据来实现目标。为了解决这个问题，我们有另一个问题 B，其中有足够的数据。在这种情况下，我们可以为问题
    B 开发一个模型，并将该模型作为问题 A 的起点。是否需要重用所有层或仅重用某些层，取决于我们所解决问题的类型。'
- en: '**Feature ex****traction**: With deep learning, we can extract the features
    of the dataset. Most of the time, the features are handcrafted by the developers.
    Neural networks have the ability to learn which features you have to pass on,
    and which ones you don''t. For example, we will only use the initial layers to
    detect the right representation of features, but we will not use the output because
    it might be more specific to one particular task. We will simply feed the data
    into our network and use one of the immediate middle level layers as the output
    layer.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**特征提取**：通过深度学习，我们可以提取数据集的特征。大多数时候，特征是由开发者手工设计的。神经网络有能力学习哪些特征需要传递，哪些特征不需要传递。例如，我们只会使用初始层来检测特征的正确表示，而不会使用输出层，因为它可能过于特定于某个特定任务。我们将简单地将数据输入网络，并使用其中一个中间层作为输出层。'
- en: With this, we will start building our model using TensorFlow.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们将开始使用 TensorFlow 构建我们的模型。
- en: Building the TensorFlow model
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 TensorFlow 模型
- en: Building your own custom model requires following a step-by-step procedure.
    To begin, we are going to use the TensorFlow Hub to feed images using pre-trained
    models.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 构建你自己的自定义模型需要遵循一个逐步的过程。首先，我们将使用 TensorFlow Hub 来通过预训练模型输入图像。
- en: To learn more about TensorFlow Hub, please refer to [https://www.tensorflow.org/hub](https://www.tensorflow.org/hub).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于TensorFlow Hub的信息，请参考[https://www.tensorflow.org/hub](https://www.tensorflow.org/hub)。
- en: Installing TensorFlow
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装TensorFlow
- en: 'While writing this book, TensorFlow r1.13 was available. Revision 2.0.0 is
    also available on the alpha stage, but we will stay with a stable version. The
    TensorFlow Hub has a dependency on the TensorFlow library that can be installed
    with `pip`, as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在写这本书时，TensorFlow r1.13版本已经发布。同时，2.0.0版本也处于Alpha阶段，但我们将使用稳定版本。TensorFlow Hub依赖于可以通过`pip`安装的TensorFlow库，如下所示：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When the `tensorflow` library is installed, we need to start collecting our
    image dataset before the training process starts. We need to look into a lot of
    things before we begin our training.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当`tensorflow`库安装完成后，我们需要在训练过程开始之前收集我们的图像数据集。在开始训练之前，我们需要考虑很多因素。
- en: Training the images
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 训练图像
- en: In this section, we will collect the images and keep them organized under their
    respective folder categories.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将收集图像并将其按类别整理在各自的文件夹中。
- en: 'A few common steps for choosing your own dataset of images are as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 选择自己图像数据集的几个常见步骤如下：
- en: First of all, you need at least 100 photos of each image category that you want
    to recognize. The accuracy of your model is directly proportional to the number
    of images in the set.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，你需要为每个想要识别的图像类别至少准备100张照片。模型的准确性与数据集中的图像数量成正比。
- en: You need to make sure that you have more relevant images in the image set. For
    example, if you have taken an image set with a single color background let's say
    all the objects in the images have a white background and are shot indoors and
    users are trying to recognize objects with distracting backgrounds (for example,
    colorful backgrounds shot outdoors), this won't result in better accuracy.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要确保图像集中的图像更具相关性。例如，如果你拍摄了一组背景单一的图像，比如所有图像的背景都是白色且拍摄于室内，而用户需要识别具有干扰背景（例如拍摄于户外、背景五颜六色）的物体，那么这样做并不会提高准确性。
- en: Choose images with a variety of backgrounds. For example, if you are picking
    images with only two background colors, then your prediction will have a preference
    toward those two colors, rather than the object in the image.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择具有多样背景的图像。例如，如果你只选择了具有两种背景颜色的图像，那么你的预测将倾向于这两种颜色，而不是图像中的物体。
- en: Try to split bigger categories into smaller divisions. For example, instead
    of animal, you might use cat, dog, or tiger.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试将较大的类别拆分为更小的子类。例如，你可以使用“猫”，“狗”或“老虎”来代替“动物”。
- en: Make sure that you select all the input images that contain the objects that
    you are trying to recognize. For example, if you have a dog-recognizing app, we
    wouldn't use cars, buildings, or mountains as input images. In that case, it is
    better to have a separate classifier for the unrecognizable images.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保选择所有包含你想识别的物体的输入图像。例如，如果你有一个识别狗的应用，我们就不会使用汽车、建筑物或山脉的图片作为输入图像。在这种情况下，最好为无法识别的图像设置一个独立的分类器。
- en: Ensure that you label images properly. For example, labeling a flower as jasmine
    might have the whole plant in the picture or a person behind it. The accuracy
    of our algorithm will differ when there are distracting objects in the input images.
    Let's say you have taken a few food item images from Google Images. These images
    have reusable permissions, so always ensure that you have this when collecting
    images for your model. You can do this by searching any keyword from Google Images
    and filter the images based on labelled for reuse usage rights. You can find this
    option by clicking on tools beneath the search bar.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保正确标记图像。例如，将花朵标记为茉莉花时，图片中可能会包含整株植物或背景中有人物。当输入图像中有干扰物体时，我们算法的准确性会有所不同。假设你从Google图片搜索中获取了一些食物图片，这些图片具有可重复使用的许可，因此在收集图像用于训练模型时，务必确保这些图像符合许可要求。你可以通过在Google图片搜索中输入关键词，并根据可重复使用的使用权筛选图片来实现。点击搜索栏下方的工具按钮即可找到此选项。
- en: We have collected a few images from the internet for educational purposes in
    this chapter. This is discussed in further detail in the next section.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中收集了一些互联网图片用于教学目的。详细信息将在下一节中讨论。
- en: Building our own model
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建我们自己的模型
- en: 'Here, we are going to build our own ML model using TensorFlow to analyze the
    damage level of the vehicle. We need to be careful in picking the dataset that
    will play a crucial part in the damage evaluation phase. Here are the steps that
    we are going to follow in order to build the model:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将使用TensorFlow构建自己的机器学习模型，分析车辆的损坏程度。我们需要小心选择数据集，因为它在损伤评估阶段起着至关重要的作用。以下是我们将遵循的构建模型的步骤：
- en: Find the image dataset of the damaged vehicles.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找损坏车辆的图像数据集。
- en: Categorize the images based on their damage levels. First, we need to identify
    that the object in the picture is actually a car. To do that, we need to have
    two categories of image sets that do and do not have cars in them. Then, we need
    to have three more categories to find the damage level of the cars categorized
    under high, medium, or low levels. Make sure that you have at least 1,000+ images
    under each of the five categories. Once the dataset is ready, we are ready to
    train our model.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据损坏程度对图像进行分类。首先，我们需要识别图中的物体实际上是一辆车。为此，我们需要有两类图像集，一类包含有车的图像，另一类不包含车。然后，我们还需要三个类别来确定车的损坏等级，分别是高、中、低三个等级。确保每个类别下至少有1,000张图像。数据集准备好后，我们就可以开始训练模型了。
- en: We will train our model using TensorFlow.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用TensorFlow训练我们的模型。
- en: We will build a web application to analyze the damage level of the vehicle.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将构建一个Web应用程序来分析车辆的损坏程度。
- en: Update the result.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新结果。
- en: Retraining with our own images
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用我们自己的图像重新训练
- en: We will now use the `retrain.py` script in our project directory.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将使用`retrain.py`脚本，该脚本位于我们的项目目录中。
- en: 'Download this script using `curl`, as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`curl`下载此脚本，如下所示：
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There are a few parameters that have to be passed to the training script and
    looked into before the training starts.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练开始之前，有几个参数必须传递给训练脚本并查看。
- en: Once our dataset is ready, we need to look into improving the results. We can
    do this by altering the number of steps in the learning process.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据集准备好，我们需要着手改善结果。我们可以通过调整学习过程中的步骤数来实现这一点。
- en: 'The simplest way to do this is by using the following code:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法是使用以下代码：
- en: '[PRE2]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The rate of accuracy improvement slows down when the number of steps increases,
    and the accuracy will stop improving beyond a certain point. You can experiment
    with this and decide what works best for you.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当步骤数增加时，准确率的提高速度会变慢，并且准确率在达到某个点之后将停止提高。你可以通过实验来决定什么对你来说最有效。
- en: Architecture
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构
- en: 'MobileNet is a smaller, low-power, low-latency model that''s designed to meet
    the constraints of mobile devices. In our application, we have picked the following
    architecture from the MobileNet datasets as one of the parameters, as shown in
    the following code, for while we build the model, which has a better accuracy
    benchmark:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: MobileNet是一个较小、低功耗、低延迟的模型，旨在满足移动设备的限制。在我们的应用中，我们从MobileNet数据集中选择了以下架构作为参数之一，如下代码所示，用于在构建模型时获得更好的准确性基准：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The power and latency of the network grows with the number of **Multiply-Accumulates**
    (**MACs**), which measure the number of fused multiplication and addition operations,
    as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 网络的功率和延迟随着**乘法累加**（**MACs**）的数量而增长，MACs衡量的是融合的乘法和加法操作的数量，如下所示：
- en: '![](img/6155f1ac-e985-414e-b7db-c94dd8fa8b2d.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6155f1ac-e985-414e-b7db-c94dd8fa8b2d.png)'
- en: You can download the model from [https://github.com/tensorflow/models/tree/master/research/slim/nets/mobilenet](https://github.com/tensorflow/models/tree/master/research/slim/nets/mobilenet).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从[https://github.com/tensorflow/models/tree/master/research/slim/nets/mobilenet](https://github.com/tensorflow/models/tree/master/research/slim/nets/mobilenet)下载模型。
- en: Distortions
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扭曲
- en: We can improve the results by giving tough input images during training. Training
    images can be generated by cropping, brightening, and deforming the input images
    randomly. This will help in generating an effective training dataset.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过在训练过程中提供困难的输入图像来提高结果。训练图像可以通过随机裁剪、亮度调节和形变等方式生成。这将有助于生成一个有效的训练数据集。
- en: 'However, there is a disadvantage of enabling distortion here, since bottleneck
    caching is not useful. Consequently, the input images are not reused, increasing
    the training time period. There are multiple ways to enable distortion, as shown
    here:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，启用扭曲存在一个缺点，因为瓶颈缓存没有用处。因此，输入图像没有被重用，导致训练时间增加。这里有多种方式启用扭曲，如下所示：
- en: '[PRE4]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This won't be useful in all cases. For example, it won't be helpful in a digit
    classifier system, since flipping and distorting the image won't make sense when
    it comes to producing a possible output.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这在所有情况下并不一定有用。例如，在数字分类系统中，它没有什么帮助，因为翻转和扭曲图像在生成可能的输出时并不合理。
- en: Hyperparameters
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超参数
- en: We can try a few more parameters to check whether additional parameters will
    help to improve results.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以尝试更多的参数，看看额外的参数是否有助于提高结果。
- en: 'Specify them in the form that''s given in the following bullet points. The
    hyperparameters are explained as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下项目符号中给出的形式指定它们。超参数的解释如下：
- en: '`--learning_rate`: This parameter controls the updates to the final layer while
    training. If this value is small, the training will take more time. This may not
    always help when it comes to improving accuracy.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--learning_rate`：这个参数控制在训练过程中最终层的更新。如果这个值较小，训练将需要更多的时间。不过，这不一定总是能帮助提高准确性。'
- en: '`--train_batch_size`: This parameter helps with controlling the number of images
    that are examined during training to estimate the final-layer updates. Once the
    images are ready, the script splits them into three different sets. The largest
    set is used in training. This division is mainly useful for preventing the model
    from recognizing unnecessary patterns in the input images. If a model is trained
    using a certain background pattern, it won''t give a proper result when it faces
    images with new backgrounds because it remembers unnecessary information from
    the input images. This is known as **overfitting**.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--train_batch_size`：这个参数帮助控制在训练过程中用于估算最终层更新的图像数量。一旦图像准备好，脚本会将它们分成三个不同的集合。最大的集合用于训练。这种划分主要有助于防止模型识别输入图像中不必要的模式。如果一个模型使用特定背景模式进行训练，当面对带有新背景的图像时，它就无法给出正确的结果，因为它记住了输入图像中的不必要信息。这就是**过拟合**。'
- en: '`--testing_percentage` and `--validation_percentage` flags: To avoid overfitting,
    we keep 80% of the data inside the main training set. Of this data, 10% is then
    used to run validation during the training process and the final 10% is used to
    test the model.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--testing_percentage` 和 `--validation_percentage` 标志：为了避免过拟合，我们将80%的数据保留在主训练集中。这些数据中的10%用于在训练过程中进行验证，最后的10%用于测试模型。'
- en: '`--validation_batch_size`: We can see that the accuracy of validation fluctuates
    between iterations.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--validation_batch_size`：我们可以看到验证的准确性在每次迭代中有所波动。'
- en: If you are new to this, you can run default values without making any changes
    to these parameters. Let's jump into building our model. For this, we need the
    training image data.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是新手，你可以在不修改这些参数的情况下运行默认值。让我们开始构建我们的模型。为此，我们需要训练图像数据。
- en: Image dataset collection
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像数据集收集
- en: For our experiment, we need the datasets for cars in good condition as well
    as in damaged condition. If you have a data source that adheres to the privacy
    policy, then this is a good place to start. Otherwise, we need to find a way to
    build our model on top of a dataset. There are multiple datasets that are publicly
    available. We need to start building our dataset if there is no existing reference
    of a similar data model because this could be a time-consuming task as well as
    an important step toward getting better results.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的实验，我们需要汽车在良好状态和损坏状态下的数据集。如果你有符合隐私政策的数据源，那么这里是一个很好的起点。否则，我们需要找到一种方法来在数据集上构建我们的模型。现在有多个公开的数据集可供使用。如果没有类似数据模型的现有参考，我们需要开始构建自己的数据集，因为这可能是一个耗时且重要的步骤，能够帮助我们获得更好的结果。
- en: We are going to use a simple Python script to download images from Google. Just
    make sure that you filter images that can be reused. We don't encourage using
    pictures with non-reusable licenses.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个简单的Python脚本从Google下载图像。只要确保你筛选的是可重用的图像。我们不鼓励使用那些带有不可重用许可证的图片。
- en: With the Python script, we will pull out and save the images from Google, and
    then we will use a library to do the same task. This step is one of the most basic
    steps for building any ML model.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Python脚本，我们将从Google拉取并保存图像，然后使用一个库来完成相同的任务。这一步是构建任何机器学习模型的最基础步骤之一。
- en: We will use a Python library called **Beautiful Soup** to scrap images from
    the internet.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个叫做**Beautiful Soup**的Python库来从互联网抓取图像。
- en: Introduction to Beautiful Soup
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Beautiful Soup简介
- en: Beautiful Soup is a Python library that's used to pull data out of HTML and
    XML files. It is useful with projects that involve scraping. With this library,
    we can navigate, search, and modify the HTML and XML files.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Beautiful Soup 是一个 Python 库，用于从 HTML 和 XML 文件中提取数据。它在涉及抓取的项目中非常有用。使用这个库，我们可以导航、搜索和修改
    HTML 和 XML 文件。
- en: This library parses anything you feed in and does tree traversal work on the
    data. You can ask the library to find all the links whose URLs match `google.com`,
    find all the links with class bold URLs, or find all the table headers with bold
    text.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库解析你提供的任何内容，并对数据进行树形遍历。你可以要求库找到所有 URL 匹配 `google.com` 的链接，找到所有类为 bold 的链接，或者找到所有包含粗体文本的表头。
- en: 'There are a few features that makes it useful, and they are as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个特性使它非常有用，具体如下：
- en: Beautiful Soup provides us with some simple methods and Pythonic idioms to navigate,
    search, and modify a parse tree, which is a toolkit that is used to dissect a
    document and then extract what you need. We need less code to write an application.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Beautiful Soup 提供了一些简单的方法和 Pythonic 风格的习惯用法，用于遍历、搜索和修改解析树。解析树是一个工具包，用于解剖文档并提取所需内容。我们可以减少编写应用程序的代码量。
- en: Beautiful Soup automatically converts incoming documents into Unicode and outgoing
    documents into UTF-8\. Unless the document doesn't specify anything about encoding
    and Beautiful Soup isn't able to detect any, we don't have to think about encoding.
    Then, we will have to specify only the original encoding.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Beautiful Soup 自动将传入的文档转换为 Unicode，并将传出的文档转换为 UTF-8。除非文档没有指定编码且 Beautiful Soup
    无法检测到任何编码，否则我们无需考虑编码问题。然后，我们只需要指定原始编码。
- en: Beautiful Soup can be used on top of popular Python parsers, such as `lxml`
    ([https://lxml.de/](https://lxml.de/)) and `html5lib` ([https://github.com/html5lib/](https://github.com/html5lib/)),
    and lets you try various parsing strategies or trade speed for flexibility.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Beautiful Soup 可以与流行的 Python 解析器一起使用，如 `lxml` ([https://lxml.de/](https://lxml.de/))
    和 `html5lib` ([https://github.com/html5lib/](https://github.com/html5lib/))，并允许你尝试不同的解析策略，或者在灵活性和速度之间做出权衡。
- en: Beautiful Soup saves you time by extracting the information you need and so
    makes your job easier.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Beautiful Soup 通过提取所需信息来节省你的时间，从而让你的工作更轻松。
- en: 'Here is the simple version of the code:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这是代码的简单版本：
- en: '[PRE5]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Setting the user-agent to avoid 403 error code:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 设置用户代理以避免 403 错误代码：
- en: '[PRE6]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Pass the number of images you want to pull out. By default google provides
    100 images:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 传入你想提取的图像数量。默认情况下，Google 提供 100 张图像：
- en: '[PRE7]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Saving all the downloaded images along with its extension, as shown in the
    following code block:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 保存所有下载的图像及其扩展名，如以下代码块所示：
- en: '[PRE8]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Change number of images parameter here. By default it is set to 1, as shown
    in following code:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里更改图像数量参数。默认情况下它设置为 1，如以下代码所示：
- en: '[PRE9]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Save the script as a Python file and then run the code by executing the following
    command:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 将脚本保存为 Python 文件，然后通过执行以下命令运行代码：
- en: '[PRE10]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Google image scraping with a better library, including more configurable options.
    We will use [https://github.com/hardikvasa/google-images-download](https://github.com/hardikvasa/google-images-download).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 使用更好的库进行 Google 图像抓取，包括更多可配置的选项。我们将使用 [https://github.com/hardikvasa/google-images-download](https://github.com/hardikvasa/google-images-download)。
- en: This is a command line Python program that's used to search for keywords or
    key phrases on Google Images, and optionally download images to your computer.
    You can also invoke this script from another Python file.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个命令行 Python 程序，用于在 Google 图像上搜索关键词或关键短语，并可选择将图像下载到你的计算机。你也可以从另一个 Python 文件调用此脚本。
- en: This is a small and ready-to-run program. No dependencies are required for it
    to be installed if you only want to download up to 100 images per keyword. If
    you want more than 100 images per keyword, then you will need to install the `Selenium`
    library, along with **ChromeDriver**. Detailed instructions are provided in the
    *Troubleshooting* section.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个小型且可以立即运行的程序。如果你只想每个关键词下载最多 100 张图像，它不需要任何依赖。如果你想要每个关键词超过 100 张图像，那么你需要安装
    `Selenium` 库以及 **ChromeDriver**。详细说明在 *故障排除* 部分提供。
- en: You can use a library with more useful options.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用一个拥有更多实用选项的库。
- en: 'If you prefer command line-based installation, use the following code:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你偏好基于命令行的安装方式，可以使用以下代码：
- en: '[PRE11]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Alternatively, you can install the library through `pip`:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你也可以通过 `pip` 安装这个库：
- en: '[PRE12]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'If installed via `pip` or using a **command language interpreter** (**CLI**),
    use the following command:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果通过 `pip` 安装或使用 **命令行语言解释器** (**CLI**) 安装，可以使用以下命令：
- en: '[PRE13]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If downloaded via the UI from `github.com`, unzip the downloaded file, go to
    the `google_images_download` directory, and use one of the following commands:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是从 `github.com` 的 UI 下载的，请解压下载的文件，进入 `google_images_download` 目录，并使用以下命令之一：
- en: '[PRE14]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If you want to use this library from another Python file, use this command:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想从另一个 Python 文件中使用此库，请使用以下命令：
- en: '[PRE15]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You can either pass the arguments directly from the command, as shown in the
    following examples, or you can pass it through a config file.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以直接从命令行传递参数，如下所示，或者通过配置文件传递参数。
- en: You can pass more than one record through a config file. The following sample
    consists of two sets of records. The code will iterate through each of the records
    and download images based on the arguments that are passed.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过配置文件传递多个记录。以下示例由两组记录组成。代码将遍历每一条记录，并根据传递的参数下载图片。
- en: 'The following is a sample of what a config file looks like:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是配置文件的示例：
- en: '[PRE16]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Examples
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例
- en: 'If you are calling this library from another Python file, the following is
    the sample code from Google:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您从另一个 Python 文件调用此库，以下是来自 Google 的示例代码：
- en: '[PRE17]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'If you are passing arguments from a config file, simply pass the `config_file`
    argument with the name of your **JSON** file:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是通过配置文件传递参数，只需传递 `config_file` 参数，并指定您的 **JSON** 文件名：
- en: '[PRE18]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following is a simple example of using keywords and limit arguments:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用关键词和限制参数的简单示例：
- en: '[PRE19]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Using suffix keywords allows you to specify words after the main keyword. For
    example, if the keyword is `car` and the suffix keywords are `red` and `blue`,
    then it will first search for a red car and then a blue car:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 使用后缀关键词可以指定主关键词后的词语。例如，如果关键词是 `car`，而后缀关键词是 `red` 和 `blue`，则会先搜索红色的汽车，再搜索蓝色的汽车：
- en: '[PRE20]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To use the short-hand command, use the following code:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用简化命令，请使用以下代码：
- en: '[PRE21]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'To download images with specific image extension, or formats, use the following
    code:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载具有特定图像扩展名或格式的图片，请使用以下代码：
- en: '[PRE22]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To use color filters for the images, use the following code:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 要为图片使用颜色过滤器，请使用以下代码：
- en: '[PRE23]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To use non-English keywords for image searches, use the following code:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用非英语关键词进行图片搜索，请使用以下代码：
- en: '[PRE24]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'To download images from the Google Images link, use the following code:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 Google 图片链接下载图片，请使用以下代码：
- en: '[PRE25]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'To save images in a specific main directory (instead of in `Downloads`), use
    the following code:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要将图片保存到特定的主目录（而不是 `Downloads`）中，请使用以下代码：
- en: '[PRE26]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To download one single image within the image URL, use the following code:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载图像 URL 中的单张图片，请使用以下代码：
- en: '[PRE27]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To download images with size and type constraints, use the following code:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载具有大小和类型约束的图片，请使用以下代码：
- en: '[PRE28]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'To download images with specific usage rights, use the following code:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载具有特定使用权的图片，请使用以下代码：
- en: '[PRE29]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'To download images with specific color types, use the following code:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载具有特定颜色类型的图片，请使用以下代码：
- en: '[PRE30]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'To download images with specific aspect ratios, use the following code:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载具有特定纵横比的图片，请使用以下代码：
- en: '[PRE31]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'To download images that are similar to the image in the image URL that you
    provided (known as a reverse image search), use the following code:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载与您提供的图像 URL 中的图片相似的图像（即反向图片搜索），请使用以下代码：
- en: '[PRE32]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'To download images from a specific website or domain name for a given keyword,
    use the following code:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 要根据给定关键词从特定网站或域名下载图片，请使用以下代码：
- en: '[PRE33]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The images will be downloaded to their own sub-directories inside the main directory
    (either the one you provided or in `Downloads`) in the same folder you are in.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图片将下载到它们各自的子目录中，位于您所在文件夹的主目录内（无论是您提供的目录，还是 `Downloads`）。
- en: Now, we need to start preparing our dataset.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要开始准备我们的数据集。
- en: Dataset preparation
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据集准备
- en: We need to build four different datasets. For  car damage detection, we will
    think about all the possible inputs. It could be a car in good condition, or a
    car with different damage levels, or it could be an unrelated image of a car.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要构建四个不同的数据集。对于汽车损坏检测，我们将考虑所有可能的输入。它可以是一辆状况良好的车，或一辆不同损坏程度的车，或者也可以是与车无关的图像。
- en: 'We will do the same as shown in the following screenshots:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按照以下截图中所示的方式操作：
- en: '![](img/3e462e68-395a-4695-822d-8bfb139e9001.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3e462e68-395a-4695-822d-8bfb139e9001.png)'
- en: 'Here is the dataset to identify heavily damaged cars:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这是用于识别严重损坏汽车的数据集：
- en: '[PRE34]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Here are some sample pictures that were captured for heavily damaged cars that
    are red:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些为识别严重损坏的红色汽车所捕获的示例图片：
- en: '![](img/bd32cffc-c38c-44d6-a8c1-063d1ca5623a.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bd32cffc-c38c-44d6-a8c1-063d1ca5623a.png)'
- en: 'Here are some sample pictures that were captured for heavily damaged cars that
    are blue:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一些捕获到的有严重损坏的蓝色汽车的示例图片：
- en: '![](img/35715172-9404-41d5-9fa0-fcd066f68962.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35715172-9404-41d5-9fa0-fcd066f68962.png)'
- en: 'We also have another set of images for cars with slightly less damage:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还拥有另一组轻微损坏的汽车图像：
- en: '[PRE35]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Here are some sample pictures that were captured for dented cars that are red:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一些捕获到的有凹痕的红色汽车的示例图片：
- en: '![](img/d7311d72-0cb5-46c0-8ff6-be07fa51b7e1.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d7311d72-0cb5-46c0-8ff6-be07fa51b7e1.png)'
- en: 'Here are some sample pictures that were captured for dented cars that are blue:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一些捕获到的有凹痕的蓝色汽车的示例图片：
- en: '![](img/e734ec97-4ad5-46ba-a45e-bb5070a9b8c3.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e734ec97-4ad5-46ba-a45e-bb5070a9b8c3.png)'
- en: 'The following command can be used to retrieve a dataset for normal cars without
    any damage applied to them:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令可用于检索没有任何损坏的普通汽车数据集：
- en: '[PRE36]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Here are some sample pictures that have been captured for cars that are red:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一些捕获到的红色汽车的示例图片：
- en: '![](img/1f2f86a4-57d8-488f-b6c5-527c5e76b905.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f2f86a4-57d8-488f-b6c5-527c5e76b905.png)'
- en: 'Here are some sample pictures that have been captured for cars that are blue:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一些捕获到的蓝色汽车的示例图片：
- en: '![](img/a0f7a6b5-c7c8-4c31-b52d-4aa8d34ca420.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a0f7a6b5-c7c8-4c31-b52d-4aa8d34ca420.png)'
- en: 'The following command can be used to retrieve random objects that aren''t cars:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令可用于检索不属于汽车的随机物体：
- en: '[PRE37]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Here are some sample pictures that have been captured for bikes:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一些捕获到的自行车的示例图片：
- en: '![](img/1190176f-354a-409a-955b-3d1cde7e9751.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1190176f-354a-409a-955b-3d1cde7e9751.png)'
- en: 'Here are some sample pictures that have been captured for flights:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一些捕获到的航班的示例图片：
- en: '![](img/5707db31-bdf6-4b65-8f52-28af4fbb343f.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5707db31-bdf6-4b65-8f52-28af4fbb343f.png)'
- en: Once we have 500 images for each dataset, it's time to do some training. In
    ideal conditions, we should have at least 1,000 images for each dataset.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦每个数据集有了500张图片，就可以开始训练了。在理想条件下，每个数据集至少应有1,000张图片。
- en: 'The main issue we will face here is in removing the noise data. For our example,
    we are going to do that manually. There are a few sample images that we have listed
    here that could be noise, and don''t provide valid input so that we can build
    the data model:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们面临的主要问题是去除噪声数据。对于我们的示例，我们将手动进行这一操作。以下是我们列出的一些示例图像，它们可能是噪声数据，不提供有效输入，因此无法用于构建数据模型：
- en: '![](img/c882ff8e-5bae-45bf-8cab-56de998bc6e6.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c882ff8e-5bae-45bf-8cab-56de998bc6e6.png)'
- en: 'Once we have all the image datasets ready, we can move on to our top four categories.
    Right now, all the images are separated by colors and categories, as shown in
    the following screenshot:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们准备好了所有的图像数据集，就可以开始处理我们的四大类了。目前，所有图像都按颜色和类别分开，如下面的截图所示：
- en: '![](img/fa51d73a-9148-4428-bfea-bc12de51692d.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fa51d73a-9148-4428-bfea-bc12de51692d.png)'
- en: 'We will group them into `damaged car`, `car with dent`, `car`, and `not a car`:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把它们分为`损坏汽车`、`有凹痕的汽车`、`汽车`和`非汽车`：
- en: '![](img/9fdc8aec-4e65-47a3-a5ae-82556b39d479.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9fdc8aec-4e65-47a3-a5ae-82556b39d479.png)'
- en: Running the training script
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行训练脚本
- en: 'With all the parameter-related details discussed, we can start the training
    with the downloaded script:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论完所有与参数相关的细节后，我们可以开始使用下载的脚本进行训练：
- en: '[PRE38]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Based on our processor's capability, as well as the number of images we have,
    the script might take longer for training. For me, it took more than 10 hours
    for 50 different car categories containing 10,000 images each. Once the script
    has completed, we will get the TensorFlow model in its output.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们的处理器性能以及图像数量，脚本训练可能会需要更长时间。对我来说，50个不同类别的汽车，每个类别包含10,000张图片，训练花费了超过10小时。一旦脚本完成，我们将在输出中得到TensorFlow模型。
- en: Setting up a web application
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置一个Web应用程序
- en: We will use the **Flask** framework to build a simple application to detect
    the car's damage.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用**Flask**框架来构建一个简单的应用程序，以检测汽车的损坏。
- en: To learn more about Flask, please refer to [https://www.fullstackpython.com/flask.html](https://www.fullstackpython.com/flask.html).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于Flask的信息，请参考[https://www.fullstackpython.com/flask.html](https://www.fullstackpython.com/flask.html)。
- en: We are not going to go deeper into Flask basics here. Instead, we are simply
    adding our model with an existing file upload example from Flask.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里不会深入讲解Flask的基础知识。相反，我们只是将我们的模型与Flask中现有的文件上传示例结合起来。
- en: 'The file''s structure is shown in the following screenshot:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 文件的结构如下面的截图所示：
- en: '![](img/b4e1b059-5fba-4642-a47a-815e114ef66e.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b4e1b059-5fba-4642-a47a-815e114ef66e.png)'
- en: 'Here is a list of the contents in `app.py`:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是`app.py`中的内容列表：
- en: '[PRE39]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Next code block helps us with printing the output:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 下一段代码帮助我们打印输出：
- en: '[PRE40]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'After printing the image path, go through the following code:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 打印图像路径后，继续执行以下代码：
- en: '[PRE41]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The while loop starts from here:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`while` 循环从这里开始：'
- en: '[PRE42]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Disable TensorFlow compilation warnings:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用 TensorFlow 编译警告：
- en: '[PRE43]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Once `image_data` is given as the input to the graph, we then receive the first
    prediction:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦将 `image_data` 作为输入传递给图表，我们就会得到第一次预测：
- en: '[PRE44]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The controller Python files are lined in frontend HTML files:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器 Python 文件与前端 HTML 文件排布在一起：
- en: '[PRE45]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'In continuation with the previous script, let''s Bootstrap the core JavaScript:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 接着上一个脚本，让我们为核心 JavaScript 设置 Bootstrap：
- en: '[PRE46]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'You can pull the rest of the file''s content directly from the GitHub repository.
    Once the complete file structure is ready, you can run the application from the
    command line, as follows:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以直接从 GitHub 仓库拉取文件的其余内容。一旦文件结构准备好，你可以通过命令行运行应用程序，如下所示：
- en: '[PRE47]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now, launch your browser with `http://localhost:5000/`:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，启动你的浏览器并访问 `http://localhost:5000/`：
- en: '![](img/70376108-e081-4f77-985a-fdc6d7e28fe1.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![](img/70376108-e081-4f77-985a-fdc6d7e28fe1.png)'
- en: The following are a few screenshots from the application.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是应用程序中的一些截图。
- en: 'Here is the home page after running the application:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 这是运行应用程序后的主页：
- en: '![](img/900aed2c-449d-4a99-8f6e-f12f7d17c09c.png)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![](img/900aed2c-449d-4a99-8f6e-f12f7d17c09c.png)'
- en: 'Here is the screen after uploading the image:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这是上传图片后的屏幕：
- en: '![](img/fa01449b-871f-418b-b211-b2e022243fc1.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fa01449b-871f-418b-b211-b2e022243fc1.png)'
- en: Here is a screenshot showing an image of a car with low level damage
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 这是显示一辆轻微受损汽车的截图：
- en: '![](img/6df28f3f-8d2a-40d8-b8a9-8d0dc8300130.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6df28f3f-8d2a-40d8-b8a9-8d0dc8300130.png)'
- en: The data in the preceding screenshot may not be accurate, since our dataset
    size is very small.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的数据集规模非常小，上面的截图中的数据可能不准确。
- en: 'The following is a screenshot showing an image of the car prediction model
    that does not show a car:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个截图，显示了一个预测汽车的模型，但该模型没有显示出汽车：
- en: '![](img/16421a34-bccf-4996-821e-a67347a7d33d.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![](img/16421a34-bccf-4996-821e-a67347a7d33d.png)'
- en: Summary
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have seen how we can build a model from scratch and train
    it using TensorFlow.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章节中，我们已经学习了如何从零开始构建一个模型，并使用 TensorFlow 进行训练。
- en: With this knowledge, we can start building more Android and iOS-based applications
    in the upcoming chapters.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有这些知识后，我们可以在接下来的章节中开始构建更多基于 Android 和 iOS 的应用程序。
