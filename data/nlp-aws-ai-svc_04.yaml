- en: '*Chapter 3*: Introducing Amazon Comprehend'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 3 章*：介绍 Amazon Comprehend'
- en: In the previous chapter, we covered how you can use **Amazon Textract** for
    **Optical Character Recognition** (**OCR**) and deep dive into its features and
    specific API implementations. In this chapter, you will get a detailed introduction
    to **Amazon Comprehend** and **Amazon Comprehend Medical**, what their functions
    are, what business challenges they were created to solve, what features they have,
    what types of user requirements they can be applied to, and how easy it is to
    integrate Comprehend with different **AWS** services, such as **AWS Lambda**,
    to build business applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们介绍了如何使用**Amazon Textract**进行**光学字符识别**（**OCR**）并深入探讨了它的功能和特定的 API 实现。在本章中，你将详细了解**Amazon
    Comprehend**和**Amazon Comprehend Medical**，它们的功能是什么，创建它们的业务挑战是什么，它们具有哪些功能，适用于哪些用户需求，以及如何轻松地将
    Comprehend 与不同的**AWS**服务集成，如**AWS Lambda**，以构建业务应用程序。
- en: 'In this chapter, we will go through the following sections:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Understanding Amazon Comprehend and Amazon Comprehend Medical
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解 Amazon Comprehend 和 Amazon Comprehend Medical
- en: Exploring Amazon Comprehend and Amazon Comprehend Medical product features
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 Amazon Comprehend 和 Amazon Comprehend Medical 产品功能
- en: Using Amazon Comprehend with your applications
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Amazon Comprehend 与你的应用程序集成
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need access to an `AmazonComprehendFullAccess` to
    the **IAM** role attached with your notebook instance, and follow these steps:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，你需要访问附加到笔记本实例的 `AmazonComprehendFullAccess` **IAM** 角色，并按照以下步骤操作：
- en: Once you create the notebook instance and its status is **InService**, click
    on **Open Jupyter** in the **Actions** menu heading for the notebook instance.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你创建了笔记本实例，并且其状态为**InService**，请在笔记本实例的**操作**菜单下点击**打开 Jupyter**。
- en: 'In the terminal window, type first `cd SageMaker` and then type `git clone`
    [https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services](https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services).
    The Python code and sample datasets for Amazon Comprehend examples are in this
    repository: [https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services](https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services).
    Once you navigate to the repository, please select [*Chapter 3*](B17528_03_Final_SB_ePub.xhtml#_idTextAnchor049),
    *Introducing Amazon Comprehend – Sample Code*.'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端窗口中，首先输入`cd SageMaker`，然后输入`git clone` [https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services](https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services)。Amazon
    Comprehend 示例的 Python 代码和示例数据集在此仓库中：[https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services](https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services)。进入仓库后，请选择[*第
    3 章*](B17528_03_Final_SB_ePub.xhtml#_idTextAnchor049)，*介绍 Amazon Comprehend –
    示例代码*。
- en: Check out the following video to see the Code in Action at [https://bit.ly/3Gkd1Oi](https://bit.ly/3Gkd1Oi).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频，观看[https://bit.ly/3Gkd1Oi](https://bit.ly/3Gkd1Oi)中的代码实战。
- en: Understanding Amazon Comprehend and Amazon Comprehend Medical
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 Amazon Comprehend 和 Amazon Comprehend Medical
- en: In this section, we will talk about the challenges associated with setting up
    **ML** (**ML**) preprocessing for **NLP** (**NLP**). Then, we will talk about
    how Amazon Comprehend and Amazon Comprehend Medical can help solve these pain
    points. Finally, we will talk about how you can use Amazon Comprehend to analyze
    the extracted text from documents by using Amazon Textract to extract the data.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论设置**ML**（**ML**）预处理时与**NLP**（**NLP**）相关的挑战。然后，我们将讨论 Amazon Comprehend
    和 Amazon Comprehend Medical 如何帮助解决这些痛点。最后，我们将讨论如何使用 Amazon Comprehend 分析通过使用 Amazon
    Textract 提取数据的文档中的提取文本。
- en: Challenges associated with setting up ML preprocessing for NLP
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 NLP 的 ML 预处理时面临的挑战
- en: Some of the key challenges while setting up NLP preprocessing are that documents
    can be semi-structured, unstructured, or can be in various languages. Once you
    have a large amount of unstructured data, you would probably like to extract insights
    from the data using some NLP techniques for most common use cases such as **sentiment
    analysis**, **text classification**, **NER** (**NER**), **machine translation**,
    and **topic modeling**.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 NLP 预处理时的一些关键挑战是文档可能是半结构化的、非结构化的，或者可能是多种语言。 一旦你拥有大量的非结构化数据，你可能希望使用一些 NLP
    技术从数据中提取洞察，用于大多数常见用例，如**情感分析**、**文本分类**、**命名实体识别** (**NER**)、**机器翻译**和**主题建模**。
- en: '![Figure 3.1 – NLP modeling](img/B17528_03_01.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.1 – NLP 建模](img/B17528_03_01.jpg)'
- en: Figure 3.1 – NLP modeling
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – NLP 建模
- en: 'The challenge with applying these techniques is that the majority of the time
    is spent in data preprocessing. This applies whether you are doing ML, for example,
    sentiment analysis, or deep learning to apply key NLP techniques to find insights.
    If you are doing ML, some of the key preprocessing techniques you would use include
    the following:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 应用这些技术的挑战在于，大部分时间都花费在数据预处理上。这适用于无论你是做机器学习（例如情感分析），还是进行深度学习以应用关键的自然语言处理（NLP）技术来发现洞察。如果你在做机器学习，一些关键的预处理技术包括以下内容：
- en: '**Tokenization**: This simply means you are dividing unstructured text into
    words or sentences. For example, for the sentence: "This book is focusing on NLP",
    the tokenized word output will be "This", "book", "is", "focusing", "on", and
    "NLP". Similarly, if it is a complex text, you can tokenize it by sentences rather
    than words.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分词**（**Tokenization**）：这意味着将非结构化的文本分割成单词或句子。例如，对于句子："This book is focusing
    on NLP"，分词后的结果将是 "This"、"book"、"is"、"focusing"、"on" 和 "NLP"。类似地，如果是复杂的文本，可以按句子而非单词进行分词。'
- en: '**Stop word removal**: Stop words are words that do not have primary meaning
    in a sentence, for example, "and" "a", "is", "they", and so on, but they have
    a meaningful impact when we use them to communicate. An example of the stop words
    in the following text: "This book is focusing on NLP", would be "is" and "on",
    and these would be removed as part of preprocessing. A use case where you would
    not remove a stop word would be in certain sectors, such as healthcare, where
    removing stop words would be a blunder as it will completely change the meaning
    of the sentence.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**停用词移除**（**Stop word removal**）：停用词是指在句子中没有主要意义的单词，例如 "and"、"a"、"is"、"they"
    等，但它们在沟通中仍然具有重要的作用。在以下文本中，停用词的例子是："This book is focusing on NLP"，其中 "is" 和 "on"
    会被移除作为预处理的一部分。某些行业（例如医疗保健）中，移除停用词可能会导致语句含义的完全改变，因此在这些领域不应移除停用词。'
- en: '**Stemming**: Stemming means removing the last few characters of a given word
    to obtain a shorter form, even if that form doesn''t have any meaning. For instance,
    the words "focusing", "focuses", and "focus" convey the same meaning, and can
    be clubbed under one stem for computer analysis. So instead of having them as
    different words, we can put them together under the same term: "focus."'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**词干提取**（**Stemming**）：词干提取是指去掉一个给定单词的最后几个字符，得到一个更短的形式，即使这个形式本身没有任何意义。例如，"focusing"、"focuses"
    和 "focus" 这几个单词传达的是相同的意思，可以在计算机分析中归为一个词干。因此，我们可以将它们归纳为同一个词："focus"。'
- en: '**Lemmatization**: This, on the other hand, means converting the given word
    into its base form according to the dictionary definition of the word. For example,
    focusing → focus. This takes more time than stemming and is a compute-intensive
    process.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**词形还原**（**Lemmatization**）：与此相反，词形还原是指根据单词的字典定义，将给定的单词转化为其基本形式。例如，focusing
    → focus。这个过程比词干提取耗时更多，并且是一个计算密集型的过程。'
- en: '**Part-of-speech** (**PoS**) **tagging:** After tokenizing it, this method
    tags each word as a part of speech. Let''s stick with the "This book is focusing
    on NLP" example. "Book" is a noun and "focusing" is a verb. PoS tags are useful
    for building **parse trees**. Parse trees are used in building named entity recognizers
    and extracting relations between words. PoS tagging is used for building lemmatizers.
    Lemmatizers will reduce a word to its root form. Moreover, there are various techniques
    to do PoS tagging, such as lexical-based methods, rule-based methods, and more.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**词性标注**（**PoS**）**标记**：在分词之后，这种方法会将每个单词标记为一种词性。以 "This book is focusing on
    NLP" 为例，"book" 是名词，"focusing" 是动词。词性标记对于构建**句法分析树**非常有用。句法分析树用于构建命名实体识别器以及提取单词间的关系。词性标注用于构建词形还原器。词形还原器将一个单词还原为其基础形式。此外，进行词性标注有多种方法，如基于词汇的方法、基于规则的方法等。'
- en: 'Even after these preprocessing steps, you would still need to apply advanced
    NLP techniques if you are doing deep learning on top of the preprocessed steps.
    Some popular techniques are the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在这些预处理步骤之后，如果你在预处理步骤的基础上进行深度学习，仍然需要应用高级的 NLP 技术。以下是一些常见的技术：
- en: '**Word embedding**: These are vector representations of strings with similar
    semantic meanings. Word embeddings are used as a starting technique for most deep
    learning NLP tasks and are a popular way of **transfer learning** in NLP. Some
    of the common word embeddings are **Word2vec**, **Doc2Vec** for documents, **GloVe**,
    **Continuous Bag of Words** (**CBOW**), and **Skip-gram**.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Word embedding**：这些是具有相似语义含义的字符串的向量表示。词嵌入是大多数深度学习NLP任务的起始技术，并且是NLP中一种流行的**迁移学习**方式。一些常见的词嵌入有**Word2vec**、**Doc2Vec**（用于文档）、**GloVe**、**Continuous
    Bag of Words**（**CBOW**）和**Skip-gram**。'
- en: '**Transformers**: In 2017, there was a paradigm shift from the standard way
    NLP applications were built upon with transformers, for example, using **RNN**s,
    **LSTM**s, or **GRU**s initialized with word embedding. Transformers have led
    to the development of pretrained systems such as **Bidirectional Encoder Representations
    from Transformers** (**BERT**) and **Generative Pretrained Transformer** (**GPT**).
    BERT and GPT have been trained with huge general language datasets, such as **Wikipedia
    Corpus** and **Common Crawl**, and can be fine-tuned to specific language tasks.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Transformers**：2017年，NLP应用的构建方式发生了范式转变，从传统的方式（例如，使用**RNN**、**LSTM**或**GRU**并初始化词嵌入）转向使用transformers。transformers促使了如**BERT**（Bidirectional
    Encoder Representations from Transformers）和**GPT**（Generative Pretrained Transformer）等预训练系统的发展。BERT和GPT已经使用大量的通用语言数据集进行训练，如**Wikipedia
    Corpus**和**Common Crawl**，并且可以针对特定的语言任务进行微调。'
- en: 'Some of the challenges with setting up these NLP models include the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 设置这些NLP模型时的一些挑战包括以下几点：
- en: Compute-intensive process and requires GPUs and CPUs
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算密集型过程，且需要使用GPU和CPU
- en: Requires large, labeled datasets for training
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要大规模的、有标签的数据集进行训练
- en: Set up infrastructure for managing the compute and scaling the models in production
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置基础设施来管理计算和扩展生产中的模型
- en: Time-intensive and ML skills are needed to perform modeling
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要大量时间，且需要机器学习技能来进行建模
- en: To overcome these challenges, we have Amazon SageMaker, which helps with removing
    all the infrastructure-heavy lifting of building, training, tuning, and deploying
    NLP models from idea to execution quickly.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 为了克服这些挑战，我们有了Amazon SageMaker，它帮助移除了构建、训练、调优和部署NLP模型从创意到执行的所有基础设施繁重工作。
- en: Amazon SageMaker
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker
- en: You can learn more about how to get started with Amazon SageMaker NLP techniques
    in the book *Learn Amazon SageMaker* by Julien Simon.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过Julien Simon的书《*Learn Amazon SageMaker*》了解如何使用Amazon SageMaker NLP技术入门。
- en: Moreover, talking specifically about implementing transformers in your NLP models,
    Amazon SageMaker also supports transformer implementation in **PyTorch**, **TensorFlow**,
    and **HuggingFace**.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，专门谈到在NLP模型中实现transformers时，Amazon SageMaker还支持在**PyTorch**、**TensorFlow**和**HuggingFace**中实现transformers。
- en: 'The **Hugging Face transformers** package is an immensely popular Python library
    providing pretrained models that are useful for a variety of NLP tasks. Refer
    to this blog to learn more: [https://aws.amazon.com/blogs/machine-learning/aws-and-hugging-face-collaborate-to-simplify-and-accelerate-adoption-of-natural-language-processing-models/](https://aws.amazon.com/blogs/machine-learning/aws-and-hugging-face-collaborate-to-simplify-and-accelerate-adoption-of-natural-language-processing-models/).'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**Hugging Face transformers**包是一个非常受欢迎的Python库，提供了对多种NLP任务有用的预训练模型。参考这篇博客了解更多：[https://aws.amazon.com/blogs/machine-learning/aws-and-hugging-face-collaborate-to-simplify-and-accelerate-adoption-of-natural-language-processing-models/](https://aws.amazon.com/blogs/machine-learning/aws-and-hugging-face-collaborate-to-simplify-and-accelerate-adoption-of-natural-language-processing-models/)。'
- en: So, we have covered some of the key challenges with preprocessing NLP techniques
    and modeling. With AWS AI services such as Amazon Comprehend, you don't need to
    worry about spinning up servers or setting up complex infrastructure for NLP training.
    You also don't need to worry about all the preprocessing techniques we've covered,
    for example, tokenization, PoS tagging, and so on.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们已经覆盖了处理NLP技术和建模时的一些关键挑战。借助AWS AI服务，如Amazon Comprehend，你无需担心启动服务器或设置复杂的NLP训练基础设施。你也不需要担心我们已经覆盖的所有预处理技术，例如分词、词性标注等。
- en: You also don't need to think about implementing transformers to set up deep
    learning models to accomplish some of the key NLP tasks, such as text classification,
    topic modeling, NER, key phrase detection, and a lot more.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你也不需要考虑实现transformers来设置深度学习模型，以完成一些关键的NLP任务，如文本分类、主题建模、命名实体识别（NER）、关键词检测等。
- en: Amazon Comprehend and Comprehend Medical give you APIs to accomplish some key
    NLP tasks (such as sentiment analysis, text classification, or topic modeling)
    on a variety of unstructured texts (such as emails, chats, social media feeds,
    or healthcare notes).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Comprehend 和 Comprehend Medical 提供 API，帮助你完成一些关键的自然语言处理（NLP）任务（如情感分析、文本分类或主题建模），可以处理各种非结构化文本（如电子邮件、聊天记录、社交媒体动态或医疗笔记）。
- en: In the next section, we will cover how Comprehend and Comprehend Medical can
    detect insights in text with no preprocessing.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将介绍如何在无需预处理的情况下，利用 Comprehend 和 Comprehend Medical 检测文本中的洞察。
- en: Exploring the benefits of Amazon Comprehend and Comprehend Medical
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 Amazon Comprehend 和 Comprehend Medical 的优势
- en: 'In this section, we will cover some of the key benefits of Amazon Comprehend
    and Comprehend Medical by discussing the following examples:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过讨论以下示例，介绍 Amazon Comprehend 和 Comprehend Medical 的一些关键优势：
- en: Integrates NLP APIs that use a pretrained deep learning model under the hood.
    These APIs can be added to your apps to make them intelligent as you do not need
    textual analysis expertise to use them.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成了使用预训练深度学习模型的 NLP API。这些 API 可以添加到你的应用中，使其具备智能化功能，因为你不需要文本分析的专业知识即可使用它们。
- en: Provides scalable NLP processing, as its serverless APIs enable you to analyze
    several documents or unstructured textual data for NLP without worrying about
    spinning up servers and managing them.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供可扩展的 NLP 处理，因其无服务器 API 使你能够分析多个文档或非结构化文本数据，而无需担心启动和管理服务器。
- en: 'Both of these services integrate with other AWS services: **AWS IAM**, for
    identity and access management; **Amazon S3**, for storage; **AWS Key Management
    Service** (**KMS**), to manage security keys during encryption; **AWS Lambda**,
    to create serverless architecture. You can perform real-time analysis both from
    streaming data coming from **Amazon Kinesis** or a batch of data in Amazon S3,
    then use the NLP APIs to gain insights on this data and display it in a dashboard
    using **Amazon Quicksight**, which is a visualization tool similar to **Tableau**.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这两个服务都与其他 AWS 服务集成：**AWS IAM**，用于身份和访问管理；**Amazon S3**，用于存储；**AWS Key Management
    Service** (**KMS**)，用于在加密过程中管理安全密钥；**AWS Lambda**，用于创建无服务器架构。你可以实时分析来自 **Amazon
    Kinesis** 的流数据，或者来自 Amazon S3 的批量数据，然后使用 NLP API 获取数据洞察，并使用 **Amazon Quicksight**（类似于
    **Tableau** 的可视化工具）将结果显示在仪表盘上。
- en: These services provide encryption of output results and volume data in Amazon
    S3\. With Amazon Comprehend, you can use KMS keys to encrypt the output results
    of the jobs, as well as the data attached on the storage volume of the compute
    instance that processes the analysis job under the hood.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些服务为 Amazon S3 中的输出结果和数据提供加密功能。使用 Amazon Comprehend 时，你可以使用 KMS 密钥加密作业的输出结果，以及在处理分析任务时，计算实例存储卷上附加的数据。
- en: It's cost-effective, as you only have to pay for the text that you will analyze.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该服务具有成本效益，因为你只需为需要分析的文本付费。
- en: Detecting insights in text using Comprehend and Comprehend Medical without preprocessing
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Comprehend 和 Comprehend Medical 检测文本中的洞察，无需预处理
- en: Amazon Comprehend and Amazon Comprehend Medical are AWS AI services, similar
    to Amazon Textract (which we covered in [*Chapter 2*](B17528_02_Final_SB_ePub.xhtml#_idTextAnchor027)*,*
    *Introducing Amazon Textract*), where you do not need to set up complex models.
    You call the Amazon Comprehend and Amazon Comprehend Medical APIs and send a text
    request, and you will get a response back with the detected confidence score.
    The difference between Amazon Comprehend and Amazon Comprehend Medical is that
    Comprehend Medical is specific to healthcare NLP use cases. Comprehend Medical
    uses ML to extract health-related, meaningful insights from unstructured medical
    text, while Amazon Comprehend uses NLP to extract meaningful information about
    the content of unstructured text by recognizing the **entities**, **key phrases**,
    **language**, **sentiments**, and other common elements in the text.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Comprehend 和 Amazon Comprehend Medical 是 AWS AI 服务，类似于 Amazon Textract（我们在[*第2章*](B17528_02_Final_SB_ePub.xhtml#_idTextAnchor027)中介绍过的*引入
    Amazon Textract*），你无需设置复杂的模型。你只需调用 Amazon Comprehend 和 Amazon Comprehend Medical
    的 API，并发送文本请求，便会得到带有检测置信度得分的响应。Amazon Comprehend 和 Amazon Comprehend Medical 的区别在于，Comprehend
    Medical 专注于医疗领域的 NLP 用例。Comprehend Medical 使用机器学习从非结构化医疗文本中提取与健康相关的有意义信息，而 Amazon
    Comprehend 使用 NLP 从非结构化文本中识别 **实体**、**关键词短语**、**语言**、**情感**及其他常见元素，从而提取有意义的信息。
- en: 'Some of the key use cases of Amazon Comprehend are as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Comprehend 的一些关键应用场景如下：
- en: '*Using topic modeling to search documents based on topics*: With Amazon Comprehend
    topic modeling, you have the ability to configure the number of topics you are
    looking for in your documents or text files. With topic modeling, you can search
    the documents attached with each topic.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用话题建模根据话题搜索文档*：通过 Amazon Comprehend 话题建模，您可以配置在文档或文本文件中寻找的主题数量。使用话题建模，您可以按主题搜索附带的文档。'
- en: '*Using sentiment analysis to analyze the sentiment of what customers think
    of your product*: With Amazon Comprehend sentiment analysis APIs, you can find
    out how customers feel (such as positive, negative, neutral, or mixed) about their
    products. For example, suppose you find a restaurant on Yelp. It''s a pizza place.
    You go there, try the pizza, and do not like it, so you post a comment: "The pizza
    here was not great." Business owners using Comprehend sentiment analysis can quickly
    analyze the sentiment of this text and act in real time on improving user satisfaction
    before their business goes down.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用情感分析分析客户对您产品的看法*：通过 Amazon Comprehend 情感分析 API，您可以了解客户对其产品的情感（例如，正面、负面、中立或混合）。例如，假设您在
    Yelp 上找到了一家餐厅，这是一家披萨店。您去那里，尝试了披萨，觉得不好，于是您发布了评论：“这里的披萨不怎么样。” 使用 Comprehend 情感分析的商家可以快速分析这段文本的情感，并在实际中采取行动，及时改善用户满意度，避免业务下滑。'
- en: '*Quick discovery of customer feelings based on topics and entities*: You can
    combine multiple features of Amazon Comprehend, such as topic modeling, with entity
    recognition and sentiment analysis to discover the topics that your end users
    are talking about in various forums.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*基于话题和实体快速发现客户情感*：您可以结合 Amazon Comprehend 的多项功能，例如话题建模，结合实体识别和情感分析，发现您的终端用户在各种论坛中讨论的话题。'
- en: '*Bring your own data to perform custom classification and custom entity recognition*:
    Amazon Comprehend provides you with the capability to quickly get started with
    custom entities. For example, if you are a manufacturing firm and you are looking
    for certain product codes in the documents, such as PR123, it should be detected
    as the product code using ML.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*带上您的数据执行自定义分类和自定义实体识别*：Amazon Comprehend 为您提供了快速入门自定义实体的能力。例如，如果您是一家制造公司，并且正在寻找文件中的某些产品代码，如
    PR123，系统应使用机器学习检测为产品代码。'
- en: You can bring a sample of your data and use Amazon Comprehend Custom entity
    recognition to get started without needing to worry about writing a complex model.
    You also do not need to worry about labeling large datasets to get started, as
    Amazon Comprehend **Custom** uses transfer learning under the hood. You can get
    started with a small set of labeled data to create custom entities specific to
    your use case. Similarly, you can bring your own data and perform custom classification
    to perform multi-class and multi-label classification to identify classes.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以带上您的数据样本，使用 Amazon Comprehend 自定义实体识别功能快速入门，而无需担心编写复杂的模型。您也不需要担心标注大规模数据集，因为
    Amazon Comprehend **Custom** 在后台使用迁移学习。您可以使用少量标注数据快速开始，创建适用于您用例的自定义实体。同样，您可以带上自己的数据，执行自定义分类，进行多类和多标签分类，以识别不同类别。
- en: 'In the case of healthcare records, you can use Amazon Comprehend Medical. You
    can use Comprehend Medical for the following healthcare applications:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在医疗记录的情况下，您可以使用 Amazon Comprehend Medical。您可以将 Comprehend Medical 用于以下医疗应用：
- en: Using Comprehend Medical APIs to analyze case documents for patient case management
    and outcomes.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Comprehend Medical API 分析病例文档，用于患者病例管理和结果分析。
- en: Using Comprehend Medical APIs to detect useful information in clinical texts
    to optimize the matching process and drug safety for life sciences and research
    organizations.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Comprehend Medical API 检测临床文本中的有用信息，以优化生命科学和研究组织的匹配过程和药物安全性。
- en: Using Comprehend Medical to extract billing codes which can decrease the time
    to revenue for insurance payers involved in medical billing.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Comprehend Medical 提取账单编码，这可以减少涉及医疗账单的保险支付者的收入时间。
- en: Comprehend Medical also supports ontology linking for **ICD-10-CM** (**International
    Classification of Diseases – 10th Version – Clinical Modification**)and **RxNorm**.
    Ontology linking means detecting entities in clinical text and linking those entities
    to concepts in standardized medical ontologies, such as the RxNorm and ICD-10-CM
    knowledge bases.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Comprehend Medical 还支持本体链接，适用于**ICD-10-CM**（**国际疾病分类-第10版-临床修改版**）和**RxNorm**。本体链接意味着在临床文本中检测实体，并将这些实体与标准化医学本体中的概念进行关联，例如
    RxNorm 和 ICD-10-CM 知识库。
- en: Detecting **PHI** data, such as age, date from clinical documents, and set controls,
    to implement PHI compliance in the medical organization.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测 **PHI** 数据，例如临床文件中的年龄、日期，并设置控制措施，以便在医疗组织中实现 PHI 合规性。
- en: We will cover Amazon Comprehend Medical use cases in detail in [*Chapter 12*](B17528_12_Final_SB_ePub.xhtml#_idTextAnchor141)*,*
    *AI and NLP in Healthcare*.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 [*第 12 章*](B17528_12_Final_SB_ePub.xhtml#_idTextAnchor141)*,* *医疗行业中的 AI
    和 NLP* 中详细讨论 Amazon Comprehend Medical 的应用场景。
- en: Using these services to gain insights from OCR documents from Amazon Textract
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用这些服务从 Amazon Textract 中提取 OCR 文档信息
- en: If you have documents in the form of scanned images or PDFs, you can use Amazon
    Textract to extract data quickly from these documents and then use Amazon Comprehend
    to gain meaningful insights from the extracted text, such as entities, key phrases,
    and sentiment. You can further classify these documents using Amazon Comprehend
    text classification, and also perform topic modeling to identify key topics within
    the documents. We will cover how you can use Amazon Textract with Amazon Comprehend
    together in an architecture in [*Chapter 4*](B17528_04_Final_SB_ePub.xhtml#_idTextAnchor063)*,*
    *Automating Document Processing Workflows for Financial Institutions*, and in
    [*Chapter 5*](B17528_05_Final_SB_ePub.xhtml#_idTextAnchor074)*,* *Creating NLP
    Search* in the section *Creating NLP-powered smart search indexes*. Moreover,
    for the healthcare industry, if you have lots of scanned documents such as medical
    intake forms, patient notes, and so on, you can use Amazon Textract to extract
    data from these documents and then use Amazon Comprehend Medical to extract key
    insights from this unstructured text data.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的文档是扫描图像或 PDF 格式，你可以使用 Amazon Textract 从这些文档中快速提取数据，然后使用 Amazon Comprehend
    从提取的文本中获得有意义的见解，例如实体、关键短语和情感。你还可以使用 Amazon Comprehend 文本分类来进一步对这些文档进行分类，并执行主题建模以识别文档中的关键主题。我们将在
    [*第 4 章*](B17528_04_Final_SB_ePub.xhtml#_idTextAnchor063)*,* *为金融机构自动化文档处理工作流*
    和 [*第 5 章*](B17528_05_Final_SB_ePub.xhtml#_idTextAnchor074)*,* *创建 NLP 搜索* 中的
    *创建 NLP 驱动的智能搜索索引* 部分中，讲解如何将 Amazon Textract 与 Amazon Comprehend 结合使用。此外，对于医疗行业，如果你有大量扫描文档，如病人入院表格、病人记录等，你可以使用
    Amazon Textract 从这些文档中提取数据，然后使用 Amazon Comprehend Medical 从这些非结构化文本数据中提取关键见解。
- en: In this section, we first covered the challenges associated with setting up
    NLP modeling. Then we discussed how Amazon Comprehend and Comprehend Medical can
    address the pain points associated with setting up NLP models, such as scalability,
    preprocessing steps, and infrastructure setup. Lastly, we covered how you can
    automate your documents and enrich them with NLP by combining Amazon Textract
    and Amazon Comprehend. We have covered how Comprehend and Comprehend Medical can
    provide rich APIs for building intelligent NLP applications, which are also scalable
    to process large numbers of documents or unstructured data. In the next section,
    we will talk about some of the product features of these services using an AWS
    Console demo.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们首先讨论了设置 NLP 模型时遇到的挑战。然后，我们讨论了 Amazon Comprehend 和 Comprehend Medical
    如何解决设置 NLP 模型时的痛点，例如可扩展性、预处理步骤和基础设施设置。最后，我们讲解了如何通过将 Amazon Textract 和 Amazon Comprehend
    结合使用来自动化文档处理并丰富它们的 NLP 信息。我们已经介绍了 Comprehend 和 Comprehend Medical 如何提供丰富的 API
    来构建智能 NLP 应用程序，这些应用程序同样具有可扩展性，可以处理大量文档或非结构化数据。在下一节中，我们将通过 AWS 控制台演示来讲解这些服务的一些产品特性。
- en: Exploring Amazon Comprehend and Amazon Comprehend Medical product features
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 Amazon Comprehend 和 Amazon Comprehend Medical 产品特性
- en: In this section, we will talk about Amazon Comprehend and Amazon Comprehend
    Medical product features using an AWS Console demo. We will start with Amazon
    Comprehend, and then move to Amazon Comprehend Medical.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过 AWS 控制台演示，讨论 Amazon Comprehend 和 Amazon Comprehend Medical 产品特性。我们将从
    Amazon Comprehend 开始，然后转到 Amazon Comprehend Medical。
- en: Discovering Amazon Comprehend
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发现 Amazon Comprehend
- en: 'Amazon Comprehend enables you to examine your unstructured data, for example,
    social media feeds, posts, emails, web pages, data extracted from Amazon Textract,
    phone transcripts, call center records, or really any kind of unstructured textual
    data. It can help you gain various insights about its content by using a number
    of pretrained models. *Figure 3.2* is a diagram of how Amazon Comprehend actually
    works:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Comprehend 使你能够分析你的非结构化数据，例如社交媒体信息流、帖子、电子邮件、网页、从 Amazon Textract 提取的数据、电话记录、呼叫中心记录，或者任何形式的非结构化文本数据。通过使用多个预训练模型，它可以帮助你深入理解内容的各种见解。*图
    3.2* 是 Amazon Comprehend 实际工作流程的示意图：
- en: '![Figure 3.2 – Amazon Comprehend features'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.2 – Amazon Comprehend 特性'
- en: '](img/B17528_03_02.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17528_03_02.jpg)'
- en: Figure 3.2 – Amazon Comprehend features
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – Amazon Comprehend 功能
- en: 'With Amazon Comprehend, you can perform the following on your input unstructured
    textual data by using the following **text analysis** APIs:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Amazon Comprehend，您可以通过以下 **文本分析** API 在输入的非结构化文本数据上执行以下操作：
- en: '**Detect Entities**'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检测实体**'
- en: '**Detect Key Phrases**'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检测关键短语**'
- en: '**Detect the Dominant Language**'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检测主导语言**'
- en: '**Detect Personally Identifiable Information** (**PII**)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检测个人身份信息**（**PII**）'
- en: '**Determine Sentiment**'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确定情感**'
- en: '**Analyze Syntax**'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析语法**'
- en: '**Topic Modeling**'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主题建模**'
- en: These text analysis APIs can be used both in real-time and in a batch manner,
    while topic modeling is a batch job or asynchronous process and cannot be used
    for real-time use cases.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这些文本分析 API 可以用于实时处理或批量处理，而主题建模是一个批量任务或异步过程，不能用于实时用例。
- en: 'There are two modes in which you can use these APIs:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用这些 API 的两种模式：
- en: '*Real-time in any application*: You can use these APIs for real-time use cases
    by sending one document at a time, or in batch real-time operations by sending
    15 documents in a batch and getting a response immediately.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在任何应用程序中的实时处理*：您可以通过一次发送一个文档来使用这些 API 进行实时处理，或者通过批量实时操作一次发送 15 个文档并立即获得响应。'
- en: '*Batch or asynchronous manner*: Where you bring your large batch of data into
    Amazon S3, point to a dataset, and run any of the preceding analyses in the form
    of a batch job. The results of the batch job are saved to an S3 bucket.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*批量或异步方式*：将大量数据上传到 Amazon S3，指向数据集，然后以批量任务的形式运行前述任何分析。批量任务的结果将保存到 S3 存储桶中。'
- en: Note
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: For synchronous APIs, your text has to be UTF-8 encoded and 5,000 bytes.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于同步 API，您的文本必须是 UTF-8 编码并且不超过 5000 字节。
- en: Let's take a quick look at some Amazon Comprehend features on the AWS Console.
    Please refer to the *Technical requirements* section if you have not already set
    up your AWS account.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速浏览一下 AWS 控制台中的一些 Amazon Comprehend 功能。如果您还没有设置 AWS 账户，请参考*技术要求*部分。
- en: 'Since we all forget to set up autopay messages to pay our credit card bills,
    in this demo we will show you a quick analysis of a sample autopay message to
    extract some key insights using Amazon Comprehend:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们都常常忘记设置自动支付信用卡账单的消息，在本演示中，我们将展示如何使用 Amazon Comprehend 对示例自动支付消息进行快速分析，以提取一些关键信息：
- en: Go to Amazon Comprehend. Click on **Launch Amazon Comprehend**:![Figure 3.3
    – Amazon Comprehend Console
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 Amazon Comprehend，点击 **启动 Amazon Comprehend**：![图 3.3 – Amazon Comprehend
    控制台
- en: '](img/B17528_03_03.jpg)'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17528_03_03.jpg)'
- en: Figure 3.3 – Amazon Comprehend Console
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.3 – Amazon Comprehend 控制台
- en: 'We will use the following sample autopay text to analyze all of the features
    of Amazon Comprehend available through the AWS Console:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用以下示例自动支付文本，分析通过 AWS 控制台提供的 Amazon Comprehend 的所有功能：
- en: '[PRE0]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Copy the preceding text and insert it into **Real-time analysis → Input text**,
    as shown in *Figure 3.4*, and click on **Built-in**, and then **Analyze**:![Figure
    3.4 – Real-time analysis Input text in AWS Console
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制前面的文本并将其插入到 **实时分析 → 输入文本** 中，如*图 3.4*所示，然后点击 **内置**，再点击 **分析**：![图 3.4 –
    AWS 控制台中的实时分析输入文本
- en: '](img/B17528_03_04.jpg)'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17528_03_04.jpg)'
- en: Figure 3.4 – Real-time analysis Input text in AWS Console
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.4 – AWS 控制台中的实时分析输入文本
- en: Scroll down to see the insights.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动以查看分析结果。
- en: Now, we will walk through each **Insights** API by changing each tab.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将通过更改每个标签页来逐一了解每个 **Insights** API。
- en: Detecting entities
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检测实体
- en: 'You can see from the screenshot in *Figure 3.5* that Amazon Comprehend was
    able to detect the highlighted entities from the text you entered:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 从*图 3.5*的截图中可以看到，Amazon Comprehend 能够检测到您输入文本中的高亮实体：
- en: '![Figure 3.5 – Detect entities insights'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.5 – 检测实体分析结果'
- en: '](img/B17528_03_05.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17528_03_05.jpg)'
- en: Figure 3.5 – Detect entities insights
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 – 检测实体分析结果
- en: Scroll down to the results to understand more about these entities and what
    is identified as an entity by Amazon Comprehend's built-in APIs without any customization.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动查看结果，了解这些实体以及 Amazon Comprehend 内置 API 在没有任何自定义的情况下识别的实体。
- en: 'In the following screenshot in *Figure 3.6*, you can see that **Alex** has
    been identified as a **Person**, and **NoNameCompany**, the sender of the autopay
    message, has been identified as an **Organization**. The date by which Alex''s
    amount is due (**June 19th**) has been identified as a **Date** entity, along
    with their specific confidence scores. The **confidence score** means how likely
    a match is to be found by the ML model, which is in a range from 0 to 100\. The
    higher the score, the greater the confidence in the answer. A score of 100 is
    likely an exact match, while a score of 0 means that no matching answer was found:'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在*图 3.6*中的下图中，你可以看到**Alex**被识别为**人物**，**NoNameCompany**，即自动支付消息的发送方，被识别为**组织**。Alex的到期日期（**6月19日**）被识别为**日期**实体，并附带了相应的置信度分数。**置信度分数**表示机器学习模型找到匹配项的可能性，范围从0到100。分数越高，匹配结果的信心越大。分数为100意味着可能是完全匹配，而分数为0则表示未找到匹配答案：
- en: '![Figure 3.6 – Detect entities results'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.6 – 检测实体结果'
- en: '](img/B17528_03_06.jpg)'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17528_03_06.jpg)'
- en: Figure 3.6 – Detect entities results
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.6 – 检测实体结果
- en: Note
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Out of the box, Amazon Comprehend's built-in APIs can detect Person, Location,
    Quantity, Organization, Date, Commercial Item, Quantity, and Title from any text.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 开箱即用，Amazon Comprehend的内置API可以检测文本中的人物、位置、数量、组织、日期、商品项、数量和标题。
- en: 'Let''s quickly scroll down to **Application integration** to see what type
    of request it expects, and what type of response it gives based on this request
    for the API:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们快速滚动到**应用程序集成**，看看它期望什么类型的请求，以及基于此请求API返回什么类型的响应：
- en: '![Figure 3.7 – Comprehend Detect Entities request and response'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.7 – 理解检测实体请求和响应'
- en: '](img/B17528_03_07.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17528_03_07.jpg)'
- en: Figure 3.7 – Comprehend Detect Entities request and response
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7 – 理解检测实体请求和响应
- en: In the last section of this chapter, we will see how to call these APIs using
    `python boto 3` **SDK**s and integrate them into your applications.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后一节，我们将看到如何使用`python boto 3` **SDK**调用这些API并将它们集成到你的应用程序中。
- en: Detecting key phrases
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检测关键短语
- en: 'Change the tab to **key phrases** to understand what the key phrases are and
    what Amazon Comprehend has predicted:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到**关键短语**标签页，以了解关键短语是什么，以及Amazon Comprehend的预测结果：
- en: '![Figure 3.8 – Detect key phrases'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.8 – 检测关键短语'
- en: '](img/B17528_03_08.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17528_03_08.jpg)'
- en: Figure 3.8 – Detect key phrases
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.8 – 检测关键短语
- en: In English, a key phrase consists of a noun phrase (noun plus modifier) that
    describes a particular thing. For example, in the text in *Figure 3.8*, "**Hi
    Alex**", "**Your NoNameCompany Financial Services**", and "**minimum payment**"
    are some of the key phrases identified by the Amazon Comprehend API. Without reading
    the text and just looking at these keywords a person can know it is about a finance
    company and something to do with a payment, which is really useful when you have
    large amounts of unstructured text.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在英语中，关键短语由一个名词短语（名词加修饰语）构成，描述特定的事物。例如，在*图 3.8*中的文本，“**你好，Alex**”，“**你的NoNameCompany金融服务**”以及“**最低支付额**”是Amazon
    Comprehend API识别的一些关键短语。通过查看这些关键字而不需要阅读全文，一个人就能知道这与一家金融公司和某种支付有关，这在处理大量非结构化文本时非常有用。
- en: Language detection
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语言检测
- en: 'Change the tab to see the dominant language identified by Amazon Comprehend,
    as shown in *Figure 3.9*:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到标签页，查看Amazon Comprehend识别的主导语言，如*图 3.9*所示：
- en: '![Figure 3.9 – Detect language console demo'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.9 – 检测语言控制台演示'
- en: '](img/B17528_03_09.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17528_03_09.jpg)'
- en: Figure 3.9 – Detect language console demo
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.9 – 检测语言控制台演示
- en: Similar to other Comprehend APIs, Amazon Comprehend detects the language of
    the given text and provides a confidence score along with it. You can use this
    feature for a book written in multiple different languages, such as both French
    and Hindi. Using language detection APIs, you can detect the language and classify
    the percentage of each language the book consists of, and then you can use **Amazon
    Translate**, which is an AWS service that translates the text from one language
    to another. We will see this example in future chapters in order to translate
    it.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于其他Comprehend API，Amazon Comprehend可以检测给定文本的语言，并提供一个置信度分数。你可以使用此功能来处理用多种不同语言书写的书籍，例如法语和印地语。通过使用语言检测API，你可以检测语言并分类书中每种语言所占的比例，然后可以使用**Amazon
    Translate**，这是AWS提供的将文本从一种语言翻译成另一种语言的服务。我们将在后续章节中看到这个例子，以便进行翻译。
- en: PII detection
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PII检测
- en: 'Change the tab to PII to see what you will get using the Amazon Comprehend
    out-of-the-box PII detection API as follows:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 将标签切换为PII，以查看使用Amazon Comprehend开箱即用的PII检测API将得到的结果如下：
- en: '![Figure 3.10 – PII detection demo'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.10 – PII检测演示'
- en: '](img/B17528_03_10.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17528_03_10.jpg)'
- en: Figure 3.10 – PII detection demo
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.10 – PII检测演示
- en: 'As you can see in *Figure 3.10*, Amazon Comprehend provides you with **Offsets**
    and **Labels** with its real-time or sync PII APIs. If you want to redact the
    PII data from your text, you can use an asynchronous job. Amazon Comprehend can
    detect these PII entities: age, address, AWS access key, AWS secret key, bank-related
    details (such as bank account and bank routing number), credit card details (such
    as credit card number and expiry date), identification details (such as driving
    license ID and passport number), network-related details (such as emails, IP address,
    and MAC address), URLs; passwords; and usernames.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在*图 3.10*中看到的，Amazon Comprehend为您提供了通过其实时或同步PII API的**偏移量**和**标签**。如果您想从文本中删除PII数据，您可以使用异步作业。Amazon
    Comprehend可以检测到以下PII实体：年龄、地址、AWS访问密钥、AWS秘密密钥、银行相关信息（如银行账户和银行路由号码）、信用卡信息（如信用卡号码和有效期）、身份信息（如驾驶执照ID和护照号码）、网络相关信息（如电子邮件、IP地址和MAC地址）、网址；密码；和用户名。
- en: 'With this understanding of types of PII entities detected by Amazon Comprehend,
    let''s scroll down to see the entities or results of Offsets detected by PII for
    the text you entered:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 通过了解Amazon Comprehend检测到的PII实体类型，让我们向下滚动，查看您输入文本中的PII偏移量检测结果：
- en: '![Figure 3.11 – Detect PII results](img/B17528_03_11.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.11 – 检测PII结果](img/B17528_03_11.jpg)'
- en: Figure 3.11 – Detect PII results
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.11 – 检测PII结果
- en: You also get a confidence score along with the entity and the type of PII entity.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 您还会获得一个置信度分数，以及实体和PII实体类型。
- en: In case you do not want to identify the specific entities and just want to know
    what type of PII your documents have, you can use the Labels PII feature.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不想识别具体实体，只是想了解文档中包含哪些类型的PII，您可以使用标签PII功能。
- en: 'Select the **Labels** button to see this feature in action:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**标签**按钮以查看此功能的实际应用：
- en: '![Figure 3.12 – Detect PII Labels result'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.12 – 检测PII标签结果'
- en: '](img/B17528_03_12.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17528_03_12.jpg)'
- en: Figure 3.12 – Detect PII Labels result
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.12 – 检测PII标签结果
- en: From the results shown in *Figure 3.12*, you can clearly see that **Date time**,
    **Email**, **Name**, **Address**, and **Phone** are some of the pieces of PII
    related to a person in the text you entered.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 从*图 3.12*中显示的结果中，您可以清楚地看到，**日期时间**、**电子邮件**、**姓名**、**地址**和**电话**是与您输入文本中的某个人相关的PII信息。
- en: Detecting sentiment
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检测情感
- en: 'Change to the **Sentiment** tab to understand the sentiment of the text you
    have entered:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到**情感**标签以了解您输入文本的情感：
- en: '![Figure 3.13 – Detect sentiment results](img/B17528_03_13.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.13 – 检测情感结果](img/B17528_03_13.jpg)'
- en: Figure 3.13 – Detect sentiment results
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.13 – 检测情感结果
- en: Since the text was related to an autopay message, a neutral sentiment was detected
    by Amazon Comprehend's Detect Sentiment real-time API. The Amazon Comprehend sentiment
    analysis feature helps determine whether the sentiment is positive, negative,
    neutral, or mixed. You can use this feature for various use cases, such as determining
    the sentiments of an online book review, Twitter sentiment analysis, or any social
    media sentiment handles, such as Reddit or Yelp reviews sentiment analysis.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 由于文本与自动支付消息相关，Amazon Comprehend的实时情感分析API检测到中性情感。Amazon Comprehend的情感分析功能帮助确定情感是正面、负面、中性还是混合。您可以将此功能用于各种用例，例如确定在线书评的情感、Twitter情感分析，或任何社交媒体情感分析，如Reddit或Yelp评论情感分析。
- en: Detecting syntax
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检测语法
- en: 'Click on the last tab, **Syntax**, to see what type of responses you can get
    with Amazon Comprehend''s Detect Syntax feature:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 点击最后一个标签，**语法**，以查看使用Amazon Comprehend的检测语法功能可以获得哪些类型的响应：
- en: '![Figure 3.14 – Detect syntax or part of speech results'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.14 – 检测语法或词性结果'
- en: '](img/B17528_03_14.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17528_03_14.jpg)'
- en: Figure 3.14 – Detect syntax or part of speech results
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.14 – 检测语法或词性结果
- en: Amazon Comprehend is able to identify nouns, verbs, and adjectives, and can
    identify 17 types of parts of speech overall. This feature can be really useful
    for data preprocessing for NLP models that require PoS tagging.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Comprehend能够识别名词、动词和形容词，并且可以识别总共17种词性。这一功能对于需要进行词性标注的NLP模型的数据预处理非常有用。
- en: Note
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: We covered all the Amazon Comprehend text analysis real-time APIs in detail.
    You can perform batch real-time operations with all of these APIs we covered and
    send 25-5,000 bytes ([https://docs.aws.amazon.com/comprehend/latest/dg/guidelines-and-limits.html](https://docs.aws.amazon.com/comprehend/latest/dg/guidelines-and-limits.html))
    UTF-8 text documents at once to get real-time results. Comprehend custom has now
    the ability to bring pdf documents directly for analysis and custom training.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们详细介绍了所有Amazon Comprehend文本分析实时API。您可以使用我们所讲解的所有这些API执行批量实时操作，并一次发送25-5000字节的UTF-8文本文档（[https://docs.aws.amazon.com/comprehend/latest/dg/guidelines-and-limits.html](https://docs.aws.amazon.com/comprehend/latest/dg/guidelines-and-limits.html)）以获得实时结果。Comprehend自定义现在可以直接导入PDF文档进行分析和自定义训练。
- en: Amazon Comprehend Custom feature
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Amazon Comprehend 自定义功能
- en: 'With Amazon Comprehend Custom you can bring your own datasets, quickly create
    custom entities, and perform custom classification. This feature is a batch or
    asynchronous feature that involves two steps:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Amazon Comprehend自定义，您可以导入自己的数据集，快速创建自定义实体，并执行自定义分类。此功能是一个批处理或异步功能，涉及两个步骤：
- en: '*Train a classifier or entity recognizer* by providing a small, labeled dataset.
    This classifier or entity recognizer uses **automated ML** (**AutoML**) and transfer
    learning to pick and train a model based on your training dataset provided. It
    also provides an F1 score and precision and recall metrics with this trained model.'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*通过提供一个小型的标记数据集来训练分类器或实体识别器*。此分类器或实体识别器使用**自动化机器学习**（**AutoML**）和迁移学习，根据您提供的训练数据集选择并训练模型。它还会提供F1得分以及与该训练模型相关的精度和召回率指标。'
- en: '*Run batch or real-time analysis on this trained model* after you have trained
    a custom classifier or custom entity recognizer model. You again have two choices
    to create a batch job using this trained model for batches of data in the form
    of an "Analysis job" in the Amazon Comprehend console. You can also create a real-time
    endpoint that can be used for classifying use cases such as live Twitter feeds,
    news feed or customer service requests, and so on, using this model in near-real-time.'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*在训练自定义分类器或自定义实体识别器模型后，对该训练模型进行批量或实时分析*。您可以再次选择两种方式：使用该训练模型为数据批量创建“分析作业”，并在Amazon
    Comprehend控制台中执行；也可以创建一个实时端点，用于分类实时用例，如Twitter实时动态、新闻动态或客户服务请求等，几乎实时地使用该模型。'
- en: '![Figure 3.15 – Comprehend custom classification workflow'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.15 – Comprehend自定义分类工作流程'
- en: '](img/B17528_03_15.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17528_03_15.jpg)'
- en: Figure 3.15 – Comprehend custom classification workflow
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.15 – Comprehend自定义分类工作流程
- en: We will cover Comprehend custom entity features in [*Chapter 14*](B17528_14_Final_SB_ePub.xhtml#_idTextAnchor162)*,*
    *Auditing Named Entity Recognition Workflows*, and Comprehend custom classification
    features in [*Chapter 15*](B17528_15_Final_SB_ePub.xhtml#_idTextAnchor178)*,*
    *Classifying Documents and Setting up Human in the Loop for Active Learning*.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第14章*](B17528_14_Final_SB_ePub.xhtml#_idTextAnchor162)中介绍Comprehend自定义实体功能，*审计命名实体识别工作流程*，以及在[*第15章*](B17528_15_Final_SB_ePub.xhtml#_idTextAnchor178)中介绍Comprehend自定义分类功能，*分类文档并为主动学习设置人工环节*。
- en: We will cover topic modeling product features in detail in [*Chapter 6*](B17528_06_Final_SB_ePub.xhtml#_idTextAnchor089)*,*
    *Using NLP to Improve Customer Service Efficiency*.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第6章*](B17528_06_Final_SB_ePub.xhtml#_idTextAnchor089)中详细介绍主题建模产品功能，*使用自然语言处理（NLP）提高客户服务效率*。
- en: Amazon Comprehend Events
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Amazon Comprehend事件
- en: 'Amazon Comprehend **Events** has a specific use case for financial organizations,
    where you can use this API to see the relationships between various entities extracted
    through Amazon Comprehend in the case of any important financial events such as
    press releases, mergers, and acquisitions. You can use this Events batch API to
    detect events over large documents to answer who, what, when, and where the event
    happened. To learn more about Comprehend Events, refer to this blog: [https://aws.amazon.com/blogs/machine-learning/announcing-the-launch-of-amazon-comprehend-events/](https://aws.amazon.com/blogs/machine-learning/announcing-the-launch-of-amazon-comprehend-events/).'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Comprehend **事件**为金融组织提供了一个特定的使用场景，您可以通过此API查看在任何重要的金融事件中（如新闻发布、并购等）通过Amazon
    Comprehend提取的各个实体之间的关系。您可以使用这个Events批处理API来检测大型文档中的事件，以回答事件发生的“谁、什么、何时、何地”。要了解更多关于Comprehend事件的内容，请参考此博客：[https://aws.amazon.com/blogs/machine-learning/announcing-the-launch-of-amazon-comprehend-events/](https://aws.amazon.com/blogs/machine-learning/announcing-the-launch-of-amazon-comprehend-events/)。
- en: Deriving diagnoses from a doctor-patient transcript with Comprehend Medical
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Comprehend Medical从医生-患者对话记录中推导诊断
- en: 'Amazon Comprehend Medical provides two types of analysis:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Comprehend Medical提供两种分析类型：
- en: '**Text analysis APIs**: Similar to Amazon Comprehend text analysis APIs, Comprehend
    Medical has APIs to detect medical entities and detect PHI.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本分析API**：类似于Amazon Comprehend文本分析API，Comprehend Medical具有检测医疗实体和检测PHI的API。'
- en: '**Oncology detection APIs**: These APIs help link the entities with either
    RxNorm or ICD-10-CM linking. According to the **National Institutes of Health**
    (**NIH**) ([https://www.nlm.nih.gov/research/umls/rxnorm/index.html](https://www.nlm.nih.gov/research/umls/rxnorm/index.html)),
    RxNorm provides normalized names for clinical drugs and links its names to many
    of the drug vocabularies commonly used in pharmacy management and drug interaction
    software. By providing links between these vocabularies, RxNorm can mediate messages
    between systems not using the same software and vocabulary. ICD-10-CM (The ICD-10
    Clinical Modification) is a modification of the ICD-10, authorized by the World
    Health Organization, and used as a source for diagnosis codes in the United States
    of America. To learn more, refer to its Wikipedia entry: [https://en.wikipedia.org/wiki/ICD-10-CM](https://en.wikipedia.org/wiki/ICD-10-CM).'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**肿瘤学检测API**：这些API帮助将实体与RxNorm或ICD-10-CM链接起来。根据**国家卫生研究院**（**NIH**）([https://www.nlm.nih.gov/research/umls/rxnorm/index.html](https://www.nlm.nih.gov/research/umls/rxnorm/index.html))的说法，RxNorm为临床药物提供标准化名称，并将其名称链接到许多药房管理和药物相互作用软件中常用的药物词汇表。通过在这些词汇表之间提供链接，RxNorm可以在不使用相同软件和词汇表的系统之间传递消息。ICD-10-CM（ICD-10临床修改版）是世界卫生组织授权的ICD-10的修改版，并在美国作为诊断代码的来源使用。要了解更多信息，请参阅其维基百科条目：[https://en.wikipedia.org/wiki/ICD-10-CM](https://en.wikipedia.org/wiki/ICD-10-CM)。'
- en: 'Now, we will quickly cover Amazon Comprehend Medical features through the AWS
    Console again:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将再次通过AWS控制台快速了解Amazon Comprehend Medical的功能：
- en: 'Open the AWS Console: [https://console.aws.amazon.com/comprehend/v2/home?region=us-east-1#try-comprehend-medical](https://console.aws.amazon.com/comprehend/v2/home?region=us-east-1#try-comprehend-medical).'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开AWS控制台：[https://console.aws.amazon.com/comprehend/v2/home?region=us-east-1#try-comprehend-medical](https://console.aws.amazon.com/comprehend/v2/home?region=us-east-1#try-comprehend-medical)
- en: 'Click on the **Real-time analysis** feature in Amazon Comprehend Medical, and
    enter the following sample text:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Amazon Comprehend Medical中点击**实时分析**功能，并输入以下示例文本：
- en: '[PRE1]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Copy this text and paste it into **Input text**, as shown in *Figure 3.16*,
    and click on **Analyze**:![Figure 3.16 – Input text for real-time Amazon Comprehend
    Medical analysis
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制此文本并粘贴到*图3.16*中的**输入文本**，然后点击**分析**：![图3.16 – 用于实时Amazon Comprehend Medical分析的输入文本
- en: '](img/B17528_03_16.jpg)'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17528_03_16.jpg)'
- en: Figure 3.16 – Input text for real-time Amazon Comprehend Medical analysis
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.16 – 用于实时Amazon Comprehend Medical分析的输入文本
- en: Note
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: With Comprehend Medical real-time APIs, you can analyze up to 200,000 characters.
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用Comprehend Medical实时API，您可以分析多达200,000个字符。
- en: Scroll down to see the result of Comprehend Medical entities real-time APIs:![Figure
    3.17 – Comprehend Medical detect entities
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到底部查看Comprehend Medical实体的实时API结果：![图3.17 – Comprehend Medical检测实体
- en: '](img/B17528_03_17.jpg)'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17528_03_17.jpg)'
- en: Figure 3.17 – Comprehend Medical detect entities
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.17 – Comprehend Medical检测实体
- en: You can see that Comprehend Medical also provides relationships within these
    entities, such as **Catapres** dosage, and the frequency at which the drug should
    be administered. Amazon Comprehend Medical detects Entity, Type, and Category,
    such as whether the entity is PHI or treatment or time expression and traits,
    along with a confidence score.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以看到，Comprehend Medical还提供这些实体内部的关系，例如**Catapres**剂量以及药物应该被服用的频率。Amazon Comprehend
    Medical检测实体、类型和类别，例如实体是否为PHI或治疗或时间表达和特征，并附带置信度分数。
- en: Scroll down further to see detected entities in `35` is an entity that has been
    detected, with an entity Type of Age, and a Category of PHI.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进一步向下滚动以查看以`35`为实体检测的检测到的实体，其实体类型为年龄，类别为PHI。
- en: '![Figure 3.18 – Comprehend Medical detect entities results'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.18 – Comprehend Medical检测实体结果'
- en: '](img/B17528_03_18.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17528_03_18.jpg)'
- en: Figure 3.18 – Comprehend Medical detect entities results
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.18 – Comprehend Medical检测实体结果
- en: RxNorm concepts
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: RxNorm概念
- en: 'Use this feature to identify medication as entities:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此功能识别药物作为实体：
- en: Switch tabs to **RxNorm**. You'll see a screen like the following screenshot:![Figure
    3.19 – Comprehend Medical InferRxNorm results
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到**RxNorm**选项卡。您将看到一个类似以下截图的屏幕：![图3.19 – Comprehend Medical InferRxNorm结果
- en: '](img/B17528_03_19.jpg)'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure 3.20 – Comprehend Medical InferICD-10-CM结果'
- en: Figure 3.19 – Comprehend Medical InferRxNorm results
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.19 – Comprehend Medical InferRxNorm结果
- en: 'If you scroll down to **Results**, Comprehend Medical shows the **RXCUI**s
    for each medication, along with a confidence score. An RXCUI is a machine-readable
    code that refers to a unique name for a particular drug, and drugs having the
    same RXCUI are considered to be the same drug. This Comprehend Medical feature
    provides RxNorm information such as strength, frequency, dose, dose form, and
    route of administration. You can use this RxNorm feature for scenarios such as
    the following:'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您向下滚动至**结果**，Comprehend Medical显示了每种药物的**RXCUI**，以及置信度评分。RXCUI是一个机器可读的代码，指的是特定药物的唯一名称，具有相同RXCUI的药物被视为同一药物。这个Comprehend
    Medical功能提供RxNorm信息，例如强度、频率、剂量、剂型和给药途径。您可以将这个RxNorm功能用于以下场景：
- en: Patient screening for medications.
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 患者药物筛查。
- en: Preventing probable negative reactions, which can be caused by new prescription
    drugs interacting with drugs the patient is already taking.
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预防可能由新处方药与患者已经服用的药物相互作用而引起的负面反应。
- en: Screening based on drug history, using the RXCUI for inclusion in clinical trials.
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于药物历史的筛选，使用RXCUI包含在临床试验中。
- en: Checking for appropriate frequency and dosage of a drug and drug screening.
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查药物的适当频率和剂量以及药物筛查。
- en: ICD-10-CM concepts
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ICD-10-CM概念
- en: 'Let''s change the tab to **ICD-10-CM concepts** and you will get the following
    analysis:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们切换到**ICD-10-CM概念**标签，您将获得以下分析：
- en: '![Figure 3.20 – Comprehend Medical InferICD-10-CM results'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 3.20 – Comprehend Medical InferICD-10-CM结果'
- en: '](img/B17528_03_20.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 3.20 – Comprehend Medical InferICD-10-CM结果'
- en: Figure 3.20 – Comprehend Medical InferICD-10-CM results
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.20 – Comprehend Medical InferICD-10-CM结果
- en: The **InferICD10CM** API detects possible medical conditions as entities and
    links them to codes from the ICD-10-CM, along with a confidence score. In healthcare,
    these codes are standard medical transaction codes, set for diagnostic purposes
    to comply with the **Health Insurance Portability and Accountability Act** (**HIPAA**),
    and used for classifying and reporting diseases. You can use these ICD-10-CM codes
    for downstream analysis as the signs, symptoms, traits, and attributes.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**InferICD10CM** API将可能的医疗状况检测为实体，并将其链接到ICD-10-CM的代码，同时附带置信度评分。在医疗保健中，这些代码是标准的医疗交易代码，用于诊断目的，以符合**《健康保险移植与责任法》（HIPAA）**，并用于分类和报告疾病。您可以将这些ICD-10-CM代码用于下游分析，作为迹象、症状、特征和属性。'
- en: InferICD10CM is well-suited to scenarios such as professional medical coding
    assistance for patient records, clinical trials and studies, integration with
    an existing medical software system, early detection and diagnosis, and population
    health management.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: InferICD10CM非常适合于专业医疗编码协助患者记录、临床试验和研究、与现有医疗软件系统集成、早期检测和诊断以及人群健康管理等场景。
- en: In the next section, we will see these APIs in action by performing a walkthrough
    of a Jupyter notebook.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将通过执行Jupyter笔记本的演示来查看这些API的实际效果。
- en: Using Amazon Comprehend with your applications
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon Comprehend与您的应用程序
- en: In this section, you will see a detailed walkthrough of broad categories of
    APIs available for Amazon Comprehend and Comprehend Medical through a Jupyter
    notebook example, which you can run in your AWS account. To set up the notebook,
    refer to the *Technical requirements* section of this chapter.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将通过Jupyter笔记本示例详细了解Amazon Comprehend和Comprehend Medical提供的广泛类别的API，您可以在您的AWS账户中运行。要设置笔记本，请参阅本章的*技术要求*部分。
- en: We will be showing you a subset of key APIs in Comprehend along with their functions,
    and then will talk about how you can build applications integrating with AWS Lambda,
    **API Gateway**, and Comprehend.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将展示Comprehend中一组关键API的子集及其功能，然后将讨论如何构建与AWS Lambda、**API Gateway**和Comprehend集成的应用程序。
- en: Note
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: We will cover Amazon Comprehend Medical APIs in [*Chapter 12*](B17528_12_Final_SB_ePub.xhtml#_idTextAnchor141)*,*
    *AI and NLP in Healthcare*.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第12章*](B17528_12_Final_SB_ePub.xhtml#_idTextAnchor141)*，* *医疗保健中的人工智能和自然语言处理*中涵盖Amazon
    Comprehend Medical API。
- en: Let's start with the Amazon Comprehend APIs first. Amazon Comprehend provides
    three types of API.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先从Amazon Comprehend的API开始。Amazon Comprehend提供三种类型的API。
- en: '**Real-time APIs**: For all the text analysis features we covered and Comprehend
    Custom model endpoints.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实时API**：适用于我们涵盖的所有文本分析功能和Comprehend定制模型端点。'
- en: '**Batch real-time APIs**: For all the text analysis features.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**批量实时API**：适用于所有文本分析功能。'
- en: '**Batch or analysis job APIs**: For all text analysis features, topic modeling
    features, and Comprehend Custom model training.'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**批量或分析作业API**：用于所有文本分析功能、主题建模功能以及Comprehend自定义模型训练。'
- en: In the notebook [https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services/blob/main/Chapter%2003/Chapter%203%20Introduction%20to%20Amazon%20Comprehend.ipynb](https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services/blob/main/Chapter%2003/Chapter%203%20Introduction%20to%20Amazon%20Comprehend.ipynb),
    we will cover real-time APIs and batch real-time APIs.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在笔记本中 [https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services/blob/main/Chapter%2003/Chapter%203%20Introduction%20to%20Amazon%20Comprehend.ipynb](https://github.com/PacktPublishing/Natural-Language-Processing-with-AWS-AI-Services/blob/main/Chapter%2003/Chapter%203%20Introduction%20to%20Amazon%20Comprehend.ipynb)，我们将涵盖实时API和批处理实时API。
- en: Note
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can implement the same features in other supported APIs such as Java, Ruby,
    .NET, AWS CLI, Go, C++, JavaScript, and PHP. For more information on Comprehend
    APIs, refer to the Amazon documentation: [https://docs.aws.amazon.com/comprehend/latest/dg/API_Reference.html](https://docs.aws.amazon.com/comprehend/latest/dg/API_Reference.html).'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在其他支持的API中实现相同的功能，例如Java、Ruby、.NET、AWS CLI、Go、C++、JavaScript和PHP。有关Comprehend
    API的更多信息，请参考Amazon文档：[https://docs.aws.amazon.com/comprehend/latest/dg/API_Reference.html](https://docs.aws.amazon.com/comprehend/latest/dg/API_Reference.html)。
- en: 'Let''s start with setting up the Python `boto3` APIs for Amazon Comprehend:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们开始设置Python `boto3` API，以便使用Amazon Comprehend：
- en: '[PRE2]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s see how we can perform entity extraction using sync or real-time APIs
    of `detect_entities`. I am sure you have been reading a lot of Packt books; let''s
    see the following sample text about Packt Publications and what entities we can
    find from this:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看如何使用同步或实时API执行`detect_entities`的实体提取。我相信你已经读了很多Packt的书；让我们看看以下关于Packt Publications的示例文本，以及我们可以从中提取哪些实体：
- en: '[PRE3]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We will call the `detect_entities` API (`comprehend.detect_entities`) to extract
    entities from the sample text:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将调用`detect_entities` API（`comprehend.detect_entities`）从示例文本中提取实体：
- en: '[PRE4]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following is the response for extracted entities from the blurb about Packt
    Publications:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下是从关于Packt Publications的简介中提取的实体的响应：
- en: '[PRE5]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This gives us the following output:'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将给我们以下输出：
- en: '![Figure 3.21 – JSON results screenshot'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.21 – JSON结果截图'
- en: '](img/B17528_03_21.jpg)'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17528_03_21.jpg)'
- en: Figure 3.21 – JSON results screenshot
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.21 – JSON结果截图
- en: Comprehend was able to successfully detect entities along with their type, and
    give a response that Packt Publications is an organization located in Birmingham,
    UK, and Mumbai, India.
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Comprehend能够成功检测实体及其类型，并给出响应，表明Packt Publications是位于英国伯明翰和印度孟买的一个组织。
- en: Now we know what Packt Publications is, let's identify some key phrases about
    this organization using the `detect_key_phrases` API, but when the text is in
    French.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们知道了什么是Packt Publications，让我们使用`detect_key_phrases` API来识别关于该组织的一些关键短语，但文本是法语的。
- en: '[PRE6]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We are going to use the `detect_key_phrases` API with `fr` as a parameter to
    `LanguageCode` to detect key phrases from the preceding French text:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用`detect_key_phrases` API，并将`fr`作为`LanguageCode`参数，来从前面的法文文本中检测关键短语：
- en: '[PRE7]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let''s see the response from Amazon Comprehend:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看来自Amazon Comprehend的响应：
- en: '[PRE8]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This returns the following:'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回以下内容：
- en: '![Figure 3.22 – Comprehend Detect Key Phrase response](img/B17528_03_22.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.22 – Comprehend 检测关键短语响应](img/B17528_03_22.jpg)'
- en: Figure 3.22 – Comprehend Detect Key Phrase response
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.22 – Comprehend 检测关键短语响应
- en: Amazon Comprehend is able to identify key phrases along with the location of
    the text.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Comprehend能够识别关键短语，并且标明文本的位置。
- en: Now, what if you wanted to buy a book from Packt Publications, you might want
    to read the reviews and determine whether they are positive or not.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你想从Packt Publications购买一本书，你可能会想要阅读评论并判断它们是否积极。
- en: 'Using the `batch_detect_sentiment` API, we will show you how you can analyze
    multiple reviews at once. For this demo, we will pick some sample reviews from
    the book *40 Algorithms Every Programmer Should Know* ([https://www.packtpub.com/product/40-algorithms-every-programmer-should-know/9781789801217](https://www.packtpub.com/product/40-algorithms-every-programmer-should-know/9781789801217)):'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`batch_detect_sentiment` API，我们将向你展示如何一次分析多个评论。对于这个演示，我们将从《*每个程序员都应该知道的40种算法*》这本书中挑选一些示例评论
    ([https://www.packtpub.com/product/40-algorithms-every-programmer-should-know/9781789801217](https://www.packtpub.com/product/40-algorithms-every-programmer-should-know/9781789801217))：
- en: 'We are going to analyze some of the reviews of this book using `batch_detect_sentiment`:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用`batch_detect_sentiment`分析一些这本书的评论：
- en: '[PRE9]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, let''s see the response for this by running the following code:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们通过运行以下代码来查看该响应：
- en: '[PRE10]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This produces the following output:'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 3.23 – Comprehend Sentiment Analysis response'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.23 – Comprehend 情感分析响应](img/B17528_03_23.jpg)'
- en: '](img/B17528_03_23.jpg)'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B17528_03_23.jpg)'
- en: Figure 3.23 – Comprehend Sentiment Analysis response
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.23 – Comprehend 情感分析响应
- en: Out of these four reviews analyzed, we can definitely see that, overall, it's
    a positive review for this book. Now, while reading the reviews, there were some
    reviews in different languages which, being an English reader, I did not understand.
    Unfortunately, I don't know which languages these reviews use, and therefore what
    to choose for translation.
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在分析的这四条评论中，我们可以明显看到，总体来说，这是一本书的积极评论。在阅读这些评论时，有一些是不同语言写的，作为一个英语读者，我并不理解它们。很不幸，我不知道这些评论使用的是哪些语言，因此也不知道该选择哪种语言进行翻译。
- en: 'Let''s use the `batch_detect_dominant_language` API of Comprehend to identify
    what languages these reviews are in before we translate them:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用 Comprehend 的 `batch_detect_dominant_language` API 在翻译之前识别这些评论使用的是哪些语言：
- en: '[PRE11]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, let''s see the response from Comprehend to figure out the review languages:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们查看 Comprehend 的响应，以了解评论的语言：
- en: '[PRE12]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This gives us the following output:'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将给出以下输出：
- en: '![Figure 3.24 – Comprehend Detect Language response](img/B17528_03_24.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.24 – Comprehend 检测语言响应](img/B17528_03_24.jpg)'
- en: Figure 3.24 – Comprehend Detect Language response
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.24 – Comprehend 检测语言响应
- en: It's interesting to find out that out of the two reviews sent to this batch
    detect the dominant language, one is in English, and one is in French.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，我们发现，在这批次中发送的两条评论，分别检测出主导语言，一条是英语，另一条是法语。
- en: We have now covered some of the key APIs, such as `detect_entities`, `detect_key_phrases`,
    `batch_detect_sentiment`, and `batch_detect_dominant_languages`.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经介绍了一些关键的 API，如 `detect_entities`、`detect_key_phrases`、`batch_detect_sentiment`
    和 `batch_detect_dominant_languages`。
- en: Now, we will see how we can use these APIs in building an application.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看到如何在构建应用程序时使用这些 API。
- en: Architecting applications with Amazon API Gateway, AWS Lambda, and Comprehend
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Amazon API Gateway、AWS Lambda 和 Comprehend 架构应用程序
- en: In a previous section, we covered Amazon Comprehend's text analysis API. You
    can easily call these APIs in a serverless manner using a Lambda function. Amazon
    Lambda is a serverless event-based trigger that can be integrated with Amazon
    API Gateway and triggered for **GET** and **POST** requests. Amazon API gateway
    is a serverless **REST**-based service, which allows you to build GET/POST APIs
    to easily integrate with any application, be it mobile or web app.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们介绍了 Amazon Comprehend 的文本分析 API。你可以通过 Lambda 函数以无服务器的方式轻松调用这些 API。Amazon
    Lambda 是一种无服务器、基于事件的触发器，可以与 Amazon API Gateway 集成，并触发 **GET** 和 **POST** 请求。Amazon
    API Gateway 是一种无服务器的 **REST** 基础服务，可以让你构建 GET/POST API，轻松与任何应用程序集成，无论是移动应用还是 Web
    应用。
- en: 'You can create an API to be embedded in your application where you send a text
    to be analyzed using API Gateway; then the API Gateway calls the Amazon Lambda
    function, based on the type of request it receives. Amazon Lambda can further
    call Amazon Comprehend APIs (real-time or batch detect real-time APIs). It then
    passes the Comprehend response to API Gateway, as shown in the architecture diagram
    in *Figure 3.25*:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以创建一个 API，将其嵌入到你的应用程序中，通过 API Gateway 发送待分析的文本；然后 API Gateway 根据收到的请求类型调用
    Amazon Lambda 函数。Amazon Lambda 可以进一步调用 Amazon Comprehend API（实时或批处理检测实时 API）。随后，它将
    Comprehend 的响应传递给 API Gateway，如 *图 3.25* 所示的架构图：
- en: '![Figure 3.25 – Building real-time application with Amazon Comprehend](img/B17528_03_25.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.25 – 使用 Amazon Comprehend 构建实时应用程序](img/B17528_03_25.jpg)'
- en: Figure 3.25 – Building real-time application with Amazon Comprehend
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.25 – 使用 Amazon Comprehend 构建实时应用程序
- en: Summary
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we covered why you would need to use Amazon Comprehend and
    Amazon Comprehend Medical. We also discussed the challenges associated with setting
    NLP pipelines.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们讲解了为什么需要使用 Amazon Comprehend 和 Amazon Comprehend Medical。我们还讨论了设置 NLP 流水线时面临的挑战。
- en: Then, we introduced these services, and covered some key benefits they provide,
    for example, not needing ML skills, or easily using the APIs to build scalable
    NLP solutions. After that, we showed some key product features of Amazon Comprehend
    and Amazon Comprehend Medical through a Console demo. Some of Amazon Comprehend's
    features are identifying entities, key phrases, and sentiment, as well as detecting
    dominant language, topic modeling, and so on. For Amazon Comprehend Medical, we
    covered how you can use both text analysis APIs and oncology APIs to enrich and
    extract key information from medical notes. Then we gave you a quick walkthrough
    of these APIs using a Jupyter notebook and covered sync and batch sync APIs. We
    gained a basic theoretical understanding of creating a serverless application
    using these APIs.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们介绍了这些服务，并概述了它们提供的一些关键优势，例如不需要机器学习技能，或轻松使用 API 构建可扩展的 NLP 解决方案。接下来，我们通过控制台演示展示了
    Amazon Comprehend 和 Amazon Comprehend Medical 的一些关键产品功能。Amazon Comprehend 的一些功能包括识别实体、关键词短语和情感分析，以及检测主导语言、主题建模等。对于
    Amazon Comprehend Medical，我们介绍了如何使用文本分析 API 和肿瘤学 API 来丰富和提取医学笔记中的关键信息。随后，我们通过
    Jupyter notebook 对这些 API 进行了简要的操作演示，并讲解了同步和批量同步 API。我们对使用这些 API 创建无服务器应用程序有了基本的理论了解。
- en: In the next chapter, we will talk about how you can integrate Amazon Textract
    with Amazon Comprehend for automating financial documents.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论如何将 Amazon Textract 与 Amazon Comprehend 集成，以实现财务文档的自动化处理。
