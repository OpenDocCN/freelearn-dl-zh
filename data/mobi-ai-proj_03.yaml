- en: Implementing Deep Net Architectures to Recognize Handwritten Digits
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现深度神经网络架构来识别手写数字
- en: In the previous chapters, we have been through the essential concepts and have
    set up tools that are required for us to get our journey into **Artificial Intelligence**
    (**AI**) started. We also built a small prediction app to get our feet wet with
    the tools we will be using.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们已经了解了必要的概念，并设置了启动我们人工智能（**AI**）之旅所需的工具。我们还构建了一个小型预测应用程序，以便熟悉我们将要使用的工具。
- en: In this chapter, we are going to cover a more interesting and popular application
    of AI – Computer Vision, or Machine Vision. We will start by continuing from the
    previous chapter and ease into building **convolutional neural networks** (**CNN**),
    the most popular neural network type for Computer Vision. This chapter will also
    cover the essential concepts that were promised in [Chapter 1](1bfa8853-a79e-4b4a-aa9f-254392b158bb.xhtml), *Artificial
    Intelligence Concepts and Fundamentals*, but, in contrast, this chapter will have
    a very hands-on approach.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论AI的一个更有趣且更受欢迎的应用——计算机视觉，或称机器视觉。我们将从上一章继续，逐步过渡到构建**卷积神经网络**（**CNN**），这是计算机视觉中最流行的神经网络类型。本章还将涵盖[第一章](1bfa8853-a79e-4b4a-aa9f-254392b158bb.xhtml)中承诺的人工智能概念和基础内容，但与之不同的是，本章将采取非常实践的方式。
- en: 'We will be covering the following topics in the chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Building a feedforward neural network to recognize handwritten digits
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个前馈神经网络来识别手写数字
- en: Remaining concepts of neural networks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 神经网络的其余概念
- en: Building a deeper neural network
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个更深层的神经网络
- en: Introduction to computer vision
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算机视觉简介
- en: Building a feedforward neural network to recognize handwritten digits, version
    one
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建一个前馈神经网络来识别手写数字，版本一
- en: In this section, we will use the knowledge that we gained from the last two
    chapters to tackle a problem that has unstructured data – image classification.
    The idea is to take a dive into solving a Computer Vision task with the current
    setup and the basics of neural networks that we are familiar with. We have seen
    that feedforward neural networks can be used for prediction using structured data;
    let's try that on images to classify handwritten digits.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们将运用前两章所学的知识来解决一个包含非结构化数据的问题——图像分类。我们的思路是，通过当前的设置和我们熟悉的神经网络基础，深入解决计算机视觉任务。我们已经看到，前馈神经网络可以用于使用结构化数据进行预测；接下来，我们就用它来分类手写数字图像。
- en: To solve this task, we are going to leverage the **MNSIT** database and use
    the handwritten digits dataset. MNSIT stands for **Modified National Institute
    of Standards and Technology**. It is a large database that's commonly used for
    training, testing, and benchmarking image-related tasks in Computer Vision.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个任务，我们将利用**MNSIT**数据库，并使用手写数字数据集。MNSIT代表的是**修改后的国家标准与技术研究院**（Modified National
    Institute of Standards and Technology）。这是一个大型数据库，通常用于训练、测试和基准化与计算机视觉相关的图像任务。
- en: The MNSIT digits dataset contains 60,000 images of handwritten digits, which
    are used for training the model, and 10,000 images of handwritten digits, which
    are used for testing the model.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: MNSIT数字数据集包含60,000张手写数字图像，用于训练模型，还有10,000张手写数字图像，用于测试模型。
- en: From here out, we will be using Jupyter Notebook to understand and execute this
    task. So, please start your Jupyter Notebook and create a new Python Notebook
    if you have not already done so.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，我们将使用Jupyter Notebook来理解和执行这项任务。所以，如果你还没有启动Jupyter Notebook，请启动它并创建一个新的Python
    Notebook。
- en: 'Once you have your notebook ready, the first thing to do, as always, is to
    import all the necessary modules for the task at hand:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的Notebook准备好，第一件要做的，和往常一样，是导入所有必需的模块：
- en: 'Import `numpy` and set the `seed` for reproducibility:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`numpy`并设置`seed`以确保结果可复现：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Load the Keras dependencies and the built-in MNSIT digits dataset:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载Keras依赖项和内置的MNSIT数字数据集：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Load the data into the training and test sets, respectively:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据分别加载到训练集和测试集中：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Check the number of training images, along with the size of each image. In
    this case, the size of each image is 28 x 28 pixels:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查训练图像的数量以及每张图像的大小。在这个案例中，每张图像的大小是28 x 28像素：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Check the dependent variable, in this case, 60,000 cases with the right label:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查因变量，在这种情况下，包含60,000个带有正确标签的案例：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Check the labels for the first 100 training samples:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查前100个训练样本的标签：
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Check the number of test images, along with the size of each image. In this
    case, the size of each image is 28 x 28 pixels:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查测试图像的数量以及每张图像的大小。在本例中，每张图像的大小是28 x 28像素：
- en: '[PRE6]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Check the samples in the test data, which are basically 2D arrays of size 28
    x 28:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查测试数据中的样本，这些基本上是28 x 28大小的二维数组：
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Check the dependent variable, in this case, 10,000 cases with the right label:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查因变量，在本例中是10,000个带有正确标签的案例：
- en: '[PRE8]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The right label for the previous first sample in the test set is as follows:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试集中第一个样本的正确标签如下：
- en: '[PRE9]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, we need to pre-process the data by converting it from a 28 x 28 2D array
    into a normalized 1D array of 784 elements:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要对数据进行预处理，将其从28 x 28的二维数组转换为归一化的784个元素的一维数组：
- en: '[PRE10]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Check the first sample of the pre-processed dataset:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查预处理数据集的第一个样本：
- en: '[PRE11]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The next step is to one-hot code the labels; in other words, we need to convert
    the data type of the labels (zero to nine) from numeric into categorical:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是对标签进行一热编码；换句话说，我们需要将标签（从零到九）的数据类型从数字转换为类别型：
- en: '[PRE12]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'View the first sample of the label that has been one-hot coded. In this case,
    the number was seven:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看已经进行过一热编码的标签的第一个样本。在这种情况下，数字是七：
- en: '[PRE13]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, we need to design our simple feedforward neural network with an input
    layer using the `sigmoid` activation function and 64 neurons. We will add a `softmax`
    function to the output layer, which does the classification by giving probabilities
    of the classified label:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要设计一个简单的前馈神经网络，输入层使用`sigmoid`激活函数和64个神经元。我们将在输出层添加一个`softmax`函数，通过给出分类标签的概率来进行分类：
- en: '[PRE14]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We can look at the structure of the neural network we just designed using the
    `summary()` function, which is a simple network with an input layer of 64 neurons
    and an output layer with 10 neurons. The output layer has 10 neurons we have 10
    class labels to predict/classify (zero to nine):'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过`summary()`函数查看我们刚刚设计的神经网络的结构，这是一个简单的网络，具有64个神经元的输入层和10个神经元的输出层。输出层有10个神经元，我们有10个分类标签需要预测/分类（从零到九）：
- en: '[PRE15]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Next, we need to configure the model to use an optimizer, a cost function,
    and a metric to determine accuracy. Here, the optimizer that''s being used is
    **Scalar Gradient Descent (SGD)** with a learning rate of 0.01\. The loss function
    that''s being used is the algebraic **Mean Squared Error** (**MSE**), and the
    metric to measure the correctness of the model is `accuracy`, which is the probability
    score:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要配置模型，以便使用优化器、损失函数和度量标准来判断准确性。在这里，使用的优化器是**标量梯度下降法（SGD）**，学习率为0.01。使用的损失函数是代数**均方误差（MSE）**，用于衡量模型正确性的度量标准是`accuracy`，即概率分数：
- en: '[PRE16]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, we are ready to train the model. We want it to use 128 samples for every
    iteration of learning through the network, indicated by `batch_size`. We want
    each sample to iterate at least 200 times throughout the network, which is indicated
    by `epochs`. Also, we indicate the training and validation sets to be used. `Verbose`
    controls the output prints on the console:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们准备好训练模型了。我们希望它每次迭代使用128个样本，通过网络进行学习，这由`batch_size`指示。我们希望每个样本在整个网络中至少迭代200次，这由`epochs`指示。同时，我们指定了用于训练和验证的数据集。`Verbose`控制控制台上的输出打印：
- en: '[PRE17]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Train on 60,000 samples, and then validate on 10,000 samples:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在60,000个样本上进行训练，然后在10,000个样本上进行验证：
- en: '[PRE18]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Finally, we can evaluate the model and how well the model predicts on the test
    dataset:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们可以评估模型以及模型在测试数据集上的预测效果：
- en: '[PRE19]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This can be interpreted as having an error rate (MSE) of 0.027 and an accuracy
    of 0.865, which means it predicted the right label 86% of the time on the test
    dataset.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以解释为错误率（MSE）为0.027，准确率为0.865，这意味着它在测试数据集上预测正确标签的次数占86%。
- en: Building a feedforward neural network to recognize handwritten digits, version
    two
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建一个前馈神经网络来识别手写数字，第二版
- en: 'In the previous section, we built a very simple neural network with just an
    input and output layer. This simple neural network gave us an accuracy of 86%.
    Let''s see if we can improve this accuracy further by building a neural network
    that is a little deeper than the previous version:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一部分中，我们构建了一个非常简单的神经网络，只有输入层和输出层。这个简单的神经网络给了我们86%的准确率。让我们看看通过构建一个比之前版本更深的神经网络，是否能进一步提高这个准确率：
- en: 'Let''s do this on a new notebook. Loading the dataset and data pre-processing
    will be the same as in the previous section:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在一个新的笔记本中进行这项工作。加载数据集和数据预处理将与上一部分相同：
- en: '[PRE20]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The design of the neural network is slightly different from the previous version.
    We will add a hidden layer with 64 neurons to the network, along with the input
    and output layers:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 神经网络的设计与之前版本稍有不同。我们将在网络中加入一个包含64个神经元的隐藏层，以及输入层和输出层：
- en: '[PRE21]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Also, we will use the `relu` activation function for the input and hidden layer
    instead of the `sigmoid` function we used previously.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时，我们将为输入层和隐藏层使用`relu`激活函数，而不是之前使用的`sigmoid`函数。
- en: 'We can inspect the model design and architecture as follows:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以如下检查模型设计和架构：
- en: '[PRE22]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Next, we will configure the model to use the derivative `categorical_crossentropy` cost
    function rather than MSE. Also, the learning rate is increased from 0.01 to 0.1:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将配置模型，使用派生的`categorical_crossentropy`代价函数，而不是我们之前使用的MSE。同时，将学习率从0.01提高到0.1：
- en: '[PRE23]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now, we will train the model, like we did in the previous examples:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将像之前的例子一样训练模型：
- en: '[PRE24]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Train on 60,000 samples and validate on 10,000 samples:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在60,000个样本上训练，并在10,000个样本上验证：
- en: '[PRE25]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: As you can see, there is an increase in accuracy compared to the model we built
    in the first version.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，和我们在第一版中构建的模型相比，准确率有所提高。
- en: Building a deeper neural network
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建更深的神经网络
- en: 'In this section, we will use the concepts we learned about in this chapter
    to build a deeper neural network to classify handwritten digits:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用本章所学的概念，构建一个更深的神经网络来分类手写数字：
- en: 'We will start with a new notebook and then load the required dependencies:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从一个新的笔记本开始，然后加载所需的依赖：
- en: '[PRE26]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'We will now load and pre-process the data:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在将加载并预处理数据：
- en: '[PRE27]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now, we will design a deeper neural architecture with measures to take care
    of overfitting and to provide better generalization:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将设计一个更深的神经网络架构，并采取措施防止过拟合，以提供更好的泛化能力：
- en: '[PRE28]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'This time, we will configure the model using an `adam` optimizer:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这次，我们将使用`adam`优化器来配置模型：
- en: '[PRE29]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now, we will post that we will train the model for `200` epochs at a batch
    size of `128`:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将设定训练模型`200`个周期，批量大小为`128`：
- en: '[PRE30]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Train on 60,000 samples and validate on 10,000 samples:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在60,000个样本上训练，并在10,000个样本上验证：
- en: '[PRE31]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Introduction to Computer Vision
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算机视觉简介
- en: Computer Vision can be defined as the subset of AI where we can teach a computer
    to *see*. We cannot just add a camera to a machine in order for it to *see*. For
    a machine to actually view the world like people or animals do, it relies on Computer
    Vision and image recognition techniques. Reading barcodes and face recognition
    are examples of Computer Vision. Computer Vision can be described as that part
    of the human brain that processes the information that's perceived by the eyes,
    nothing else.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机视觉可以定义为人工智能的一个子集，我们可以教计算机“看”。我们不能仅仅给机器添加一个相机让它“看”。为了让机器像人类或动物一样真正感知世界，它依赖于计算机视觉和图像识别技术。阅读条形码和人脸识别就是计算机视觉的应用实例。计算机视觉可以描述为人类大脑中处理眼睛感知信息的部分，别无其他。
- en: Image recognition is one of the interesting uses of Computer Vision from an
    AI standpoint. The input that is received through Computer Vision on the machine
    is interpreted by the image recognition system, and based on what it sees, the
    output is classified.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图像识别是计算机视觉在人工智能领域中一个有趣的应用。从机器通过计算机视觉接收的输入由图像识别系统解读，依据其所见，输出会被分类。
- en: In other words, we use our eyes to capture the objects around us, and those
    objects/images are processed in our brain, which allows us to visualize the world
    around us. This capability is given by Computer Vision to machines. Computer Vision
    is responsible for automatically extracting, analyzing, and understanding the
    required information from the videos or images that are fed in as input.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，我们用眼睛捕捉周围的物体，这些物体/图像在大脑中被处理，使我们能够直观地感知周围的世界。计算机视觉赋予机器这种能力。计算机视觉负责从输入的视频或图像中自动提取、分析并理解所需的信息。
- en: 'There are various Computer Vision application, and they are used in the following
    scenerios:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机视觉有多种应用，主要用于以下场景：
- en: Augmented reality
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强现实
- en: Robotics
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人技术
- en: Biometrics
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生物特征识别
- en: Pollution monitoring
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 污染监测
- en: Agriculture
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 农业
- en: Medical image analysis
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 医学图像分析
- en: Forensics
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 法医
- en: Geoscience
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地球科学
- en: Autonomous vehicles
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动驾驶汽车
- en: Image restoration
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像恢复
- en: Process control
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流程控制
- en: Character recognition
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符识别
- en: Remote sensing
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遥感
- en: Gesture analysis
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手势分析
- en: Security and surveillance
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全与监控
- en: Face recognition
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人脸识别
- en: Transport
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交通
- en: Retail
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零售
- en: Industrial quality inspection
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工业质量检测
- en: Machine learning for Computer Vision
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算机视觉的机器学习
- en: It's important to use the appropriate ML theories and tools, which will be very
    helpful when we need to develop various applications that involve classifying
    images, detecting objects, and so on. Utilizing  these theories to create computer
    vision applications requires an understanding of some basic machine learning concepts.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 使用适当的机器学习理论和工具非常重要，这对于我们开发涉及图像分类、物体检测等各种应用将非常有帮助。利用这些理论创建计算机视觉应用需要理解一些基本的机器学习概念。
- en: Conferences help on Computer Vision
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算机视觉领域的会议
- en: 'Some of the conferences to look for latest research and applications are as
    follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一些值得关注的会议，了解最新的研究成果和应用，如下所示：
- en: '**Conference on Computer Vision and Pattern Recognition** (**CVPR**) is held
    every year and is one of the popular conferences with research papers ranging
    from both theory and application across a wide domain'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计算机视觉与模式识别会议**（**CVPR**）每年举行，是最受欢迎的会议之一，涵盖从理论到应用的研究论文，跨越广泛的领域。'
- en: '**International Conference on Computer Vision **(**ICCV**)is another major
    conference held every other year attracting one of the best research papers'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**国际计算机视觉大会**（**ICCV**）是每两年举行一次的另一大会议，吸引着一些最优秀的研究论文。'
- en: '**Special Interest Group on Computer Graphics** (**SIGGRAPH**) and interactive
    techniques though more on computer graphics domain has several applications papers
    that utilizes computer vision techniques.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计算机图形学特别兴趣小组**（**SIGGRAPH**）和交互技术，虽然更多集中在计算机图形学领域，但也有几篇应用计算机视觉技术的论文。'
- en: Other notable conferences include **Neural Information Processing Systems** (**NIPS**), **International
    Conference on Machine Learning** (**ICML**), **Asian Conference on Computer Vision** (**ACCV**), **European
    Conference on Computer Vision** (**ECCV**), and so on.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 其他值得注意的会议包括**神经信息处理系统**（**NIPS**）、**国际机器学习大会**（**ICML**）、**亚洲计算机视觉大会**（**ACCV**）、**欧洲计算机视觉大会**（**ECCV**）等。
- en: Summary
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we built a feedforward neural network to recognize handwritten
    digits in two versions. Then, we built a neural network to classify handwritten
    digits, and, finally we gave a short introduction to Computer Vision.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们构建了一个前馈神经网络，识别手写数字，并分为两个版本。然后，我们构建了一个神经网络，用于分类手写数字，最后简要介绍了计算机视觉。
- en: In the next chapter, we will build a Machine Vision mobile app to classify flower
    species and retrieve the necessary information.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将构建一个机器视觉移动应用程序，用于分类花卉品种并检索相关信息。
- en: Further reading
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'For in-depth knowledge on computer vision, do refer the following Packt books:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 若要深入了解计算机视觉，请参考以下Packt出版的书籍：
- en: '*Deep Learning for Computer Vision* by Rajalingappaa Shanmugamani'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*计算机视觉中的深度学习* 由Rajalingappaa Shanmugamani编写'
- en: '*Practical Computer Vision* by Abhinav Dadhich'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*实用计算机视觉* 由Abhinav Dadhich编写'
