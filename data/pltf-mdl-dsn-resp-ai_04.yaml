- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Privacy Management in Big Data and Model Design Pipelines
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据与模型设计管道中的隐私管理
- en: This chapter gives a detailed overview of defining and architecting big data
    and ML pipelines in the cloud. You will learn how to apply the defense techniques
    you learned in [*Chapter 2*](B18681_02.xhtml#_idTextAnchor040) in a scalable,
    interpretable manner with different use cases and examples. In addition, you will
    also explore the security principles of the different ML components, microservices,
    and endpoints. The primary objective of this chapter is to assimilate the knowledge
    gained in previous chapters and apply it more broadly to proactively build a solid
    foundation of risk mitigation strategies. By doing this, you will not only be
    prepared to handle defense at all levels but also equipped to monitor and identify
    new threats and take timely remedial actions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了关于如何在云中定义和构建大数据及机器学习管道的详细概述。您将学习如何以可扩展且可解释的方式应用在[*第二章*](B18681_02.xhtml#_idTextAnchor040)中学到的防御技术，并通过不同的使用案例和示例进行实践。此外，您还将探索不同机器学习组件、微服务和端点的安全原则。本章的主要目标是将前几章中获得的知识进行整合，并更广泛地应用于主动构建一个坚实的风险缓解策略基础。通过这样做，您不仅能做好各个层级的防御准备，还能及时监控和识别新威胁，并采取及时的补救措施。
- en: 'In this chapter, these topics will be covered in the following sections:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下几个部分：
- en: Designing privacy-proven pipelines
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计隐私证明的管道
- en: Designing secure microservices
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计安全的微服务
- en: Cloud security architecture
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云安全架构
- en: Monitoring and threat detection
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控与威胁检测
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter requires you to have `Vault` installed either on your local PC
    or in the cloud. To install it on **Ubuntu**/**Debian**, execute the following
    commands:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章要求您在本地PC或云端安装`Vault`。要在**Ubuntu**/**Debian**上安装，请执行以下命令：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To install it on **CentOS**/**RHEL**, execute the following commands:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要在**CentOS**/**RHEL**上安装，请执行以下命令：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To install it on **macOS**, run the following commands:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要在**macOS**上安装，请运行以下命令：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To install it on **Windows**, execute the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要在**Windows**上安装，请执行以下操作：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: At the end of the installation, whichever OS you use, you can type `Vault` in
    the command prompt, which should show the different usages of `Vault` commands
    if correctly installed.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，不论使用哪种操作系统，您都可以在命令提示符中输入`Vault`，如果正确安装，应该会显示不同的`Vault`命令用法。
- en: 'This chapter also requires you to have Python 3.8 installed, along with the
    Python packages listed here:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本章还要求您安装Python 3.8以及以下列出的Python包：
- en: '`git` `clone` `https://github.com/as791/Adversarial-Example-Attack-and-Defense`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`git` `clone` `https://github.com/as791/Adversarial-Example-Attack-and-Defense`'
- en: '`pip` `install interpret`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pip` `install interpret`'
- en: Designing privacy-proven pipelines
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计隐私证明的管道
- en: When any ML model is deployed to run in production, it needs a fully private
    pipeline that takes in data, preprocesses it, and makes it suitable for training
    and predictive actions. In this section, let us walk through some of the important
    concepts to be kept in mind while designing pipelines that take in terabytes or
    even petabytes of data every millisecond.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当任何机器学习（ML）模型部署到生产环境中时，它需要一个完全私密的管道，能够接收数据、进行预处理，并使其适合训练和预测操作。在本节中，让我们一起来了解在设计接收每毫秒甚至每秒可达数TB或PB数据的管道时，必须牢记的一些重要概念。
- en: Big data pipelines
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 大数据管道
- en: 'In a big data pipeline, we incorporate security and privacy across the design
    in terms of data aggregation, data processing, feature engineering, model training,
    evaluation, and serving the trained models. Data can come in from innumerable
    devices ranging from mobile devices, sensors, and IoT and **Internet of Medical
    Things** (**IoMT**) devices in the form of text, numbers, images, or video frames.
    To architect such an IoT-to-cloud privacy- and security-enabled data pipeline,
    we follow a hierarchical layered deployment strategy, with four access layers
    primarily designed to serve the following purposes:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在大数据管道中，我们在设计过程中将安全性和隐私性贯穿于数据聚合、数据处理、特征工程、模型训练、评估和提供训练后的模型等各个环节。数据可以通过无数设备输入，涵盖从移动设备、传感器、物联网（**IoT**）到**医疗物联网**（**IoMT**）设备，数据形式包括文本、数字、图像或视频帧。为了构建这样一个支持隐私和安全的物联网到云的数据管道，我们遵循分层部署策略，主要设计四个访问层，分别用于以下目的：
- en: The **device layer** (also called a mesh network) comprises all kinds of devices
    (such as embedded systems, sensors, actuators, and other smart objects) that send
    data from the edge of the network.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设备层**（也称为网状网络）包含所有类型的设备（如嵌入式系统、传感器、执行器和其他智能物体），这些设备从网络的边缘发送数据。'
- en: The **network layer** (supporting different network protocols on different data
    formats) is responsible for data transfer and aggregation from the edge network
    to various processing engines. For example, devices may choose to transfer JSON
    data over HTTPS.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络层**（支持不同数据格式下的不同网络协议）负责从边缘网络到各个处理引擎的数据传输和聚合。例如，设备可能选择通过HTTPS传输JSON数据。'
- en: The **service layer** contains different microservices responsible for data
    cleaning, processing, labeling, tagging, feature engineering, model training,
    and evaluation. The job of the service layer is not only to execute all kinds
    of processing functions at the decentralized edge server or on the centralized
    cloud but also to track and maintain data and model lineages by storing them at
    appropriate storage locations.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务层**包含不同的微服务，负责数据清理、处理、标记、标签、特征工程、模型训练和评估。服务层的工作不仅是执行在分散的边缘服务器或集中式云端的各种处理功能，还要通过将数据和模型存储在适当的存储位置来跟踪和维护数据与模型的血统。'
- en: The **application layer** serves the predicted model outcomes to end users through
    API gateways.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用层**通过API网关将预测的模型结果提供给最终用户。'
- en: The following figure illustrates the five different architectural elements along
    with the security measures (such as anonymization, pseudonymization, HE, SMC,
    DP, and DLP, as discussed in [*Chapter 2*](B18681_02.xhtml#_idTextAnchor040))
    that can be incorporated in edge/fog networks in a scalable manner.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了五种不同的架构元素，以及可以以可扩展的方式在边缘/雾网络中集成的安全措施（如匿名化、伪匿名化、同态加密（HE）、安全多方计算（SMC）、差分隐私（DP）、数据丢失防护（DLP），如在[*第
    2 章*](B18681_02.xhtml#_idTextAnchor040)中讨论的）。
- en: '![Figure 4.1 – Security components in edge/fog networks and in cloud systems](img/Figure_4.01_B18681.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.1 – 边缘/雾网络和云系统中的安全组件](img/Figure_4.01_B18681.jpg)'
- en: Figure 4.1 – Security components in edge/fog networks and in cloud systems
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1 – 边缘/雾网络和云系统中的安全组件
- en: One of the primary ways to ensure a high-security design architecture is to
    ensure that the different availability zones of each data center (corresponding
    to different geographical locations) are categorized into several security levels
    of abstraction, such that they form a hierarchical domain structure. This structured
    abstraction can be implemented based on device types as well as the business and
    data context, such as the location from where the data is ingested into the system.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 确保高安全性设计架构的主要方式之一是确保每个数据中心的不同可用区（对应不同的地理位置）被分类为多个安全级别的抽象层次，从而形成分层的域结构。这个结构化的抽象可以根据设备类型以及业务和数据的背景来实现，例如数据从哪里进入系统。
- en: 'We can break the overall system into separate partitions based on the type
    of service rendered, dividing it into four major building units:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以根据提供的服务类型将整体系统划分为独立的部分，将其分为四个主要构建单元：
- en: '**IoT and edge gateway**: This element is primarily involved in communicating
    with external devices’ interfaces (sensors, IoT, and so on), allowing the transfer
    of data only from authenticated devices through Bluetooth, Wi-Fi, or **Radio Frequency
    Identification** (**RFID**). The IoT elements and the gateway establish a mutual-trust
    relationship by means of global certificate authorities trusted by both parties.
    Their public certificates signed by **Certificate Authorities** (**CAs**) help
    to maintain the trust relationship for more than one domain for the period of
    the certificate’s validity. The **secured IoT gateway** privacy design can be
    further extended to support bandwidth and cryptographic requirements, dynamically
    generating key sizes based on the computing power of the available hardware units
    of the IoT devices.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**物联网和边缘网关**：该元素主要用于与外部设备接口（如传感器、物联网等）进行通信，仅允许通过蓝牙、Wi-Fi 或 **射频识别**（**RFID**）从已认证设备传输数据。物联网元素和网关通过全球证书授权机构建立相互信任关系，双方共同信任的证书授权机构签发的公钥证书有助于在证书有效期内维护多个域的信任关系。**安全物联网网关**的隐私设计可以进一步扩展，以支持带宽和加密要求，动态生成密钥大小，基于物联网设备的硬件计算能力。'
- en: '**Authorization and authentication layer**: This element displays different
    policies from the policy repository to authorize and authenticate devices based
    on their unique IDs. On successful authentication and policy validation (based
    on the requesting agent), it generates a unique session ID and responds with a
    certificate (containing a device ID and a copy of the session key) to allow further
    data flow to internal authorized microservices.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**授权和认证层**：此元素展示了来自策略库的不同策略，根据设备的唯一 ID 对设备进行授权和认证。成功认证和策略验证（基于请求代理）后，它会生成一个唯一的会话
    ID，并响应一个证书（包含设备 ID 和会话密钥副本），以允许进一步的数据流向内部授权的微服务。'
- en: '**Trusted relationship environment**: This element acts as the solid foundation
    block of the security architecture by integrating security protocols of different
    aspects, such as integrity, conﬁdentiality, and governance. In other words, this
    block governs the authorization policies to connect the policy agent with the
    data processing and model training unit.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信任关系环境**：此元素通过集成不同方面的安全协议（如完整性、保密性和治理）作为安全架构的坚实基础。换句话说，这一块治理授权策略，将策略代理与数据处理和模型训练单元连接起来。'
- en: '**Data transformation and ML engine**: This element is built with two layers
    of security. The first layer allows low-level data access (for example, data related
    to metadata) based on the device/entity’s role within this unit. Here, access
    control (specifically over databases, columns, queues, and so on) for caches and
    data repositories is achieved at a granular level. The edge devices can now transmit
    the data with end-to-end encryption (for example, using homomorphic encryption).
    This design further allows each device to connect to different transceiver buses,
    creating an additional security layer. In addition, the second layer of this element
    also provides fine-grained, high-level data access by communicating with cloud-based
    private microservices that can be provisioned with/without a firewall.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据转换和机器学习引擎**：此元素由两层安全性构建。第一层基于设备/实体在该单元中的角色，允许低级别的数据访问（例如，关于元数据的数据）。在此，针对缓存和数据存储库的访问控制（特别是数据库、列、队列等）在精细级别上实现。边缘设备现在可以通过端到端加密（例如，使用同态加密）传输数据。该设计进一步允许每个设备连接到不同的收发器总线，创建额外的安全层。此外，第二层还通过与基于云的私有微服务的通信提供细粒度的高级数据访问，这些微服务可以在有/没有防火墙的情况下进行配置。'
- en: In big data systems using the Hadoop framework (a distributed processing framework
    for large volumes of data across clusters), the framework can be supported by
    a dedicated reverse-proxy application called **Apache Knox**, which is responsible
    for providing a single point of authentication and pluggable policy enforcement
    for services through **Representational State Transfer** (**REST**)-based APIs.
    *Figure 4**.2* illustrates how Apache Knox and Apache Ranger can be used to authenticate
    and authorize users.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Hadoop 框架的大数据系统中（Hadoop 是一个用于在集群间处理大规模数据的分布式处理框架），该框架可以通过一个专用的反向代理应用 **Apache
    Knox** 来支持，该应用负责通过基于 **表述性状态转移**（**REST**）的 API 提供单一的身份验证点并可插拔的策略执行。*图 4.2* 展示了如何使用
    Apache Knox 和 Apache Ranger 来进行用户的认证和授权。
- en: '![Figure 4.2 – An architecture with Apache Knox and Ranger for authorization
    and authentication](img/Figure_4.02_B18681.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.2 – 使用 Apache Knox 和 Ranger 进行授权和认证的架构](img/Figure_4.02_B18681.jpg)'
- en: Figure 4.2 – An architecture with Apache Knox and Ranger for authorization and
    authentication
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2 – 使用 Apache Knox 和 Ranger 进行授权和认证的架构
- en: We can also have a similar architectural framework with a sequential authorization
    process with a security gateway, Zookeeper PDP, and a Spark/Storm cluster, which
    gives the client the flexibility to submit a topology of a Storm cluster. This
    kind of framework can be used when clients trigger data processing in distributed
    systems (Spark/Storm clusters) and are allowed entry into the system to make use
    of the data processing and ML capabilities of Spark/Storm.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以建立一个类似的架构框架，采用顺序授权过程，配备安全网关、Zookeeper PDP 和 Spark/Storm 集群，这样客户端就能灵活地提交
    Storm 集群的拓扑。此类框架可在客户端触发分布式系统（Spark/Storm 集群）中的数据处理时使用，并允许其进入系统，利用 Spark/Storm
    的数据处理和机器学习能力。
- en: In addition, we can use **Trusted Execution Environments** (**TEEs**) to build
    a trusted cloud ecosystem hosting applications in their respective private spaces.
    The **Operating System** (**OS**) can run in its own private space over protected
    hardware resources. **Software Guard Extensions** (**SGX**) is available in modern
    computers with Intel chipsets. SGX contains a set of security-related instruction
    codes that are built into some modern Intel **Central Processing Units** (**CPUs**),
    which makes the entire system more efficient in terms of computational cost. Oblivious
    RAM (the compiler responsible for translating the algorithms so that the resultant
    algorithms retain the input-output relationship of the actual algorithm with the
    independent memory access pattern) can help to mitigate attacks that take place
    due to code-branching information. This security method is risk prone as an adversary
    can reverse engineer the model weights given the outputs.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们可以使用**受信执行环境**（**TEEs**）来构建一个受信任的云生态系统，将应用程序托管在各自的私有空间中。**操作系统**（**OS**）可以在其自己的私有空间中运行，依托受保护的硬件资源。**软件保护扩展**（**SGX**）可在现代的英特尔芯片组计算机中使用。SGX包含一组安全相关的指令代码，这些代码被嵌入到一些现代英特尔**中央处理单元**（**CPU**）中，从而使整个系统在计算成本方面更加高效。**Oblivious
    RAM**（负责将算法翻译为保持实际算法输入输出关系并具有独立内存访问模式的算法的编译器）可以帮助缓解因代码分支信息而发生的攻击。这种安全方法有一定的风险，因为对手可以根据输出逆向工程模型权重。
- en: Architecting model design pipelines
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 架构模型设计管道
- en: Now that we have investigated the security measures related to big data pipelines,
    let us investigate some of the best practices around privacy and security in adversarial
    learning, model training, and model retraining.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经研究了与大数据管道相关的安全措施，让我们来探讨一些关于对抗学习、模型训练和模型再训练中隐私和安全的最佳实践。
- en: Adversarial perturbation framework
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对抗扰动框架
- en: 'To mitigate privacy attacks in ML services, one of the proposed defense mechanisms
    is to deploy components/services in an architectural framework to achieve the
    right trade-off between defense mechanisms and model performance metrics. Such
    a defense pipeline can be architected with the following components in place:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少ML服务中的隐私攻击，提出的防御机制之一是将组件/服务部署在一个架构框架中，以在防御机制和模型性能指标之间实现正确的权衡。这样的防御管道可以通过以下组件来架构：
- en: An adversarial perturbation generator responsible for crafting adversarial samples
    in a way that it can hide sensitive private information from attackers
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个对抗扰动生成器，负责以一种可以隐藏敏感私人信息免受攻击者侵害的方式制作对抗样本。
- en: A privacy leakage evaluator responsible for evaluating the information leakage
    of the target model and optimizing the target model’s performance by sending feedback
    back to the generator
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个隐私泄露评估器，负责评估目标模型的信息泄露，并通过向生成器发送反馈来优化目标模型的性能。
- en: A simulator deployed between the generator and the leakage evaluator that receives
    the adversarial samples to emulate the classification probability generated by
    the target model
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个部署在生成器和泄露评估器之间的模拟器，接收对抗样本以模拟目标模型生成的分类概率
- en: '*Figure 4**.3* illustrates all of the different components of the target framework,
    along with three different ways of generating perturbation samples.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4**.3*展示了目标框架的所有不同组件，并且提供了生成扰动样本的三种不同方式。'
- en: '![Figure 4.3 – An adversarial defense pipeline setup in model training](img/Figure_4.03_B18681.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.3 – 在模型训练中设置的对抗防御管道](img/Figure_4.03_B18681.jpg)'
- en: Figure 4.3 – An adversarial defense pipeline setup in model training
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3 – 在模型训练中设置的对抗防御管道
- en: Adversarial perturbation generator
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对抗扰动生成器
- en: 'The backbones of this component are the adversarial algorithm selector and
    the perturbation rate controller. The algorithm selector can choose from the set
    of available algorithms, such as AdvGAN or the **Fast Gradient Sign Method** (**FGSM**).
    The FGSM is a fast and reliable technique that can be used to generate adversarial
    examples with higher, more distinguishable perturbation in comparison with other
    adversarial algorithms:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 该组件的核心包括对抗算法选择器和扰动率控制器。算法选择器可以从可用算法集合中选择，例如AdvGAN或**快速梯度符号方法**（**FGSM**）。FGSM是一种快速且可靠的技术，可以生成与其他对抗算法相比具有更高、更具辨别性的扰动示例：
- en: 'In the following code, we generate an FGSM attack:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以下代码中，我们生成一个FGSM攻击：
- en: '[PRE4]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The attack can be invoked with the following code:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用以下代码来触发攻击：
- en: '[PRE5]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This yields the following output (illustrated in *Figure 4**.4*) demonstrating
    that the level of privacy in model training through adversarial training (FGSM)
    increases with decreases in accuracy. This was carried out on the MNIST dataset.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将产生以下输出（如*图 4.4*所示），表明通过对抗训练（FGSM）进行模型训练时，隐私保护水平随着准确度的下降而提高。此过程在MNIST数据集上进行。
- en: '![Figure 4.4 – FGSM perturbation in adversarial defense pipeline](img/Figure_4.04_B18681.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.4 – 对抗防御管道中的FGSM扰动](img/Figure_4.04_B18681.jpg)'
- en: Figure 4.4 – FGSM perturbation in adversarial defense pipeline
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4 – 对抗防御管道中的FGSM扰动
- en: On the other hand, the OPTMARGIN defense technique creates low-distortion adversarial
    examples from a surrogate model of the region classifier, where examples are robust
    to small perturbations. Meanwhile, the controller can control and adjust the ratio
    of adversarial examples in the uploaded upstream training data. The adversarial
    samples hide the sensitive information of the uploaded datasets by keeping the
    adversarial distortion, or the Euclidean distance between each adversarial record
    and the original data, at the smallest level. By using a minimal distortion rate,
    we can generate adversarial samples with the same classification label as that
    of the original data.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，OPTMARGIN防御技术通过区域分类器的代理模型生成低失真对抗样本，其中样本对小扰动具有鲁棒性。与此同时，控制器可以控制和调整上传的上游训练数据中对抗样本的比例。对抗样本通过保持对抗性失真（即每个对抗记录与原始数据之间的欧几里得距离）在最小水平来隐藏上传数据集中的敏感信息。通过使用最小失真率，我们可以生成具有与原始数据相同分类标签的对抗样本。
- en: Simulator
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 仿真器
- en: This component emulates the probability distribution of the target model to
    effectively design shadow models. Shadow models closely follow the behavior and
    distribution pattern of the target model. The adversarial data can be used to
    minimize the quadratic loss of the simulator.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 该组件模拟目标模型的概率分布，以有效设计影子模型。影子模型紧密跟随目标模型的行为和分布模式。对抗数据可用于最小化仿真器的二次损失。
- en: Privacy leakage evaluator
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 隐私泄露评估器
- en: The privacy leakage evaluator is responsible for deducing the privacy-preserving
    effectiveness of the adversarial samples. It can infer the extent of privacy leakage
    in any of the evaluator plugins (for example, a membership inference attack) and
    helps in benchmarking the level of defense achieved through this framework. The
    evaluator receives feedback and sends the evaluation result to the adversarial
    perturbation generator, to help the generator discover and generate the right
    adversarial samples.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 隐私泄露评估器负责推断对抗样本的隐私保护效果。它可以推断任何评估插件中的隐私泄露程度（例如，成员资格推断攻击），并帮助基准测试通过此框架实现的防御水平。评估器接收反馈并将评估结果发送给对抗扰动生成器，帮助生成器发现并生成正确的对抗样本。
- en: The evaluation functions can employ constraints (such as the generalization
    gap, a decreasing level of attack accuracy, or the loss function of the attack
    classifier). Such constraints play an important role in fine-tuning the noise
    generation process. For example, a high inference accuracy by the evaluator would
    prompt adjustments in the direction of higher perturbation disturbance, while
    a low evaluator inference would prompt adjustments in the direction of less perturbation
    disturbance.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 评估函数可以采用约束条件（如泛化误差、攻击准确度的下降或攻击分类器的损失函数）。这些约束在微调噪声生成过程中特别重要。例如，评估器的高推断准确度会促使在更大扰动方向上进行调整，而评估器的低推断准确度则会促使在较小扰动方向上进行调整。
- en: The objective of adversarial frameworks in ML pipelines
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 机器学习管道中对抗框架的目标
- en: Now that we understand the importance and functionalities of the different components
    of the adversarial framework, our next task is to introduce it as a part of MLOps
    and cloud best-practice strategies. We achieve two benefits when we have this
    framework in place along with the ML model training pipeline. The most important
    benefit is that we hide protected information from adversaries when adversaries
    query the model and retrieve the classification results. The other important benefit
    is that we get a controller in the architecture that controls the performance
    of the new model generated from the synthesis of training data.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了对抗性框架中不同组件的重要性和功能，接下来的任务是将其作为MLOps和云端最佳实践策略的一部分来引入。当我们将这个框架与机器学习模型训练流水线结合使用时，可以获得两个主要好处。最重要的好处是，我们在对抗者查询模型并检索分类结果时，可以隐藏保护的信息。另一个重要的好处是，我们能够在架构中得到一个控制器，来控制从训练数据合成的新模型的性能。
- en: Incremental/continual ML training and retraining
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 增量/持续机器学习训练与再训练
- en: Let us now explore different learning approaches by comparing incremental and
    continual techniques, along with those for retraining, to understand where we
    can gain more privacy in the training process. Research results demonstrate that
    artificial neural networks exhibit the property of catastrophic forgetting when
    they continuously learn a sequence of tasks. **Continual learning** (**CL**),
    popularly known as life-long, sequential, or incremental learning, enables sequential
    learning of the model from a data stream.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过比较增量学习和持续学习技术，以及再训练技术，来探索不同的学习方法，以了解我们如何在训练过程中获得更多的隐私保护。研究结果表明，当人工神经网络持续学习一系列任务时，展现出了灾难性遗忘的特性。**持续学习**（**CL**），也称为终身学习、顺序学习或增量学习，能够使模型从数据流中顺序学习。
- en: 'However, a model loses knowledge of previously gathered information when it
    tries to assimilate new knowledge of subsequent tasks. As models lose information
    on important parameters and are hit by stability (the ability to retain past knowledge)
    and plasticity (the ability to assimilate new knowledge) constraints, the models
    do not consider the probability of adversarial attacks and remain highly susceptible
    to poisoned-backdoor attacks. There has been a large amount of research to mitigate
    such risks, resulting in three different approaches:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当模型尝试吸收后续任务的新知识时，它会丧失之前收集的信息。由于模型在重要参数上的知识丧失，并且受限于稳定性（保持过去知识的能力）和可塑性（吸收新知识的能力）之间的权衡，模型无法考虑对抗性攻击的可能性，因此仍然容易受到毒性后门攻击的影响。针对这些风险，已有大量研究提出了缓解方法，形成了三种不同的途径：
- en: '**Data-based approaches** rely on storing historic knowledge (in episodic memory)
    gained from previous learnings and combining it with the current training data
    to complete the training task. Incremental classifiers and representation learning
    fall under this category.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于数据的方法**依赖于存储从之前学习中获得的历史知识（在情景记忆中），并将其与当前的训练数据结合，以完成训练任务。增量分类器和表征学习属于这一类别。'
- en: '**Architectural approaches** try to mitigate the risks of forgetting by assigning
    different sub-networks to each task. Here, a different part of the network is
    leveraged for each task. By delegating a single responsibility to each sub-network,
    sub-networks do not need to be concerned about training other parts of the neural
    network, once they have completed a single training task. Some examples of this
    type of approach include progressive neural networks, Expert Gate, and ensemble-based
    approaches such as Learn++. We further notice Expert Gate models with sparsity
    demonstrate better scaling and retention capabilities with partial activation
    in parts of the network.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**架构方法**通过为每个任务分配不同的子网络来缓解遗忘风险。在这里，每个任务利用网络的不同部分。一旦完成一个训练任务，子网络就不需要再担心训练神经网络的其他部分。此类方法的例子包括渐进神经网络、专家门控（Expert
    Gate）和基于集成的学习方法，如Learn++。我们进一步注意到，稀疏性的专家门控模型，在网络部分激活时，表现出更好的扩展性和保留能力。'
- en: '**Regularization-based approaches** try to address the data storage and architectural
    complexity issues present in the earlier approaches. They add an extra regularization
    term to the loss function to prevent the loss of prior knowledge. During the learning
    phase or after completing the learning action, the model constantly computes the
    importance of each parameter in the network through different weight computation
    mechanisms. This helps to retain information in subsequent learning stages by
    penalizing drastic changes to the most important parameters. Examples that fall
    under this category include **Elastic Weight Consolidation** (**EWC**), synaptic
    intelligence, and memory-aware synapses.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于正则化的方法**试图解决早期方法中存在的数据存储和架构复杂性问题。它们通过向损失函数添加一个额外的正则化项，以防止先验知识的丧失。在学习阶段或完成学习操作后，模型通过不同的权重计算机制不断计算网络中每个参数的重要性。这有助于通过惩罚对最重要参数的剧烈变化，来保持后续学习阶段的信息。属于这一类别的示例包括**弹性权重整合**（**EWC**）、突触智能和记忆感知突触。'
- en: Although these CL techniques have shown they are able to retain prior knowledge,
    their susceptibility to adversarial attacks is still under research. However,
    research studies suggest that the defense proposals in CL-based EWC can be violated
    by an intelligent adversary by injecting misinformation into the model during
    training. The adversary can further control the level of forgetfulness of any
    task and compromise neural networks by injecting backdoor-poisoned samples, only
    needing to affect as little as 1% of the training data in a single task. This
    attack can be used as an effective tool to defeat online-based continual learners.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些连续学习（CL）技术已证明能够保持先验知识，但它们对对抗性攻击的脆弱性仍在研究中。然而，研究表明，在基于CL的EWC中的防御提案可能会被智能对手通过在训练过程中向模型注入虚假信息所破坏。对手可以进一步控制任何任务的遗忘程度，并通过注入后门污染样本来妥协神经网络，甚至只需要影响单一任务训练数据的1%。这种攻击可以作为一种有效的工具来击败基于在线的连续学习者。
- en: In these cases, the risks involved with CL in model pipelines can be alleviated
    to some extent by analyzing the model leakage information and quantifying the
    leakage with metrics such as the differential score and differential rank. Now
    let us discuss an example of how these metrics can ascertain the leakage caused
    by model updates, especially in the case of high-capacity generative natural **Language
    Models** (**LMs**). This use case helps to give direction in the design of a real-time
    model pipeline when data is continuously ingested into the system. The example
    further demonstrates the privacy implications when an adversary has access to
    multiple snapshots of a model, such as when text data is added/removed from the
    model during the retraining phase. The study should motivate us to follow the
    right process for retraining models while designing pipelines in a particular
    situation where the adversary continuously learns from the differences in data
    used to train the model.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些情况下，分析模型泄漏信息并使用差分分数和差分排名等指标量化泄漏，可以在一定程度上缓解模型管道中的连续学习（CL）风险。现在，让我们讨论一个示例，说明这些指标如何确认模型更新导致的泄漏，尤其是在高容量生成性自然**语言模型**（**LM**）的情况下。这个用例有助于为实时模型管道的设计提供方向，当数据不断输入系统时。这个示例进一步展示了当对手访问模型的多个快照时的隐私影响，例如当文本数据在再训练阶段添加/移除时。研究应该促使我们在设计管道时，遵循正确的再训练模型流程，特别是在对手持续从训练模型所用数据的差异中学习的情况下。
- en: 'The design strategy can be extended to situations where the design of threat
    models is governed by the following:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 设计策略可以扩展到以下情况，在这些情况下，威胁模型的设计受以下因素的影响：
- en: Limited private datasets to fine-tune pre-trained public large-capacity LMs
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有限的私人数据集用于微调预训练的公共大容量语言模型（LM）
- en: LMs trained with capabilities to memorize out-of-distribution training samples
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有记忆分布外训练样本能力的语言模型（LM）
- en: Systems with large-scale deployments of LMs, such as predictive keyboards on
    smartphones, allowing adversaries to analyze the models in greater detail
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大规模部署语言模型（LM）的系统，如智能手机上的预测键盘，允许对手更详细地分析模型
- en: The data leakage threat is multiplied when fine-tuning a public snapshot of
    a high-capacity model (for example, transformer models such as BERT or GPT2).
    The model, when fine-tuned with additional data from an entity, runs the risk
    of exposing both the fine-tuned model and the original public model to the users
    of said entity.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当微调一个高容量模型（例如，BERT或GPT2等变换器模型）的公共快照时，数据泄露威胁会加剧。当模型通过某个实体的附加数据进行微调时，存在将微调后的模型和原始公共模型暴露给该实体用户的风险。
- en: The concept of differential scores can be used to estimate the difference in
    the data used to train the two language models. This score helps us to ascertain
    a token sequence by capturing the probability difference assigned to it by the
    two models, where a higher differential score signifies the addition of sequences
    during model updates. Suitable search methods can further help us to identify
    newly added token sequences and retrieve information related to the difference
    between datasets. This information is now available to anyone; no background knowledge
    of the content and distribution of datasets is required.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用差异得分的概念来估算用于训练两个语言模型的数据差异。该得分帮助我们通过捕捉两个模型对令牌序列的概率差异来确定令牌序列，其中较高的差异得分意味着模型更新过程中添加了该序列。适当的搜索方法可以进一步帮助我们识别新增的令牌序列并检索与数据集差异相关的信息。这些信息现在对任何人都可用，无需了解数据集的内容和分布的背景知识。
- en: To mitigate such attacks and build a solid defense would involve certain changes
    in how the model retraining pipeline is scheduled to trigger incremental learning
    and how it reveals model snapshots to external entities. Hence, design choices
    should be made to restrict views of two successive model snapshots. It has been
    found that two snapshots expose more about the data added or removed when they
    are sequential. The best mitigation strategy to prevent this is to restrict access
    to the model and provide only a subset of predictions to any agent.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了缓解此类攻击并建立坚固的防御，需要对模型重训练流程进行某些调整，以触发增量学习并决定如何向外部实体展示模型快照。因此，应该做出设计选择，以限制对两个连续模型快照的查看。研究发现，两个快照按顺序排列时，会暴露更多关于数据添加或删除的信息。预防这种情况的最佳策略是限制对模型的访问，并仅向任何代理提供部分预测结果。
- en: For example, any external entity can still have full access to the original
    model *M* but only receives the top *k* tokens from the updated model *M’*. Such
    a scenario can be realized when clients obtain their predicted results from the
    cloud by allowing the cloud API to return the specialized model with a truncated
    version of each query. However, when models are deployed on client devices, they
    may be allowed to run in TEEs such as Intel SGX or ARM TrustZone on the same device.
    This method reduces the leakage of information.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，任何外部实体仍然可以完全访问原始模型*M*，但只接收来自更新模型*M’*的前*k*个标记。当客户从云端获取预测结果时，允许云API返回带有每个查询截断版本的专用模型，从而实现这种场景。然而，当模型部署在客户端设备上时，它们可能被允许在同一设备上运行在Intel
    SGX或ARM TrustZone等受信执行环境（TEE）中。此方法有助于减少信息泄露。
- en: 'There are three broad approaches related to model retraining:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种与模型重训练相关的广泛方法：
- en: '**Retraining from scratch**: This method allows us to train a model from scratch
    to yield a fresh model snapshot (M''). This process takes into consideration a
    fresh (random) initialization of the model parameters, and triggering the process
    of retraining would yield slightly different output ML models. As this process
    implies a fresh start to training, the data owner can start the retraining process
    after pruning the data.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从头开始重训练**：这种方法允许我们从头开始训练一个模型，以获得一个新的模型快照（M''）。此过程考虑了模型参数的全新（随机）初始化，触发重训练过程将生成稍有不同的输出机器学习模型。由于该过程意味着从训练的全新开始，数据所有者可以在修剪数据后启动重训练过程。'
- en: '**Continued training**: This method relies on the principle of continuous training
    where the original model is incrementally trained on additional data to yield
    a fresh model snapshot M''. One of the key advantages of this technique is that
    it avoids the added computational cost of training a large dataset from the very
    beginning.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续训练**：这种方法依赖于持续训练的原则，即原始模型在附加数据上进行增量训练，以生成新的模型快照M''。该技术的一个主要优点是避免了从头开始训练大数据集所带来的额外计算成本。'
- en: '*Figure 4**.5* illustrates how retraining and continued training differ in
    terms of data leakage. The vertical axis depicts the perplexity with respect to
    the data D, while the horizontal axis depicts perplexity with regard to data updates.
    Here, perplexity refers to the sudden reaction or the amount of “surprises” a
    model demonstrates in its next-word choice, and hence, lower perplexity values
    indicate a better match between the data and the model.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4**.5* 展示了重新训练和持续训练在数据泄露方面的差异。纵轴表示相对于数据D的困惑度，横轴表示相对于数据更新的困惑度。这里的困惑度指的是模型在选择下一个单词时的突发反应或“惊讶”的程度，因此较低的困惑度值表示数据与模型之间的匹配更好。'
- en: The first plot shows the impact of updating all the model parameters, while
    the second plot demonstrates how the parameters of a previously trained model
    are updated based on completely new data. The diagonal aims to classify the data
    distributions in terms of whether they resemble either the private data update
    N or the base data D. The points that lie above the diagonal are closer in distribution
    to the (private) data update N than to the base data D. As the second plot demonstrates,
    a large amount of perplexity and a larger degree of mismatch or uncertainty between
    the data and model is likely to lead to greater privacy. Here, the greater amount
    of uncertainty or variation validates the fact that sentences retrieved and returned
    after continued training are more likely to be private than those extracted after
    the model is retrained from scratch.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个图展示了更新所有模型参数的影响，而第二个图则演示了如何根据完全新的数据更新先前训练过的模型的参数。对角线的目的是根据数据分布是否更像私人数据更新N或基础数据D来对数据进行分类。位于对角线以上的点在分布上更接近（私人）数据更新N，而不是基础数据D。如第二个图所示，大量的困惑度和数据与模型之间更大的不匹配或不确定性，可能会导致更高的隐私性。在这里，更大的不确定性或变化验证了一个事实，即在持续训练后检索并返回的句子，比从头开始重新训练后的句子更有可能是私密的。
- en: '![Figure 4.5 – Comparing data privacy when retraining from scratch versus continued
    training](img/Figure_4.05_B18681.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.5 – 比较从头开始重新训练与持续训练时的数据隐私](img/Figure_4.05_B18681.jpg)'
- en: Figure 4.5 – Comparing data privacy when retraining from scratch versus continued
    training
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – 比较从头开始重新训练与持续训练时的数据隐私
- en: '**Two-stage continued training**: This mitigation strategy allows the training
    process to continue in two stages. At first, the datasets are split into three
    equal parts, –Dorig, Dextra, and D''extra.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**两阶段持续训练**：这一缓解策略允许训练过程分为两个阶段进行。首先，数据集被分为三等份 —— Dorig、Dextra 和 D''extra。'
- en: We have seen before that the continued training method can initiate model training
    by updating the parameters of a previously trained model (on the arrival of new
    data D or D'). The new two-step training adds an additional step (executed on
    the dataset D'extra after training the model on synthetic/canary data (Dextra).
    This method simulates a scenario where we prohibit access to an attacker on two
    consecutive snapshots. This kind of two-stage or multi-stage continued training
    can lower the differential score of the training phase, thus further reducing
    the probability of private information leakage.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前看到过，持续训练方法可以通过更新先前训练过的模型的参数来启动模型训练（当新的数据D或D'到达时）。新的两步训练方法增加了一个额外的步骤（在训练模型使用合成/金丝雀数据（Dextra）后，执行在数据集D'extra上的训练）。这种方法模拟了一个场景，其中我们禁止攻击者访问两个连续的快照。这种两阶段或多阶段的持续训练可以降低训练阶段的差异得分，从而进一步减少私人信息泄露的可能性。
- en: Next, let’s look at how we can scale defense pipelines with adversarial training
    and retraining on a GPU.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何通过对抗训练和在GPU上重新训练来扩展防御管道。
- en: Scaling defense pipelines
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展防御管道
- en: Now that we know how to introduce defense mechanisms in model pipelines with
    continuous model retraining, let us see how we can make such adversarial systems
    scalable for larger datasets. The scalable design approaches should take into
    consideration the following principles to quickly train on large volumes of data
    in a parallel distributed manner.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经知道如何通过持续的模型重新训练在模型管道中引入防御机制，让我们来看看如何使这种对抗系统能够扩展到更大的数据集。可扩展的设计方法应考虑以下原则，以便以并行分布式的方式快速在大量数据上进行训练。
- en: The generalization power of neural networks should be strong enough to detect
    the most important features from large datasets. Introducing model generalization
    in an iterative training process can refine the data representation at each step,
    thereby maintaining both model accuracy and robustness. An iterative model-training
    mechanism can be designed to label an adversarial sample with the label of the
    original/natural sample (when the perturbation η<η0). The other way is to label
    it as an adversarial sample (when perturbation η≥η0) and raise notifications for
    further analysis by the system.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络的泛化能力应足够强大，以便从大规模数据集中检测出最重要的特征。在迭代训练过程中引入模型泛化，可以在每一步优化数据表示，从而保持模型的准确性和鲁棒性。可以设计一种迭代模型训练机制，当扰动
    η<η0 时，将对抗样本标注为原始/自然样本的标签；另一种方式是当扰动 η≥η0 时，将其标记为对抗样本，并向系统发出通知进行进一步分析。
- en: The most important aspect lies in making the iterative adversarial training
    process parallelizable, which is further illustrated in *Figure 4**.6*. The figure
    shows a distributive adversarial retraining framework and the use of **Graphics
    Processing Units** (**GPUs**). The GPUs can leverage previously generated adversarial
    samples (samples generated at *t-2*) instead of waiting for the samples to be
    generated at *t-1*. Eliminating the need to wait for the samples to be generated
    allows faster processing.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的方面在于使得迭代的对抗训练过程可并行化，这在*图 4.6* 中进一步说明。该图展示了一个分布式的对抗再训练框架，并使用了**图形处理单元**（**GPU**）。GPU
    可以利用先前生成的对抗样本（*t-2* 时生成的样本），而无需等待在 *t-1* 时生成的样本。消除等待生成样本的需求可以加快处理速度。
- en: '![Figure 4.6 – Scalability in adversarial defense pipelines](img/Figure_4.06_B18681.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.6 – 对抗防御流水线的可扩展性](img/Figure_4.06_B18681.jpg)'
- en: Figure 4.6 – Scalability in adversarial defense pipelines
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6 – 对抗防御流水线的可扩展性
- en: Further, we can also develop ensemble models such that outputs from the final
    label are based on the labels provided by two tests, where we add a small amount
    of random noise to one test set but do not add noise to the other dataset. The
    small amount of noise is meant to distort the optimal perturbation coming from
    an adversarial attack, such that images with added noise produce a different output
    than the image without the noise, providing a clear distinction between the original
    and the attack images.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还可以开发集成模型，使得最终标签的输出基于两个测试提供的标签，其中我们向一个测试集添加少量随机噪声，而不向另一个数据集添加噪声。这些少量的噪声旨在扭曲来自对抗攻击的最优扰动，使得加入噪声的图像与未加噪声的图像产生不同的输出，从而清晰区分原始图像与攻击图像。
- en: We have now learned how different mechanisms of model training can add an extra
    layer of privacy. Let us reuse some of the concepts from [*Chapter 2*](B18681_02.xhtml#_idTextAnchor040),
    where we explained the concept of **Differential Privacy** (**DP**), and apply
    them to ML training pipelines.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经了解了模型训练的不同机制如何为隐私增加额外保护。让我们重用在[*第2章*](B18681_02.xhtml#_idTextAnchor040)中解释**差分隐私**（**DP**）概念的一些内容，并将其应用于机器学习训练流水线。
- en: Enabling differential privacy in scalable architectures
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在可扩展架构中启用差分隐私
- en: DP solutions suffered from a disconnect between research and practice, primarily
    due to the low model accuracy and high running costs of privacy-enabled algorithms.
    A private **Stochastic Gradient Descent** (**SGD**) algorithm commonly known as
    **Bolton Differential Privacy** addressed these challenges and was found to integrate
    well with scalable SGD-based analytics systems. The solution entirely depends
    on adding noise after model convergence. Furthermore, the solution yielded better
    model performance metrics without incurring additional overhead.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: DP 解决方案在研究和实践之间存在脱节，主要由于隐私启用算法的低模型准确性和高运行成本。一个称为**Bolton 差分隐私**的私人**随机梯度下降**（**SGD**）算法解决了这些问题，且与可扩展的基于SGD的分析系统相集成效果良好。该解决方案完全依赖于在模型收敛后添加噪声。此外，该方案在不增加额外开销的情况下，提升了模型性能指标。
- en: '*Figure 4**.7* illustrates the stages of data processing where DP is involved
    in a cloud setup in an architecture such as **Google Cloud Platform** (**GCP**).
    As we can see, the sequence of operations is as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4.7* 说明了在云环境（如**谷歌云平台**（**GCP**））架构中，涉及差分隐私的数据处理各个阶段。如我们所见，操作顺序如下：'
- en: Retrieving DP-enabled SQL queries from BigQuery.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 BigQuery 中检索启用差分隐私的 SQL 查询。
- en: Data schema validation with AutoML.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 AutoML 进行数据模式验证。
- en: Feature engineering using AutoML. Features are stored in the cloud database/storage.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用AutoML进行特征工程。特征存储在云数据库/存储中。
- en: In the next stage, DP again kicks in to ensure private queries and models, ensuring
    privacy is incorporated into the system by retrieving the processed results from
    storage.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一阶段，差分隐私再次发挥作用，以确保查询和模型的私密性，通过从存储中获取处理后的结果，将隐私融入系统。
- en: Data mining with DP (for running differentially private SQL queries).
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用差分隐私进行数据挖掘（运行差分隐私SQL查询）。
- en: Data preparation for modeling using the Cloud Dataprep tool.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Cloud Dataprep工具进行建模的数据准备。
- en: ML modeling with DP.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用DP的机器学习建模。
- en: Storage of predicted outcomes.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预测结果的存储。
- en: Evaluation on a test set.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在测试集上的评估。
- en: '![Figure 4.7 – Differential query with model training on Google Cloud](img/Figure_4.07_B18681.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图4.7 – 在Google Cloud上使用模型训练进行差分查询](img/Figure_4.07_B18681.jpg)'
- en: Figure 4.7 – Differential query with model training on Google Cloud
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.7 – 在Google Cloud上使用模型训练进行差分查询
- en: Now that we’ve seen how to deploy DP solutions on the cloud, let us explore
    how we interpret them.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解如何在云端部署DP解决方案，接下来让我们探索如何对其进行解释。
- en: Interpretability of DP solutions
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DP解决方案的可解释性
- en: 'Here, we’ll demonstrate how we can explain privately trained models with Microsoft
    Research’s **interpretML** tool. **Explainable Boosting Machines** (**EBMs**)
    is a recent approach that has been used to train interpretable ML models and at
    the same time protect sensitive data. Let us see now how we can add differential
    privacy to EBMswith the following objectives:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将展示如何使用微软研究院的**interpretML**工具来解释私密训练的模型。**可解释提升机器**（**EBM**）是一种最近的技术，它被用来训练可解释的机器学习模型，同时保护敏感数据。现在让我们看看如何将差分隐私添加到EBMs中，并设定以下目标：
- en: Trained models offer more understanding of global and local interpretability
    (ideal for situations where differential privacy is appropriate). With global
    interpretability, we get to know more about the features that play an important
    role in the model outcomes, while with local interpretability we can explain each
    individual prediction.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练过的模型提供了更好的全局和局部可解释性（非常适合差分隐私适用的场景）。通过全局可解释性，我们可以了解在模型结果中起重要作用的特征，而通过局部可解释性，我们可以解释每个单独的预测。
- en: Models can be corrected to resolve errors introduced by DP after the training
    process.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在训练过程后，模型可以被修正，以解决差分隐私引入的错误。
- en: 'Let’s walk through an example:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个示例来演示：
- en: 'First, we have the necessary imports, as shown here:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们有必要的导入项，如下所示：
- en: '[PRE6]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The next step is to introduce a `DPExplainableBoosting` classifier and measure
    the `roc_auc` metrics as well as the time taken for evaluation:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是引入`DPExplainableBoosting`分类器，测量`roc_auc`指标以及评估所需时间：
- en: '[PRE7]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Next, we introduce an `ExplainableBoosting` classifier (without DP) and measure
    the `roc_auc` metrics as well as the time taken for evaluation:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们介绍一个`ExplainableBoosting`分类器（没有DP），并衡量`roc_auc`指标以及评估所需时间：
- en: '[PRE8]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output received is as follows:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 接收到的输出如下：
- en: '[PRE9]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In the final step, we show the global explanations of both models and examine
    the differences:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最后一步，我们展示了两种模型的全局解释，并检查它们之间的差异：
- en: '[PRE10]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '*Figure 4**.8* illustrates the output for **Standard EBM** and **DP EBM** where
    features are ranked based on their importance. We see that **Relationship**, **Gender**,
    and **EducationNum** play a bigger role in DP EBM than Standard EBM. On further
    analyzing the contribution of each feature (such as **MaritalStatus**), the scores
    for **Separated** and **DPOther** exhibit a larger range in DP EBM than Standard
    EBM.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '*图4.8*展示了**标准EBM**和**DP EBM**的输出，特征根据其重要性进行排名。我们看到，**关系**、**性别**和**教育年限**在DP
    EBM中比在标准EBM中发挥更大的作用。通过进一步分析每个特征的贡献（如**婚姻状况**），我们看到**分居**和**DPOther**在DP EBM中的得分范围比标准EBM大。'
- en: '![Figure 4.8 – Explainability demonstrated on DP models](img/Figure_4.08_B18681.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图4.8 – 在DP模型上展示可解释性](img/Figure_4.08_B18681.jpg)'
- en: Figure 4.8 – Explainability demonstrated on DP models
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.8 – 在DP模型上展示可解释性
- en: Now that we know how to create DP training pipelines, let us investigate some
    proven secure deployment tactics and the deployment of signed models in a cloud
    infrastructure.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经知道如何创建差分隐私（DP）训练管道，那么接下来我们来研究一些经过验证的安全部署策略，以及如何在云基础设施中部署签名模型。
- en: Securing deployment and model signing
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署安全性和模型签名
- en: One of the primary security standards is to ensure that all components of the
    model training and deployment pipeline are integrated with security verification
    checks. In addition, we should also carefully protect the privacy and integrity
    of sensitive data, such as passwords, tokens, and other secrets, that is essential
    for the end-to-end system functionality in production environments. Hence all
    production secrets should only be stored in managed digital vaults and should
    never be checked into repositories and configuration files. We should also have
    introduced automation to support the dynamic generation of secrets at deployment
    time, along with the routine checking of processes to detect and mitigate threats
    arising from the presence of unprotected secrets.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的安全标准之一是确保模型训练和部署流水线的所有组件都与安全验证检查集成。此外，我们还应当小心保护敏感数据的隐私和完整性，如密码、令牌和其他密钥，这些都是生产环境中端到端系统功能所必需的。因此，所有生产环境中的机密信息应仅存储在托管的数字保险库中，并且绝不应提交到代码库和配置文件中。我们还应引入自动化，以支持在部署时动态生成机密，并定期检查流程，以检测和缓解由于未保护机密存在所带来的威胁。
- en: Now let us see, with help of *Figure 4**.9,* how AWS SageMaker can be used for
    model packaging and signing ([https://aws.amazon.com/blogs/machine-learning/machine-learning-at-the-edge-with-aws-outposts-and-amazon-sagemaker/](https://aws.amazon.com/blogs/machine-learning/machine-learning-at-the-edge-with-aws-outposts-and-amazon-sagemaker/)).
    This will help us to understand how to package together the model artifacts and
    provide a valid authorized signature and store at S3 using Amazon SageMaker Edge
    Manager.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过 *图 4.9* 来看看如何使用 AWS SageMaker 进行模型打包和签名 ([https://aws.amazon.com/blogs/machine-learning/machine-learning-at-the-edge-with-aws-outposts-and-amazon-sagemaker/](https://aws.amazon.com/blogs/machine-learning/machine-learning-at-the-edge-with-aws-outposts-and-amazon-sagemaker/))。这将帮助我们了解如何将模型工件打包在一起，提供有效的授权签名，并使用
    Amazon SageMaker Edge Manager 存储到 S3。
- en: 'In real-world scenarios where Amazon SageMaker helps us to build and train
    models in an AWS Region, we can use Amazon SageMaker Edge Manager to train models
    in an optimized manner, with the models inferred locally and stored in corresponding
    local data centers of AWS. This kind of optimal training reduces latency in contrast
    to situations where the distance between the data center and AWS Region is large.
    ML models can be trained using AWS SageMaker (in an AWS Region) once model artifacts
    are stored in Amazon S3\. Further, the models can be packaged and signed with
    Amazon SageMaker Edge Manager. The compiled and signed model can be copied from
    AWS S3 (in the AWS region) to an Amazon EC2 instance on AWS Outposts and can then
    be served with the model inferences via the SageMaker Edge Manager agent. The
    following figure illustrates these steps in further detail:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际场景中，AWS SageMaker 帮助我们在 AWS 区域内构建和训练模型时，我们可以使用 Amazon SageMaker Edge Manager
    以优化的方式训练模型，通过本地推理并将其存储在 AWS 相应的本地数据中心。这种优化的训练方法比起数据中心与 AWS 区域之间距离较远的情况，可以减少延迟。机器学习模型可以在
    AWS SageMaker（在 AWS 区域内）上进行训练，一旦模型工件存储在 Amazon S3 中，就可以进行打包和签名。已编译和签名的模型可以从 AWS
    S3（在 AWS 区域内）复制到 AWS Outposts 上的 Amazon EC2 实例，并通过 SageMaker Edge Manager 代理提供模型推理服务。下图进一步详细说明了这些步骤：
- en: '![Figure 4.9 – Model signing in AWS SageMaker](img/Figure_4.09_B18681.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.9 – 在 AWS SageMaker 中的模型签名](img/Figure_4.09_B18681.jpg)'
- en: Figure 4.9 – Model signing in AWS SageMaker
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9 – 在 AWS SageMaker 中的模型签名
- en: 'In GCP, we have BigQuery ML, which supports `CREATE MODEL` call, specifying
    the `KMS_KEY_NAME` in the training options and the path that can be used to store
    the model:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GCP 中，我们有 BigQuery ML，它支持 `CREATE MODEL` 调用，指定训练选项中的 `KMS_KEY_NAME` 和可以用于存储模型的路径：
- en: '[PRE11]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: With our new knowledge of securing private ML models, let us investigate how
    we can design secure microservices.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 通过我们对保护私有机器学习模型的新知识，接下来让我们探讨如何设计安全的微服务。
- en: Designing secure microservices
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计安全的微服务
- en: Using ML, we can design different intelligent, predictive services that may
    use one or more algorithms including **Feed-Forward Neural Networks** (**FFNNs**),
    **Deep Belief Networks** (**DBNs**) ([https://www.sciencedirect.com/topics/engineering/deep-belief-network](https://www.sciencedirect.com/topics/engineering/deep-belief-network)),
    and **Recurrent Neural Networks** (**RNNs**). To facilitate the reuse of customized
    algorithms, we may choose to create an abstraction layer and encapsulate each
    of the predictive services as data-oriented microservices that can be integrated
    with applications requiring ML capabilities. Further, one ML microservice may
    be trained using the TensorFlow library, another may use the PyTorch library,
    and a third microservice may be trained on the Caffe library. Microservice-based
    ML models allow maximum reuse of ML libraries, algorithm features, executables,
    and configurations, fostering collaboration among ML teams.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ML，我们可以设计不同的智能预测服务，这些服务可以使用一个或多个算法，包括**前馈神经网络**（**FFNNs**），**深度信念网络**（**DBNs**）（[https://www.sciencedirect.com/topics/engineering/deep-belief-network](https://www.sciencedirect.com/topics/engineering/deep-belief-network)），和**递归神经网络**（**RNNs**）。为了促进定制算法的重复使用，我们可以选择创建一个抽象层，并将每个预测服务封装为面向数据的微服务，这些微服务可以与需要ML能力的应用程序集成。此外，可以使用TensorFlow库对一个ML微服务进行训练，另一个可能使用PyTorch库，第三个微服务可能使用Caffe库进行训练。基于微服务的ML模型允许最大限度地重用ML库、算法特性、可执行文件和配置，促进ML团队之间的合作。
- en: 'For example, as illustrated in *Figure 4**.10*, there are four ML predictive
    microservices – **Recommendations**, **Customer behavior**, **Location-based ads**,
    and **Basket**, along with **Identity management** and **Customer transactions**.
    Now let us see how we can incorporate security mechanisms in these REST-based
    microservices:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如*图4**.10*所示，有四个ML预测微服务 - **推荐**，**客户行为**，**基于位置的广告**和**购物篮**，以及**身份管理**和**客户交易**。现在让我们看看如何在这些基于REST的微服务中引入安全机制：
- en: Any HTTP client request (from a mobile/web API) lands first in the API gateway
    (*step 1a*), where it is directed to the **Identity management** (**IM**) microservice
    (*step 1b*) through the load balancers.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任何HTTP客户端请求（从移动/网络API）首先着陆在API网关（*步骤1a*），然后通过负载均衡器将其指向**身份管理**（**IM**）微服务（*步骤1b*）。
- en: On being authenticated by the IM microservice (*step 2*), the client is provided
    with an authentication token, with which it can further request any predictive
    service.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当由IM微服务（*步骤2*）进行验证时，客户端将提供身份验证令牌，使用该令牌可以进一步请求任何预测服务。
- en: When the authentication service provides the authentication token, it is then
    used by the microservice as in *step 3* to validate the request and send a corresponding
    response as in *step 6*. Each of the microservices can be further secured by providing
    them with dynamic secrets from the vault (storage allocated for storing secret
    keys) through its rich APIs.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当认证服务提供身份验证令牌时，然后由微服务在*步骤3*中使用该令牌验证请求，并在*步骤6*发送相应的响应。每个微服务可以通过从保险库（专用于存储密钥的存储区域）获得动态密钥来进一步保护。
- en: Further, each of the microservices issues its request to the backend transaction
    database in *step 4* and receives its response in *step 5*.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，每个微服务在*步骤4*向后端交易数据库发出请求，并在*步骤5*收到其响应。
- en: As the vault is cloud- and application-framework-agnostic, it can easily be
    migrated across platforms, environments, and machines.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 由于保险库与云和应用程序框架无关，因此可以轻松地在不同平台、环境和机器之间迁移。
- en: 'In addition, we should follow these principles to ensure the security of microservices:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们应遵循以下原则，以确保微服务的安全性：
- en: Limit permissions and keep them to the minimum number required by each user
    or service role.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制权限并将其保持在每个用户或服务角色所需的最小数量。
- en: Never grant pseudo or a privileged account to others for them to run services.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 永远不要授予伪或特权帐户给其他人以运行服务。
- en: Always limit access to available resources—for example, we should always define
    security rules to restrict a container’s access to the host operating system.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 始终限制对可用资源的访问权限，例如，我们应始终定义安全规则，以限制容器对主机操作系统的访问。
- en: Always store secrets in the vault and run security automation checks to detect
    secrets stored inside containers or repositories.
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 始终将机密信息存储在保险库中，并运行安全自动化检查，以检测存储在容器或仓库中的机密信息。
- en: Define isolation or sandbox units through the use of appropriate security rules
    for available resources with different levels of sensitivity.
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用适当的安全规则为具有不同敏感级别的可用资源定义隔离或沙盒单元。
- en: '![Figure 4.10 – An example of ML-based microservice architecture](img/Figure_4.10_B18681.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.10 – 基于机器学习的微服务架构示例](img/Figure_4.10_B18681.jpg)'
- en: Figure 4.10 – An example of ML-based microservice architecture
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10 – 基于机器学习的微服务架构示例
- en: Vault
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Vault
- en: Vault is a tool for managing secrets in zero-trust networks. It offers a high
    level of protection by keeping data access limited and confidential.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: Vault 是一种用于管理零信任网络中密钥的工具。它通过限制数据访问并保持机密性，提供了高水平的保护。
- en: Vault supports high-throughput-capable API interfaces to help manage secrets
    for a large number of microservices in different environments. It also has flexible
    authentication methods using its available plugins, which enable you to authenticate
    applications running in Nomad or in Kubernetes. Vault has plugins to provide automatic
    authentication for applications running on any cloud, from Azure, AWS, and GCP
    to Alibaba and Weiwei.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Vault 支持高吞吐量的 API 接口，帮助管理在不同环境中运行的大量微服务的密钥。它还提供灵活的身份验证方法，使用其可用插件，支持在 Nomad 或
    Kubernetes 中运行的应用程序进行身份验证。Vault 拥有插件，可为在任何云上运行的应用程序提供自动身份验证，涵盖了从 Azure、AWS 和 GCP
    到阿里巴巴和微微等云平台。
- en: Vault provides better security management with dynamic secrets enabling each
    endpoint to have a separate username and password based on the entity getting
    assessed. By doing this, Vault can provide an extra shield and is able to prevent
    a chain of attacks arising from a security breach of any one of the microservices.
    Here, the attacker is no longer able to attack one insecure area and access secrets
    to gain access to the entire environment. Another important property of Vault
    is that the dynamic secrets generated by it are timebound and easily revocable.
    It thus allows admins to easily revoke secrets in case of a security breach in
    the environment. This feature of Vault prevents system restart.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Vault 提供更好的安全管理，通过动态密钥使每个端点可以根据被评估的实体拥有独立的用户名和密码。通过这样做，Vault 可以提供额外的保护，并能防止因任何一个微服务的安全漏洞引发的连锁攻击。在这种情况下，攻击者不再能够攻击某个不安全的区域并访问密钥，从而获得对整个环境的访问权限。Vault
    的另一个重要特性是它生成的动态密钥是有时间限制的，并且容易撤销。因此，在环境中发生安全漏洞时，管理员可以轻松撤销密钥。Vault 的这一功能防止了系统重启。
- en: Let us see an example of how Vault limits the scope and surface area of attacks
    by removing an attacker from the system by revoking rights. If a service account
    (from a cloud provider such as GCP, AWS, or Azure) with zero permissions is authenticated
    with Vault, then even if the service account gets compromised, the temporary service
    account (as authenticated by Vault) will help to mitigate attacks. With a Vault-authenticated
    service account, it is no longer possible for an attacker to spin up hundreds
    of VMs, which they would have been able to do in the absence of authentication
    from Vault. Vault also makes full use of key-rotation techniques using **Key Management
    Services** (**KMSs**) of the various cloud providers to facilitate dynamic key
    generation, thereby adding extra layers of protection.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个例子，了解 Vault 如何通过撤销权限将攻击者从系统中移除，从而限制攻击范围和攻击面。如果一个具有零权限的服务账户（来自云提供商如 GCP、AWS
    或 Azure）通过 Vault 进行身份验证，那么即使服务账户被攻破，临时服务账户（由 Vault 认证）也有助于缓解攻击。在 Vault 认证的服务账户下，攻击者无法像在没有
    Vault 认证的情况下那样启动数百个虚拟机。Vault 还充分利用了各种云提供商的 **密钥管理服务**（**KMSs**）中的密钥轮换技术，促进动态密钥生成，从而增加额外的保护层。
- en: 'Vault enables Kubernetes’ `auth` method to authenticate clients using a Kubernetes
    service account token. A Vault agent is used to provide the following:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: Vault 启用 Kubernetes 的 `auth` 方法，使用 Kubernetes 服务账户令牌对客户端进行身份验证。Vault 代理用于提供以下功能：
- en: Automatic authentication
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动身份验证
- en: Secure delivery/storage of tokens
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全交付/存储令牌
- en: Life cycle management of these tokens (renewal and reauthentication)
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些令牌的生命周期管理（续期和重新认证）
- en: 'Now let us study an example of how to run a Vault agent within a Kubernetes
    cluster:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们研究如何在 Kubernetes 集群中运行 Vault 代理的示例：
- en: 'The first step is to clone the `hashicorp/Vault-guides` repository from GitHub:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是从 GitHub 克隆 `hashicorp/Vault-guides` 仓库：
- en: '[PRE12]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The next step is to navigate inside the `Vault-guides/identity/Vault-agent-k8s-demo`
    directory:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是进入 `Vault-guides/identity/Vault-agent-k8s-demo` 目录：
- en: '[PRE13]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next, we start a Vault development server to listen for requests locally at
    `0.0.0.0:8200` with `root` as the root token ID:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们启动一个 Vault 开发服务器，在 `0.0.0.0:8200` 本地监听请求，使用 `root` 作为根令牌 ID：
- en: '[PRE14]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To provide an access URL, export an environment variable for the Vault CLI
    to address the Vault server:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了提供访问URL，我们为Vault CLI导出一个环境变量，以指向Vault服务器：
- en: '[PRE15]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To create a service account, let’s start a Kubernetes cluster running in minikube:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了创建一个服务账户，让我们启动一个在minikube中运行的Kubernetes集群：
- en: '[PRE16]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Check the status of the minikube environment to see that it is fully available:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查minikube环境的状态，确保它已完全可用：
- en: '[PRE17]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The output from the status should be displayed as follows:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 状态的输出应显示如下：
- en: '[PRE18]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: After verifying the status, we examine the contents of `Vault-auth-service-account.yaml`
    for service account creation.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在验证状态后，我们检查`Vault-auth-service-account.yaml`的内容，以确认服务账户的创建。
- en: 'Next, we create a Kubernetes service account named `Vault-auth`:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们创建一个名为`Vault-auth`的Kubernetes服务账户：
- en: '[PRE19]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Update the `Vault-auth` service account:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新`Vault-auth`服务账户：
- en: '[PRE20]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now, to configure the Kubernetes `auth` method, we create a read-only policy
    called `myapp-kv-ro` in Vault:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了配置Kubernetes的`auth`方法，我们在Vault中创建一个只读策略，名为`myapp-kv-ro`：
- en: '[PRE21]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In the following step, we create some test data at the `secret/myapp` path:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在接下来的步骤中，我们在`secret/myapp`路径下创建一些测试数据：
- en: '[PRE22]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now let us set the environment variables to point to the running minikube environment.
    Here, we set the `VAULT_SA_NAME` environment variable value to the `Vault-auth`
    service account:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们设置环境变量，指向正在运行的minikube环境。在这里，我们将`VAULT_SA_NAME`环境变量的值设置为`Vault-auth`服务账户：
- en: '[PRE23]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Here, we also set the `SA_JWT_TOKEN` environment variable value to the service
    account JWT used to access the `TokenReview` API:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，我们还将`SA_JWT_TOKEN`环境变量的值设置为用于访问`TokenReview` API的服务账户JWT：
- en: '[PRE24]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Next, we set the `SA_CA_CRT` environment variable value to the PEM-encoded
    CA cert used to talk to the Kubernetes API:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将`SA_CA_CRT`环境变量的值设置为与Kubernetes API通信时使用的PEM编码CA证书：
- en: '[PRE25]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now the minikube IP address should be available, hence we point the `K8S_HOST`
    environment variable value to this address:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在应该能够获得minikube的IP地址，因此我们将`K8S_HOST`环境变量的值指向该地址：
- en: '[PRE26]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Finally, we need to enable and configure the Kubernetes `auth` method at the
    default path (`auth/kubernetes`):'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们需要在默认路径（`auth/kubernetes`）启用并配置Kubernetes的`auth`方法：
- en: '[PRE27]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Further, we also let Vault know how to communicate with the Kubernetes (minikube)
    cluster:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，我们还需要让Vault知道如何与Kubernetes（minikube）集群通信：
- en: '[PRE28]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Having configured everything, finally, we need to create a role named `example`
    that maps the Kubernetes service account to Vault policies and the default token
    **Time to** **Live** (**TTL**):'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在配置好所有内容后，最后我们需要创建一个名为`example`的角色，将Kubernetes服务账户映射到Vault策略和默认令牌的**生存时间**（**TTL**）：
- en: '[PRE29]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'As we have seen in the previous step, each authentication method of Vault maps
    to a role. A role, in turn, maps to *N* policies. Policies provide a declarative
    way to grant or forbid access to certain paths and operations in Vault. The following
    code snippet demonstrates how paths are associated with different permissions:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在前一步所见，Vault的每种身份验证方法都映射到一个角色。角色又映射到*N*个策略。策略提供了一种声明式的方式来授予或禁止对Vault中某些路径和操作的访问。以下代码片段演示了如何将路径与不同的权限关联：
- en: '[PRE30]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Vault offers key-value storage and can be used to create a key and store its
    value in a specified path, as shown here:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: Vault提供键值存储，可以用来创建一个密钥并将其值存储在指定路径中，如此处所示：
- en: '[PRE31]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Vault can also be used to run as an encryption service, where plain text data
    from the frontend app can be encrypted with Vault’s secret and then passed to
    the backend application via any cloud-based microservice.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: Vault也可以作为加密服务运行，将来自前端应用的明文数据通过Vault的秘密进行加密，然后通过任何基于云的微服务传递给后端应用：
- en: 'Now let us understand how we can run Vault inside Google Cloud with a storage
    backend, a Kubernetes cluster, and a Google’s KMS service, as shown in *Figure
    4**.11*:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们理解如何在Google Cloud中运行Vault，配备存储后端、Kubernetes集群和Google的KMS服务，如*图4.11*所示：
- en: '![Figure 4.11 – How to use Vault in Google Cloud](img/Figure_4.11_B18681.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![图4.11 – 如何在Google Cloud中使用Vault](img/Figure_4.11_B18681.jpg)'
- en: Figure 4.11 – How to use Vault in Google Cloud
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.11 – 如何在Google Cloud中使用Vault
- en: 'To run Vault, we should always run it inside a completely isolated Kubernetes
    cluster, to prevent it from any external threat that could compromise the production
    environment. The cloud storage unit shown in the preceding figure aids in storing
    dynamic secrets. Vault also requires a human or automated method of unsealing/unlocking
    keys, which are often split up and stored inside it. The following code snippet
    generates the recovery keys using `auto-unseal`. Through the process of auto-sealing,
    we are able to enable the automatic construction of the master key necessary to
    decrypt the data encryption key:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 为了运行 Vault，我们应始终将其运行在完全隔离的 Kubernetes 集群中，以防止其受到任何可能危及生产环境的外部威胁。前面图中所示的云存储单元有助于存储动态密钥。Vault
    还需要一种人工或自动化的方法来解封/解锁密钥，这些密钥通常被拆分并存储在其中。以下代码片段通过 `auto-unseal` 生成恢复密钥。通过自动封印过程，我们能够启用自动构建解密数据加密密钥所需的主密钥：
- en: 'First, we need to initialize the Vault server:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要初始化 Vault 服务器：
- en: '[PRE32]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'KMS is used to unlock the split keys (for example, during system restart) by
    leveraging its auto-key-rotation capability. The key rotation command is executed
    as follows:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: KMS 用于通过其自动密钥轮换功能解锁拆分的密钥（例如，在系统重启时）。密钥轮换命令执行如下：
- en: '[PRE33]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Now that we have seen the security options for a cloud-agonistic architecture
    with the use of Vault, next, let us look at the security options provided by AWS
    when individual microservices are running within pods in **Elastic Kubernetes
    Service** (**EKS**). Further, these services are dependent on each other, and
    messages published by one microservice in a Kafka cluster (which is **Amazon Managed
    Streaming for Apache Kafka** (**MSK**)), are consumed by other microservices.
    The security mechanisms provided by AWS are illustrated in *Figure 4**.12*.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到使用 Vault 实现云无关架构的安全选项，接下来让我们看看 AWS 在 **弹性 Kubernetes 服务**（**EKS**）中运行的单个微服务所提供的安全选项。此外，这些服务相互依赖，一个微服务在
    Kafka 集群中发布的消息（即 **Amazon Managed Streaming for Apache Kafka**（**MSK**））会被其他微服务消费。AWS
    提供的安全机制在*图 4.12*中有所展示。
- en: '![Figure 4.12 – Use of Vault in ML-based enterprise solutions](img/Figure_4.12_B18681.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.12 – 在基于 ML 的企业解决方案中使用 Vault](img/Figure_4.12_B18681.jpg)'
- en: Figure 4.12 – Use of Vault in ML-based enterprise solutions
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12 – 在基于 ML 的企业解决方案中使用 Vault
- en: 'Here, we find authentication mechanisms in four different services:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们找到四个不同服务中的身份验证机制：
- en: '**Transport Layer Security** (**TLS**) 1.2 in API Gateway for communication
    with AWS resources.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传输层安全性**（**TLS**）1.2 在 API 网关中用于与 AWS 资源的通信。'
- en: Authentication and authorization for Apache Kafka where IAM is used to authenticate
    clients and to allow or deny Apache Kafka actions. The alternate mechanism by
    which Kafka actions can be allowed or denied is through the use of TLS or SASL/SCRAM
    and Apache Kafka ACLs.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Kafka 的身份验证和授权，其中使用 IAM 来验证客户端并允许或拒绝 Apache Kafka 操作。Kafka 操作的另一种允许或拒绝机制是通过使用
    TLS 或 SASL/SCRAM 和 Apache Kafka ACLs。
- en: The Amazon MSK cluster’s simple authentication and **Security Layer**/**Salted
    Challenge Response Authentication Mechanism** (**SASL**/**SCRAM**) username and
    password-based authentication can be used to enhance protection. With this approach,
    the credentials can be encrypted using KMS and stored in AWS Secrets Manager.
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon MSK 集群的简单身份验证和**安全层**/**加盐挑战响应身份验证机制**（**SASL**/**SCRAM**）基于用户名和密码的身份验证可以用来增强保护。通过这种方法，凭证可以使用
    KMS 加密并存储在 AWS Secrets Manager 中。
- en: Data encryption on the MSK cluster using AWS KMS can provide transparent server-side
    encryption. In addition, TLS 1.2 can provide encryption of data in transit between
    the brokers of the MSK cluster. Further, we can also use Kerberos, TLS certificates,
    and advanced **Access Control Lists** (**ACLs**) to establish security between
    brokers and Zookeeper.
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 AWS KMS 对 MSK 集群进行数据加密可以提供透明的服务器端加密。此外，TLS 1.2 可以在 MSK 集群的代理之间提供数据传输加密。此外，我们还可以使用
    Kerberos、TLS 证书和高级**访问控制列表**（**ACLs**）来建立代理与 Zookeeper 之间的安全性。
- en: Let us now understand the basic essential elements needed to add security features
    to a cloud system architecture.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们了解将安全特性添加到云系统架构中所需的基本要素。
- en: Cloud security architecture
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云安全架构
- en: In this section, let us look at the main security principles that should be
    standardized by an organization with respect to cloud security architecture. Here,
    we will also study some examples of how to architect scalable security architectures
    when data and models are shared across teams.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨组织在云安全架构方面应标准化的主要安全原则。在此，我们还将研究一些如何在数据和模型在团队之间共享时架构可扩展安全架构的示例。
- en: Most of our SaaS-based ML applications need varying levels of security, access
    control, and data protection techniques when they are deployed on the cloud. We
    can still leverage the existing security architectures provided by Azure, Google
    Cloud, and AWS or build a platform-independent security framework for our own
    customized cloud solution that hosts the prediction APIs. Whichever option we
    choose, important components include the **Cloud Access Security Broker** (**CASB**),
    APIs, proxies, gateways, and identity and access management. These tools help
    us to build a shared-responsibility cloud model and zero-trust architecture.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的大多数基于SaaS的机器学习应用在部署到云端时需要不同级别的安全性、访问控制和数据保护技术。我们仍然可以利用Azure、Google Cloud和AWS提供的现有安全架构，或者为我们自定义的云解决方案（承载预测API）构建一个平台独立的安全框架。不论我们选择哪种方案，重要组件包括**云访问安全代理**（**CASB**）、API、代理、网关和身份与访问管理。这些工具帮助我们构建共享责任云模型和零信任架构。
- en: For any cloud-based ML system, we need to quantify the risks faced by the cloud
    architecture from time to time. During this time, we need to take into consideration
    the extent to which penetration tests are performed, whether authentication methods
    such as multi-factor and **Single Sign-On** (**SSO**) are in place, and the extent
    to which individual cloud components integrate with enterprise authentication
    and directories. In addition, records of past security breaches and their severity
    should also be taken into consideration.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何基于云的机器学习系统，我们需要定期量化云架构面临的风险。在此过程中，我们需要考虑渗透测试的执行程度，是否已实施多因素认证和**单点登录**（**SSO**）等认证方法，以及各个云组件与企业认证和目录的集成程度。此外，还应考虑过去的安全漏洞记录及其严重性。
- en: 'Now, let us take a deeper look into the foundation principles of cloud security
    architecture ([https://www.guidepointsecurity.com/education-center/cloud-security-architecture/](https://www.guidepointsecurity.com/education-center/cloud-security-architecture/)):'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们深入探讨云安全架构的基础原则（[https://www.guidepointsecurity.com/education-center/cloud-security-architecture/](https://www.guidepointsecurity.com/education-center/cloud-security-architecture/)）：
- en: '**Identification**: Maintain complete information on users, assets, business
    environments, policies, vulnerabilities, and threats that exist within the cloud
    environment.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**身份识别**：保持关于用户、资产、业务环境、政策、漏洞和威胁等在云环境中存在的完整信息。'
- en: '**Security controls**: Define parameters and enforce the implementation of
    policies across users, data, and infrastructure to better manage, evaluate, and
    access the security landscape.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全控制**：定义参数并强制实施跨用户、数据和基础设施的政策，以更好地管理、评估和访问安全态势。'
- en: '**Security by design**: Follow standards and guidelines and undertake timely
    audits to define the roles and responsibilities of each user and their corresponding
    devices. Enforce security configuration for each of the big data and ML processing
    components that run with or without automation.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全设计**：遵循标准和指南，并进行及时审计，以定义每个用户及其对应设备的角色和责任。为每个大数据和机器学习处理组件执行安全配置，无论是否自动化运行。'
- en: '**Compliance**: Incorporate new standards for review and their timely introduction
    in the security verification process. Integrate existing industry standards and
    regulatory components into the architecture with best practices.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性**：纳入新标准进行审查，并及时引入安全验证过程。将现有的行业标准和监管组件与最佳实践集成到架构中。'
- en: '**Perimeter security**: Define and adhere to traffic flow rules (by setting
    up proxies and firewalls) such that restricted traffic is not allowed to flow
    from the organization’s cloud-based resources to the public internet.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边界安全**：定义并遵守流量流动规则（通过设置代理和防火墙），确保不允许限制的流量从组织的云资源流向公共互联网。'
- en: '**Segmentation**: Follow the principle of least privilege in isolating and
    compartmentalizing microservices (during training, pre-processing, and post-processing
    jobs) to prevent lateral movement in case of an adversarial attack.'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分段**：在隔离和划分微服务（包括训练、预处理和后处理作业）时，遵循最小权限原则，以防止在对抗性攻击中发生横向移动。'
- en: '**User identity and access management**: Enforce access rights and permissions
    and additional protocol measures to enable transparency and the visibility of
    all users and devices with access to corporate systems. Extend this scope to devices
    participating in ML training in scenarios such as federated learning.'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户身份和访问管理**：执行访问权限和额外的协议措施，以确保透明性并提高所有用户和设备对公司系统的可见性。将此范围扩展到参与机器学习训练的设备，适用于像联邦学习这样的场景。'
- en: '**Data anonymization/pseudonymization**: Follow the encryption methodologies
    discussed in [*Chapter 2*](B18681_02.xhtml#_idTextAnchor040) for both streaming
    data and data at rest. In addition, any communication between microservices should
    be encrypted to mitigate risks.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据匿名化/假名化**：遵循[*第二章*](B18681_02.xhtml#_idTextAnchor040)中讨论的加密方法，处理流数据和静态数据。此外，任何微服务之间的通信应加密，以降低风险。'
- en: '**Automation**: Facilitate rapid security and configuration provisioning and
    updates as well as quick threat detection.'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**：促进快速的安全性和配置供应及更新，并快速检测威胁。'
- en: '**Logging and monitoring**: Introduce the appropriate tools to enable log flow
    across pipelines. The logs will provide insight into failures and warnings across
    deployments. Allow consistent log collection to monitor threats and raise alarms.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志记录和监控**：引入适当的工具，以在流水线中启用日志流动。这些日志将为各个部署中的故障和警告提供洞察力。允许一致地收集日志，以监控威胁并发出警报。'
- en: '**Visibility**: Educate teams to use appropriate tools and processes to ensure
    the transparency and visibility of multiple ML solutions across different deployments.'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可见性**：教育团队使用适当的工具和流程，确保多个机器学习解决方案在不同部署中的透明度和可见性。'
- en: '**Flexible design**: Implement the agile methodology not only in architecture
    and development but also in security life cycle management to ensure timely patching
    and certificate renewal. Add and modify extra components or security layers to
    safeguard the organization’s systems and cloud resources flexibly as required.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活设计**：不仅在架构和开发中实施敏捷方法论，还在安全生命周期管理中贯彻这一方法，以确保及时的修补和证书更新。根据需要，灵活地添加和修改额外的组件或安全层，以保护组织的系统和云资源。'
- en: Now that we are aware of the primary design principles, let us look at how we
    establish the security of control over data, security by design, and the segmentation
    principle, using a practical example of an architecture with a feature store ([https://aws.amazon.com/blogs/machine-learning/enable-feature-reuse-across-accounts-and-teams-using-amazon-sagemaker-feature-store/](https://aws.amazon.com/blogs/machine-learning/enable-feature-reuse-across-accounts-and-teams-using-amazon-sagemaker-feature-store/)).
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了主要的设计原则，接下来让我们看一下如何通过一个包含特征存储的架构实践，建立对数据的安全控制、安全设计和分段原则。[特征存储示例](https://aws.amazon.com/blogs/machine-learning/enable-feature-reuse-across-accounts-and-teams-using-amazon-sagemaker-feature-store/)
- en: Developing in a sandbox environment
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在沙箱环境中开发
- en: In this section, we will understand how different teams can develop in restricted
    environments.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们将了解不同团队如何在受限环境中进行开发。
- en: '*Figure 4**.13* illustrates the use of a number of components to create a sandbox
    environment in AWS ([https://aws.amazon.com/blogs/security/how-to-centralize-and-automate-iam-policy-creation-in-sandbox-development-and-test-environments/](https://aws.amazon.com/blogs/security/how-to-centralize-and-automate-iam-policy-creation-in-sandbox-development-and-test-environments/))
    for different data science and engineering teams working on different stages of
    the model life cycle, including feature engineering, model training, testing,
    and deployment. Very specific security permissions can be granted on a case-by-case
    basis to teams. Each team can further customize this workflow according to the
    specific requirements of the team. In addition, some teams can push data to the
    feature store and others may access and read the data from the feature store for
    use in their internal development processes. Sandbox environments thus aid collaboration
    by restricting privileges to individual teams.'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4.13* 说明了使用多个组件在 AWS 中创建沙箱环境（[https://aws.amazon.com/blogs/security/how-to-centralize-and-automate-iam-policy-creation-in-sandbox-development-and-test-environments/](https://aws.amazon.com/blogs/security/how-to-centralize-and-automate-iam-policy-creation-in-sandbox-development-and-test-environments/)），供不同数据科学和工程团队在模型生命周期的不同阶段使用，包括特征工程、模型训练、测试和部署。可以根据具体情况为团队授予非常具体的安全权限。每个团队还可以根据团队的具体需求进一步定制该工作流。此外，一些团队可以将数据推送到特征库，其他团队可以从特征库中访问和读取数据，以便在其内部开发过程中使用。沙箱环境通过限制对单独团队的特权，从而促进协作。'
- en: 'Now let us try to understand, with reference to *Figure 4**.13*, how to set
    restricted permissions based on the account type and use AWS CodePipeline to create
    and manage a workflow running over multiple AWS accounts:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们参考*图 4.13*，尝试理解如何根据账户类型设置受限权限，并使用 AWS CodePipeline 创建和管理跨多个 AWS 账户运行的工作流：
- en: An S3 bucket can be used by sandbox administrators to upload IAM policies.
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 沙箱管理员可以使用 S3 桶上传 IAM 策略。
- en: An IAM role in the automated pipeline is used for accessing the S3 bucket that
    stores the IAM policies.
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化管道中的 IAM 角色用于访问存储 IAM 策略的 S3 桶。
- en: An AWS KMS key is used for encrypting the IAM policies in the S3 bucket.
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS KMS 密钥用于加密 S3 桶中的 IAM 策略。
- en: An AWS Lambda service is used to validate *allow*/*deny* permissions.
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS Lambda 服务用于验证*允许*/*拒绝*权限。
- en: An AWS user (say, Alice) can use the IAM visual editor to grant suitable access
    rights and permissions to allow a team (say, Data Science Team A) to launch and
    manage EMR clusters to process data from S3 datasets. The IAM JSON policy document
    can be uploaded to an S3 bucket using an **AWS Key Management Service** (**AWS**
    **KMS**) key.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 用户（例如 Alice）可以使用 IAM 可视化编辑器授予适当的访问权限和权限，允许团队（例如数据科学团队 A）启动并管理 EMR 集群，以处理来自
    S3 数据集的数据。IAM JSON 策略文档可以通过**AWS 密钥管理服务**（**AWS KMS**）密钥上传到 S3 桶中。
- en: AWS CodePipeline can further query a central Lambda function in AWS to query
    an IAM JSON policy document and issue a series of validation checks. Here, the
    Lambda function can also attach deny rules to the IAM policy to limit user permissions
    in the sandbox account. On successful validation, the Lambda function creates
    the user policy (Alice) resulting in the successful setup of the pipeline, further
    allowing the user to attach it to the right IAM user, group, or role. If the IAM
    JSON policy fails, the user needs to modify it to make it comply with the security
    guidelines and resubmit it again.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CodePipeline 还可以查询 AWS 中的中央 Lambda 函数，查询 IAM JSON 策略文档并执行一系列验证检查。在此，Lambda
    函数还可以将拒绝规则附加到 IAM 策略中，以限制沙箱账户中的用户权限。在验证成功后，Lambda 函数会创建用户策略（Alice），从而成功设置管道，进一步允许用户将其附加到正确的
    IAM 用户、组或角色。如果 IAM JSON 策略失败，用户需要修改它以使其符合安全指南，并重新提交。
- en: Thus, we can see how IAM role selection can be used to isolate teams’ work environments.
    It also facilitates restrictive access rights and privileges based on their needs.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以看到如何通过 IAM 角色选择来隔离团队的工作环境。这也有助于根据需求实施限制性访问权限和特权。
- en: '![Figure 4.13 – Access control-based partitions in sandbox environments](img/Figure_4.13_B18681.jpg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.13 – 基于访问控制的沙箱环境中的分区](img/Figure_4.13_B18681.jpg)'
- en: Figure 4.13 – Access control-based partitions in sandbox environments
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13 – 基于访问控制的沙箱环境中的分区
- en: 'When our ML solutions are accessed by apps from multiple users over a cloud
    platform, we can employ brokers, called **Cloud Access Security Brokers** (**CASBs**),
    to provide insights about potential and upcoming cyber threats. Microsoft leverages
    one such broker service by employing Microsoft Defender for Cloud Apps ([https://docs.microsoft.com/en-us/defender-cloud-apps/what-is-defender-for-cloud-apps](https://docs.microsoft.com/en-us/defender-cloud-apps/what-is-defender-for-cloud-apps)),
    which works across deployment platforms (with API connectors and reverse proxies)
    to facilitate log collection and monitoring activities. This kind of service helps
    to enforce enterprise-grade security measures and thus helps us to protect organizational
    resources in real time. Additionally, it acts as an enabler to support content
    collaboration between different divisions (such as HR, payroll, hiring, and so
    on), each of which may have its own ML services and data-related compliance requirements.
    Defender for Cloud Apps’ unique security features include the following:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们的 ML 解决方案通过云平台被多个用户的应用程序访问时，我们可以使用称为 **Cloud Access Security Brokers**（**CASB**）的代理，来提供有关潜在及即将发生的网络威胁的洞察。微软通过使用
    Microsoft Defender for Cloud Apps ([https://docs.microsoft.com/en-us/defender-cloud-apps/what-is-defender-for-cloud-apps](https://docs.microsoft.com/en-us/defender-cloud-apps/what-is-defender-for-cloud-apps))
    利用这样一个代理服务，该服务能够跨部署平台（通过 API 连接器和反向代理）促进日志收集和监控活动。这类服务有助于执行企业级安全措施，从而帮助我们实时保护组织资源。此外，它还作为支持不同部门（如人力资源、薪资、招聘等）之间内容协作的工具，每个部门可能有自己独立的
    ML 服务和数据合规要求。Defender for Cloud Apps 的独特安全功能包括：
- en: '**Visibility**: Detect and label all cloud services with a ranking, produced
    by tracking each user’s access rights to individual services.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可见性**：通过追踪每个用户对各个服务的访问权限，检测并标记所有云服务，按排名生成。'
- en: '**Data security**: Control of sensitive information with DLP, referencing the
    security labels on content.'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据安全**：通过 DLP 控制敏感信息，并参考内容上的安全标签。'
- en: '**Threat protection**: Identify anomalous behaviors and trends with **User
    and** **Entity Behavior Analysis** (**UEBA**) and provide **Adaptive Access Control**
    (**AAC**) to mitigate malware. Adaptive security or AAC is also known as zero-trust
    security, which means not trusting any user by default. As the base policy does
    not have any trust attached to it, applying constant monitoring techniques along
    with flexible support can help to replace outdated legacy infrastructures with
    newer adaptive policies.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**威胁保护**：利用 **用户与实体行为分析**（**UEBA**）识别异常行为和趋势，并提供 **自适应访问控制**（**AAC**）以缓解恶意软件风险。自适应安全或
    AAC 也被称为零信任安全，这意味着默认不信任任何用户。由于基础策略不附带任何信任，结合灵活的支持和持续的监控技术，可以帮助用更新的自适应政策替代过时的传统基础设施。'
- en: '**Compliance**: Build reports and dashboards to support cloud and ML governance
    practices and ensure that data residency and regulatory compliance requirements
    are met.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性**：构建报告和仪表板，以支持云和 ML 治理实践，确保满足数据驻留和监管合规要求。'
- en: The following figure illustrates the integration of Defender for Cloud Apps
    into a cloud-based architecture. The **Cloud Discovery** service enables the discovery
    of apps used in an organization’s private enterprise cloud. In addition, application-level
    logs of firewalls and proxies can also be analyzed. It also uses app connectors
    to provide insights into app governance and offer better protection. The app connectors
    integrate with Defender services via the APIs from cloud providers.
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下图展示了 Defender for Cloud Apps 如何融入基于云的架构中。**Cloud Discovery** 服务能够发现组织私有企业云中使用的应用程序。此外，防火墙和代理的应用程序级日志也可以进行分析。它还利用应用程序连接器提供有关应用程序治理的见解，并提供更好的保护。这些应用程序连接器通过云服务提供商的
    API 与 Defender 服务进行集成。
- en: With Microsoft Defender for Cloud Apps, it is possible to employ a reverse proxy
    architecture with **Conditional Access App Control**. Such access control helps
    to increase visibility over activities happening in the cloud environment. Defender
    for Cloud Apps can be used to dynamically set policies and identify risks arising
    from suspicious data points and unprotected endpoints. Policies often help in
    integrating remediation processes to carve out a risk mitigation plan. Microsoft
    also provides a cloud app catalog, which rates the risks exposed by the apps in
    use, taking into consideration regulatory certifications, industry standards,
    and best practices.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Microsoft Defender for Cloud Apps，可以采用反向代理架构结合**条件访问应用控制**。这种访问控制有助于提高对云环境中活动的可见性。Defender
    for Cloud Apps 可用于动态设置策略，并识别来自可疑数据点和未保护端点的风险。策略通常有助于整合修复过程，从而制定风险缓解计划。微软还提供了一个云应用目录，评估正在使用的应用所暴露的风险，考虑到监管认证、行业标准和最佳实践。
- en: Each app can customize its framework by setting limits on incoming request rates,
    using throttling rules, or by having dynamic time-shifting API windows. Though
    this procedure increases the amount of time taken to execute scanning operations
    for requests having a large number of APIs, at the same time it helps to protect
    us from unwanted adversarial requests.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 每个应用可以通过设置来限制传入请求的速率，使用限流规则，或通过动态时间窗口来调整 API。尽管这个过程会增加执行大规模 API 请求扫描操作所需的时间，但它同时有助于保护我们免受不良对抗性请求的侵害。
- en: Efficient use of encryption processes, refraining from including credentials
    in source code and Docker files, and applying different blocking strategies all
    further enhance security standards.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 高效使用加密过程，避免在源代码和 Docker 文件中包含凭据，并应用不同的阻止策略，进一步提升安全标准。
- en: 'The following figure illustrates further how a set of protected apps can be
    authorized to access the cloud with full data security and compliance. With added
    components such as the proxy, firewalls, and app governance, monitoring and logging
    become much easier. Moreover, we can see the sequential security controls (**Role-Based
    Access Control (RBAC**) | **Policy Management** | **Discovery** | **Settings**
    | **Real-Time Controls**) that we can follow to enhance our security stack. All
    the security controls are explained further in *Figure 4**.14*:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表进一步说明了如何授权一组受保护的应用访问云环境，并确保数据安全和合规性。通过增加代理、防火墙和应用治理等组件，监控和日志记录变得更加容易。此外，我们还可以看到可以跟随的逐步安全控制措施（**基于角色的访问控制
    (RBAC)** | **策略管理** | **发现** | **设置** | **实时控制**），这些措施有助于增强我们的安全防护体系。所有安全控制措施将在*图
    4.14*中进一步解释：
- en: '![ Figure 4.14 – Different security features to enable access to protected
    cloud apps](img/Figure_4.14_B18681.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.14 – 启用受保护云应用访问的不同安全功能](img/Figure_4.14_B18681.jpg)'
- en: Figure 4.14 – Different security features to enable access to protected cloud
    apps
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14 – 启用受保护云应用访问的不同安全功能
- en: 'These are broken down in the following table, with a discussion of the security
    management strategies and the corresponding actions to take:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 这些内容在下表中进行了详细说明，包括安全管理策略及相应的操作：
- en: '| **Item No** | **Life cycle security management strategy** | **Actions** |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| **项号** | **生命周期安全管理策略** | **操作** |'
- en: '| 1. | **Role-Based Access Control** (**RBAC**) | Review users who have access
    to the Defender for Cloud Apps portal and verify their roles are as required.
    Validate inventory of external users who have access. |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| 1. | **基于角色的访问控制** (**RBAC**) | 审查有权访问 Defender for Cloud Apps 门户的用户，并验证其角色是否符合要求。验证具有访问权限的外部用户清单。
    |'
- en: '| 2. | **Real-time controls** | Addition/removal of old users from Conditional
    Access policies. Update SAML certificates for third-party identity providers.
    |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| 2. | **实时控制** | 从条件访问策略中增加/移除旧用户。更新第三方身份提供商的 SAML 证书。 |'
- en: '| 3. | **Policy management** | Renew and revisit policies. Frame individual
    policies for issuing alerts. Ensure alignment of labeling strategy with current
    security and compliance configuration. |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| 3. | **策略管理** | 更新并重新审视策略。为发出警报制定个别策略。确保标签策略与当前的安全性和合规性配置对齐。 |'
- en: '| 4. | **Discovery** | Upgrade the log collector by removing old data sources
    and add/disable app connectors. |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| 4. | **发现** | 通过删除旧数据源并添加/禁用应用连接器来升级日志收集器。 |'
- en: '| 5. | **Settings** | Review managed domains, verifying, adding, or removing
    current IP ranges for corporate and VPN apps. Allow the filtering of apps based
    on the condition that they were sanctioned, unsanctioned, or the type of tag used.
    Adjust score metrics. Remove member rights and privileges to view information.
    |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| 5. | **设置** | 审核托管的域，验证、添加或删除公司和 VPN 应用程序的当前 IP 范围。允许基于应用程序是否已批准、未批准或使用的标签类型来过滤应用程序。调整评分指标。移除成员查看信息的权限和特权。
    |'
- en: Table 4.1 – Security management strategies
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 表 4.1 – 安全管理策略
- en: Managing secrets in cloud orchestration services
  id: totrans-283
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在云编排服务中管理机密
- en: 'In orchestration services such as Kubernetes (which is a portable, extensible,
    open source platform responsible for managing containerized workloads and services:
    [https://kubernetes.io/docs/home/](https://kubernetes.io/docs/home/)), secrets
    can be easily modified ([https://kubernetes.io/docs/concepts/configuration/secret/](https://kubernetes.io/docs/concepts/configuration/secret/))
    with APIs as they are stored unencrypted in the API server’s etcd data directory.
    Even teams or individuals authorized to create a Pod in a namespace can use the
    same access rights to read secrets in that namespace. The key ways to protect
    such secrets is to do the following:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 在诸如 Kubernetes（这是一个便携、可扩展的开源平台，负责管理容器化工作负载和服务：[https://kubernetes.io/docs/home/](https://kubernetes.io/docs/home/)）这样的编排服务中，机密可以通过
    API 轻松修改（[https://kubernetes.io/docs/concepts/configuration/secret/](https://kubernetes.io/docs/concepts/configuration/secret/)），因为它们以未加密的方式存储在
    API 服务器的 etcd 数据目录中。即使是被授权在命名空间中创建 Pod 的团队或个人，也可以使用相同的访问权限读取该命名空间中的机密。保护这些机密的关键方法如下：
- en: Enable encryption at rest for secrets.
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用机密数据的静态加密。
- en: Enable and configure RBAC rules to restrict read permissions and prevent the
    reading of data in secrets.
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用并配置 RBAC 规则以限制读取权限，防止读取机密数据。
- en: Leverage the use of RBAC to selectively choose and allow principals for creating
    new secrets and replace existing secrets.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用 RBAC 的使用来选择性地选择并允许主体创建新机密和替换现有机密。
- en: Now let us discuss the importance of monitoring and threat detection and understand
    the chief components involved here.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们讨论监控和威胁检测的重要性，并了解其中的主要组件。
- en: Monitoring and threat detection
  id: totrans-289
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控与威胁检测
- en: To get security-enabled systems running in production, we need to incorporate
    threat detection strategies as a part of the secured cloud environment. Our monitoring
    actions should be automated so that we can quickly detect malicious activity and
    react with mitigation efforts to neutralize the vulnerabilities. If we are not
    prompt with the detection, we run the risk of losing critical and sensitive information
    to attackers.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在生产环境中运行启用安全的系统，我们需要将威胁检测策略纳入受保护的云环境。我们的监控操作应该自动化，以便我们能够快速检测恶意活动，并采取缓解措施中和漏洞。如果我们未能及时检测，我们将面临将关键信息和敏感数据丧失给攻击者的风险。
- en: ML services in production primarily face two types of threats – known threats
    and unknown threats, where unknown threats are targeted by attackers using new
    methods and technologies. Both types of threats can be addressed by using threat
    intelligence services, such as **Security Information and Event Management** (**SIEM**)
    systems, antivirus software, **Intrusion Detection Systems** (**IDSs**), and web
    proxy technologies.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 生产中的机器学习服务主要面临两种类型的威胁——已知威胁和未知威胁，其中未知威胁是攻击者使用新方法和技术进行的攻击。可以通过使用威胁情报服务来应对这两种威胁，例如**安全信息和事件管理**（**SIEM**）系统、杀毒软件、**入侵检测系统**（**IDS**）和网络代理技术。
- en: One of the primary components of IT and information security strategies is to
    track and monitor user and entity behavior analytics to prevent attacks and do
    a root cause analysis. Another important proactive action taken by security teams
    is to set up traps, hoping that the attacker will take the bait. Such traps might
    include a honeypot target. These traps look lucrative to attackers and provoke
    them to attack. Once they enter the system, alerts are sent to the security team
    to notify everyone of suspicious activity that should be handled promptly.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: IT 和信息安全策略的主要组成部分之一是跟踪和监控用户及实体行为分析，以防止攻击并进行根本原因分析。安全团队采取的另一个重要主动措施是设置陷阱，希望攻击者会上钩。这些陷阱可能包括蜜罐目标。这些陷阱对攻击者具有诱惑力，促使他们发动攻击。一旦他们进入系统，警报将发送给安全团队，通知所有人有可疑活动，应该立即处理。
- en: The third mechanism of threat detection is to use security tools that can hunt
    threats by actively scanning services, networks, and endpoints to discover and
    raise alerts for threats or attacks that may be lurking but are not yet detected.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个威胁检测机制是使用安全工具，通过主动扫描服务、网络和端点来发现并提出警报，以识别潜在的威胁或攻击，这些威胁或攻击可能尚未被检测到。
- en: 'A robust threat detection program should incorporate the following defensive
    actions by employing advanced security technologies:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 一个强大的威胁检测程序应该通过采用先进的安全技术来包含以下防御措施：
- en: Aggregate data from events across the network, including authentication, network
    access, and logs from critical components and microservices across the cloud system.
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从整个网络收集事件聚合数据，包括身份验证、网络访问以及来自云系统中关键组件和微服务的日志。
- en: Analyze traffic patterns on the network and monitor traffic within and between
    trusted networks and external interfaces.
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析网络流量模式，并监控受信任网络与外部接口之间的流量。
- en: Leverage endpoint threat detection techniques to collect and provide logs on
    malicious events from user machines to aid in threat investigation processes.
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用端点威胁检测技术，从用户机器收集并提供恶意事件的日志，以协助威胁调查过程。
- en: The primary threat detection components should have built-in capabilities for
    both live data streams and data stored in databases or caches. In other words,
    they should have monitoring agents running on all the components (including proxies,
    load balancers, microservices, databases, caches, and messaging pipelines) to
    aid incident responses and alerts.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的威胁检测组件应该具备处理实时数据流和存储在数据库或缓存中的数据的内置功能。换句话说，它们应该在所有组件（包括代理、负载均衡器、微服务、数据库、缓存和消息传递管道）上运行监控代理，以帮助事件响应和警报。
- en: Now let us see with an example how AWS classifies different events based on
    their severity by monitoring VPC flow logs, DNS logs, and logs from Amazon CloudTrail
    (which records user activity and account usage). AWS cloud has a service called
    GuardDuty (see *Figure 4**.15*) that constantly scans for malicious activity and
    adversarial attacks. It uses ML, anomaly detection, and integrated threat intelligence
    to identify the severity of attacks.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过一个例子来看看 AWS 如何根据严重性对不同的事件进行分类，方法是监控 VPC 流日志、DNS 日志和来自 Amazon CloudTrail（记录用户活动和账户使用情况）的日志。AWS
    云有一个名为 GuardDuty 的服务（见*图 4.15*），它会不断扫描恶意活动和对抗性攻击。它使用 ML、异常检测和集成威胁情报来识别攻击的严重性。
- en: "![Figure 4.1\uFEFF5 – AWS GuardDuty to monitor logs and classify events](img/Figure_4.15_B18681.jpg)"
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.15 – AWS GuardDuty 用于监控日志并分类事件](img/Figure_4.15_B18681.jpg)'
- en: Figure 4.15 – AWS GuardDuty to monitor logs and classify events
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.15 – AWS GuardDuty 用于监控日志并分类事件
- en: One of the mandatory checklists before productionizing training pipelines and
    ML-based microservices is to enumerate **STRIDE** threats—short for **Spoofing,
    Tampering, Repudiation, Information Disclosure, Denial of Service, and Elevation
    of Privilege**—across all trust boundaries to find an effective way to catch design
    errors during the development phase, rather than discovering them when it’s too
    late. Leakage detection tools such as port scanners and network monitors should
    be deployed based on existing and emerging top vulnerability areas. Now that we
    have seen the security properties needed to mitigate threats, let us quickly summarize
    what we've learned about the principal security components where we should be
    investing our efforts to identify potential areas of data and privacy leakage.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 在将训练管道和基于 ML 的微服务投入生产之前，必须检查的清单之一是列出**STRIDE** 威胁——即**欺骗、篡改、否认、信息泄露、拒绝服务和权限提升**——跨越所有信任边界，以寻找一种有效的方法，在开发阶段捕捉设计错误，而不是等到为时已晚才发现它们。应根据现有和新兴的漏洞领域部署泄漏检测工具，如端口扫描器和网络监控器。现在我们已经看到了缓解威胁所需的安全属性，让我们快速总结一下我们所学到的关于主要安全组件的内容，这些组件是我们应该投资精力的领域，以识别潜在的数据和隐私泄露问题。
- en: Summary
  id: totrans-303
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have learned about the different security practices in big
    data architectures both for batch and streaming data. We have examined the different
    components involved along with the messages exchanged to set up authorization
    and authentication processes in a Hadoop ecosystem. We further extended the scope
    to understand how model training pipelines can be made to fit in a scalable architecture
    by analyzing design strategies for adversarial model training. We explored concepts
    including retraining from scratch, continued training, and two-stage continued
    training to deep dive into concepts such as privacy-enabled retraining. Our examination
    of the design of secure ML-based microservices gave us insights into how to embed
    layers of security with individual microservices and in situations when one microservice
    is dependent on sensitive data from another microservice.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了大数据架构中针对批处理和流处理数据的不同安全实践。我们审查了不同的组件及其交换的信息，以便在Hadoop生态系统中设置授权和认证过程。我们进一步扩展了范围，了解了如何通过分析对抗性模型训练的设计策略，使模型训练管道适应可扩展架构。我们探讨了包括从头开始重新训练、持续训练和两阶段持续训练等概念，深入了解了诸如隐私保护重新训练等概念。我们对安全的基于机器学习的微服务设计进行了考察，从中获得了如何在个别微服务中嵌入安全层的见解，尤其是在一个微服务依赖于另一个微服务的敏感数据时。
- en: When we talked about privacy-enabled training, we investigated how to run scalable
    DP-based ML systems. We also talked about the principles of cloud security design
    and methods to monitor threats in different infrastructures. This chapter further
    helped us to study, by way of specific examples, how can we establish collaboration
    among teams (with isolated sandbox environments) and at the same time follow the
    principle of least privilege. After gaining thorough insights into the privacy
    aspects of ML and big data pipelines, we will now examine how to ensure fairness
    in data collection and design fair algorithms in the next few chapters.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论隐私保护训练时，我们探讨了如何运行可扩展的基于差分隐私的机器学习系统。我们还讨论了云安全设计的原则以及在不同基础设施中监控威胁的方法。本章通过具体的例子帮助我们进一步学习了如何在团队之间（使用隔离的沙箱环境）建立合作，同时遵循最小特权原则。在深入了解机器学习和大数据管道的隐私方面后，我们将在接下来的章节中探讨如何确保数据收集的公平性，并设计公平的算法。
- en: In the next chapter, we will look at some important considerations around fairness
    and the mechanisms available with which we can generate fair synthetic data.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将关注公平性的一些重要考虑因素，以及可用于生成公平合成数据的机制。
- en: Further reading
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '*Analyzing Information Leakage of Updates to Natural Language Models*, Zanella-Béguelin
    Santiago, Lukas Wutschitz, Shruti Tople, Victor Rühle, Andrew Paverd, Olga Ohrimenko,
    Boris Köpf, and Marc Brockschmidt. 2020\. [https://arxiv.org/pdf/1912.07942.pdf](https://arxiv.org/pdf/1912.07942.pdf)'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*分析自然语言模型更新中的信息泄漏*，Zanella-Béguelin Santiago，Lukas Wutschitz，Shruti Tople，Victor
    Rühle，Andrew Paverd，Olga Ohrimenko，Boris Köpf，Marc Brockschmidt. 2020年。[https://arxiv.org/pdf/1912.07942.pdf](https://arxiv.org/pdf/1912.07942.pdf)'
- en: '*Bolt-on Differential Privacy for Scalable Stochastic Gradient Descent-based
    Analytics*, Wu Xi, Fengan Li, Arun Kumar, Kamalika Chaudhuri, Somesh Jha, and
    Jeffrey Naughton. 2017.[https://andrewxiwu.github.io/public/papers/2017/WLKCJN17-bolt-on-differential-privacy-for-scalable-stochastic-gradient-descent-based-analytics.pdf](https://andrewxiwu.github.io/public/papers/2017/WLKCJN17-bolt-on-differential-privacy-for-scalable-stochastic-gradient-descent-based-analytics.pdf)'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为可扩展的基于随机梯度下降的分析添加差分隐私*，Wu Xi，Fengan Li，Arun Kumar，Kamalika Chaudhuri，Somesh
    Jha，Jeffrey Naughton. 2017年。[https://andrewxiwu.github.io/public/papers/2017/WLKCJN17-bolt-on-differential-privacy-for-scalable-stochastic-gradient-descent-based-analytics.pdf](https://andrewxiwu.github.io/public/papers/2017/WLKCJN17-bolt-on-differential-privacy-for-scalable-stochastic-gradient-descent-based-analytics.pdf)'
- en: '*Adversarial Targeted Forgetting in Regularization and Generative Based Continual
    Learning Models,* Umer Muhammad and Robi Polikar. [https://arxiv.org/pdf/2102.08355.pdf](https://arxiv.org/pdf/2102.08355.pdf)'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*对抗性定向遗忘在正则化和基于生成的持续学习模型中的应用*，Umer Muhammad和Robi Polikar。[https://arxiv.org/pdf/2102.08355.pdf](https://arxiv.org/pdf/2102.08355.pdf)'
- en: '*EasyFL: A Low-code Federated Learning Platform For Dummies.* ArXiv abs/2105.07603
    (2022), Zhuang, Weiming et al.[https://arxiv.org/pdf/2105.07603.pdf](https://arxiv.org/pdf/2105.07603.pdf)'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*EasyFL：一个低代码的联邦学习平台*，ArXiv abs/2105.07603 (2022)，Zhuang, Weiming等。[https://arxiv.org/pdf/2105.07603.pdf](https://arxiv.org/pdf/2105.07603.pdf)'
- en: '*Targeted Forgetting and False Memory Formation in Continual Learners through
    Adversarial Backdoor Attack,* Umer Muhammad and Glenn Dawson and Robi Polikar.
    [https://arxiv.org/pdf/2002.07111.pdf](https://arxiv.org/pdf/2002.07111.pdf)'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*通过对抗性后门攻击在持续学习者中实现定向遗忘和虚假记忆的形成，* Umer Muhammad 和 Glenn Dawson 和 Robi Polikar.
    [https://arxiv.org/pdf/2002.07111.pdf](https://arxiv.org/pdf/2002.07111.pdf)'
- en: '*Microservice security with* *Vault* [https://www.hashicorp.com/resources/microservice-security-with-Vault](https://www.hashicorp.com/resources/microservice-security-with-Vault)'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用* *Vault* 进行微服务安全 [https://www.hashicorp.com/resources/microservice-security-with-Vault](https://www.hashicorp.com/resources/microservice-security-with-Vault)'
- en: '*Secure machine learning against adversarial samples at test time,* Lin, J.,
    Njilla, L.L. , and Xiong, K.EURASIP J. on Info. Security 2022\. [https://jis-eurasipjournals.springeropen.com/articles/10.1186/s13635-021-00125-2](https://jis-eurasipjournals.springeropen.com/articles/10.1186/s13635-021-00125-2)'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在测试时保护机器学习免受对抗样本的攻击，* Lin, J., Njilla, L.L. , 和 Xiong, K.EURASIP 信息安全期刊 2022\.
    [https://jis-eurasipjournals.springeropen.com/articles/10.1186/s13635-021-00125-2](https://jis-eurasipjournals.springeropen.com/articles/10.1186/s13635-021-00125-2)'
- en: '*A Defense Framework for Privacy Risks in Remote Machine Learning Service,*
    Bai Yang, Yu Li, Mingchuang Xie, and Mingyu Fan. [https://www.hindawi.com/journals/scn/2021/9924684/](https://www.hindawi.com/journals/scn/2021/9924684/)'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*一种针对远程机器学习服务隐私风险的防护框架，* Bai Yang, Yu Li, Mingchuang Xie, 和 Mingyu Fan. [https://www.hindawi.com/journals/scn/2021/9924684/](https://www.hindawi.com/journals/scn/2021/9924684/)'
- en: '*From the Cloud to the Edge: Towards a Distributed and Light Weight Secure
    Big Data Pipelines for IoT Applications. Feras Awaysheh,* Awaysheh, Feras. (2021).
    [https://www.researchgate.net/publication/356343773_From_the_Cloud_to_the_Edge_Towards_a_Distributed_and_Light_Weight_Secure_Big_Data_Pipelines_for_IoT_Applications](https://www.researchgate.net/publication/356343773_From_the_Cloud_to_the_Edge_Towards_a_Distributed_and_Light_Weight_Secure_Big_Data_Pipelines_for_IoT_Applications)'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*从云到边缘：面向物联网应用的分布式和轻量级安全大数据管道。Feras Awaysheh，* Awaysheh, Feras. (2021). [https://www.researchgate.net/publication/356343773_From_the_Cloud_to_the_Edge_Towards_a_Distributed_and_Light_Weight_Secure_Big_Data_Pipelines_for_IoT_Applications](https://www.researchgate.net/publication/356343773_From_the_Cloud_to_the_Edge_Towards_a_Distributed_and_Light_Weight_Secure_Big_Data_Pipelines_for_IoT_Applications)'
- en: '*“Machine learning as a reusable microservice,” NOMS 2018 - 2018 IEEE/IFIP
    Network Operations and Management Symposium,* M. Pahl and M. Loipfinger,2018,
    pp. 1-7,[https://ieeexplore.ieee.org/document/8406165](https://ieeexplore.ieee.org/document/8406165)'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*“机器学习作为可重用的微服务，” NOMS 2018 - 2018 IEEE/IFIP 网络操作与管理研讨会，* M. Pahl 和 M. Loipfinger，2018年，第1-7页，[https://ieeexplore.ieee.org/document/8406165](https://ieeexplore.ieee.org/document/8406165)'
- en: '*Protecting models with customer-managed encryption* *keys* [https://cloud.google.com/bigquery-ml/docs/customer-managed-encryption-key](https://cloud.google.com/bigquery-ml/docs/customer-managed-encryption-key)'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*通过客户管理的加密* *密钥* 保护模型 [https://cloud.google.com/bigquery-ml/docs/customer-managed-encryption-key](https://cloud.google.com/bigquery-ml/docs/customer-managed-encryption-key)'
- en: '*InterpretML: A Unified Framework for Machine Learning,* Nori Harsha, Samuel
    Jenkins, Paul Koch, and Rich Caruana[https://arxiv.org/pdf/1909.09223.pdf](https://arxiv.org/pdf/1909.09223.pdf)'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*InterpretML：机器学习的统一框架，* Nori Harsha, Samuel Jenkins, Paul Koch, 和 Rich Caruana
    [https://arxiv.org/pdf/1909.09223.pdf](https://arxiv.org/pdf/1909.09223.pdf)'
