- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: AI for Sales and Advertising – Sell like the Wolf of AI Street
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 销售和广告中的人工智能 – 像《AI街头的狼》一样销售
- en: Now it's time to put your new skills into practice, start coding, and shape
    up your AI skills! You've learned all about Thompson Sampling, and now it's time
    to implement this AI model to solve a real-world problem, maximizing the sales
    of an e-commerce business.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候将你新学到的技能付诸实践，开始编码，提升你的人工智能技能了！你已经学会了所有关于汤普森采样的知识，现在是时候实施这个人工智能模型来解决一个现实问题，最大化电子商务企业的销售额。
- en: In this practical exercise, you'll really take action and build the AI yourself
    to solve the problem. It's really important that you stay active in this chapter,
    because this is where you will have the chance to learn by doing, which is the
    most effective way to learn something; practice truly makes perfect. In other
    words, I want you to be the hero of this AI adventure. You, and not me. Ready?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实践练习中，你将真正采取行动，亲自构建人工智能来解决问题。保持积极性非常重要，因为这是你将有机会通过实践来学习的地方，而实践是最有效的学习方式；实践造就完美。换句话说，我希望你成为这次人工智能冒险的英雄。是你，而不是我。准备好了吗？
- en: Problem to solve
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 待解决问题
- en: Imagine an e-commerce business that has millions of customers. These customers
    are people buying products on the website from time to time, getting those products
    delivered to their homes. The business is doing well, but the board of executives
    has decided to follow an action plan to maximize revenue.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一个拥有数百万客户的电子商务企业。这些客户是偶尔在网站上购买产品的人，购买的产品会送到他们家里。企业的经营情况良好，但执行董事会决定采取行动计划来最大化收入。
- en: This plan consists of offering the customers the option to subscribe to a premium
    plan, which will give them benefits like reduced prices, special deals, and so
    on. This premium plan is offered at a yearly price of $200, and the goal of this
    e-commerce business is, of course, to get the maximum number of customers to subscribe
    to this premium plan. Let's do some quick math to give us some motivation for
    building an AI to maximize the revenue of this business.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这个计划包括为客户提供订阅高级计划的选项，这将为他们带来一些福利，如折扣、特价等。这个高级计划的年费为200美元，而这个电子商务企业的目标当然是让尽可能多的客户订阅这个高级计划。让我们做一些快速的数学计算，激励我们构建一个人工智能来最大化这个企业的收入。
- en: 'Let''s say that this e-commerce business has 100 million customers. Now consider
    two strategies to convert the customers to the premium plan: a bad one, with a
    conversion rate of 1%, and a good one, with a conversion rate of 11%. If the business
    deploys the bad strategy, in one year it will make a total of: 100,000,000 × 0.01
    × 200 = $200,000,000 in extra revenue from the premium plan subscriptions.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 假设这个电子商务企业有1亿客户。现在考虑两种策略来将客户转化为高级计划：一种差的，转化率为1%，另一种好的，转化率为11%。如果企业部署了差的策略，一年后它将从高级计划订阅中获得总计：100,000,000
    × 0.01 × 200 = 2亿美元的额外收入。
- en: 'On the other hand, if the business deploys the good strategy, in one year it
    will make a total of: 100,000,000 × 0.11 × 200 = $2,200,000,000 in extra revenue
    from the premium plan subscriptions. By figuring out the best strategy to deploy,
    the business maximizes its revenue by making 2 billion extra dollars.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果企业部署了好的策略，一年后将从高级计划订阅中获得总计：100,000,000 × 0.11 × 200 = 22亿美元的额外收入。通过找出最佳策略来部署，企业通过增加20亿美元的收入最大化了其收益。
- en: In this Utopian example, we only had two strategies, and besides, we knew their
    conversion rates. In our case study, we will be facing nine different strategies.
    Our AI will have no idea of which is the best one, and absolutely no prior information
    on any of their conversion rates.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个乌托邦式的例子中，我们只有两种策略，而且我们知道它们的转化率。在我们的案例研究中，我们将面临九种不同的策略。我们的人工智能完全不知道哪种是最好的，也没有任何关于它们转化率的先验信息。
- en: 'We will, however, make the assumption that each of these nine strategies does
    have a fixed conversion rate. These strategies were carefully and smartly elaborated
    by the marketing team, and each of them has the same goal: convert the maximum
    number of clients to the premium plan. However, these nine strategies are all
    different. They have different forms, different packages, different ads, and different
    special deals to convince and persuade the clients to subscribe to the premium
    plan. Of course, the marketing team has no idea of which of these nine strategies
    will turn out to be the best one. Let''s sum up the differences in features of
    these nine strategies:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们会假设这九种策略每一种都有固定的转化率。这些策略是市场团队经过精心设计和巧妙策划的，每种策略的目标都是将尽可能多的客户转化为高级计划订阅者。然而，这九种策略是不同的。它们有不同的形式、不同的套餐、不同的广告和不同的特惠，目的是说服客户订阅高级计划。当然，市场团队并不知道哪种策略会是最佳的。让我们总结一下这九种策略的特点差异：
- en: '![](img/B14110_06_01.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14110_06_01.png)'
- en: 'Figure 1: The nine strategies – Which one sells best?'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：九种策略——哪一种卖得最好？
- en: The marketing team wants to figure out which strategy has the highest conversion
    rate as soon as possible, and by spending the minimum amount. They know that finding
    and deploying the best strategy can significantly increase the business's revenue.
    The marketing experts have also chosen not to send an email directly to their
    100 million customers, because that would be costly and would risk spamming too
    many customers. Instead, they will subtly look for that best strategy through
    online learning. What is online learning? It consists of deploying a different
    strategy each time a customer browses the e-commerce website.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 市场团队希望尽快找出哪种策略的转化率最高，并且以最小的投入实现这一目标。他们知道，找到并实施最佳策略可以显著提高业务收入。市场专家们也选择不直接向他们的1亿客户发送电子邮件，因为那样做既昂贵又可能会导致过多客户被垃圾邮件骚扰。相反，他们将通过在线学习微妙地寻找最佳策略。那么，什么是在线学习呢？它指的是每当客户浏览电子商务网站时，部署不同的策略。
- en: As the customer navigates the website, they will suddenly get a pop-up ad, suggesting
    to them that they subscribe to the premium plan. For each customer browsing the
    website, only one of the nine strategies will be displayed. Then the user will
    choose, or not, to take action and subscribe to the premium plan. If the customer
    subscribes, the strategy is a success; otherwise, it is a failure. The more customers
    we do this with, the more feedback we collect, and the better idea we get of what
    the best strategy is.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当客户浏览网站时，他们会突然看到一个弹出广告，建议他们订阅高级计划。对于每个浏览网站的客户，只有九种策略中的一种会被展示。然后，用户会选择是否采取行动并订阅高级计划。如果客户订阅了，则策略成功；否则，策略失败。我们进行的客户测试越多，收集的反馈就越多，我们对最佳策略的认识也就越清晰。
- en: 'But of course, we will not figure this out manually, visually, or with some
    simple math. Instead we want to implement the smartest algorithm that will figure
    out what the best strategy is in the shortest time. That''s for the same two reasons:
    firstly, because deploying each strategy has a cost (for example, coming from
    the pop-up ad); and secondly, because the company wants to annoy the fewest customers
    with their ad.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们不会手动、通过视觉或简单的数学来解决这个问题。相反，我们希望实现最智能的算法，它能在最短的时间内找出最佳策略。这有两个原因：首先，因为每次部署策略都会产生成本（例如，来自弹出广告的成本）；其次，因为公司希望尽量减少广告对客户的骚扰。
- en: Building the environment inside a simulation
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在模拟中构建环境
- en: This section is quite special, because there's something crucial to understand
    which is not obvious at first sight. The reason for this warning is my experience
    in teaching this subject; many of my students had issues understanding why we
    have to do a simulation here, for this whole problem.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容非常特殊，因为有一些关键点需要理解，这些并不是一开始就显而易见的。之所以有这个警告，是因为我在教授这门课程时的经验；我的许多学生曾经很难理解，为什么我们在这个问题中必须做一个模拟。
- en: It was the same for me when I started! If you already understand why we have
    to make a simulation, that's great—it means you already have online learning under
    your skin. If not, follow me here and let me explain carefully.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当我开始时也是这样的！如果你已经理解了为什么我们必须做模拟，那太好了——这意味着你已经把在线学习内化了。如果没有，请跟着我来，让我仔细为你解释。
- en: 'To understand, let''s start by explaining what would happen in real life: you
    would simply display the "call to action" pop-up ad of one of the nine strategies
    to customers who are navigating the website, and you''d do this one customer at
    a time. You''d have to do it one customer at a time, customer after customer,
    because for each customer you need to collect their response: whether or not the
    customer subscribes to the premium plan. If the customer does, the reward is 1\.
    If not, the reward is 0\. It would go like this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解，我们从现实生活中会发生什么开始：你只需将九种策略中的“号召性广告”弹窗展示给正在浏览网站的客户，每次只展示给一个客户。你需要一位一位客户地展示，因为每个客户你都需要收集他们的反馈：客户是否选择订阅高级计划。如果客户选择，奖励为1；如果不选择，奖励为0。过程如下：
- en: '**Round 1**: We display *Ad 1* of *Strategy 1* to a customer, *Customer 1*,
    and we check to see if the customer chooses to subscribe. If yes, we get a 1 reward,
    if no, we get a 0 reward. After collecting our reward, we move on to the next
    customer (next round).'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**第1轮**：我们将*策略1*的*广告1*展示给客户*客户1*，并检查客户是否选择订阅。如果选择，则获得1的奖励；如果不选择，则获得0的奖励。收集到奖励后，我们继续进行下一个客户（下一轮）。'
- en: '**Round 2**: We display *Ad 2* of *Strategy 2* to a new customer, *Customer
    2*, and we check to see if the customer chooses to subscribe. If yes, we get a
    1 reward, if no, we get a 0 reward. After collecting our reward, we move on to
    the next customer (next round).'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**第2轮**：我们将*策略2*的*广告2*展示给新客户*客户2*，并检查客户是否选择订阅。如果选择，则获得1的奖励；如果不选择，则获得0的奖励。收集到奖励后，我们继续进行下一个客户（下一轮）。'
- en: …
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: '**Round 9**: We display *Ad 9* of *Strategy 9* to a new customer, *Customer
    9*, and we check to see if the customer chooses to subscribe. If yes, we get a
    1 reward, if no, we get a 0 reward. After collecting our reward, we move on to
    the next customer (next round).'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**第9轮**：我们将*策略9*的*广告9*展示给新客户*客户9*，并检查客户是否选择订阅。如果选择，则获得1的奖励；如果不选择，则获得0的奖励。收集到奖励后，我们继续进行下一个客户（下一轮）。'
- en: '**Round 10**: We finally start activating Thompson Sampling! We use the Thompson
    Sampling AI to tell us which ad has the strongest magic touch to convert the maximum
    customers to subscribe to the premium plan. We want that extra revenue! The AI
    (powered by Thompson Sampling) selects one of the 9 ads to display to a new customer,
    *Customer 10*, and then checks to see if the customer chooses to subscribe. If
    yes, we get a 1 reward, if no, we get a 0 reward. After collecting our reward,
    we move on to the next customer (next round).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10轮**：我们终于开始激活汤普森采样！我们使用汤普森采样AI来告诉我们哪个广告具有最强的魔力，能够将最多客户转化为订阅高级计划。我们想要那笔额外收入！AI（由汤普森采样提供支持）选择9个广告中的一个展示给新客户*客户10*，然后检查客户是否选择订阅。如果选择，则获得1的奖励；如果不选择，则获得0的奖励。收集到奖励后，我们继续进行下一个客户（下一轮）。'
- en: '**Round 11**: The AI (powered by Thompson Sampling) selects one of the 9 ads
    to display to a new customer, say *Customer 11*, and then checks to see if the
    customer chooses to subscribe. If yes, we get a 1 reward, if no, we get a 0 reward.
    After collecting our reward, we move on to the next customer (next round).'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**第11轮**：AI（由汤普森采样提供支持）选择9个广告中的一个展示给新客户，假设是*客户11*，然后检查客户是否选择订阅。如果选择，则获得1的奖励；如果不选择，则获得0的奖励。收集到奖励后，我们继续进行下一个客户（下一轮）。'
- en: OK, I'll stop! You get the idea. That continues on and on for hundreds of rounds,
    or at least until the AI has found the best ad—the one with the highest conversion
    rate.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我停下来了！你明白了。这个过程会一直持续下去，持续几百轮，或者至少直到AI找出最好的广告——那个转化率最高的广告。
- en: 'This is what would happen in real life. We don''t need anything else at each
    round; if you look at the Thompson Sampling algorithm, at each round it only needs
    the number of times each ad has received a 1 reward in the previous rounds, and
    the number of times each ad has received a 0 reward in the previous rounds. In
    conclusion, and this is a very important conclusion: Thompson Sampling absolutely
    does not need to know the conversion rates of the ads in order to figure out the
    best ad.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是现实生活中的情况。在每一轮中，我们不需要其他任何东西；如果你查看汤普森采样算法，你会发现每一轮它只需要知道每个广告在前几轮中获得1奖励的次数，以及获得0奖励的次数。总之，这是一个非常重要的结论：汤普森采样完全不需要知道广告的转化率就能找出最好的广告。
- en: However, in order to simulate this application, we will need to attribute a
    conversion rate to each of these ads. That's for the simple reason that if we
    don't do this, we will never be able to verify that Thompson Sampling indeed found
    the best ad. This is just to check that the AI works!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，为了模拟这个应用，我们需要为每个广告分配一个转化率。原因很简单：如果我们不这么做，就无法验证汤普森抽样是否确实找到了最佳广告。这只是为了验证AI是否正常工作！
- en: 'What we will do is attribute a different conversion rate to each of the nine
    strategies. The purpose of this simulation will only be to check that the AI manages
    to catch the best ad, with the highest conversion rate. Let me rephrase this as
    two essential points:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为这九种策略分配不同的转化率。这个模拟的目的只是为了检查AI是否能够找到转化率最高的广告。让我将这一点重新表述为两个关键点：
- en: Thompson Sampling at no time needs to know the conversion rates in order to
    figure out the highest one.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 汤普森抽样在任何时候都不需要知道转化率，以便找出最高的那个。
- en: The only reason we know the conversion rates in advance is because we are doing
    a simulation, just to check that Thompson Sampling actually manages to figure
    out the ad that has the highest conversion rate.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们之所以提前知道这些转化率，是因为我们正在进行模拟，目的是检查汤普森抽样是否能够找出转化率最高的广告。
- en: 'Now we''ve got that covered, let''s finally set these conversion rates. We
    will assume the nine strategies have the following conversion rates:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经解决了这个问题，接下来让我们设定这些转化率。我们假设这九种策略的转化率如下：
- en: '![](img/B14110_06_02.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14110_06_02.png)'
- en: 'Figure 2: Conversion rates of the 9 strategies'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图2：九种策略的转化率
- en: 'Now, we behind the scenes know in advance which strategy has the highest conversion
    rate: Strategy number **7**. However, Thompson Sampling doesn''t know it. If you
    pay attention, you can see the fact that at no time does Thompson Sampling use
    the conversion rates when running its algorithm over the rounds. It only knows
    the number of successes (subscriptions) and failures (no subscriptions) that have
    been accumulated over the previous rounds. You can see that most clearly in the
    code.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们在幕后提前知道哪种策略的转化率最高：**策略7**。然而，汤普森抽样并不知道这一点。如果你注意到，你会看到汤普森抽样在执行其算法时，从未使用过转化率。它只知道前几轮中成功（订阅）和失败（未订阅）的次数。你可以在代码中最清楚地看到这一点。
- en: Lastly, please make sure to keep in mind that in a real-life situation we would
    have no idea of what these conversion rates might be. We only know them here for
    simulation purposes, so that we can check in the end that our AI has managed to
    figure out the best strategy—which in our simulation here is *Strategy 7*.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，请务必记住，在现实情况下，我们是无法知道这些转化率的具体数值的。我们在这里只知道它们是为了模拟的目的，这样我们最终才能检查出我们的AI是否找到了最佳策略——在我们的模拟中，这就是*策略7*。
- en: 'The next question is: how exactly are we going to run that simulation?'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的问题是：我们到底如何运行这个模拟呢？
- en: Running the simulation
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行模拟
- en: 'First, let''s recap the different components of the environment (state, action,
    and reward):'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们回顾一下环境的不同组成部分（状态、动作和奖励）：
- en: The state is simply a specific customer onto whom we deploy a strategy and show
    them the ad of that strategy.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 状态就是特定的客户，我们将在其身上部署策略并向其展示该策略的广告。
- en: The action is the strategy selected to be deployed on the customer.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 动作是选择部署给客户的策略。
- en: The reward is 1 if the customer subscribes to the premium plan, and 0 otherwise.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果客户订阅了高级计划，则奖励为1，反之为0。
- en: Then, let's say that this e-commerce business wants to run the experiment of
    figuring out the best strategy on 10,000 customers. Why the choice of 10,000?
    Because statistically, this is a large enough sample size to represent the whole
    base of customers. So, how are we going to simulate the response of 10,000 customers,
    based on the conversion rates of the ads established before? We don't have a choice
    other than to take a spreadsheet like Excel, or Google Sheets, and simulate how
    the 10,000 customers would respond to each of the 9 ads. Here's how we are going
    to do this; it's a pretty nice trick.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，假设这个电子商务公司想要通过10,000个客户来进行实验，找出最佳策略。为什么选择10,000？因为从统计学角度来看，这已经是一个足够大的样本量，能够代表整个客户群。那么，我们如何基于之前设定的广告转化率来模拟这10,000个客户的反应呢？我们没有其他选择，只能拿出像Excel或Google
    Sheets这样的电子表格来模拟这10,000个客户对每一条广告的反应。我们将按照以下方式进行，这其实是一个很巧妙的技巧。
- en: 'We are going to create a matrix of 10,000 rows and 9 columns. Each row will
    correspond to a specific customer, and each column will correspond to a specific
    strategy. To be clear, let''s say that:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个包含10,000行和9列的矩阵。每一行对应一个特定的客户，每一列对应一个特定的策略。为了更清楚地说明，假设：
- en: Row 1 corresponds to *Customer 1*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行对应于*客户 1*。
- en: Row 2 corresponds to *Customer 2*.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行对应于*客户 2*。
- en: …
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: Row 10000 corresponds to *Customer 10000*.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 第10000行对应于*客户 10000*。
- en: Column 1 corresponds to *Strategy 1*.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 第一列对应于*策略 1*。
- en: Column 2 corresponds to *Strategy 2*.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 第二列对应于*策略 2*。
- en: …
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: Column 9 corresponds to *Strategy 9*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 第九列对应于*策略 9*。
- en: 'In the cells of this matrix, we''ll place a reward of 1 or 0 depending on whether
    each of these 10,000 customers would respond positively (subscription) or negatively
    (no subscription) to each of the 9 strategies. Here''s where the "pretty nice
    trick" comes into play. In order to simulate the response of these 10,000 customers
    to the 9 ads while considering the conversion rates of these ads, here is what
    we do:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个矩阵的单元格中，我们会根据这10,000个客户对9个策略的反应来放置奖励1或0。反应是正面（订阅）还是负面（不订阅）。这就是“相当不错的技巧”的用武之地。为了模拟这10,000个客户对9个广告的反应，同时考虑到这些广告的转化率，我们做了以下处理：
- en: For each customer (row) and for each strategy (column), we draw a random number
    between 0 and 1\. If this random number is lower than the conversion rate of the
    strategy, the reward is 1\. If this random number is higher than the conversion
    rate of the strategy, the reward is 0\. Why does that work? Because by doing so,
    we will always have a *p*% chance of getting a 1, where *p* is the conversion
    rate of the strategy deployed to that customer.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个客户（行）和每个策略（列），我们从0到1之间随机抽取一个数字。如果这个随机数小于策略的转化率，则奖励为1；如果随机数大于策略的转化率，则奖励为0。为什么这么做有效？因为这样，我们就能保证每个策略对于每个客户都能保持*p*%的概率获得奖励1，其中*p*是应用于该客户的策略的转化率。
- en: For example, let's take *Strategy* *4*, which has a conversion rate of 0.16\.
    For each of the customers, we draw a random number between 0 and 1\. That random
    number has a 16% chance of being between 0 and 0.16, and a (100 – 16) = 84% chance
    of being between 0.16 and 1\. Therefore, since we get a 1 when our random number
    is between 0 and 0.16, and we get a 0 when our random number is between 0.16 and
    1, then that means we have a 16% chance of getting a 1, and an 84% chance of getting
    a zero.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们来看一下*策略* *4*，它的转化率是0.16。对于每个客户，我们从0到1之间随机抽取一个数字。这个随机数有16%的概率位于0到0.16之间，剩下的84%概率位于0.16到1之间。因此，当我们的随机数位于0到0.16之间时，我们得到1，而当它位于0.16到1之间时，我们得到0。这意味着我们有16%的概率得到1，84%的概率得到0。
- en: That simulates exactly the fact that when *Strategy 4* is deployed on a customer,
    that same customer will have a 16% chance of subscribing to the premium plan;
    that exactly corresponds to getting a 1 reward.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这完全模拟了当*策略 4*应用于某个客户时，该客户有16%的概率订阅高级计划；这正好对应于获得奖励1。
- en: 'I hope you like the trick. It''s pretty classic, but it''s used very often
    in AI; it''s important for you to know about it. We apply that trick to each of
    the 10,000 x 9 pairs of (customer, strategy) and we get the following matrix (this
    image only shows the first 10 rows):'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这个技巧。它相当经典，但在AI中经常使用，了解它对你来说很重要。我们将这个技巧应用于每一对（客户，策略），即这10,000 x 9个组合，得到如下矩阵（此图只展示了前10行）：
- en: '![](img/B14110_06_03.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14110_06_03.png)'
- en: 'Figure 3: Simulated matrix of rewards'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图3：奖励的模拟矩阵
- en: 'Let''s go through the three first rows in detail:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细分析前三行：
- en: The first customer (row of index **0**) would not subscribe to the premium plan
    after being approached by any strategy.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一位客户（索引为**0**的行）在接触到任何策略时都不会订阅高级计划。
- en: The second customer (row of index **1**) would subscribe to the premium plan
    after being approached by *Strategy 5* or *Strategy* *7* only.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二位客户（索引为**1**的行）只有在接触到*策略 5*或*策略* *7*时才会订阅高级计划。
- en: The third customer (row of index **2**) would not subscribe to the premium plan
    after being approached by any strategy.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第三位客户（索引为**2**的行）在任何策略下都不会订阅高级计划。
- en: We can already see in this preview that our little trick works; the ads with
    the lowest conversion rates (Strategies 1, 6, and 9) have only 0 rewards for the
    11 first customers, while the ads with the highest conversion rates (Strategies
    4 and 7) have some 1 rewards already. Note that the indexes here in this Python
    table start at 0; it's always like that in Python, and unfortunately there is
    nothing we can do about it. Don't worry, though, you'll get used to it!
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经可以在这个预览中看到我们的小技巧奏效了；具有最低转化率的广告（策略1、6和9）在前11位顾客中只有0的奖励，而具有最高转化率的广告（策略4和7）已经有一些1的奖励。请注意，这里Python表中的索引从0开始；在Python中总是这样的，不幸的是我们无法改变这一点。不过，别担心，你会习惯的！
- en: If you're a code lover, the code that generated this simulation is presented
    a little further along in the chapter.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是代码爱好者，生成这个模拟的代码将在本章稍后展示。
- en: Our next step is to take a step back and recap.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一步是退后一步并回顾一下。
- en: Recap
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 回顾
- en: We're ready to simulate the actions of Thompson Sampling on 10,000 customers
    successively being approached by one of the 9 strategies, thanks to the preceding
    matrix, which will exactly simulate the decision of the customer to subscribe
    or not to the premium plan.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们准备好模拟汤普森抽样在连续10,000名顾客身上的行动，这些顾客逐一被接触到的九种策略之一，感谢之前的矩阵，它将精确模拟顾客决定是否订阅高级计划的决策。
- en: If the cell corresponding to a specific customer and a specific selected strategy
    has a 1, that simulates a conversion by the customer to the premium plan. If the
    cell has a 0, that simulates a rejection. Thompson Sampling will collect the feedback
    of whether or not each of these customers subscribes to the premium plan, one
    customer after the other. Then, thanks to its powerful algorithm, it will quickly
    figure out the strategy with the highest conversion rate.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对应于特定顾客和特定选择的策略的单元格为1，那么这就模拟了顾客订阅高级计划。如果单元格为0，则模拟拒绝。汤普森抽样将收集每个顾客是否订阅高级计划的反馈，逐个顾客进行。然后，借助其强大的算法，它将迅速找出具有最高转化率的策略。
- en: That strategy is the best one to be deployed on millions of customers, maximizing
    the company's income from this new revenue stream.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这个策略是部署在数百万客户身上的最佳策略，最大化公司从这个新收入流的收入。
- en: AI solution and intuition refresher
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AI解决方案和直觉复习
- en: Before you enjoy seeing your AI in action, let's refresh our memories and adapt
    the whole Thompson Sampling AI model to this new problem.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在你享受看到你的AI在行动之前，让我们回顾一下，并将整个汤普森抽样AI模型适应这个新问题。
- en: By the way, if you don't like this e-commerce business application, feel totally
    free to imagine yourself back into the casino, surrounded by nine slot machines
    having the same conversion rates as the ones given to our strategies. It's exactly
    the same scenario; the 9 strategies could very well be nine slot machines giving
    with the same conversion rates either a 1 reward (making you money) or a 0 reward
    (taking your money). Your goal would be to figure out as quickly as possible which
    slot machine has the highest chance of giving you the jackpot! It's up to you.
    Feel free to either go for Vegas or the AI Street, but as far as this chapter
    is concerned, I'll stick with our e-commerce business.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一句，如果你不喜欢这个电子商务业务应用程序，完全可以想象自己回到赌场，周围有九台老虎机，其转化率与我们的策略所给出的转化率相同。这正是相同的情景；这九种策略可能很可能就像九台老虎机，给出相同的转化率，无论是1（赚钱）还是0（失去钱）。你的目标是尽快找出哪台老虎机有最大的中奖机会！完全由你决定。不妨选择去拉斯维加斯或AI街区，但是在本章中，我将坚持我们的电子商务。
- en: 'For starters, let''s remind ourselves that each time we show an ad to a new
    customer, that''s considered a new round, *n*, and we select one of our 9 strategies
    to attempt a conversion (subscription to the premium plan). The goal is to figure
    out the best strategy (associated with the ad with the highest conversion rate)
    in the lowest number of rounds. Here''s how Thompson Sampling does that:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们提醒自己，每次向新顾客展示广告都被视为新的一轮，*n*，并选择我们的九种策略之一来尝试转化（订阅高级计划）。目标是在尽可能少的轮数内找出最佳策略（与具有最高转化率的广告相关）。以下是汤普森抽样的工作原理：
- en: AI solution
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AI解决方案
- en: 'For each round ![](img/B14110_06_001.png) over 10,000 rounds, repeat the following
    three steps:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每一轮 ![](img/B14110_06_001.png) 超过10,000轮，重复以下三个步骤：
- en: '**Step 1**: For each strategy ![](img/B14110_06_002.png), take a random draw
    from the following distribution:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤1**：对于每个策略 ![](img/B14110_06_002.png)，从以下分布中随机抽取一个值：'
- en: '![](img/B14110_06_003.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14110_06_003.png)'
- en: 'where:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 其中：
- en: '![](img/B14110_06_004.png) is the number of times the strategy ![](img/B14110_06_005.png)
    has received a 1 reward up to round ![](img/B14110_06_006.png).'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '![](img/B14110_06_004.png) 是策略 ![](img/B14110_06_005.png) 在回合 ![](img/B14110_06_006.png)
    之前获得 1 奖励的次数。'
- en: '![](img/B14110_06_007.png) is the number of times the strategy ![](img/B14110_06_008.png)
    has received a 0 reward up to round ![](img/B14110_06_009.png).'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '![](img/B14110_06_007.png) 是策略 ![](img/B14110_06_008.png) 在回合 ![](img/B14110_06_009.png)
    之前获得 0 奖励的次数。'
- en: '**Step 2**: Select the strategy ![](img/B14110_06_010.png) that has the highest
    ![](img/B14110_06_011.png):'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 2**：选择具有最高 ![](img/B14110_06_011.png) 的策略 ![](img/B14110_06_010.png)：'
- en: '![](img/B14110_06_012.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14110_06_012.png)'
- en: '**Step** **3**: Update ![](img/B14110_06_013.png) and ![](img/B14110_06_014.png)
    according to the following conditions:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤** **3**：根据以下条件更新 ![](img/B14110_06_013.png) 和 ![](img/B14110_06_014.png)：'
- en: If the strategy selected ![](img/B14110_06_015.png) received a 1 reward:![](img/B14110_06_0011.png)
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果选择的策略 ![](img/B14110_06_015.png) 获得了 1 奖励：![](img/B14110_06_0011.png)
- en: If the strategy selected ![](img/B14110_06_017.png) received a 0 reward:![](img/B14110_06_018.png)
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果选择的策略 ![](img/B14110_06_017.png) 获得了 0 奖励：![](img/B14110_06_018.png)
- en: Now we've seen the mathematical steps, let's remind ourselves of the intuition
    behind them.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看过了数学步骤，让我们回顾一下这些步骤背后的直觉。
- en: Intuition
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 直觉
- en: 'Each strategy has its own Beta distribution. Over the rounds, the Beta distribution
    of the strategy with the highest conversion rate will progressively be shifted
    to the right, and the Beta distributions of the strategies with lower conversion
    rates will be progressively shifted to the left (*Steps 1* and *3*). Therefore,
    in *Step 2*, the strategy with the highest conversion rate will be selected more
    and more often. Here is a graph displaying three Beta distributions of three strategies
    to help you visualize this:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 每个策略都有自己独特的 Beta 分布。随着回合的进行，具有最高转化率的策略的 Beta 分布将逐渐向右移动，而具有较低转化率的策略的 Beta 分布将逐渐向左移动（*步骤
    1* 和 *3*）。因此，在 *步骤 2* 中，具有最高转化率的策略将被越来越多地选择。以下是展示三种策略的三种 Beta 分布的图表，帮助你可视化这一过程：
- en: '![](img/B14110_06_04.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14110_06_04.png)'
- en: 'Figure 4: Three Beta distributions'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4：三种 Beta 分布
- en: You've taken a step back and you've had a refresher; I think you're ready for
    the implementation! In the next section, you'll put all that theory into practice—in
    other words, into code.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经退后一步并进行了复习；我认为你现在已经准备好进行实现了！在接下来的章节中，你将把所有理论付诸实践——换句话说，付诸于代码。
- en: Implementation
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现
- en: You'll develop the code as you work along this chapter, but keep in mind that
    I've provided the whole implementation of Thompson Sampling for this application;
    you have it available on the GitHub page ([https://github.com/PacktPublishing/AI-Crash-Course](https://github.com/PacktPublishing/AI-Crash-Course))
    of this book. If you want to try and run the code, you can do it on Colaboratory,
    Spyder in Anaconda, or simply your favorite IDE.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在本章中逐步开发代码，但请记住，我已经提供了此应用程序的汤普森采样完整实现；你可以在本书的 GitHub 页面（[https://github.com/PacktPublishing/AI-Crash-Course](https://github.com/PacktPublishing/AI-Crash-Course)）上找到。如果你想尝试并运行代码，可以在
    Colaboratory、Anaconda 中的 Spyder 或者你喜欢的 IDE 上进行。
- en: Thompson Sampling vs. Random Selection
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 汤普森采样与随机选择
- en: While implementing Thompson Sampling, you'll also implement the Random Selection
    algorithm, which will simply select a random strategy at each round. This will
    be your benchmark to evaluate the performance of your Thompson Sampling model.
    Of course, Thompson Sampling and the Random Selection algorithm will be competing
    on the same simulation, that is, on the same environment matrix.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在实现汤普森采样的同时，你还将实现随机选择算法，该算法将在每一回合中随机选择一个策略。这将作为你评估汤普森采样模型性能的基准。当然，汤普森采样和随机选择算法将在同一个模拟环境中竞争，也就是说，在相同的环境矩阵上进行竞争。
- en: Performance measure
  id: totrans-97
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 性能度量
- en: 'In the end, after the whole simulation is done, you can assess the performance
    of Thompson Sampling by computing the relative return, defined by the following
    formula:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在整个模拟完成后，你可以通过计算相对回报来评估汤普森采样的性能，定义如下公式：
- en: '![](img/B14110_06_019.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14110_06_019.png)'
- en: You'll also have the chance to plot the histogram of selected ads, just to check
    that the strategy with the highest conversion rate (*Strategy 7*) was the one
    selected the most.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 你还将有机会绘制所选广告的直方图，以便检查具有最高转化率的策略（*策略 7*）是否是被选中最多的。
- en: Let's start coding
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 让我们开始编写代码
- en: 'First, import the three following required libraries:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，导入以下三个必需的库：
- en: '`numpy`, which you will use to build the environment matrix.'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`numpy`，你将用它来构建环境矩阵。'
- en: '`matplotlib.pyplot`, which you will use to plot the histogram.'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`matplotlib.pyplot`，你将用它来绘制直方图。'
- en: '`random`, which you will use to generate the random numbers needed for the
    simulation.'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`random`，你将用它来生成模拟所需的随机数。'
- en: 'Here is the extracted code from GitHub:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是从GitHub提取的代码：
- en: '[PRE0]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then set the parameters for the number of customers and strategies:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 然后设置客户数量和策略的参数：
- en: '`N` = 10,000 customers.'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`N` = 10,000个客户。'
- en: '`d` = 9 strategies.'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`d` = 9种策略。'
- en: '**Code**:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**：'
- en: '[PRE1]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then, create the simulation by building the environment matrix of 10,000 rows
    corresponding to the customers and 9 columns corresponding to the strategies.
    At each round, and for each strategy, you draw a random number between 0 and 1\.
    If this random number is lower than the conversion rate of the strategy, the reward
    will be 1\. Otherwise, it will be 0\. The environment matrix is named `X` in the
    code.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过构建一个环境矩阵来创建模拟，该矩阵有10,000行代表客户，9列代表策略。每一回合，对每个策略，你都从0到1之间随机抽取一个数字。如果这个随机数字低于该策略的转换率，奖励为1；否则奖励为0。环境矩阵在代码中命名为`X`。
- en: '**Code**:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**：'
- en: '[PRE2]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now that the environment is ready, you can start implementing the AI. To do
    so, the first step is to introduce and initialize the variables you will need
    for the implementation:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在环境已经准备好，你可以开始实现AI了。首先一步是引入并初始化实现过程中需要的变量：
- en: '`strategies_selected_rs`: A list that will contain the strategies selected
    over the rounds by the Random Selection algorithm. Initialize it as an empty list.'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`strategies_selected_rs`：一个列表，存储Random Selection算法在各回合中选择的策略。初始化为空列表。'
- en: '`strategies_selected_ts`: A list that will contain the strategies selected
    over the rounds by the Thompson Sampling AI model. Initialize it as an empty list.'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`strategies_selected_ts`：一个列表，存储Thompson Sampling AI模型在各回合中选择的策略。初始化为空列表。'
- en: '`total_rewards_rs`: The total reward accumulated over the rounds by the Random
    Selection algorithm. Initialize it as 0.'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`total_rewards_rs`：Random Selection算法在各回合中累计的总奖励。初始化为0。'
- en: '`total_rewards_ts`: The total reward accumulated over the rounds by the Thompson
    Sampling AI model. Initialize it as 0.'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`total_rewards_ts`：Thompson Sampling AI模型在各回合中累计的总奖励。初始化为0。'
- en: '`number_of_rewards_1`: A list of 9 elements which will contain for each strategy
    the number of times it received a 1 reward. Initialize it as a list of 9 zeros.'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`number_of_rewards_1`：一个包含9个元素的列表，每个元素记录每个策略收到1奖励的次数。初始化为包含9个零的列表。'
- en: '`number_of_rewards_0`: A list of 9 elements which will contain for each strategy
    the number of times it received a 0 reward. Initialize it as a list of 9 zeros.'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`number_of_rewards_0`：一个包含9个元素的列表，每个元素记录每个策略收到0奖励的次数。初始化为包含9个零的列表。'
- en: '**Code**:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**：'
- en: '[PRE3]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Then you need to begin the `for` loop that will iterate the 10,000 rows (that
    is, the customers) of this environment matrix. At each round you'll get two separate
    selections of the deployed strategy; one from the Random Selection algorithm,
    and one from Thompson Sampling.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要开始`for`循环，遍历环境矩阵的10,000行（即客户）。在每一回合，你将得到两个独立的策略选择：一个来自Random Selection算法，另一个来自Thompson
    Sampling。
- en: Let's start with the Random Selection algorithm, which simply selects a random
    strategy in each round.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从Random Selection算法开始，它每回合随机选择一个策略。
- en: '**Code**:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**：'
- en: '[PRE4]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Next, you need to implement Thompson Sampling following exactly *Steps 1*, *2*,
    and *3* provided previously. I recommend looking at these steps again before coding
    the next part, and try to code by yourself before seeing my solution. That's the
    best way you can progress; practice makes perfect. You have all the elements required
    to code this; you even have similar code in *Chapter 5*, *Your First AI Model
    – Beware the Bandits!*. Good luck! Here is the solution.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要按照之前提供的*步骤 1*、*步骤 2*和*步骤 3*实现Thompson Sampling。我建议在编写下一部分代码之前，再次回顾这些步骤，并尝试自己先编写代码，而不是直接查看我的解决方案。这是你进步的最佳方式；实践出真知。你已经拥有了编写代码所需的所有元素，甚至在*第5章*《你的第一个AI模型——小心强盗！》中有类似的代码。祝你好运！以下是解决方案。
- en: 'You should implement Thompson Sampling step by step, starting with the first
    step. Let''s remind ourselves of it:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该一步一步实现Thompson Sampling，从第一步开始。让我们回顾一下它：
- en: '**Step 1**: For each strategy ![](img/B14110_06_020.png), take a random draw
    from the following distribution:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤1**：对于每个策略 ![](img/B14110_06_020.png)，从以下分布中随机抽取一个值：'
- en: '![](img/B14110_06_021.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14110_06_021.png)'
- en: 'where:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 其中：
- en: '![](img/B14110_06_022.png) is the number of times the strategy ![](img/B14110_06_023.png)
    has received a 1 reward up to round ![](img/B14110_05_069.png)'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_IMG
  zh: '![](img/B14110_06_022.png) 是策略 ![](img/B14110_06_023.png) 在第 ![](img/B14110_05_069.png)
    轮次之前获得奖励 1 的次数。'
- en: '![](img/B14110_06_025.png) is the number of times the strategy ![](img/B14110_06_026.png)
    has received a 0 reward up to round ![](img/B14110_06_027.png)'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_IMG
  zh: '![](img/B14110_06_025.png) 是策略 ![](img/B14110_06_026.png) 在第 ![](img/B14110_06_027.png)
    轮次之前获得奖励 0 的次数。'
- en: Let's see how *Step 1* is implemented.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看 *步骤 1* 是如何实现的。
- en: Code a second `for` loop that iterates the 9 strategies, because you have to
    take a random draw from the Beta distribution of each of the 9 strategies.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 编写第二个 `for` 循环，遍历这 9 个策略，因为你需要从每个策略的 Beta 分布中进行一次随机抽取。
- en: The random draws from the Beta distributions are generated by the `betavariate()`
    function taken from the `random` library, which you imported at the beginning.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Beta 分布中抽取的随机数是通过从 `random` 库中引入的 `betavariate()` 函数生成的，该函数在一开始时就已被导入。
- en: '**Code**:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**：'
- en: '[PRE5]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now implement *Step 2*, that is:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在实现 *步骤 2*，即：
- en: '**Step 2**: Select the strategy ![](img/B14110_06_028.png) that has the highest
    ![](img/B14110_06_029.png):'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 2**：选择具有最高 ![](img/B14110_06_029.png) 的策略 ![](img/B14110_06_028.png)：'
- en: '![](img/B14110_06_030.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14110_06_030.png)'
- en: To implement *Step 2*, you stay in the second `for` loop which iterates the
    9 strategies, and use a simple trick with an `if` condition that will figure out
    the highest ![](img/B14110_06_031.png).
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现 *步骤 2*，你需要待在第二个 `for` 循环中，它遍历 9 个策略，并使用一个简单的技巧，借助 `if` 条件来找出最高的 ![](img/B14110_06_031.png)。
- en: 'The trick is the following: while iterating the strategies, if you find a random
    draw (`random_beta`) that is higher than the maximum of the random draws obtained
    so far (`max_random`), then that maximum becomes equal to that higher random draw.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 诀窍如下：在迭代策略时，如果你发现一个随机抽取（`random_beta`）大于迄今为止获得的最大随机抽取值（`max_random`），那么该最大值就更新为这个更高的随机抽取值。
- en: '**Code**:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**：'
- en: '[PRE6]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'And finally, let''s implement *Step 3*, the easiest one:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们实现 *步骤 3*，这是最简单的一步：
- en: '**Step 3**: Update ![](img/B14110_06_032.png) and ![](img/B14110_06_033.png)
    according to the following conditions:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 3**：根据以下条件更新 ![](img/B14110_06_032.png) 和 ![](img/B14110_06_033.png)：'
- en: If the strategy selected ![](img/B14110_06_034.png) received a 1 reward:![](img/B14110_06_035.png)
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果选择的策略 ![](img/B14110_06_034.png) 收到奖励 1：![](img/B14110_06_035.png)
- en: If the strategy selected ![](img/B14110_06_036.png) received a 0 reward:![](img/B14110_06_037.png)
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果选择的策略 ![](img/B14110_06_036.png) 收到奖励 0：![](img/B14110_06_037.png)
- en: Implement that simply with the exact same two `if` conditions, translated into
    code.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 简单地使用完全相同的两个 `if` 条件，将它们转化为代码实现。
- en: '**Code**:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**：'
- en: '[PRE7]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Next, don't forget to add the strategy selected in *Step 2* to our list of strategies
    (`strategies_selected_ts`), and also to compute the total reward accumulated over
    the rounds by Thompson Sampling (`total_reward_ts`).
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，别忘了将步骤 2 中选择的策略添加到我们的策略列表（`strategies_selected_ts`）中，并计算汤普森采样在各轮中累计的总奖励（`total_reward_ts`）。
- en: '**Code**:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**：'
- en: '[PRE8]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then compute the final score, which is the relative return of Thompson Sampling
    with respect to our benchmark, which is Random Selection:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 然后计算最终得分，这是相对于我们基准的汤普森采样的相对回报，基准是随机选择：
- en: '**Code**:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**：'
- en: '[PRE9]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The final result
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最终结果
- en: By executing this code, I obtained a final relative return of 91%. In other
    words, Thompson Sampling almost doubled the performance of my Random Selection
    benchmark. Not too bad!
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此代码后，我得到了 91% 的最终相对回报。换句话说，汤普森采样几乎将我的随机选择基准的性能提高了两倍。还不错吧！
- en: Finally, plot a histogram of the selected strategies to check that *Strategy
    7* (at index 6) was the one most selected, since it is the one with the highest
    conversion rate. To do this, use the `hist()` function from the `matplotlib` library.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，绘制所选策略的直方图，以检查 *策略 7*（索引 6）是否是被选中的最多的策略，因为它具有最高的转换率。为此，使用 `matplotlib` 库中的
    `hist()` 函数。
- en: '**Code**:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**：'
- en: '[PRE10]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This is the most exciting time—the code is complete (congrats by the way),
    and you can enjoy the results. Having the final relative return is nice, but finishing
    with a clean visualization plot is even better. And that''s what you get by executing
    the final code:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最激动人心的时刻——代码完成了（顺便说一句，恭喜你），你可以享受结果了。拥有最终的相对回报很好，但用干净的可视化图表展示结果会更好。执行最终代码后，你就能得到这一点：
- en: '![](img/B14110_06_05.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14110_06_05.png)'
- en: 'Figure 5: Histogram of Selections'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5：选择的直方图
- en: You can see that the strategy at index **6**, *Strategy 7*, was by far selected
    the most. Thompson Sampling was quickly able to identify it as the best strategy.
    In fact, if you re-run the same code but with only 1,000 customers, you'll see
    that Thompson Sampling is still able to identify *Strategy 7* as the best one.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，索引 **6** 的策略，*策略 7*，是被选中的最多的。汤普森采样法很快就能将其识别为最佳策略。事实上，如果你重新运行相同的代码，但只使用
    1,000 个客户，你会发现汤普森采样法仍然能够识别 *策略 7* 为最佳策略。
- en: Thompson Sampling did an amazing job for this e-commerce business. Not only
    was it able to identify the best strategy in a small number of rounds—that means
    fewer customers, which saves on advertising and operating costs—but also it was
    able to clearly figure out the strategy with the highest conversion rate.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 汤普森采样法为这个电子商务企业做得非常出色。它不仅能够在少量轮次内识别出最佳策略——这意味着较少的客户，从而节省广告和运营成本——而且它还能够清晰地找出转换率最高的策略。
- en: If this e-commerce business has, for example, 50 million customers, and if the
    premium plan has a price of $200 per year, then deploying this best strategy with
    a conversion rate of 20 % would lead to generate an extra revenue of 50,000,000
    × 0.2 × $200 = $2 billion!
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这个电子商务企业有 5000 万个客户，并且高级计划的价格是每年 200 美元，那么部署这项最佳策略，且转换率为 20%，将产生额外的收入：50,000,000
    × 0.2 × 200 美元 = 20 亿美元！
- en: In other words, Thompson Sampling clearly and quickly smashed the sales and
    advertising for this e-commerce business, so much so that we really can call it
    the wolf of AI Street.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，汤普森采样法清晰而迅速地让这个电子商务企业在销售和广告方面大获成功，甚至可以说它真的是 AI 街头的“狼”。
- en: Now, take a break, you deserve it. Get refreshed, and as soon as you are recharged
    and all set for a new AI adventure, I'll be here ready as well to start the next
    chapter. See you back soon!
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，休息一下吧，你值得拥有。放松一下，一旦你充电完毕，准备好迎接新的 AI 探险，我也会在这里，准备好开始下一章。很快再见！
- en: Summary
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this first practical tutorial, you implemented Thompson Sampling to solve
    the multi-armed bandit problem as applied to an advertising campaign. Thompson
    Sampling was able to find the best business strategy quickly, something which
    Random Selection was unable to do. In total you generated 91% of relative return,
    which, after making some assumptions, would generate an extra 2 billion dollars
    in revenue. You did that in just one file in less than 60 lines of code. Quite
    astounding, right?
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个第一个实践教程中，你实现了汤普森采样法来解决多臂老虎机问题，应用于广告活动中。汤普森采样法能够迅速找到最佳的商业策略，这是随机选择法无法做到的。总的来说，你实现了
    91% 的相对回报，这在做出一些假设后，将额外带来 20 亿美元的收入。你仅用一个文件、不到 60 行代码就实现了这一切。相当惊人，对吧？
