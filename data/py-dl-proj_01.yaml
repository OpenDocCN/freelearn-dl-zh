- en: Building Deep Learning Environments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建深度学习环境
- en: Welcome to the applied AI deep-learning team, and to our first project—*Building
    a Common Deep Learning Environment*! We're excited about the projects we've assembled
    in this book. The foundation of a common working environment will help us work
    together and learn very cool and powerful **deep learning** (**DL**) technologies,
    such as **computer vision** (**CV**) and **natural language processing** (**NLP**),
    that you will be able to use in your professional career as a data scientist.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎加入应用AI深度学习团队，欢迎来到我们的第一个项目——*构建一个通用深度学习环境*！我们对本书中所整理的项目感到兴奋。通用工作环境的基础将帮助我们一起工作，并学习非常酷且强大的**深度学习**（**DL**）技术，例如**计算机视觉**（**CV**）和**自然语言处理**（**NLP**），这些技术将在你作为数据科学家的职业生涯中大有裨益。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Components in building a common DL environment
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建通用DL环境的组件
- en: Setting up a local DL environment
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置本地DL环境
- en: Setting up a DL environment in the cloud
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在云端设置DL环境
- en: Using the cloud for deployment for DL applications
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用云端部署DL应用程序
- en: Automating the setup process to reduce errors and get started quickly
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化设置过程，以减少错误并快速启动
- en: Building a common DL environment
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建通用的DL环境
- en: Our main goal to achieve by the end of this chapter is to standardize the toolsets
    to work together and achieve consistently accurate results.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主要目标是标准化工具集，使其能够协同工作，并获得一致的准确结果。
- en: In the process of building applications using DL algorithms that can also scale
    for production, it's very important to have the right kind of setup, whether local
    or on the cloud, to make things work end to end. So, in this chapter, we will
    learn how to set up a DL environment that we will be using to run all the experiments
    and finally take the AI models into production.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用DL算法构建可扩展生产应用的过程中，拥有正确的设置是非常重要的，无论是在本地还是在云端，都必须确保端到端的流程能够顺利进行。因此，在本章中，我们将学习如何设置DL环境，并将用其来运行所有实验，最终将AI模型投入生产。
- en: First, we will discuss the major components required to code, build, and deploy
    the DL models, then various ways to do this, and finally, look at a few code snippets
    that will help to automate the whole process.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将讨论构建、开发和部署深度学习（DL）模型所需的主要组件，然后介绍各种实现方法，最后查看一些帮助自动化整个过程的代码片段。
- en: 'The following is the list of required components that we need to build DL applications:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是构建DL应用程序所需的组件列表：
- en: Ubuntu 16.04 or greater
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu 16.04或更高版本
- en: Anaconda Package
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda包
- en: Python 2.x/3.x
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 2.x/3.x
- en: TensorFlow/Keras DL packages
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TensorFlow/Keras DL包
- en: CUDA for GPU support
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持GPU的CUDA
- en: Gunicorn for deployment at scale
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gunicorn用于大规模部署
- en: Get focused and into the code!
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集中精力，开始编码吧！
- en: We'll start by setting up your local DL environment. Much of the work that you'll
    do can be done on local machines. But with large datasets and complex model architectures,
    processing time slows down dramatically. This is why we are also setting up a
    DL environment in the cloud, because the processing time for these complex and
    repetitive calculations just becomes too long to be able to efficiently get things
    done otherwise.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从设置本地DL环境开始。你做的大部分工作都可以在本地机器上完成。但在处理大数据集和复杂模型架构时，处理时间会显著变慢。这就是为什么我们还会在云端设置DL环境，因为这些复杂且重复的计算处理时间过长，否则就无法高效完成工作。
- en: We will work straight through the preceding list, and by the end (and with the
    help of a bit of automated script), you'll have everything set up!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按照上面的列表逐步进行，到最后（在一点自动化脚本的帮助下），你将完成所有设置！
- en: DL environment setup locally
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地DL环境设置
- en: Throughout this book, we will be using Ubuntu OS to run all the experiments,
    because there is great community support for Linux and mostly any DL application
    can be set up easily on Linux. For any assistance on installation and setup related
    to Ubuntu, please refer to the tutorials at [https://tutorials.ubuntu.com/](https://tutorials.ubuntu.com/).
    On top of that, this book will use the Anaconda package with Python 2.7+ to write
    our code, train, and test. Anaconda comes with a huge list of pre-installed Python
    packages, such as `numpy`, `pandas`, `sklearn`, and so on, which are commonly
    used in all kinds of data science projects.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将使用 Ubuntu 操作系统来运行所有实验，因为 Linux 有很好的社区支持，几乎所有的深度学习应用程序都可以轻松在 Linux 上设置。如果需要关于
    Ubuntu 安装和设置的帮助，请参考[https://tutorials.ubuntu.com/](https://tutorials.ubuntu.com/)上的教程。此外，本书将使用
    Python 2.7+ 的 Anaconda 包来编写代码、训练和测试。Anaconda 自带大量预安装的 Python 包，如 `numpy`、`pandas`、`sklearn`
    等，这些包在各种数据科学项目中都非常常用。
- en: Why do we need Anaconda? Can't we use Vanilla Python?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么我们需要 Anaconda？难道不能使用原生 Python 吗？
- en: Anaconda is a generic bundle that contains iPython Notebook, editor, and lots
    of Python libraries preinstalled, which saves a lot of time on setting up everything.
    With Anaconda, we can quickly get started on solving the data science problem,
    instead of configuring the environment.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda 是一个通用的捆绑包，包含 iPython Notebook、编辑器以及许多预安装的 Python 库，可以节省大量设置时间。使用 Anaconda，我们可以快速开始解决数据科学问题，而不是花时间配置环境。
- en: But, yes, you can use the default Python—it's totally the reader's choice, and
    we will learn at the end of this chapter how to configure `python env` using script<q>.</q>
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，当然可以使用默认的 Python——完全取决于读者的选择，我们将在本章末尾学习如何通过脚本配置 `python env`。
- en: Downloading and installing Anaconda
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载并安装 Anaconda
- en: 'Anaconda is a very popular data science platform for people using Python to
    build machine learning and DL models, and deployable applications. The Anaconda
    marketing team put it best on their *What is Anaconda?* page, available at [https://www.anaconda.com/what-is-anaconda/](https://www.anaconda.com/what-is-anaconda/).
    To install Anaconda, perform the following steps:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda 是一个非常流行的数据科学平台，供使用 Python 构建机器学习和深度学习模型以及可部署应用程序的人们使用。Anaconda 市场团队在他们的
    *什么是 Anaconda？* 页面上总结得最好，页面链接：[https://www.anaconda.com/what-is-anaconda/](https://www.anaconda.com/what-is-anaconda/)。要安装
    Anaconda，请执行以下步骤：
- en: Click Anaconda on the menu, then click Downloads to go to the download page
    at [https://www.anaconda.com/download/#linux](https://www.anaconda.com/download/#linux)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击菜单中的 Anaconda，然后点击 Downloads 进入下载页面：[https://www.anaconda.com/download/#linux](https://www.anaconda.com/download/#linux)
- en: 'Choose the download suitable for your platform (Linux, OS X, or Windows):'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择适合你平台的下载版本（Linux、OS X 或 Windows）：
- en: Choose Python 3.6 version*
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 Python 3.6 版本*
- en: Choose the Graphical Installer
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择图形化安装程序
- en: Follow the instructions on the wizard, and in 10 to 20 minutes, your Anaconda
    environment (Python) setup will be ready
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照向导中的说明操作，10 到 20 分钟后，你的 Anaconda 环境（Python）将设置完成。
- en: 'Once the installation process is completed, you can use following command to
    check the Python version on your Terminal:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程完成后，你可以使用以下命令检查终端中的 Python 版本：
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You should see the following output:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该能看到以下输出：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If the command does not work, or returns an error, please check the documentation
    for help for your platform.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果命令不起作用，或者返回错误，请查阅你平台的文档寻求帮助。
- en: Installing DL libraries
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装深度学习库
- en: Now, let's install the Python libraries used for DL, specifically, TensorFlow
    and Keras.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们安装用于深度学习的 Python 库，具体来说是 TensorFlow 和 Keras。
- en: What is TensorFlow?
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是 TensorFlow？
- en: TensorFlow is a Python library developed and maintained by Google. You can implement
    many powerful machine learning and DL architectures in custom models and applications
    using TensorFlow. To find out more, visit [https://www.tensorflow.org/](https://www.tensorflow.org/).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow 是由 Google 开发和维护的 Python 库。你可以使用 TensorFlow 在自定义模型和应用程序中实现许多强大的机器学习和深度学习架构。想了解更多，请访问：[https://www.tensorflow.org/](https://www.tensorflow.org/)
- en: 'Install the TensorFlow DL library (for all OS except Windows) by typing the
    following command:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 通过输入以下命令安装 TensorFlow 深度学习库（适用于所有操作系统，除了 Windows）：
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Alternatively, you may choose to install using `pip` and a specific version
    of TensorFlow for your platform, using the following command:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你也可以选择使用 `pip` 安装，并根据你的平台安装指定版本的 TensorFlow，使用以下命令：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can find the installation instructions for TensorFlow at [https://www.tensorflow.org/get_started/os_setup#anaconda_installation](https://www.tensorflow.org/get_started/os_setup#anaconda_installation).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://www.tensorflow.org/get_started/os_setup#anaconda_installation](https://www.tensorflow.org/get_started/os_setup#anaconda_installation)找到TensorFlow的安装说明。
- en: 'Now we will install `keras` using the following command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将使用以下命令安装`keras`：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To validate the environment and the version of the packages, let''s write the
    following script, which will print the version numbers of each library:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证环境和包的版本，让我们编写以下脚本，该脚本将打印出每个库的版本号：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Save the script as `dl_versions.py`. Run the script by typing the following
    command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 将脚本保存为`dl_versions.py`。通过输入以下命令来运行脚本：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You should see the following output:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Voila! Now our Python development environment is ready for us to write some
    awesome DL applications in our local.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 看！现在我们的Python开发环境已经准备好，可以开始在本地编写一些超棒的深度学习应用程序了。
- en: Setting up a DL environment in the cloud
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在云端设置深度学习环境
- en: All the steps we performed up to now remain the same for the cloud as well,
    but there are a few additional modules required to configure the cloud virtual
    machines to make your DL applications servable and scalable. So, before setting
    up your server, follow the instructions from the preceding section.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止我们所执行的所有步骤在云端也同样适用，但为了使你的深度学习应用程序可服务和可扩展，还需要一些额外的模块来配置云虚拟机。因此，在设置服务器之前，请按照前一节的指示操作。
- en: 'To deploy your DL applications in the cloud, you will need a server good enough
    to train your models and serve at the same time. With huge development in the
    sphere of DL, the need for cloud servers to practice and deploy projects has increased
    drastically, and so have the options on the market. The following is a list of
    some of the best options on offer:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要在云端部署深度学习应用程序，你需要一台足够强大的服务器，能够同时训练模型并提供服务。随着深度学习领域的巨大进展，对云服务器的需求也急剧增加，市场上的选择也随之增多。以下是一些最佳选择：
- en: Paperspace ([https://www.paperspace.com/](https://www.paperspace.com/))
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paperspace ([https://www.paperspace.com/](https://www.paperspace.com/))
- en: FloydHub ([https://www.floydhub.com](https://www.floydhub.com))
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FloydHub ([https://www.floydhub.com](https://www.floydhub.com))
- en: Amazon Web Services ([https://aws.amazon.com/](https://aws.amazon.com/))
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Web Services ([https://aws.amazon.com/](https://aws.amazon.com/))
- en: Google Cloud Platform ([https://cloud.google.com/](https://cloud.google.com/))
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Cloud Platform ([https://cloud.google.com/](https://cloud.google.com/))
- en: DigitalOcean ([https://cloud.digitalocean.com/](https://cloud.digitalocean.com/))
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DigitalOcean ([https://cloud.digitalocean.com/](https://cloud.digitalocean.com/))
- en: All of these options have their own pro and cons, and the final choice totally
    depends on your use case and preferences, so feel free to explore more. In this
    book, we will build and deploy our models mostly on **Google Compute Engine**
    (**GCE**), which is a part of **Google Cloud Platform** (**GCP**). Follow the
    steps mentioned in this chapter to spin up a VM server and get started.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这些选项各有优缺点，最终的选择完全取决于你的使用场景和偏好，因此可以随意探索更多内容。本书中，我们将主要在**Google Compute Engine**（**GCE**）上构建和部署模型，而GCE是**Google
    Cloud Platform**（**GCP**）的一部分。按照本章中提到的步骤启动虚拟机服务器并开始操作。
- en: Google has released an internal notebook platform, **Google Colab **([https://colab.research.google.com/](https://colab.research.google.com/)),
    which is pre-installed with all the DL packages and other Python libraries. You
    can write all of your ML/DL applications on the Google Cloud, leveraging free
    GPUs for 10 hours.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Google发布了一个内部笔记本平台，**Google Colab** ([https://colab.research.google.com/](https://colab.research.google.com/))，该平台预装了所有深度学习包和其他Python库。你可以在Google
    Cloud上编写所有机器学习/深度学习应用程序，并免费使用GPU进行10小时的计算。
- en: Cloud platforms for deployment
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云平台部署
- en: The main idea behind this book is to empower you to build and deploy DL applications.
    In this section, we will discuss some critical components required to make your
    applications accessible to millions of users.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的主要目的是帮助你构建和部署深度学习应用程序。在本节中，我们将讨论一些关键组件，这些组件是让你的应用程序可以服务成千上万的用户所必需的。
- en: The best way to make your application accessible is to expose it as a web service,
    using REST or SOAP APIs. To do so, we have many Python web frameworks to choose
    from, such as `web.py`, Flask, Bottle, and many more. These frameworks allow us
    to easily build web services and deploy them.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使应用程序可访问的最佳方式是将其作为Web服务暴露，使用REST或SOAP API。为此，我们有许多Python Web框架可供选择，例如`web.py`、Flask、Bottle等。这些框架使我们能够轻松构建Web服务并进行部署。
- en: Prerequisites
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 先决条件
- en: You should have a Google Cloud ([https://cloud.google.com/](https://cloud.google.com/)) account.
    Google is promoting the usage of its platform right now, and is giving away $300
    dollars of credit and 12 months as a free tier user.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该有一个 Google Cloud ([https://cloud.google.com/](https://cloud.google.com/))
    账户。Google 目前正在推广其平台，并提供 300 美元的信用和 12 个月的免费使用期。
- en: Setting up the GCP
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 GCP
- en: 'Follow these instructions to set up your GCP:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤设置你的 GCP：
- en: '**Creating a new project**: Click on the three dots, as shown in the following
    screenshot, and then click on the + sign to create a new project:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建新项目**：点击如下面截图所示的三个点，然后点击加号来创建一个新项目：'
- en: '![](img/7425a6cf-6f2f-4d79-b59b-b1e947ce3c68.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7425a6cf-6f2f-4d79-b59b-b1e947ce3c68.png)'
- en: '**Spinning a VM instance**:Click on the three lines on the upper-left corner
    of the screen, select the compute option, and click on Compute Engine. Now choose
    Create new instance. Name the VM instance, and select your zone as us-west2b.
    Choose the machine type size.'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**启动虚拟机实例**：点击屏幕左上角的三条线，选择计算选项，然后点击计算引擎。接着选择创建新实例。为虚拟机实例命名，并选择你的区域为 us-west2b。选择机器类型的大小。'
- en: Choose your boot disk as Ubuntu 16.04 LTS. In firewall options, choose both
    the http and https option (it's important to make it accessible from the outer
    world). To opt for GPU options, you can click on customize button, and find the
    GPU options. You can choose between two NVIDIA GPUs. Check both Allow HTTP traffic and
    Allow HTTPS traffic.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择你的启动磁盘为 Ubuntu 16.04 LTS。在防火墙选项中，选择 HTTP 和 HTTPS 选项（确保它可以从外部访问）。若要选择 GPU 选项，可以点击自定义按钮，并找到
    GPU 选项。你可以选择两种 NVIDIA GPU。勾选“允许 HTTP 流量”和“允许 HTTPS 流量”。
- en: Now click on Create. Boom! your new VM is getting ready.
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在点击“创建”。砰！你的新虚拟机正在准备中。
- en: '**Modify the firewall settings**: Now click on the Firewall rules setting under
    Networking. Under Protocols and Ports, we need to select the port that we will
    use to export our APIs. We have chosen `tcp:8080` as our port number. Now click
    on the Save button. This will assign a rule in the firewall of your VM to access
    the applications from the external world.'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**修改防火墙设置**：现在点击“网络”下的防火墙规则设置。在协议和端口下，我们需要选择一个端口来导出我们的 API。我们选择了 `tcp:8080`
    作为我们的端口号。点击保存按钮。这将在虚拟机的防火墙中分配一个规则，以便从外部世界访问应用程序。'
- en: '**Boot your VM**: Now start your VM instance. When you see the green tick,
    click on SSH—this will open a command window, and you are now inside the VM. You
    can also use `gcloud cli` to log in and access your VMs.'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**启动虚拟机**：现在启动你的虚拟机实例。当你看到绿色的对勾时，点击 SSH—这将打开一个命令窗口，你现在就进入了虚拟机。你也可以使用 `gcloud
    cli` 登录并访问你的虚拟机。'
- en: Then follow the same steps as we performed to set up the local environment,
    or read further to learn how to create an automation script that will perform
    all the setup automatically.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后按照我们设置本地环境时的相同步骤操作，或者继续阅读，了解如何创建一个自动化脚本来自动执行所有设置。
- en: Now we need a web framework to write our DL applications as web services—again,
    there are lots of options, but to make it simple, we will be using a combination
    of `web.py` and Gunicorn.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要一个 Web 框架来将我们的 DL 应用程序写为 Web 服务——虽然有很多选择，但为了简化，我们将使用 `web.py` 和 Gunicorn
    的组合。
- en: If you want to know which web framework to choose based on memory consumption,
    CPU utilization, and so on, you can have a look at the comprehensive list of benchmarks
    at [http://klen.github.io/py-frameworks-bench](http://klen.github.io/py-frameworks-bench).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想知道如何根据内存消耗、CPU 使用率等因素选择适合的 Web 框架，可以查看 [http://klen.github.io/py-frameworks-bench](http://klen.github.io/py-frameworks-bench)
    上的综合基准列表。
- en: 'Let''s install them using following commands:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用以下命令来安装它们：
- en: '[PRE8]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now we are ready to deploy our DL solution as a web service, and scale it to
    production level.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备将我们的 DL 解决方案部署为 Web 服务，并将其扩展到生产级别。
- en: Automating the setup process
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化设置过程
- en: Installing of Python packages and DL libraries can be a tedious process, requiring
    lots of time and repetitive effort. So, to ease the job, we will create a bash
    script that can be used to install everything using a single command.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Python 包和 DL 库可能是一个繁琐的过程，需要大量的时间和重复的工作。因此，为了简化这一过程，我们将创建一个 bash 脚本，使用单个命令即可安装所有内容。
- en: 'The following is a list of components that will get installed and configured:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将安装和配置的组件列表：
- en: Java 8
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 8
- en: Bazel for building
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bazel 用于构建
- en: Python and associated dependencies
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 及其相关依赖
- en: TensorFlow
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TensorFlow
- en: Keras
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Keras
- en: Git
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git
- en: Unzip
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解压
- en: Dependencies for all of the aforementioned services (see the script for exact
    details)
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上述所有服务的依赖项（请查看脚本以获取详细信息）
- en: 'You can simply download the automation script to your server or locally, execute
    it, and you''re done. Here are the steps to follow:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以简单地将自动化脚本下载到服务器或本地，执行它，操作完成。以下是需要遵循的步骤：
- en: 'Save the script to your home directory, by cloning the code from the repository:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过从仓库中克隆代码，将脚本保存到你的主目录：
- en: '[PRE9]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Once you have the copy of the complete repository, move to the `Chapter01`
    folder, which will contain a script file named `setupDeepLearning.sh`. This is
    the script that we will execute to start the setup process, but, before execution,
    we will have to make it executable using the `chmod` command:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你拥有完整仓库的副本，进入`Chapter01`文件夹，其中将包含一个名为`setupDeepLearning.sh`的脚本文件。我们将执行这个脚本来启动设置过程，但在执行之前，我们需要使用`chmod`命令使其具有可执行权限：
- en: '[PRE10]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Once this is done, we are ready to execute it as follows:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成此操作后，我们准备按照以下步骤执行它：
- en: '[PRE11]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Follow any instructions that appear (basically, say `yes` to everything and
    accept Java''s license). It should take about 10 to 15 minutes to install everything. Once
    it has finished, you will see the list of Python packages being installed, as
    shown in the following screenshot:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 按照出现的任何指示进行操作（基本上，对所有内容选择`yes`并接受Java的许可）。安装所有内容大约需要10到15分钟。完成后，你将看到正在安装的Python包列表，如下截图所示：
- en: '![](img/79783458-7d6a-48fa-b306-16eaadbc7fe0.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/79783458-7d6a-48fa-b306-16eaadbc7fe0.png)'
- en: Listed packages with TensorFlow and other Python dependencies
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 列出的包包括TensorFlow和其他Python依赖项
- en: There are a couple of other options, too, such as getting Docker images from
    TensorFlow and other DL packages, which can set up fully functional DL machines
    for large-scale and production-ready environments. You can find out more about
    Docker at [https://www.docker.com/what-docker](https://www.docker.com/what-docker). Also,
    for a quick-start guide, follow the instructions on this repository for an all-in-one
    Docker image for DL at [https://github.com/floydhub/dl-docker](https://github.com/floydhub/dl-docker).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他几个选项，例如从TensorFlow和其他深度学习（DL）包获取Docker镜像，这可以为大规模和生产环境设置功能齐全的DL机器。你可以在[https://www.docker.com/what-docker](https://www.docker.com/what-docker)了解更多有关Docker的信息。此外，想要快速入门的用户，可以参考这个仓库中的指引，获取一个全功能的DL
    Docker镜像：[https://github.com/floydhub/dl-docker](https://github.com/floydhub/dl-docker)。
- en: Summary
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we worked to get the team set up in a common environment with
    a standardized toolset. We are looking to deploy our project applications by utilizing
    Gunicorn and CUDA. Those projects will rely on highly advanced and effective DL
    libraries, such as TensorFlow and Keras running in Python 2.x/3.x. We'll write
    our code using the resources in the Anaconda package, and all of this will be
    running on Ubuntu 16.04 or greater.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们的工作是让团队在一个共同的环境中设置好标准化的工具集。我们计划通过利用Gunicorn和CUDA来部署我们的项目应用。这些项目将依赖于高度先进且高效的深度学习库，例如在Python
    2.x/3.x中运行的TensorFlow和Keras。我们将使用Anaconda包中的资源来编写代码，所有这些都将在Ubuntu 16.04或更高版本上运行。
- en: Now we are all set to perform experiments and deploy our DL models in production!
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已准备好执行实验并将我们的深度学习模型部署到生产环境中！
