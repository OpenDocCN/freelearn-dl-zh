- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Customizing Code Recommendations
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定制代码建议
- en: 'In this chapter, we will look at the following key topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下关键主题：
- en: Prerequisites for Amazon Q customizations
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Q 定制的先决条件
- en: Creating customization in Amazon Q
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Amazon Q 中创建定制
- en: Evaluating and optimizing the customization
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评估和优化定制
- en: Creating different versions of customization
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建不同的定制版本
- en: Adding users and groups
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加用户和组
- en: Using customization in integrated development environments (IDEs)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在集成开发环境（IDE）中使用定制
- en: With customizations, **Amazon Q Developer** can support software development
    tailored to your team’s internal libraries, proprietary algorithms, and enterprise
    code style. By connecting a data source containing your code, Amazon Q leverages
    your content to provide assistance that aligns with your organization’s development
    style.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 通过定制，**Amazon Q 开发者** 可以支持针对您团队内部库、专有算法和企业代码风格的软件开发。通过连接包含您的代码的数据源，Amazon Q
    利用您的内容提供与您组织开发风格相一致的帮助。
- en: Let’s get started by looking at some of the prerequisites before you can leverage
    customization with Amazon Q.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始，先看看在您能够利用 Amazon Q 定制之前需要满足的一些先决条件。
- en: Prerequisites for Amazon Q customizations
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon Q 定制的先决条件
- en: Since customization is mostly used by organizations, it is only available with
    the Pro tier of Amazon Q Developer. However, you can also try it out on your own
    by getting the Pro subscription and adding the customization feature from the
    Amazon Q administrative console.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 由于定制主要被组织使用，它仅在 Amazon Q 开发者 Pro 级别中可用。但是，您也可以通过获取 Pro 订阅并在 Amazon Q 管理控制台中添加定制功能来亲自尝试。
- en: When using Amazon Q customizations, ensure that your Amazon Q administrator
    is authorized to access your code base, which can be stored either on **Amazon
    S3** or through **AWS CodeConnections**. Notably, in the standard setup procedure
    for Amazon Q Developer Pro, your **AWS Organizations** administrator doesn’t grant
    the Amazon Q administrator access to these services.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 Amazon Q 定制时，请确保您的 Amazon Q 管理员已获得访问您的代码库的授权，该代码库可以存储在 **Amazon S3** 上，或通过
    **AWS CodeConnections**。值得注意的是，在 Amazon Q 开发者 Pro 的标准设置流程中，您的 **AWS 组织** 管理员不会授予
    Amazon Q 管理员访问这些服务的权限。
- en: 'Hence, before utilizing Amazon Q customizations, it’s imperative to include
    the following permissions to the role of your Amazon Q administrator. Note the
    legacy name of **CodeWhisperer** still shows in the policy, even though it pertains
    to Amazon Q Developer now:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在利用 Amazon Q 定制之前，将以下权限添加到您的 Amazon Q 管理员角色中至关重要。请注意，即使在现在与 Amazon Q 开发者相关的情况下，策略中仍然显示了
    **CodeWhisperer** 的旧名称：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding policy grants the role the permissions to leverage the customization
    APIs of Amazon Q Developer. It also allows the role to establish connections and
    access the code repositories either via Amazon S3 or AWS CodeConnections. If you
    are planning to try out customizations, feel free to copy the **Identity and Access
    Management** (**IAM**) policy code from the AWS documentation, a link to which
    has been provided in the *References* section at the end of this chapter.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 上述策略授予了角色使用 Amazon Q 开发者定制 API 的权限。它还允许角色通过 Amazon S3 或 AWS CodeConnections
    建立连接并访问代码库。如果您计划尝试定制，请随意从 AWS 文档中复制 **身份和访问管理**（**IAM**）策略代码，该链接已在本章末尾的 *参考文献*
    部分提供。
- en: 'Amazon Q also retains data regarding the creation of your customization within
    **Amazon** **CloudWatch Logs**. Grant your Amazon Q administrator permission to
    access these logs with the following authorization set. The following permissions
    allow the Amazon Q Developer administrator to view these logs. We will see in
    the following sections how these logs are helpful for tracking as well as debugging
    purposes:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q 还会在 **Amazon CloudWatch 日志** 中保留有关您创建定制的相关数据。请使用以下授权设置授予您的 Amazon Q
    管理员访问这些日志的权限。以下权限允许 Amazon Q 开发者管理员查看这些日志。我们将在以下章节中看到这些日志在跟踪以及调试方面的帮助：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Ensuring the quality of your customization begins with selecting optimal source
    material. When preparing your data source, incorporate code that features team-endorsed
    patterns while avoiding code that contains anti-patterns, bugs, security vulnerabilities,
    performance issues, and similar concerns. Organizations establish best-of-breed
    coding standards and patterns by creating comprehensive guidelines and best practices
    that are thoroughly documented and easily accessible to all developers. They enforce
    these standards through code reviews and security standards in the development
    projects. All organizations can decide for themselves what project code repositories
    are gold standards for them so that they can use those for customizations in Amazon
    Q Developer.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 确保定制质量的第一步是选择最佳源材料。在准备数据源时，包含具有团队认可模式的代码，同时避免包含反模式、错误、安全漏洞、性能问题等类似问题的代码。组织通过创建全面指南和最佳实践来建立最佳编码标准和模式，这些指南和最佳实践经过充分记录，并且对所有开发者易于访问。他们通过代码审查和开发项目中的安全标准来执行这些标准。所有组织都可以自行决定哪些项目代码库是他们的黄金标准，以便他们可以使用这些代码库在
    Amazon Q 开发者中进行定制。
- en: Your data source should include between 2 MB and 20 GB of source code files
    in supported languages. The Amazon CloudWatch logs will indicate the total size
    of all the code bases used during the customization training process. In our next
    few sections, we will highlight this aspect in the logs. There is no restriction
    on the number of files, but ensure each language you wish to support includes
    at least 10 files. If using Amazon S3 as the data source, organize all source
    code within a directory, avoiding placement at the root level, as files at the
    root level will be disregarded.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您的数据源应包含 2 MB 到 20 GB 的支持语言的源代码文件。Amazon CloudWatch 日志将指示定制训练过程中使用的所有代码库的总大小。在接下来的几节中，我们将在日志中强调这一点。文件数量没有限制，但请确保您希望支持的每种语言至少包含
    10 个文件。如果使用 Amazon S3 作为数据源，请将所有源代码组织在一个目录中，避免放置在根级别，因为根级别的文件将被忽略。
- en: Supported languages
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的语言
- en: At this time, Amazon Q Developer supports customization for Java, Python, JavaScript,
    and TypeScript programming languages, and it can be used from the VS Code and
    JetBrains IDEs only. Keep an eye on new releases that may include more options.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Amazon Q 开发者支持 Java、Python、JavaScript 和 TypeScript 编程语言的定制，并且只能从 VS Code
    和 JetBrains IDE 中使用。请关注新版本，可能包含更多选项。
- en: Now, let’s learn how to create the customization in Amazon Q Developer.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们学习如何在 Amazon Q 开发者中创建定制。
- en: Creating a customization in Amazon Q
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Amazon Q 中创建定制
- en: To get started with customizations, first set them up in the Amazon Q Developer
    console. We assume you have already followed the steps to set up your Pro tier.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始定制，首先在 Amazon Q 开发者控制台中设置它们。我们假设您已经遵循了设置 Pro 级别的步骤。
- en: The following screenshot shows the customization settings inside the Amazon
    Q Developer console. To access the Amazon Q Developer console, search for the
    service name within the AWS console and click the **Settings** button to reach
    the following screen.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了 Amazon Q 开发者控制台中的定制设置。要访问 Amazon Q 开发者控制台，在 AWS 控制台中搜索服务名称，然后点击**设置**按钮，即可到达以下屏幕。
- en: '![Figure 10.1 – Amazon Q customizations setup](img/B21378_10_001.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.1 – Amazon Q 定制设置](img/B21378_10_001.jpg)'
- en: Figure 10.1 – Amazon Q customizations setup
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1 – Amazon Q 定制设置
- en: 'After that, click on the **Customization** link and follow a simple three-step
    process inside the **Customizations** page: connecting to a repository, creating
    customization, and activating it. The following screenshot shows the process.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，点击**定制**链接，在**定制**页面内遵循简单的三步流程：连接到代码库、创建定制和激活它。以下截图显示了该过程。
- en: '![Figure 10.2 – Amazon Q customizations – creation process](img/B21378_10_002.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.2 – Amazon Q 定制 – 创建过程](img/B21378_10_002.jpg)'
- en: Figure 10.2 – Amazon Q customizations – creation process
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.2 – Amazon Q 定制 – 创建过程
- en: Let’s look at these steps one by one.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐一查看这些步骤。
- en: Connecting to a repository
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接到代码库
- en: As soon as you click the **Create customization** button in the console, you
    will be presented with a page where you can provide the name and description for
    the customization along with the connection to the source repository, as shown
    in the following screenshot.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在控制台中点击**创建定制**按钮，你将看到一个页面，你可以在这里提供定制的名称和描述，以及与源代码库的连接，如下面的截图所示。
- en: '![Figure 10.3 – Amazon Q customizations – creating a connection](img/B21378_10_003.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图10.3 – Amazon Q自定义 – 创建连接](img/B21378_10_003.jpg)'
- en: Figure 10.3 – Amazon Q customizations – creating a connection
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3 – Amazon Q自定义 – 创建连接
- en: Always try to give a meaningful name and clear description here, as this information
    will be visible to the developers from the IDE.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 总是尽量在这里给出有意义的名称和清晰的描述，因为开发人员可以从IDE中看到这些信息。
- en: The important aspect in the preceding screenshot is the source connection. There
    are two ways to make your source code available to Amazon Q for creating the customization.
    You can take all the source code in the organization, upload it into an Amazon
    S3 bucket, and provide the S3 URI in the source connection. Many organizations
    that store large amounts of enterprise code in code repositories as part of the
    DevOps process are less likely to use this option. The other option is indeed
    to connect to the code repositories where the code is hosted.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中的重要方面是源连接。有两种方式可以使您的源代码对Amazon Q可用以创建自定义。您可以将组织中的所有源代码上传到Amazon S3存储桶，并提供S3
    URI作为源连接。许多将大量企业代码存储在代码仓库中作为DevOps流程一部分的组织不太可能使用此选项。另一种选项确实是连接到代码存储库。
- en: If your data source resides on GitHub, GitLab, or Bitbucket, you need to establish
    a connection to it using AWS CodeConnections. To demonstrate the customization
    feature in this chapter, I will connect to my GitHub repository, where I will
    be leveraging some public repositories that I will fork for this to work. For
    detailed steps on how to create a connection to your repository, I have provided
    the link in the *References* section at the end of this chapter so that you can
    go through it step by step to create a connection and put the connection in the
    Amazon Q customization creation page.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的数据源位于GitHub、GitLab或Bitbucket，您需要使用AWS CodeConnections与其建立连接。为了展示本章中的自定义功能，我将连接到我的GitHub仓库，我将利用一些公共仓库，我将为使此功能工作而将其分叉。有关如何创建到您的仓库的连接的详细步骤，我在本章末尾的*参考文献*部分提供了链接，以便您可以一步一步地创建连接并将连接放入Amazon
    Q自定义创建页面。
- en: The following screenshot shows the bottom part of the same customization creation
    page, which allows you to emit the logs generated during this process to one of
    the log delivery options. In this case, I have picked AWS CloudWatch, and in the
    subsequent steps, I will show you the importance of logs during this process.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了同一自定义创建页面的底部部分，该页面允许您将在此过程中生成的日志输出到日志交付选项之一。在这种情况下，我选择了AWS CloudWatch，在后续步骤中，我将向您展示日志在此过程中的重要性。
- en: '![Figure 10.4 – Amazon Q customizations – log delivery option](img/B21378_10_004.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图10.4 – Amazon Q自定义 – 日志交付选项](img/B21378_10_004.jpg)'
- en: Figure 10.4 – Amazon Q customizations – log delivery option
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.4 – Amazon Q自定义 – 日志交付选项
- en: Once you hit the **Create customization** button, it begins the training process.
    Depending on the total size of the code base, it may take anywhere from a few
    minutes to a few hours or even more.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击**创建自定义**按钮，它就开始了训练过程。根据代码库的总大小，可能需要几分钟到几小时甚至更长时间。
- en: Preparing customizations
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备自定义
- en: In this step, Amazon Q will connect to your code repository and train a custom
    model based on your organization’s coding practices so that it can utilize your
    content to provide suggestions tailored to the preferences of your organization’s
    developers.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在此步骤中，Amazon Q将连接到您的代码仓库，并根据您组织的编码实践训练一个自定义模型，以便它可以利用您的内容提供针对您组织开发人员偏好的定制建议。
- en: Security note
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 安全注意事项
- en: AWS will neither store nor utilize your content in any context that doesn’t
    directly benefit your enterprise. Also, AWS won’t leverage your content to offer
    code suggestions to other customers, and, of course, Amazon Q will not refer to
    security scans conducted for other customers.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: AWS不会在任何不直接有利于您的企业的背景下存储或利用您的内容。此外，AWS不会利用您的内容向其他客户提供代码建议，当然，Amazon Q也不会参考为其他客户进行的网络安全扫描。
- en: During this process, Amazon Q retrieves the source code from the code repository,
    and after conducting sanity and quality checks, such as duplicate file checks
    and unsupported file formats, it attempts to establish whether it has enough context
    to create a customization that would benefit all the developers in the organization.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在此过程中，Amazon Q从代码仓库检索源代码，并在进行合理性检查和质量检查，如重复文件检查和不支持的文件格式后，尝试确定它是否有足够的上下文来创建一个对所有组织开发人员都有益的自定义。
- en: After running for a bit, the customization creation page failed and provided
    me with an error stating that the code size was not large enough for it to train
    an effective model. This issue is highlighted in the following screenshot.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 运行了一段时间后，定制创建页面失败了，并给我提供了一个错误信息，说代码大小不足以训练一个有效的模型。这个问题在以下截图中得到了突出。
- en: '![Figure 10.5 – Amazon Q customizations – creating a customization failure](img/B21378_10_005.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图10.5 – Amazon Q定制 – 创建定制失败](img/B21378_10_005.jpg)'
- en: Figure 10.5 – Amazon Q customizations – creating a customization failure
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5 – Amazon Q定制 – 创建定制失败
- en: The error doesn’t exactly tell me what was insufficient and how it fell below
    the minimum threshold in our code base during this process. This is where the
    CloudWatch Logs will come in handy. For many possible troubleshooting error messages,
    you can follow the link in the *References* section, but I will cover one such
    error that I encountered during this process.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这个错误并没有确切地告诉我什么是不充分的，以及它是如何在我们的代码库中低于最低阈值的。这就是CloudWatch日志派上用场的地方。对于许多可能的故障排除错误消息，你可以通过*参考*部分中的链接进行查看，但我会介绍我在这个过程中遇到的一个错误。
- en: If you navigate to the CloudWatch log group link provided during the customization
    setup, as shown in the **Log deliveries** section in *Figure 10**.4*, you will
    be able to see the exact cause of this error. For instance, in my case, the error
    log, as seen in the following screenshot, suggests that after the quality scrub
    process, Amazon Q could only gather about 1 MB of code. This limit is below the
    minimum threshold of 2 MB required by the engine to proceed toward the customization
    training process.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你导航到定制设置期间提供的CloudWatch日志组链接，如图10.4中的*日志投递*部分所示，你将能够看到这个错误的确切原因。例如，在我的情况下，错误日志，如以下截图所示，表明在质量清理过程之后，Amazon
    Q只能收集大约1 MB的代码。这个限制低于引擎进行定制训练过程所需的最低阈值2 MB。
- en: '![Figure 10.6 – Amazon Q customizations – failure details in AWS CloudWatch](img/B21378_10_006.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图10.6 – Amazon Q定制 – AWS CloudWatch中的失败详情](img/B21378_10_006.jpg)'
- en: Figure 10.6 – Amazon Q customizations – failure details in AWS CloudWatch
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.6 – Amazon Q定制 – AWS CloudWatch中的失败详情
- en: The reason for this insufficient data error is that I had forked a popular code
    repository from the public code samples provided by AWS on GitHub, located at
    `https://github.com/aws-samples.`
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这种数据不足错误的原因是，我从AWS在GitHub上提供的公共代码示例中fork了一个流行的代码仓库，位于`https://github.com/aws-samples.`
- en: In reality, as part of the organization, your administrator will connect the
    Amazon Q customization to your private enterprise repositories to allow Amazon
    Q to train customizations based on vast amounts of code used within your organization.
    To demonstrate the customization in this book, I cannot use any private code,
    so the best I can do is show this feature by connecting to a public repository
    with a license that allows anyone to use the code in any way they want.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，作为组织的一部分，你的管理员会将Amazon Q定制连接到你的私有企业仓库，以便Amazon Q可以根据你组织内部使用的海量代码来训练定制。为了展示本书中的定制，我无法使用任何私有代码，所以我所能做的就是通过连接到一个允许任何人以任何方式使用代码的公共仓库来展示这个功能。
- en: Additionally, the public code found in the code repository may very well have
    been used to train Amazon Q Developer anyway, so technically, I will not be getting
    real customizations. However, to show you the steps of how it works, this should
    serve its purpose.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在代码仓库中找到的公共代码可能已经被用来训练Amazon Q开发者，所以从技术上讲，我并不会得到真正的定制。然而，为了展示它的工作步骤，这应该足以达到目的。
- en: After receiving that failure message, I understood that I needed to provide
    a lot more code samples and possibly more variety for the training to work in
    the first place. So, I went ahead and forked a few more repositories in my GitHub
    account so that Amazon Q could make it past that error step. I reran the customization
    creation process and after a while, I looked at the CloudWatch logs again to see
    whether adding more code repositories helped it get past the minimum threshold.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在收到那个失败信息后，我意识到我需要提供更多的代码示例，可能还需要更多样化的内容，以便训练一开始就能正常工作。因此，我继续在我的GitHub账户中fork了几个更多的仓库，这样Amazon
    Q就能跳过那个错误步骤。我重新运行了定制创建过程，过了一会儿，我又查看了一次CloudWatch日志，看看添加更多的代码仓库是否有助于它越过最低阈值。
- en: The following screenshot shows that it barely made it past the 2 MB minimum
    threshold required.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示，它勉强越过了所需的2 MB最低阈值。
- en: '![Figure 10.7 – Amazon Q customizations – AWS CloudWatch logs after modified
    re-run](img/B21378_10_007.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图10.7 – Amazon Q 定制 – 修改后重新运行后的 AWS CloudWatch 日志](img/B21378_10_007.jpg)'
- en: Figure 10.7 – Amazon Q customizations – AWS CloudWatch logs after modified re-run
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.7 – Amazon Q 定制 – 修改后重新运行后的 AWS CloudWatch 日志
- en: So, even after adding 5 to 6 repositories, the code size was still just above
    2 MB. The recommendation is to have at least 2 MB and this can go all the way
    up to 20 GB of code base. So, it’s pretty evident that the customization process
    will complete, but I am not expecting a great evaluation from this.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，即使添加了5到6个存储库，代码大小仍然只有2 MB多一点。建议至少有2 MB，这可以扩展到20 GB的代码库。所以，很明显定制过程将完成，但我并不期望得到一个很高的评估分数。
- en: The following screenshot shows the customization was completed successfully;
    however, it gave me an abysmal evaluation score of 1\. In other words, it’s telling
    me I better not roll out this customization feature to all the developers in my
    organization as it will yield poor results.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示定制已成功完成；然而，它给了我一个令人难以置信的评估分数为1。换句话说，它告诉我最好不要将此定制功能推广到我们组织中的所有开发者，因为它会产生较差的结果。
- en: '![Figure 10.8 – Amazon Q customizations – customization creation is complete](img/B21378_10_008.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图10.8 – Amazon Q 定制 – 定制创建已完成](img/B21378_10_008.jpg)'
- en: Figure 10.8 – Amazon Q customizations – customization creation is complete
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.8 – Amazon Q 定制 – 定制创建已完成
- en: We will discuss score evaluation and how to improve it in our next section,
    but let’s complete the third step in this creation process, which is to activate
    the created customization.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一节讨论分数评估以及如何改进它，但让我们完成创建过程中的第三步，即激活创建的定制。
- en: Activating and deactivating customizations
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 激活和停用定制
- en: Once the customization is created, it needs to be activated. Since this was
    our first version, we will activate it even though the evaluation is not great.
    However, in reality, you can keep iterating through the customization creation
    process until you get a good evaluation score, and then activate the version you
    want to use as the final one.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 定制创建完成后，需要激活。由于这是我们第一个版本，即使评估分数不高，我们也会激活它。然而，在现实中，你可以通过定制创建过程不断迭代，直到得到一个良好的评估分数，然后激活你想要用作最终版本的版本。
- en: The following screenshot shows the **Activate** option once the customization
    creation is complete. Once activated, the status will show as activated. You can
    also deactivate any customization version by selecting the **Deactivate** option
    from the **Action** dropdown. This is useful for keeping only the version with
    the best score active for use.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了定制创建完成后出现的**激活**选项。一旦激活，状态将显示为已激活。你也可以通过从**操作**下拉菜单中选择**停用**选项来停用任何定制版本。这对于只保留得分最高的版本以供使用非常有用。
- en: '![Figure 10.9 – Amazon Q customizations – activate a version of the customization](img/B21378_10_009.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图10.9 – Amazon Q 定制 – 激活定制的一个版本](img/B21378_10_009.jpg)'
- en: Figure 10.9 – Amazon Q customizations – activate a version of the customization
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.9 – Amazon Q 定制 – 激活定制的一个版本
- en: Now, let’s learn about the score evaluation process and how you can improve
    it.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们了解分数评估过程以及如何改进它。
- en: Evaluating and optimizing the customization
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估和优化定制
- en: When the customization process completed, it gave an evaluation score, and on
    the side, it also provided a detailed range of scores and a description of what
    they mean. Let’s discuss them in detail.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当定制过程完成后，它会给出一个评估分数，并在旁边提供详细的分数范围及其含义的描述。让我们详细讨论一下。
- en: Score evaluation
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分数评估
- en: 'Based on your evaluation score, you should now decide whether to activate your
    customization. Consider the following factors:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的评估分数，你现在应该决定是否激活你的定制。考虑以下因素：
- en: '**Very good (8-10)**: Amazon Q recommends activating this customization.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非常好（8-10）**：Amazon Q 建议激活此定制。'
- en: '**Fair (5-7)**: Amazon Q recommends activating this customization. If you do
    not see a significant improvement, consider the following optimization suggestions.
    If those are not effective, consider switching to a different code source.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公平（5-7）**：Amazon Q 建议激活此定制。如果你没有看到显著的改进，请考虑以下优化建议。如果那些不起作用，请考虑切换到不同的代码源。'
- en: '**Poor (1-4)**: This customization is unlikely to be useful. Consider the optimization
    suggestions from the next section around optimizing the customization. If those
    are not effective, consider switching to a different code source.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**差（1-4）**：这种自定义设置可能不太有用。考虑下一节中关于优化自定义设置的优化建议。如果这些建议不有效，考虑切换到不同的代码源。'
- en: This evaluation matrix is suggested in the AWS documentation, a link to which
    is also provided in the *References* section at the end of this chapter.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 此评估矩阵在AWS文档中建议，其链接也包含在本章末尾的*参考文献*部分。
- en: The following screenshot highlights this evaluation score for our version of
    the customization and on the side highlights what each range of score means.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图突出了我们自定义设置的此评估分数，并在旁边突出显示了每个评分范围的含义。
- en: '![Figure 10.10 – Amazon Q customizations – score evaluation criteria](img/B21378_10_010.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图10.10 – 亚马逊Q自定义设置 – 评分评估标准](img/B21378_10_010.jpg)'
- en: Figure 10.10 – Amazon Q customizations – score evaluation criteria
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.10 – 亚马逊Q自定义设置 – 评分评估标准
- en: So, how do we go about bumping this score up? Let’s take a look.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们如何提高这个分数呢？让我们看看。
- en: Optimizing the customization
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化自定义设置
- en: Let’s highlight some suggestions that may improve your evaluation score.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们突出一些可能提高您评估分数的建议。
- en: To tailor optimizations for the specific languages used in your organization,
    consider broadening your data source to encompass more code repositories. If your
    data set is limited to a few programming languages, try incorporating a wider
    variety of languages. Additionally, exclude auto-generated files and repositories
    or those created from templates, as training customizations for such files typically
    adds little value and introduces noise.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 为了针对您组织中使用的特定语言进行优化，考虑扩大您的数据源，包括更多的代码仓库。如果您的数据集仅限于几种编程语言，尝试包含更广泛的语言种类。此外，排除自动生成的文件和从模板创建的仓库，因为为这类文件进行培训通常添加的价值很小，并引入了噪声。
- en: Assess whether your code base frequently employs internal libraries. If not,
    the core Amazon Q model may already be performing at its best. To fine-tune for
    particular languages, ensure you include at least 20 data files for each language,
    with a total size of at least 10 MB. Essentially, by increasing and improving
    the variety, quality, and quantity of code used for training customizations, the
    evaluation score may improve. A higher evaluation score will help generate better-customized
    code suggestions. Once you figure out how you are going to optimize the customization,
    you can create multiple versions of it.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 评估您的代码库是否经常使用内部库。如果不使用，亚马逊Q的核心模型可能已经表现最佳。为了针对特定语言进行微调，确保为每种语言至少包含20个数据文件，总大小至少为10
    MB。本质上，通过增加和改进用于培训自定义设置的代码的多样性、质量和数量，评估分数可能会提高。更高的评估分数将有助于生成更好的自定义代码建议。一旦您确定了如何优化自定义设置，您就可以创建它的多个版本。
- en: Creating multiple versions of customization
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建多个自定义设置版本
- en: As organizations create new code repositories and establish new coding standards,
    there may be a need to retain the Amazon Q Developer customizations to incorporate
    additional customizations and improve the evaluation score of an existing customization.
    This is where **versioning** of customizations comes in handy, allowing you to
    keep different versions of customizations based on training.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 随着组织创建新的代码仓库和建立新的编码标准，可能需要保留亚马逊Q开发者的自定义设置，以整合额外的自定义设置并提高现有自定义设置的评估分数。这就是自定义设置的**版本控制**派上用场的地方，它允许您根据培训保留不同版本的自定义设置。
- en: Creating multiple versions of customization is easy in Amazon Q Developer. From
    the created customization page where you see the current version, you can select
    **Create new version** from the **Actions** dropdown and start building a new
    version, as shown in the following screenshot.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在亚马逊Q开发者中创建多个自定义设置版本很容易。从您可以看到当前版本的创建自定义设置页面，您可以从**操作**下拉菜单中选择**创建新版本**，并开始构建新版本，如以下屏幕截图所示。
- en: '![Figure 10.11 – Amazon Q customizations – creating a new version of customization](img/B21378_10_011.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图10.11 – 亚马逊Q自定义设置 – 创建自定义设置的新版本](img/B21378_10_011.jpg)'
- en: Figure 10.11 – Amazon Q customizations – creating a new version of customization
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.11 – 亚马逊Q自定义设置 – 创建自定义设置的新版本
- en: 'Amazon Q administrators can access up to three versions for each customization:
    the latest version, the currently active version in use, and the most recently
    active version that is no longer in use.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q 管理员可以为每个定制化访问最多三个版本：最新版本、当前正在使用的版本以及最近使用但不再使用的版本。
- en: Once the customization version has an acceptable evaluation score, the admin
    can make it available to users or groups.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦定制化版本获得可接受的评估分数，管理员就可以将其提供给用户或组。
- en: Adding users and groups to the customization
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将用户和组添加到定制化中
- en: Adding users or groups is straightforward. This step will allow developers access
    to the customizations when they start coding in either the VS Code or JetBrains
    IDE, both of which would already have the Amazon Q extension installed.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 添加用户或组非常简单。此步骤将允许开发者在开始使用 VS Code 或 JetBrains IDE 编码时访问定制化，这两个 IDE 都已安装了 Amazon
    Q 扩展。
- en: The following screenshot shows the **Add Users/Groups** tab in the Amazon Q
    console.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了 Amazon Q 控制台中的“添加用户/组”选项卡。
- en: '![Figure 10.12 – Amazon Q customizations – add users/groups](img/B21378_10_012.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.12 – Amazon Q 定制化 – 添加用户/组](img/B21378_10_012.jpg)'
- en: Figure 10.12 – Amazon Q customizations – add users/groups
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.12 – Amazon Q 定制化 – 添加用户/组
- en: In this case, as seen from the following screenshot, I’m adding myself so that
    I can start using the customizations in the VS Code IDE. Keep in mind this is
    the AWS IAM Identity Center user we configured using the steps listed in [*Chapter
    2*](B21378_02.xhtml#_idTextAnchor022).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在此情况下，如以下截图所示，我正在添加自己，以便我开始在 VS Code IDE 中使用定制化。请记住，这是我们使用[*第 2 章*](B21378_02.xhtml#_idTextAnchor022)中列出的步骤配置的
    AWS IAM Identity Center 用户。
- en: '![Figure 10.13 – Amazon Q customizations – added a user](img/B21378_10_013.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.13 – Amazon Q 定制化 – 添加用户](img/B21378_10_013.jpg)'
- en: Figure 10.13 – Amazon Q customizations – added a user
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.13 – Amazon Q 定制化 – 添加用户
- en: Now, we are all set to start using the customization from the IDE.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好开始从 IDE 使用定制化了。
- en: Using customization in IDEs
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 IDE 中使用定制化
- en: Once the admin gives the thumbs-up to start using a particular customization,
    it’s straightforward to start using it from the IDE.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦管理员批准开始使用特定的定制化，从 IDE 开始使用它就非常简单。
- en: Just a reminder that customizations are only available in the Pro tier, which
    means that you have to log into the IDE using your IAM Identity Center credentials.
    The following screenshot highlights that as soon as I log in to the VS Code IDE
    using my IAM Identity Center credentials, it gives me a notification that I have
    access to a new Amazon Q customization.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 提醒一下，定制化仅在专业版中可用，这意味着您必须使用 IAM Identity Center 凭据登录 IDE。以下截图突出显示了这一点，当我使用 IAM
    Identity Center 凭据登录 VS Code IDE 时，它通知我有权访问新的 Amazon Q 定制化。
- en: '![Figure 10.14 – Amazon Q customizations – new customization notification in
    VS Code IDE](img/B21378_10_014.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.14 – Amazon Q 定制化 – VS Code IDE 中的新定制化通知](img/B21378_10_014.jpg)'
- en: Figure 10.14 – Amazon Q customizations – new customization notification in VS
    Code IDE
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.14 – Amazon Q 定制化 – VS Code IDE 中的新定制化通知
- en: As soon as I select it, I can see the name of the customization that was created
    earlier. The following screenshot highlights this aspect in VS Code IDE.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择，我可以看到之前创建的定制化名称。以下截图在 VS Code IDE 中突出了这一点。
- en: '![Figure 10.15 – Amazon Q customizations – selecting a customization in VS
    Code IDE](img/B21378_10_015.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.15 – Amazon Q 定制化 – 在 VS Code IDE 中选择定制化](img/B21378_10_015.jpg)'
- en: Figure 10.15 – Amazon Q customizations – selecting a customization in VS Code
    IDE
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.15 – Amazon Q 定制化 – 在 VS Code IDE 中选择定制化
- en: As soon as you select that, voilà, you are notified that all new Amazon Q code
    suggestions will be coming from the selected customization. This is highlighted
    in the following screenshot.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择，恭喜，您将收到通知，所有新的 Amazon Q 代码建议都将来自所选的定制化。以下截图突出了这一点。
- en: '![Figure 10.16 – Amazon Q customizations – customization selection confirmation
    in VS Code IDE](img/B21378_10_016.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.16 – Amazon Q 定制化 – VS Code IDE 中的定制化选择确认](img/B21378_10_016.jpg)'
- en: Figure 10.16 – Amazon Q customizations – customization selection confirmation
    in VS Code IDE
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.16 – Amazon Q 定制化 – VS Code IDE 中的定制化选择确认
- en: Now, keep in mind that Amazon Q will attempt to provide you with custom suggestions
    wherever it finds code logic that it would create from the custom training data.
    In case it’s not able to relate to the customized model, Amazon Q will provide
    suggestions from the default model.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，请记住，Amazon Q 将尝试在它找到的任何由自定义训练数据创建的代码逻辑处为你提供定制建议。如果它无法关联到定制模型，Amazon Q 将提供默认模型的建议。
- en: 'You can get custom code suggestions either through an inline prompt or by using
    the chat feature of Amazon Q Developer. For example, imagine you are working at
    a large e-commerce company with many customer-facing shopping applications, and
    as a developer for a new application, you have been tasked with building a feature
    that recommends items to customers. The logic for this feature may already exist
    in your organization. In your IDE, you can simply insert an inline prompt or use
    an appropriate function name such as `shoppingRecommendationEngine(customerId:
    String)`, and Amazon Q will try to provide the logic based on examples it has
    learned during the customization training process from your organization’s private
    repository. All the complex logic in the function, which may have been established
    as a gold standard in your organization, is immediately utilized without you having
    to understand and create all the code by hand.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '您可以通过内联提示或使用 Amazon Q 开发者的聊天功能来获取定制代码建议。例如，想象您正在一家大型电子商务公司工作，该公司拥有许多面向客户的购物应用程序，作为新应用程序的开发者，您被分配了一个构建向客户推荐商品的功能的任务。这个功能的逻辑可能已经在您的组织中存在。在您的
    IDE 中，您只需简单地插入一个内联提示或使用适当的函数名，例如 `shoppingRecommendationEngine(customerId: String)`，Amazon
    Q 将尝试根据它在定制训练过程中从您的组织私有仓库中学到的示例提供逻辑。函数中的所有复杂逻辑，可能在您的组织中已经建立为黄金标准，都可以立即使用，而无需您手动理解和创建所有代码。'
- en: Amazon Q Developer can also answer your questions about your organization’s
    custom code using the chat feature. You can simply ask the chat to generate or
    explain code based on the use case, and Q will try to infer from what it has learned
    from the organization’s code base to provide the closest matching output. For
    example, you can ask the Amazon Q chat to generate a shopping recommendation engine
    implementation using the k-means clustering algorithm, and it will try to suggest
    code based on other similar examples it has learned from your organization’s code
    base during the customization training process.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q 开发者还可以使用聊天功能回答您关于组织自定义代码的问题。您只需要求聊天根据用例生成或解释代码，Q 将尝试从它从组织的代码库中学到的内容中推断，以提供最接近的匹配输出。例如，您可以要求
    Amazon Q 聊天生成一个使用 k-means 聚类算法的购物推荐引擎实现，它将尝试根据它在定制训练过程中从您的组织代码库中学到的其他类似示例提供代码建议。
- en: This brings us to the end of this chapter. Feel free to experiment with it if
    you have subscribed to the Pro tier or if your organization needs to set this
    up.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这就结束了本章的内容。如果您已订阅了专业版，或者您的组织需要设置此功能，请随意尝试。
- en: Summary
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered what code customization is in Amazon Q Developer.
    We started by laying out the prerequisites for Amazon Q customizations. Then,
    we looked at how to create customization in Amazon Q. After the creation process,
    the scores need to be evaluated and optimization techniques need to be put in
    place so that it bumps up the score in subsequent runs of the customization creation
    process.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了 Amazon Q 开发者中的代码定制是什么。我们首先概述了 Amazon Q 定制的先决条件。然后，我们探讨了如何在 Amazon
    Q 中创建定制。在创建过程之后，需要对分数进行评估，并实施优化技术，以便在后续的定制创建过程中提高分数。
- en: We also looked at how multiple versions of customizations are created and maintained.
    Once the customization is created, it’s assigned to users or groups by the admin.
    Finally, the users can log into VS Code or JetBrains IDE using their IAM Identity
    Center credentials to select and start using the customizations.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还研究了如何创建和维护多个版本的定制。一旦定制创建完成，管理员会将其分配给用户或组。最后，用户可以使用他们的 IAM 身份中心凭证登录 VS Code
    或 JetBrains IDE，以选择并开始使用这些定制。
- en: In the next chapter, we will look at understanding the references of the code
    suggestion so that appropriate actions can be taken.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨理解代码建议引用的方法，以便采取适当的行动。
- en: References
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'Connection setup steps to code repositories: [https://docs.aws.amazon.com/dtconsole/latest/userguide/welcome-connections.html](https://docs.aws.amazon.com/dtconsole/latest/userguide/welcome-connections.html)'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到代码仓库的设置步骤：[https://docs.aws.amazon.com/dtconsole/latest/userguide/welcome-connections.html](https://docs.aws.amazon.com/dtconsole/latest/userguide/welcome-connections.html)
- en: 'Troubleshooting customization errors: [https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/customizations-log-use-understand.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/customizations-log-use-understand.html)'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解决定制错误：[https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/customizations-log-use-understand.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/customizations-log-use-understand.html)
- en: 'Customization evaluations: [https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/customizations-admin-activate.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/customizations-admin-activate.html)'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定制评估：[https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/customizations-admin-activate.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/customizations-admin-activate.html)
