- en: '*Chapter 7*: Transforming Your Data inside a Workflow'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第七章*: 在工作流中转换您的数据'
- en: In this chapter, you will learn how to manipulate data within workflows so that
    the APIs that you create can return the data in a useful format. You will also
    learn about sharing data between workflows, working with arrays and JSON objects,
    merging datasets, and performing analytics and calculations.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何在工作流中操作数据，以便您创建的API可以以有用的格式返回数据。您还将了解在工作流之间共享数据，处理数组和JSON对象，合并数据集，以及执行分析和计算。
- en: 'This chapter will cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要主题：
- en: Sharing data between workflows
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在工作流之间共享数据
- en: Merging datasets
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并数据集
- en: Performing calculations and analytics
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行计算和分析
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The following are the technical requirements that you''ll need to prepare before
    continuing with this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续本章之前，您需要准备以下技术要求：
- en: You should have created an account on Airtable.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您应该在Airtable上创建了一个账户。
- en: n8n should be running and the Editor UI should be open.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: n8n应该正在运行，并且编辑器UI应该已打开。
- en: You can find the completed code examples for the chapter on GitHub at [https://github.com/PacktPublishing/Rapid-Product-Development-with-n8n/tree/main/Chapter%207.](https://github.com/PacktPublishing/Rapid-Product-Development-with-n8n/tree/main/Chapter%207)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在GitHub上找到本章的完整代码示例[https://github.com/PacktPublishing/Rapid-Product-Development-with-n8n/tree/main/Chapter%207](https://github.com/PacktPublishing/Rapid-Product-Development-with-n8n/tree/main/Chapter%207)
- en: Sharing data between workflows
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在工作流之间共享数据
- en: When you're building workflows with n8n, you may find yourself repeating certain
    patterns. Examples of such patterns could be pushing data to Airtable, transforming
    the data to fit a particular format, or performing checks regarding the validity
    of the incoming data. At other times, your workflows might grow in size with more
    than 20 or 30 nodes, and it might become difficult to manage so many different
    nodes and logic in a single workflow.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用n8n构建工作流时，您可能会发现自己重复某些模式。这些模式的例子可能包括将数据推送到Airtable，将数据转换成特定格式，或执行有关传入数据有效性的检查。在其他时候，随着工作流中节点数量超过20或30个，管理这么多不同的节点和逻辑可能会变得困难。
- en: If you come from a programming background, you can probably relate this to creating
    functions or modules so that you can create reusable chunks of code that are modular
    and easier to manage. n8n allows you to do this using the **Execute Workflow**
    node.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有编程背景，您可能可以将此与创建函数或模块联系起来，以便您可以创建可重用的代码块，这些代码块是模块化的且易于管理。n8n允许您使用**执行工作流**节点来完成此操作。
- en: 'Let''s consider a workflow: we need to get data using the **Hacker News** node,
    filter the data in the workflow to include only the title and the URL of the articles,
    and insert the data into an Airtable. Let''s break this workflow down into two
    parts for illustration purposes:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个工作流：我们需要使用**Hacker News**节点获取数据，在工作流中过滤数据以仅包括文章的标题和URL，并将数据插入到Airtable中。为了说明目的，让我们将这个工作流分解成两部分：
- en: Getting the data from Hacker News
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Hacker News获取数据
- en: Filtering the data and inserting it into Airtable
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过滤数据并将其插入到Airtable
- en: 'To do this follow these steps:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行此操作，请按照以下步骤进行：
- en: Open the n8n Editor UI and create a new **Workflow**. Add a **Hacker News**
    node and connect it to the **Start** node.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开n8n编辑器UI并创建一个新的**工作流**。添加一个**Hacker News**节点并将其连接到**开始**节点。
- en: Select the **All** resource for the **Hacker News** node. Now, add an **Execute
    Workflow** node and connect it to the **Hacker News** node. We'll refer to this
    workflow as **Workflow 1** from here on.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为**Hacker News**节点选择**所有**资源。现在，添加一个**执行工作流**节点并将其连接到**Hacker News**节点。从现在起，我们将把这个工作流称为**工作流1**。
- en: 'Save this **Workflow**. It should now look something like this:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存这个**工作流**。现在它应该看起来像这样：
- en: '![Figure 7.1 – A workflow that was created using the Execute Workflow node'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.1 – 使用执行工作流节点创建的工作流](img/Figure_7.01_B17493.jpg)'
- en: '](img/Figure_7.01_B17493.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.1 – 使用执行工作流节点创建的工作流](img/Figure_7.01_B17493.jpg)'
- en: Figure 7.1 – A workflow that was created using the Execute Workflow node
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.1 – 使用执行工作流节点创建的工作流
- en: In a new tab, create a new **Workflow**. In this new **Workflow**, add a **Set**
    node and an **Airtable** node.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新标签页中创建一个新的**工作流**。在这个新的**工作流**中，添加一个**设置**节点和一个**Airtable**节点。
- en: Connect the `title` and `url` properties of the article get set and inserted
    into the `{{$json["title"]}}`
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文章的`title`和`url`属性连接并插入到`{{{$json["title"]}}}`
- en: '`{{$json["url"]}}`'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`{{{$json["url"]}}}`'
- en: Now, configure the `http://localhost:5678/workflow/297`, so the ID would be
    **297**.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，配置`http://localhost:5678/workflow/297`，因此ID将是**297**。
- en: 'Here''s what my **Workflow** and its ID look like:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我的**工作流**及其ID的样子：
- en: '![Figure 7.2 – A workflow for filtering and inserting data into Airtable'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.2 – 过滤和将数据插入Airtable的工作流'
- en: '](img/Figure_7.02_B17493.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.02_B17493.jpg)'
- en: Figure 7.2 – A workflow for filtering and inserting data into Airtable
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.2 – 过滤和将数据插入Airtable的工作流
- en: Now, go back to the workflow with the **Execute Workflow** node and enter the
    ID of the new workflow. Execute the workflow.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，回到带有**执行工作流**节点的工作流，并输入新工作流的ID。执行工作流。
- en: You will notice that **Workflow 1** runs **Workflow 2**, gets the data that's
    returned by it, and displays it in the output of the **Execute Workflow** node.
    This is how you can share data between multiple workflows in n8n and break them
    into more manageable chunks.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到**工作流1**运行**工作流2**，获取它返回的数据，并在**执行工作流**节点中显示。这就是你如何在n8n中在多个工作流之间共享数据并将它们分解成更易于管理的块的方法。
- en: 'Let''s understand how the data passes between the two workflows that we created.
    The **Execute Workflow** node in **Workflow 1** passes the data to the **Start**
    node of **Workflow 2**. Because of this, all the nodes of **Workflow 2** must
    be connected to the **Start** node. The last node of **Workflow 2** sends the
    data back to the **Execute Workflow** node in **Workflow 1**, as shown here:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解我们创建的两个工作流之间数据是如何传递的。**工作流1**中的**执行工作流**节点将数据传递给**工作流2**的**开始**节点。正因为如此，**工作流2**中的所有节点都必须连接到**开始**节点。**工作流2**的最后一个节点将数据发送回**工作流1**中的**执行工作流**节点，如图所示：
- en: '![Figure 7.3 – Flow of data between the two workflows'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.3 – 两个工作流之间的数据流'
- en: '](img/Figure_7.03_B17493.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.03_B17493.jpg)'
- en: Figure 7.3 – Flow of data between the two workflows
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3 – 两个工作流之间的数据流
- en: 'Let''s take a look at the options provided by the **Execute Workflow** node.
    The **Source** field allows you to specify how the node should look for the workflow:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看**执行工作流**节点提供的选项。**源**字段允许你指定节点应该如何查找工作流：
- en: '**Database**: Loads the workflow from the database by its ID.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库**：通过其ID从数据库加载工作流。'
- en: '**Local File**: Loads the workflow from a locally saved file. This path must
    be relative to where n8n is running.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地文件**：从本地保存的文件加载工作流。此路径必须相对于n8n运行的位置。'
- en: '**Parameter**: Loads the workflow from a parameter. Here, you can provide the
    workflow JSON.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**参数**：从参数加载工作流。在这里，你可以提供工作流JSON。'
- en: '**URL**: Loads the workflow from a URL.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**URL**：从URL加载工作流。'
- en: Now, let's look at how we can merge datasets in an n8n workflow using the **Merge**
    node.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看我们如何使用**合并**节点在n8n工作流中合并数据集。
- en: Merging datasets
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 合并数据集
- en: 'In [*Chapter 6*](B17493_06_Final_PD_ePub.xhtml#_idTextAnchor116), *Powering
    Your API with a No Code Database*, we learned how to use Airtable as a no-code
    database for our application. Let''s build on that example to visualize what a
    database for a newsletter management app could look like. Typically, databases
    have different tables for different categories of data points, and we can reference
    data between different tables using unique IDs. Let''s understand this with the
    help of an example:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第6章*](B17493_06_Final_PD_ePub.xhtml#_idTextAnchor116)，*用无代码数据库为API供电*中，我们学习了如何将Airtable用作我们应用程序的无代码数据库。让我们在此基础上构建一个示例，以可视化新闻通讯管理应用程序的数据库可能看起来是什么样子。通常，数据库为不同类别的数据点有不同的表，我们可以使用唯一的ID在不同表之间引用数据。让我们通过以下示例来了解这一点：
- en: Open the Airtable base called **The n8n book** that you created in [*Chapter
    6*](B17493_06_Final_PD_ePub.xhtml#_idTextAnchor116), *Powering Your API with a
    No Code Database*. Rename **Table 1** to **Users**.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你创建的名为**n8n书籍**的Airtable基础数据库，如[*第6章*](B17493_06_Final_PD_ePub.xhtml#_idTextAnchor116)，*用无代码数据库为API供电*。将**表1**重命名为**用户**。
- en: 'Add two new tables to it called **Newsletters** and **Stats**. In the **Newsletters**
    table, add the following columns:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向其中添加两个新表，分别称为**新闻通讯**和**统计**。在**新闻通讯**表中，添加以下列：
- en: '**NewsletterID** (single-line text)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**NewsletterID**（单行文本）'
- en: '**Subject** (single-line text)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**主题**（单行文本）'
- en: '**Content** (long text)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**内容**（长文本）'
- en: '**Clicks** (single-line text)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**点击量**（单行文本）'
- en: 'Add an entry to the table called **NewsletterID1**. It should now look like
    this:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表中添加一个名为**NewsletterID1**的条目。现在它看起来应该是这样的：
- en: '![Figure 7.4 – Creating and filling the Newsletters table'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.4 – 创建和填充新闻通讯表'
- en: '](img/Figure_7.04_B17493.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.04_B17493.jpg)'
- en: Figure 7.4 – Creating and filling the Newsletters table
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4 – 创建和填充新闻通讯表
- en: 'In the **Stats** table, add the following columns:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**统计**表中，添加以下列：
- en: '**UserID** (single-line text)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**UserID**（单行文本）'
- en: '**Clicks** (single-line text)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**点击**（单行文本）'
- en: 'Add an entry to the table called **UserID1**. It should now look like this:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向名为**UserID1**的表中添加一个条目。现在它应该看起来像这样：
- en: '![Figure 7.5 – Creating and filling the Stats table'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.5 – 创建和填充统计表'
- en: '](img/Figure_7.05_B17493.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.05_B17493.jpg]'
- en: Figure 7.5 – Creating and filling the Stats table
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5 – 创建和填充统计表
- en: Now, we have three tables with unique IDs that can be used to cross-reference
    data between the different tables.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有三个具有唯一ID的表，可以用来在不同表之间交叉引用数据。
- en: 'Let''s say that we want to know how many clicks have been made by each user.
    We want to know this number so that we can send them an email, thanking them for
    their active engagement if it is greater than 9\. To build out a workflow for
    this, we''d need to have two crucial pieces of information: the user''s email
    address and their number of clicks. Both these details reside in different tables
    that are linked only by the unique **UserID**. Let''s use the **Merge** node to
    get all the information that we need.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想知道每个用户点击了多少次。我们想知道这个数字，以便在点击次数大于9时，我们可以发送电子邮件，感谢他们的积极参与。为了构建这个工作流程，我们需要两个关键信息：用户的电子邮件地址和他们的点击次数。这两个细节都位于不同的表中，仅通过唯一的**UserID**连接。让我们使用**Merge**节点来获取我们所需的所有信息。
- en: 'Open the Editor UI and add an `fields` object. Since we don''t need the timestamp
    and the **Airtable** node''s ID, we can get rid of them. You can use either the
    **Set** node or the **Function**/**Function Item** nodes to do that. I used the
    **Function** node with the following code:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开编辑器UI并添加一个`fields`对象。由于我们不需要时间戳和**Airtable**节点的ID，我们可以去掉它们。您可以使用**Set**节点或**Function**/**Function
    Item**节点来完成此操作。我使用了**Function**节点，以下代码如下：
- en: '[PRE0]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The preceding code ensures that only the `fields` array is returned by this
    node. The data should now look as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码确保只有`fields`数组由该节点返回。数据现在应该如下所示：
- en: '![Figure 7.6 – This is what the data from the Function node should look like'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.6 – 这是函数节点应该看起来的数据'
- en: '](img/Figure_7.06_B17493.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.06_B17493.jpg]'
- en: Figure 7.6 – This is what the data from the Function node should look like
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.6 – 这是函数节点应该看起来的数据
- en: Now, add a **Merge** node and connect **Input 1** to the **Function** node.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，添加一个**Merge**节点并将**输入1**连接到**Function**节点。
- en: 'Now, we need to get the data from the **Stats** table. Perform the same steps
    that we mentioned at the beginning of this section by adding an **Airtable** node
    (which we will call **Airtable1**), along with a **Function** (or **Set**) node
    (which we will call **Function1**), and connecting it to **Input 2** of the **Merge**
    node. The workflow should look like this:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要从**统计**表中获取数据。通过添加一个**Airtable**节点（我们将称之为**Airtable1**），以及一个**Function**（或**Set**）节点（我们将称之为**Function1**），并将其连接到**Merge**节点的**输入2**，执行本节开头提到的相同步骤。工作流程应该如下所示：
- en: '![Figure 7.7 – This is what the workflow should look like'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.7 – 这是工作流程应该看起来的样子'
- en: '](img/Figure_7.07_B17493.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.07_B17493.jpg]'
- en: Figure 7.7 – This is what the workflow should look like
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.7 – 这是工作流程应该看起来的样子
- en: Open the **Merge** node and set **Mode** to **Merge By Key**.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**Merge**节点并将**模式**设置为**按键合并**。
- en: Enter **UserID** in the **Property Input 1** and **Property Input 2** fields.
    We are doing this since **UserID** is the field linking the two datasets from
    the two different tables together.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**属性输入1**和**属性输入2**字段中输入**UserID**。我们这样做是因为**UserID**是连接两个不同表中的两个数据集的字段。
- en: 'Execute the workflow; the result of the **Merge** node should look something
    like this:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行工作流程；**Merge**节点的结果应该看起来像这样：
- en: '![Figure 7.8 – The Merge node merging the data from two different tables'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.8 – 合并节点合并来自两个不同表的数据'
- en: '](img/Figure_7.08_B17493.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.08_B17493.jpg]'
- en: Figure 7.8 – The Merge node merging the data from two different tables
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.8 – 合并节点合并来自两个不同表的数据
- en: Note
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The latest version of n8n also has an Item Lists node that can be used.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: n8n的最新版本也包含一个可以使用的项目列表节点。
- en: Now that we have the two pieces of data that we need, we can add an **IF** node
    and an email node (such as the **Send Email** or **Gmail** node) after the **Merge**
    node so that we can thank the engaged readers of the newsletter.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经得到了我们需要的两份数据，我们可以在**Merge**节点之后添加一个**IF**节点和电子邮件节点（例如**发送电子邮件**或**Gmail**节点），以便我们可以感谢新闻通讯的积极参与者。
- en: The **Merge** node has several different modes that can be used to merge the
    data in the format that works best for your use case. Now that we know how we
    can merge datasets inside a workflow using n8n, let's learn how to perform calculations
    and analytics in n8n using JavaScript.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**合并**节点有几种不同的模式，可以用来以最适合你用例的格式合并数据。现在我们已经知道如何使用n8n在流程中合并数据集，让我们学习如何在n8n中使用JavaScript进行计算和分析。'
- en: Performing calculations and analytics
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行计算和分析
- en: You can use JavaScript in n8n within expressions and use the **Function** nodes
    to perform mathematical calculations and basic analytics.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在n8n中使用JavaScript在表达式中，并使用**函数**节点执行数学计算和基本分析。
- en: 'Let''s use the newsletter database from the *Merging datasets* section to try
    out some calculations. We have added a few more records to the tables. You can
    clone the **Airtable** using the following link if you''d like to use our records:
    [https://airtable.com/invite/l?inviteId=invRJMGCMu7HWQzKW&inviteToken=3b6fbc536ccc17cf24fbeb01b5e8a253fe99afd27616f3abaeaffb046cedf8aa&utm_source=email](https://airtable.com/invite/l?inviteId=invRJMGCMu7HWQzKW&inviteToken=3b6fbc536ccc17cf24fbeb01b5e8a253fe99afd27616f3abaeaffb046cedf8aa&utm_source=email).'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用*合并数据集*部分中的新闻通讯数据库来尝试一些计算。我们已经向表中添加了一些更多记录。如果您想使用我们的记录，可以使用以下链接克隆**Airtable**：[https://airtable.com/invite/l?inviteId=invRJMGCMu7HWQzKW&inviteToken=3b6fbc536ccc17cf24fbeb01b5e8a253fe99afd27616f3abaeaffb046cedf8aa&utm_source=email](https://airtable.com/invite/l?inviteId=invRJMGCMu7HWQzKW&inviteToken=3b6fbc536ccc17cf24fbeb01b5e8a253fe99afd27616f3abaeaffb046cedf8aa&utm_source=email)。
- en: 'Let''s calculate a few things from our **Airtable** database:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从我们的**Airtable**数据库中计算一些东西：
- en: The number of users
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户数量
- en: The average number of clicks per newsletter
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个新闻通讯的平均点击次数
- en: The highest number of clicks by a user
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户点击次数的最高值
- en: 'To do this, follow these steps:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要这样做，请按照以下步骤操作：
- en: Open the **Editor UI** and open a new **Workflow**. Add an **Airtable** node
    and list all the records from the **Users** table.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**编辑器UI**并打开一个新的**工作流**。添加一个**Airtable**节点并列出**用户**表中的所有记录。
- en: 'Add a **Set** node and connect it to the **Airtable** node. Our **Workflow**
    should look like this:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个**集合**节点并将其连接到**Airtable**节点。我们的**工作流**应该如下所示：
- en: '![Figure 7.9 – A workflow for calculating the total number of users in the
    Users table'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.9 – 用户表中计算总用户数的工作流'
- en: '](img/Figure_7.09_B17493.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.09 – B17493.jpg](img/Figure_7.09_B17493.jpg)'
- en: Figure 7.9 – A workflow for calculating the total number of users in the Users
    table
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.9 – 用户表中计算总用户数的工作流
- en: Set **Keep Only Set** to *true*. This removes all incoming workflow data and
    only appends the new values that have been configured in the **Set** node.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**仅保留集合**设置为*true*。这将移除所有传入的工作流数据，并且只追加在**集合**节点中配置的新值。
- en: 'Add a value of the **Number** type and name it **Total Users**. Add an expression
    for the **Value** field:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个**数字**类型的值并命名为**总用户数**。为**值**字段添加一个表达式：
- en: '[PRE1]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will calculate the total number of items that are returned by the **Airtable**
    node, which is also the total number of users. Executing this node will cause
    this value to be returned three times (once for each item).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这将计算**Airtable**节点返回的项目总数，这也就是用户的总数。执行此节点将导致此值被返回三次（每次为一个项目）。
- en: 'In the node''s **Settings** area, set **Execute Once** to *true*. Your workflow
    should now calculate the total number of users in the **Users** table for you.
    The result from the **Set** node should look like this:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在节点的**设置**区域，将**执行一次**设置为*true*。现在，你的工作流应该会为你计算**用户**表中的总用户数。来自**集合**节点的结果应该如下所示：
- en: '![Figure 7.10 – Output of the Set node'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.10 – **集合**节点的输出
- en: '](img/Figure_7.10_B17493.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.10 – B17493.jpg](img/Figure_7.10_B17493.jpg)'
- en: Figure 7.10 – Output of the Set node
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.10 – **集合**节点的输出
- en: Let's calculate the **Average clicks** value per newsletter.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们计算每个新闻通讯的**平均点击次数**值。
- en: 'Create another **Workflow** and add an **Airtable** node that lists all the
    entries from the **Newsletters** table. Add a **Function** node and connect it
    to the **Airtable** node. The workflow should look like this:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建另一个**工作流**并添加一个列出**新闻通讯**表中所有条目的**Airtable**节点。添加一个**函数**节点并将其连接到**Airtable**节点。工作流应该如下所示：
- en: '![Figure 7.11 – A workflow for calculating the average clicks per newsletter'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.11 – 计算每个新闻通讯平均点击次数的工作流'
- en: '](img/Figure_7.11_B17493.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.11 – B17493.jpg](img/Figure_7.11_B17493.jpg)'
- en: Figure 7.11 – A workflow for calculating the average clicks per newsletter
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.11 – 计算每个新闻通讯平均点击次数的工作流
- en: 'In the **Function** node, add the following JavaScript code:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**函数**节点中，添加以下JavaScript代码：
- en: '[PRE2]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the preceding code, we iterated over all the records that were returned
    by the `total` variable. We used the `parseInt()` function because the value of
    `Clicks` is of the `String` data type and we need to convert it into the `integer`
    data type. Finally, we calculated the `average` value by dividing the `total`
    clicks by the number of newsletters, which we calculated with `items.length` (exactly
    like we did in the preceding workflow). This provides us with the average clicks
    per newsletter. The following screenshot illustrates this:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们遍历了由`total`变量返回的所有记录。我们使用`parseInt()`函数，因为`Clicks`的值是`String`数据类型，我们需要将其转换为`integer`数据类型。最后，我们通过将`total`点击次数除以新闻通讯的数量（我们使用`items.length`来计算，就像在先前的流程中做的那样）来计算`average`值。这为我们提供了每份新闻通讯的平均点击次数。以下截图说明了这一点：
- en: '![Figure 7.12 – Calculating the average clicks per newsletter'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.12 – 计算每份新闻通讯的平均点击次数'
- en: '](img/Figure_7.12_B17493.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.12_B17493.jpg](img/Figure_7.12_B17493.jpg)'
- en: Figure 7.12 – Calculating the average clicks per newsletter
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.12 – 计算每份新闻通讯的平均点击次数
- en: Finally, let's calculate the highest number of clicks by a user.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们计算每个用户的最高点击次数。
- en: Create another workflow and add an **Airtable** node that lists all the entries
    from the **Stats** table. Add a **Function** node and connect it to the **Airtable**
    node. The workflow should look like the one shown in *Figure 7.11*.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建另一个工作流程，并添加一个列出**Stats**表中所有条目的**Airtable**节点。添加一个**函数**节点并将其连接到**Airtable**节点。工作流程应类似于*图7.11*中所示。
- en: 'In the **Function** node, add the following JavaScript code:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**函数**节点中，添加以下JavaScript代码：
- en: '[PRE3]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the preceding code, we added all the number clicks to an array called `clicks`.
    Then, we used the `Math.max()` function to find the maximum value in that array.
    This provides us with the highest number of clicks per user. The following screenshot
    illustrates this:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们将所有点击次数添加到一个名为`clicks`的数组中。然后，我们使用`Math.max()`函数来找到该数组中的最大值。这为我们提供了每个用户的最高点击次数。以下截图说明了这一点：
- en: '![Figure 7.13 – Calculating the highest number of clicks per user'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.13 – 计算每个用户的最高点击次数'
- en: '](img/Figure_7.13_B17493.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.13_B17493.jpg](img/Figure_7.13_B17493.jpg)'
- en: Figure 7.13 – Calculating the highest number of clicks per user
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.13 – 计算每个用户的最高点击次数
- en: '`Math` is a useful built-in object that can be utilized for a lot of these
    calculations. You can find out more at [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math).'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`Math`是一个有用的内置对象，可以用于许多这些计算。你可以在[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math)了解更多信息。'
- en: These were some basic examples of how you can use JavaScript to perform calculations
    and create workflows for analytics to gain insights from the data that you accrue
    through your APIs and apps.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是一些基本的示例，说明了你可以如何使用JavaScript进行计算，创建用于分析的工作流程，从而从通过你的API和应用程序积累的数据中获得洞察。
- en: Summary
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about sharing data between multiple workflows in
    n8n, merging data coming from different sources within a workflow, and using JavaScript
    to perform calculations and analytics from within a workflow. The concepts we
    learned in this chapter will help you when you're sending data to other services
    or no-code tools using our custom API.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了在n8n中在多个工作流程之间共享数据，在工作流程内合并来自不同来源的数据，以及如何使用JavaScript在工作流程内执行计算和分析。本章学到的概念将帮助你在使用我们的自定义API将数据发送到其他服务或无代码工具时。
- en: In the next chapter, we are going to introduce the Bubble APIs and integrate
    them into n8n. We will learn how to work with Bubble data and workflows, along
    with how to configure n8n to receive events and data initiated by Bubble.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍Bubble API并将其集成到n8n中。我们将学习如何处理Bubble数据和流程，以及如何配置n8n以接收由Bubble发起的事件和数据。
