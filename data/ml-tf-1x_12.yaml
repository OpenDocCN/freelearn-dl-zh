- en: Advanced Installation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级安装
- en: Deep learning involves a huge amount of matrix multiplications, and **Graphic
    Processing Units** (**GPUs**) are a very important aspect when one begins to learn
    deep learning. Without a GPU, the experiment process may take a day or more. With
    a good GPU, we can quickly iterate over deep learning networks and large training
    datasets, and run multiple experiments in a short amount of time. With TensorFlow,
    we can work on a single GPU or even multiple GPUs with ease. However, most machine
    learning platform installations are very complicated once GPUs get involved.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习涉及大量的矩阵乘法，**图形处理单元**（**GPU**）是学习深度学习时非常重要的方面。没有GPU，实验过程可能需要一天或更长时间。有了良好的GPU，我们可以快速迭代深度学习网络和大型训练数据集，并在短时间内运行多个实验。使用TensorFlow时，我们可以轻松地在单个GPU或多个GPU上工作。然而，一旦涉及到GPU，大多数机器学习平台的安装过程都非常复杂。
- en: In this chapter, we are going to discuss GPUs and focus on a step-by-step CUDA
    setup and a GPU-based TensorFlow installation. We will start by installing Nvidia
    drivers, the CUDA Toolkit, and the cuDNN library. Then, we will install GPU-enabled
    TensorFlow with `pip`. Finally, we show how to use Anaconda to simplify the installation
    process even further.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将讨论GPU，并重点介绍逐步CUDA设置和基于GPU的TensorFlow安装。我们将从安装Nvidia驱动程序、CUDA工具包和cuDNN库开始。然后，我们将使用`pip`安装支持GPU的TensorFlow。最后，我们将展示如何使用Anaconda进一步简化安装过程。
- en: Installation
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: In this chapter, we will work on an Ubuntu 16.06 computer with a Nvidia Titan
    X GPU.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将以一台配备Nvidia Titan X GPU的Ubuntu 16.06计算机为例进行操作。
- en: We suggest that you use Ubuntu 14.04 or 16.06 to avoid further issues.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议您使用Ubuntu 14.04或16.06版本，以避免出现其他问题。
- en: 'The choice of GPU is beyond the scope of this chapter. However, you must choose
    a Nvidia device with a high memory capacity in order to take full advantage of
    the GPU when compared to a CPU. Currently, AMD GPUs are not officially supported
    by TensorFlow and most other deep learning frameworks. At the time of writing,
    Windows can use Tensorflow with GPU on Python 3.5 or Python 3.6\. However, Tensorflow
    dropped the support for GPU on macOS from Tensorflow 1.2\. If you are using Windows,
    we suggest that you follow the official tutorial for Windows at the following
    link: [https://www.tensorflow.org/install/install_windows](https://www.tensorflow.org/install/install_windows).'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: GPU的选择超出了本章的范围。然而，您必须选择一款具有高内存容量的Nvidia设备，以便与CPU相比充分发挥GPU的优势。目前，AMD的GPU尚未被TensorFlow和大多数其他深度学习框架官方支持。在撰写本文时，Windows可以在Python
    3.5或Python 3.6上使用TensorFlow的GPU版本。然而，从TensorFlow 1.2版本开始，TensorFlow不再支持macOS上的GPU。如果您使用的是Windows，我们建议您按照以下链接的官方教程进行操作：[https://www.tensorflow.org/install/install_windows](https://www.tensorflow.org/install/install_windows)。
- en: Installing Nvidia driver
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Nvidia驱动程序
- en: There are many ways to install Nvidia drivers in Ubuntu. In this section, we
    will show you the easiest approach by using Proprietary GPU Drivers PPA, which
    offers stable proprietary Nvidia graphics driver updates.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu中安装Nvidia驱动程序有多种方法。本节将展示使用专有GPU驱动程序PPA的最简单方法，PPA提供稳定的Nvidia图形驱动程序更新。
- en: 'First, open your terminal and run the following commands to add the `PPA` to
    Ubuntu:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，打开终端并运行以下命令，将`PPA`添加到Ubuntu中：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, we need to choose a version of Nvidia driver to install. Run the following
    command to see the latest version of your machine:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要选择一个Nvidia驱动程序版本进行安装。运行以下命令查看您机器上的最新版本：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The result of the preceding command may look like this:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的结果可能如下所示：
- en: '![](img/7c197318-f268-4537-b70a-36f099a7ba43.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7c197318-f268-4537-b70a-36f099a7ba43.png)'
- en: 'As you can see, the latest driver is 375.66 on my machine, which is on the
    line with the text NVIDIA binary driver. Now, we can install Nvidia driver version
    375.66 with the following command:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我机器上的最新驱动程序是375.66，它与文本中的NVIDIA二进制驱动程序行对齐。现在，我们可以使用以下命令安装Nvidia驱动程序版本375.66：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The result of the preceding command may look like this:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的结果可能如下所示：
- en: '![](img/bd81ea64-17be-4d50-8668-33f5e5ef3880.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bd81ea64-17be-4d50-8668-33f5e5ef3880.png)'
- en: 'When the installation is finished, you should see the following screen:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您应该会看到如下屏幕：
- en: '![](img/cc36071a-d96b-4516-9888-5006cf7227c4.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cc36071a-d96b-4516-9888-5006cf7227c4.png)'
- en: Now, we will install the CUDA toolkit from Nvidia.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将安装Nvidia的CUDA工具包。
- en: Installing the CUDA toolkit
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装CUDA工具包
- en: 'First, we will need to open the Nvidia website to download the CUDA toolkit.
    Navigate to [https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads).
    You will see the following screen:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要打开 Nvidia 网站以下载 CUDA 工具包。访问 [https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads)。你将看到如下屏幕：
- en: '![](img/8e04ef1b-0914-4002-9c93-28531297542c.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8e04ef1b-0914-4002-9c93-28531297542c.png)'
- en: 'Then, select Linux | x86_64 | Ubuntu | 16.04 | runfile(local), as shown in
    the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，选择 Linux | x86_64 | Ubuntu | 16.04 | runfile(local)，如下面的截图所示：
- en: '![](img/15b9367e-9e39-4d9f-933a-a683f1bc8847.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/15b9367e-9e39-4d9f-933a-a683f1bc8847.png)'
- en: 'Next, click on the Download (1.4 GB) button to download the installer. The
    installer size is 1.4 GB and it will take a while to finish downloading. After
    that, open your terminal, change the directory to the folder that contains the
    installer, and run the following command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，点击“下载 (1.4 GB)”按钮以下载安装程序。安装程序大小为 1.4 GB，下载可能需要一些时间。下载完成后，打开终端，切换到包含安装程序的文件夹，并运行以下命令：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the command-line prompts, you will see the End User License Agreement:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令行提示符中，你将看到最终用户许可协议：
- en: '![](img/872a1f18-381e-4d0c-80cf-703623ea1dec.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/872a1f18-381e-4d0c-80cf-703623ea1dec.png)'
- en: 'You can use your arrow keys to navigate through the agreement. Otherwise, you
    can press `:q` and see the following screen:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用方向键在协议中导航。否则，你可以按 `:q` 并看到以下屏幕：
- en: '![](img/efc0ed88-6b4d-4bc2-b982-f72ccf874029.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/efc0ed88-6b4d-4bc2-b982-f72ccf874029.png)'
- en: 'Now, you can type `accept` to accept the agreement. After that, you will need
    to answer some questions, as shown on the following screen:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以输入 `accept` 来接受协议。之后，你需要回答一些问题，如下图所示：
- en: '![](img/7b8c4d9d-c4b2-4bb2-a91c-c079f616c9af.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7b8c4d9d-c4b2-4bb2-a91c-c079f616c9af.png)'
- en: 'You may notice that we will not install Nvidia drivers in this prompt since
    we already installed the latest driver in the previous section. When the installation
    completes, you will see a screen like this:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能注意到，在此提示中我们不会安装 Nvidia 驱动程序，因为我们已经在上一节中安装了最新的驱动程序。当安装完成时，你将看到如下屏幕：
- en: '![](img/b1c2b4cf-a905-4f62-b289-a2912cc977b9.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b1c2b4cf-a905-4f62-b289-a2912cc977b9.png)'
- en: 'Now, open your `~/.bashrc` file and add the following line at the end of the
    file:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开你的 `~/.bashrc` 文件，并在文件末尾添加以下行：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We have successfully installed the CUDA toolkit into the machine. You can try
    the following command to see your graphic card information:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功将 CUDA 工具包安装到机器上。你可以尝试以下命令查看你的显卡信息：
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The result on our machine looks like this:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们机器上的结果如下所示：
- en: '![](img/90d6ad8c-34e9-41c3-b376-4a7097a8fefd.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90d6ad8c-34e9-41c3-b376-4a7097a8fefd.png)'
- en: Installing cuDNN
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 cuDNN
- en: In order to use TensorFlow with GPU support, you need to install another library
    from Nvidia named cuDNN. First, you need to navigate the Nvidia website and download
    the cuDNN library from [https://developer.nvidia.com/cudnn](https://developer.nvidia.com/cudnn).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用支持 GPU 的 TensorFlow，你需要安装一个名为 cuDNN 的 Nvidia 库。首先，你需要访问 Nvidia 网站，并从 [https://developer.nvidia.com/cudnn](https://developer.nvidia.com/cudnn)
    下载 cuDNN 库。
- en: 'You may need to register a new Nvidia account. After you have logged in to
    the Nvidia website and opened the cuDNN link, you will see the following screen:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要注册一个新的 Nvidia 账户。在你登录 Nvidia 网站并打开 cuDNN 链接后，你将看到如下屏幕：
- en: '![](img/6d09350a-6255-47f9-9034-bbd574370c69.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d09350a-6255-47f9-9034-bbd574370c69.png)'
- en: 'As you can see, cuDNN has several versions, and we will use the cuDNN v5.1
    for CUDA 8.0, which is the cuDNN version required by TensorFlow. Now, you can
    download the library by clicking the cuDNN v5.1 Library for Linux link:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，cuDNN 有多个版本，我们将使用适用于 CUDA 8.0 的 cuDNN v5.1，这是 TensorFlow 所需的 cuDNN 版本。现在，你可以点击
    cuDNN v5.1 Library for Linux 链接来下载该库：
- en: '![](img/5102b30e-92af-46be-b758-8622bc461b27.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5102b30e-92af-46be-b758-8622bc461b27.png)'
- en: 'You can continue with your terminal and use the following commands to install
    cuDNN on your machine:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以继续使用终端，并使用以下命令在你的机器上安装 cuDNN：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](img/b48bf58c-331f-44b9-b3a3-b57d3dda36bb.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b48bf58c-331f-44b9-b3a3-b57d3dda36bb.png)'
- en: Installing TensorFlow
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 TensorFlow
- en: 'With everything set up, we can easily install TensorFlow with GPU support with
    the `pip` tool, as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 设置完成后，我们可以通过 `pip` 工具轻松安装支持 GPU 的 TensorFlow，具体命令如下：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The result of the command should look like this:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 命令的结果应该如下所示：
- en: '![](img/6200f88d-3648-4916-9df9-410290042383.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6200f88d-3648-4916-9df9-410290042383.png)'
- en: Verifying TensorFlow with GPU support
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证支持 GPU 的 TensorFlow
- en: 'Now, you can type `python` on your command line and type the following Python
    command to see if TensorFlow can see your GPU:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以在命令行中输入 `python`，并输入以下 Python 命令来查看 TensorFlow 是否能识别您的 GPU：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The result should look like the following image:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应该如下图所示：
- en: '![](img/2792737f-39c4-4046-b215-71fa26cda670.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2792737f-39c4-4046-b215-71fa26cda670.png)'
- en: Congratulations! TensorFlow can work with your GPU now. Our GPU is recognized
    as GeForce GTX TITAN X with 11.92 GB of memory. In the next section, we will show
    you the recommended approach to working with multiple versions of TensorFlow and
    libraries such as OpenCV.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！TensorFlow 现在可以与您的 GPU 配合使用了。我们的 GPU 被识别为 GeForce GTX TITAN X，具有 11.92 GB
    内存。在接下来的部分，我们将展示推荐的多版本 TensorFlow 和库（如 OpenCV）共存的方法。
- en: Using TensorFlow with Anaconda
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Anaconda 配合 TensorFlow
- en: During your work, you will encounter situations where you need multiple versions
    of TensorFlow on the same machine, such as TensorFlow 1.0 or TensorFlow 1.2\.
    We may need to use TensorFlow with Python 2.7 or 3.0\. With the previous installation,
    we have already successfully installed TensorFlow in the system Python. Now, we
    will show you how to use Anaconda to have multiple working environments on the
    same machine. With Anaconda, we can even use different versions of other popular
    libraries, such as `OpenCV`, `NumPy`, and `scikit-learn`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在工作中，您可能会遇到需要在同一台机器上使用多个版本的 TensorFlow 的情况，例如 TensorFlow 1.0 或 TensorFlow 1.2。我们可能需要在
    Python 2.7 或 3.0 上使用 TensorFlow。通过之前的安装，我们已经成功将 TensorFlow 安装在系统的 Python 中。现在，我们将展示如何使用
    Anaconda 在同一台机器上创建多个工作环境。使用 Anaconda，我们甚至可以使用不同版本的其他流行库，如 `OpenCV`、`NumPy` 和 `scikit-learn`。
- en: 'First, we need to download and install miniconda from [https://conda.io/miniconda.html](https://conda.io/miniconda.html).
    In our case, we select Python 2.7 64-bit bash installer, as we want to use Python
    2.7 as the default Python. Nevertheless, we can create environments with either
    Python 2.7 or Python 3 later. We need to run the following command to run the
    installer:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要从 [https://conda.io/miniconda.html](https://conda.io/miniconda.html)
    下载并安装 miniconda。在我们的例子中，我们选择 Python 2.7 64 位 bash 安装包，因为我们希望将 Python 2.7 作为默认
    Python。然而，我们稍后可以创建使用 Python 2.7 或 Python 3 的环境。我们需要运行以下命令来启动安装程序：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We need to accept the End User License Agreement:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要接受最终用户许可协议：
- en: '![](img/e89fa46b-42bf-4c8b-9544-40630acc9302.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e89fa46b-42bf-4c8b-9544-40630acc9302.png)'
- en: 'After that, we can continue the installation. The result should look like this:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们可以继续安装。结果应该如下所示：
- en: '![](img/a6a45924-30c4-4fbf-b20e-8003eddd2341.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a6a45924-30c4-4fbf-b20e-8003eddd2341.png)'
- en: 'Finally, we need to source the `.bashrc` file to get Anaconda up and running:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要加载 `.bashrc` 文件以启动 Anaconda：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In the source code of this chapter, we have already provided some environment
    configurations that you can use to create your desired environment.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的源代码中，我们已经提供了一些环境配置，您可以使用这些配置来创建所需的环境。
- en: 'Here is an environment that uses Python 2.7, OpenCV 3, and TensorFlow 1.2.1
    with GPU support. The configuration is named `env2.yml`:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个使用 Python 2.7、OpenCV 3 和 TensorFlow 1.2.1（支持 GPU）的环境。配置文件名为 `env2.yml`：
- en: '![](img/95bb8acd-3cd0-477e-b054-e5d846d3b5c6.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/95bb8acd-3cd0-477e-b054-e5d846d3b5c6.png)'
- en: You can easily change `python=2.7` to `python=3` and `opencv3` to `opencv` to
    have Python 3 and OpenCV 2.4 respectively.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以轻松地将 `python=2.7` 更改为 `python=3`，将 `opencv3` 更改为 `opencv`，以分别使用 Python 3
    和 OpenCV 2.4。
- en: 'Now, let''s run the following command to create the environment:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们运行以下命令来创建环境：
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The result should look like following:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应该如下所示：
- en: '![](img/1331d6e0-36b3-49d9-b7ca-4d2eedb99c03.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1331d6e0-36b3-49d9-b7ca-4d2eedb99c03.png)'
- en: Next, you can type `source activate env2` to activate the environment.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您可以输入 `source activate env2` 来激活环境。
- en: 'Finally, we will need to verify TensorFlow, as before:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要像之前一样验证 TensorFlow：
- en: '![](img/2155a240-7872-4dde-b0a8-e4cfcb38a84a.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2155a240-7872-4dde-b0a8-e4cfcb38a84a.png)'
- en: You may notice the (env2) in the top-left of the preceding image. That shows
    the name of the current environment. The Python version on the second line is
    2.7.13 and is packaged by conda-forge.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会注意到前面图片左上角的 (env2)。它显示了当前环境的名称。第二行的 Python 版本是 2.7.13，并且是由 conda-forge 打包的。
- en: 'Now, you can create several different environments to use in your workflow.
    Here is an example of an environment named env3 with Python 3 and OpenCV 2.4:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以创建多个不同的环境以供工作流使用。以下是一个名为 env3 的环境示例，包含 Python 3 和 OpenCV 2.4：
- en: '![](img/a8b0a9d6-22eb-471e-a9fe-f616c8381ebf.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8b0a9d6-22eb-471e-a9fe-f616c8381ebf.png)'
- en: Summary
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed the advantages of using GPUs in a machine learning
    workflow, especially in deep learning. Then, we showed the step-by-step installation
    of a Nvidia driver, the CUDA Toolkit, cuDNN, and TensorFlow with GPU support.
    We also introduced our recommended workflow for using multiple versions of TensorFlow
    and other libraries.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了在机器学习工作流中使用GPU的优势，特别是在深度学习中。接着，我们展示了Nvidia驱动程序、CUDA工具包、cuDNN和支持GPU的TensorFlow的逐步安装过程。我们还介绍了我们推荐的工作流，以便使用多个版本的TensorFlow和其他库。
