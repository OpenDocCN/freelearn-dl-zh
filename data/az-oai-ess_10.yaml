- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Creating a Multimodal Multi-Agent Framework with the Azure OpenAI Assistants
    API
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Azure OpenAI Assistants API创建多模态多代理框架
- en: In this chapter, we will explore how to build a system using the Azure OpenAI
    Assistants API that allows multiple intelligent agents to work together. These
    agents use advanced language models to understand and generate natural language,
    making them capable of performing tasks independently and making decisions on
    their own.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探索如何使用Azure OpenAI Assistants API构建一个系统，允许多个智能代理协同工作。这些代理使用先进的语言模型来理解和生成自然语言，使它们能够独立执行任务并自主做出决策。
- en: For example, imagine a team of AI agents collaborating to create and enhance
    images based on user input. One agent could generate an initial image, another
    agent could refine the details, and a third agent could adjust the colors and
    textures. This collaborative process results in high-quality and intricate outputs
    that a single agent might struggle to achieve alone. This example serves as a
    comprehensive guide for developers looking to harness the capabilities of multiple
    AI agents working in concert. It shows how agents can communicate and collaborate
    to process complex tasks, particularly focusing on generative AI applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象一个由AI代理协作的团队，根据用户输入生成和增强图像。一个代理可以生成初始图像，另一个代理可以精细化细节，第三个代理可以调整颜色和纹理。这种协作过程产生了高质量且复杂的输出，而单个代理可能很难独立完成。这个例子为开发者提供了一个全面的指南，帮助他们利用多个AI代理协同工作的能力。它展示了代理如何沟通和合作来处理复杂的任务，特别是聚焦于生成式AI应用。
- en: Microsoft recently introduced **Azure AI Agent Service**, a fully managed platform
    designed to help developers efficiently build, deploy, and scale high-quality
    AI agents. This service eliminates the complexity of managing compute and storage
    resources, allowing developers to focus on creating intelligent and extensible
    AI solutions. Traditionally, implementing client-side function-calling required
    writing hundreds of lines of code. With **Azure AI Agent Service**, this process
    is now streamlined to just a few lines, significantly reducing development time
    and effort. Since Azure AI Agent Service follows the same wire protocol as **Azure
    OpenAI Assistants**, developers can seamlessly create and run agents using either
    **OpenAI SDKs** or **Azure AI** **Foundry SDKs**.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 微软最近推出了**Azure AI Agent Service**，这是一个完全托管的平台，旨在帮助开发者高效地构建、部署和扩展高质量的AI代理。该服务消除了管理计算和存储资源的复杂性，使开发者可以专注于创建智能和可扩展的AI解决方案。传统上，客户端函数调用的实现需要编写数百行代码，而通过**Azure
    AI Agent Service**，这一过程现在简化为仅几行代码，大大减少了开发时间和工作量。由于Azure AI Agent Service遵循与**Azure
    OpenAI Assistants**相同的通信协议，开发者可以无缝地使用**OpenAI SDK**或**Azure AI Foundry SDK**创建并运行代理。
- en: While the service is optimized for **single-agent** implementations, orchestrating
    multiple agents as a **multi-agent system** requires additional tooling. For research
    and proof-of-concept projects, **AutoGen** is a good choice. However, for production-grade
    multi-agent systems, **Semantic Kernel** offers a better and more scalable multi-agent
    framework.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然该服务已针对**单一代理**实现进行了优化，但将多个代理协调为**多代理系统**需要额外的工具。对于研究和概念验证项目，**AutoGen**是一个不错的选择。然而，对于生产级多代理系统，**Semantic
    Kernel**提供了一个更好且更具可扩展性的多代理框架。
- en: 'This chapter is especially relevant for developers and tech enthusiasts interested
    in exploring the frontiers of generative AI and multi-agent systems using the
    Azure OpenAI Assistants API. Specifically, we will cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章特别适合那些对探索生成式AI和多代理系统前沿的开发者和技术爱好者，使用Azure OpenAI Assistants API。本章将涵盖以下主题：
- en: The problem statement
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题陈述
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术要求
- en: Architecture diagram
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构图
- en: Creating a multimodal multi-agent framework
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建多模态多代理框架
- en: Problem statement
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题陈述
- en: As AI technology advances, we need smarter systems to handle complicated tasks
    in areas such as robotics, gaming, and self-driving cars. Single-agent systems
    often struggle with these complex problems because they can’t manage everything
    on their own. To solve this, we aim to create a system where multiple intelligent
    agents work together. Using the Azure OpenAI Assistants API, we’ll build a framework
    that combines the language skills of advanced AI models with the decision-making
    abilities of smart agents.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 随着人工智能技术的进步，我们需要更智能的系统来处理机器人、游戏和自动驾驶汽车等领域中的复杂任务。单一智能体系统通常难以解决这些复杂问题，因为它们无法独立完成所有任务。为了解决这个问题，我们旨在创建一个多个智能体协同工作的系统。通过使用
    Azure OpenAI 助手 API，我们将构建一个框架，结合先进 AI 模型的语言技能和智能体的决策能力。
- en: For example, in robotics, a team of robots could work together to clean up a
    large park. One robot might pick up trash, another might mow the grass, and a
    third might water the plants. These robots need to communicate and coordinate
    their tasks to ensure the park is cleaned efficiently and thoroughly.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在机器人技术中，一组机器人可以合作清理一个大型公园。一个机器人负责捡拾垃圾，另一个负责修剪草坪，第三个负责浇灌植物。这些机器人需要进行沟通和协调任务，以确保公园得到高效和彻底的清理。
- en: Another example is in gaming, where multiple AI characters can collaborate to
    create more dynamic and challenging gameplay. One character could be a strategist,
    planning the next moves, while another could be a scout, gathering information
    about the environment. Similarly, in self-driving cars, multiple autonomous vehicles
    need to communicate to avoid collisions and optimize traffic flow. By working
    together, they can make better decisions than a single car acting on its own.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是在游戏中，多个 AI 角色可以合作创造更具动态性和挑战性的游戏体验。一个角色可以是战略家，负责规划下一步动作，而另一个角色则可以是侦察员，收集环境信息。类似地，在自动驾驶汽车中，多个自动驾驶车辆需要互相通信，避免碰撞并优化交通流量。通过合作，它们可以做出比单个车辆更好的决策。
- en: In this chapter, we will guide you through the process of building a multi-agent
    framework using the Azure OpenAI Assistants API. We will start with an overview
    of the key concepts and technologies involved, including intelligent agents and
    LLMs. Next, we will walk you through practical examples and case studies to demonstrate
    how to implement and integrate these agents. You will learn how to set up communication
    between agents, enable them to collaborate on tasks, and leverage the capabilities
    of LLMs for enhanced decision-making and problem-solving.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将引导你通过使用 Azure OpenAI 助手 API 构建一个多智能体框架的过程。我们将从概述涉及的关键概念和技术开始，包括智能体和大型语言模型（LLM）。接下来，我们将通过实际案例和示例，演示如何实现和集成这些智能体。你将学习如何在智能体之间设置通信，使它们能够协作完成任务，并利用
    LLM 的能力提升决策和问题解决的效果。
- en: By the end of this chapter, you will understand how to create and use a multi-agent
    system that combines the strengths of language models and autonomous agents. This
    system will be capable of handling a wide range of tasks, showcasing its potential
    applications in various fields such as robotics, gaming, and autonomous systems.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章结束时，你将理解如何创建并使用一个结合了语言模型和自主智能体优势的多智能体系统。这个系统将能够处理广泛的任务，并展示其在机器人、游戏和自动系统等多个领域的潜在应用。
- en: Technical requirements
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow along with the practical exercises in this chapter, access the source
    code available in this chapter’s GitHub repository at [https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter10.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter10.ipynb).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章的实践练习，请访问本章 GitHub 仓库中的源代码：[https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter10.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter10.ipynb)。
- en: 'You will need the following tools on your local machine to start working on
    the solution:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要在本地机器上安装以下工具才能开始解决方案的工作：
- en: 'Python 3.9, 3.10, or 3.11: [https://www.python.org/downloads/](https://www.python.org/downloads/)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3.9、3.10 或 3.11：[https://www.python.org/downloads/](https://www.python.org/downloads/)
- en: 'An Azure account: If you’re new to Azure, get an Azure account for free and
    you’ll get some free Azure credits to get started'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Azure 账户：如果你是 Azure 新手，可以免费获取一个 Azure 账户，并获得一些免费的 Azure 积分来开始使用。
- en: An Azure subscription with access enabled for the Azure OpenAI service
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个启用了 Azure OpenAI 服务访问权限的 Azure 订阅
- en: '**Azure OpenAI** (**AOAI**) connection and model information: Create an Azure
    OpenAI using Sweden Central as the region'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure OpenAI** (**AOAI**) 连接和模型信息：使用瑞典中央区域创建一个 Azure OpenAI'
- en: Assistants models with GPT-4o
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 GPT-4o 的助手模型
- en: DALL-E 3 model with version 3.0
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DALL-E 3 模型，版本 3.0
- en: In addition to the system requirements just mentioned, it is crucial to have
    a solid foundation in fundamental Azure services and a basic proficiency in the
    Python programming language, equivalent to a beginner level (Python 100). These
    skills are vital for efficiently harnessing and leveraging Azure services in the
    context of this chapter.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 除了刚才提到的系统要求外，拥有坚实的基础 Azure 服务知识以及一定的 Python 编程语言基础（相当于初学者级别，Python 100）也是至关重要的。这些技能对于在本章节中高效地利用
    Azure 服务至关重要。
- en: Rest assured that even if you are new to the Azure environment, we have designed
    this chapter to be beginner-friendly. It offers clear explanations and includes
    detailed screenshots to facilitate your learning and get you started on the right
    track.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 请放心，即使您是 Azure 环境的新手，我们也已经设计了这一章节，使其适合初学者。它提供了清晰的解释，并包括详细的截图，帮助您学习并顺利入门。
- en: Architecture design
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构设计
- en: We will be using a multi-agent system where the User Proxy Assistant acts as
    the main orchestrator, facilitating communication between the user and specialized
    agents. The DALL-E Assistant is responsible for generating images based on user
    queries, while the Vision Assistant analyzes these images using the GPT-4o model.
    The system maintains ongoing communication through persistent threads and utilizes
    function calls to perform specific tasks, such as image generation and analysis.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个多代理系统，其中用户代理助手作为主要协调者，促进用户与专业代理之间的通信。DALL-E 助手负责根据用户查询生成图像，而视觉助手则使用 GPT-4o
    模型分析这些图像。该系统通过持久的线程保持持续通信，并利用函数调用来执行特定任务，如图像生成和分析。
- en: In a typical workflow, the user sends a query to the User Proxy Assistant, which
    forwards it to the DALL-E Assistant to create an image. This image is then analyzed
    by the Vision Assistant, which provides feedback that can be used to refine the
    image further. This coordinated effort between specialized agents ensures efficient
    handling of complex tasks.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的工作流中，用户将查询发送到用户代理助手，后者将其转发给 DALL-E 助手以创建图像。然后，视觉助手分析该图像，提供可以用于进一步改进图像的反馈。这种专业代理之间的协调合作确保了对复杂任务的高效处理。
- en: Important note
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: This is just one way to implement multi-agent systems. You could also use other
    frameworks such as AutoGen, Semantic Kernel, CrewAI, and LangGraph.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是实现多代理系统的一种方式。您还可以使用其他框架，如 AutoGen、Semantic Kernel、CrewAI 和 LangGraph。
- en: '![Figure 10.1: Architecture diagram](img/B21019_10_01.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.1: 架构图](img/B21019_10_01.jpg)'
- en: 'Figure 10.1: Architecture diagram'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1：架构图
- en: '*Figure 10**.1* illustrates an example of the overall architectural framework.
    In this scenario, the User Proxy Assistant acts as the central coordinator, facilitating
    communication between the DALL-E Assistant and the Vision Assistant.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10.1* 展示了整体架构框架的示例。在这个场景中，用户代理助手作为中央协调者，促进了 DALL-E 助手和视觉助手之间的通信。'
- en: Creating a multimodal multi-agent framework
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个多模态多代理框架
- en: In this section, we’ll walk through a practical example of building a multi-agent
    framework using the AOAI Assistants API. We’ll focus on how these agents can interact
    and collaborate to handle complex tasks, such as generating and refining images
    through iterative improvements based on user input.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过一个实际示例，演示如何使用 AOAI 助手 API 构建一个多代理框架。我们将重点介绍这些代理如何互相作用和协作，以处理复杂任务，如通过基于用户输入的迭代改进生成和完善图像。
- en: 'Each assistant is structured as illustrated in *Figure 10**.2*, showcasing
    their respective roles and interactions within the system:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 每个助手的结构如*图 10.2*所示，展示了它们在系统中的角色和交互：
- en: '**User Proxy Assistant**: This assistant is initialized as the primary orchestrator,
    enabling seamless communication between the user and specialized agents in the
    group chat. It ensures messages are properly routed and maintains an ongoing conversation
    to guarantee that user tasks are successfully executed.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户代理助手**：该助手被初始化为主要的协调者，能够在用户与群聊中的专业代理之间实现无缝沟通。它确保信息正确转发，并保持持续的对话，以确保用户任务能够成功执行。'
- en: '**DALL·E Assistant**: This assistant is set up to handle image generation tasks.
    It connects with the DALL·E model to create visual content based on user prompts.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DALL·E 助手**：此助手配置用于处理图像生成任务。它与 DALL·E 模型连接，根据用户的提示生成视觉内容。'
- en: '**Vision Assistant**: This assistant is configured to perform image analysis.
    It utilizes the GPT-4 Vision model to process and interpret visual inputs, extracting
    meaningful insights for the user.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视觉助手**：此助手配置用于执行图像分析。它利用 GPT-4 Vision 模型处理和解释视觉输入，为用户提取有意义的洞察。'
- en: Together, these assistants form a cohesive system where the User Proxy Assistant
    coordinates interactions, the DALL·E Assistant generates images, and the Vision
    Assistant analyzes them, ensuring an efficient and responsive AI-driven workflow.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这些助手共同形成一个紧密协作的系统，其中用户代理助手协调互动，DALL·E 助手生成图像，视觉助手分析图像，确保高效且响应迅速的 AI 驱动工作流程。
- en: '![Figure 10.2: Assistant details](img/B21019_10_02.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.2：助手详情](img/B21019_10_02.jpg)'
- en: 'Figure 10.2: Assistant details'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.2：助手详情
- en: Before you begin, ensure that the Azure OpenAI service is set up and that both
    the DALL·E 3 and GPT-4o models are deployed, as illustrated in *Figure 10**.3*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，请确保 Azure OpenAI 服务已设置，并且 DALL·E 3 和 GPT-4o 模型已部署，如*图 10.3*所示。
- en: '![Figure 10.3: Model deployment](img/B21019_10_03.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.3：模型部署](img/B21019_10_03.jpg)'
- en: 'Figure 10.3: Model deployment'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.3：模型部署
- en: Important note
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Details for setting up the Azure account with an active subscription and the
    Azure OpenAI Service resource are provided in [*Chapter 2*](B21019_02.xhtml#_idTextAnchor023)*.*
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 设置具有有效订阅和 Azure OpenAI 服务资源的 Azure 账户的详细信息，请参见[*第 2 章*](B21019_02.xhtml#_idTextAnchor023)。
- en: 'Now, set up all three Assistants using the following configuration:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用以下配置设置所有三个助手：
- en: 'First, set up the `user_proxy` agent using the following code:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，使用以下代码设置`user_proxy`代理：
- en: '[PRE0]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, set up the `dalle_assistant` agent using the following code:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，使用以下代码设置`dalle_assistant`代理：
- en: '[PRE1]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Finally, set up the `vision_assistant` agent using the following code:'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，使用以下代码设置`vision_assistant`代理：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The User Proxy Assistant thread functions as the primary communication channel,
    facilitating message exchanges between agents to fulfill the user’s request, as
    illustrated in *Figure 10**.4*:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 用户代理助手线程作为主要的通信渠道，促进代理之间的消息交换，以满足用户的请求，如*图 10.4*所示：
- en: '![Figure 10.4: User Proxy Agent thread](img/B21019_10_04.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.4：用户代理助手线程](img/B21019_10_04.jpg)'
- en: 'Figure 10.4: User Proxy Agent thread'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4：用户代理助手线程
- en: 'Initialize the User Proxy Assistant thread using the following code:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下代码初始化用户代理助手线程：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The only input necessary is the user’s query, which drives the overall task
    execution across the assistants. This query is transmitted to the User Proxy Assistant
    thread via the `dispatch_message` function shown here:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一需要的输入是用户的查询，它驱动所有助手间的任务执行。此查询通过`dispatch_message`函数传递到用户代理助手线程，如此处所示：
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The User Proxy Assistant is designed to route messages to the appropriate agents
    to ensure task completion. The `send_message` function facilitates this process
    by leveraging the `agents_threads` structure, which maintains a record of agents
    and their respective threads throughout the entire conversation, ensuring seamless
    communication and task execution:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 用户代理助手旨在将消息路由到适当的代理，以确保任务的完成。`send_message`函数通过利用`agents_threads`结构来促进此过程，该结构保持代理及其相关线程的记录，确保整个对话中顺畅的通信和任务执行：
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If a thread does not already exist between the User Proxy Assistant and the
    other agents, a new one is created to initiate the conversation, ensuring smooth
    communication and task execution:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户代理助手与其他代理之间的线程尚未存在，则会创建一个新线程来启动对话，确保顺畅的通信和任务执行：
- en: '[PRE6]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For instance, when the User Proxy Assistant needs to interact with the DALL·E
    Assistant, it establishes a new thread between the two agents to facilitate communication,
    as illustrated here:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当用户代理助手需要与 DALL·E 助手交互时，它会在两个代理之间建立一个新线程，以促进通信，如此处所示：
- en: '![Figure 10.5: User Proxy and DALL-E Assistant communication](img/B21019_10_05.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.5：用户代理和 DALL·E 助手的通信](img/B21019_10_05.jpg)'
- en: 'Figure 10.5: User Proxy and DALL-E Assistant communication'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5：用户代理和 DALL·E 助手的通信
- en: 'The `send_message` function invokes another function responsible for creating
    and dispatching a message to the appropriate agent, ensuring the task is executed
    efficiently:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`send_message` 函数调用另一个负责创建并派发消息到相应助手的函数，确保任务高效执行：'
- en: '[PRE7]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The `dispatch_message` function identifies and retrieves all available functions
    for the specified assistant. It utilizes the `agent.tool` function to register
    these capabilities and adds them to the assistant’s available function dictionary
    for execution:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`dispatch_message` 函数识别并获取指定助手的所有可用功能。它使用 `agent.tool` 函数注册这些功能，并将它们添加到助手的可用功能字典中以供执行：'
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The `dispatch_message` function then directs a message to the appropriate assistant
    to carry out the task by generating a new message within the thread and invoking
    the assistant’s `create` function. This same process is applied when handling
    the user’s query within the User Proxy Assistant thread:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`dispatch_message` 函数随后将消息定向到相应助手，通过在线程中生成新消息并调用助手的 `create` 函数来执行任务。当处理用户在用户代理助手线程中的查询时，也应用相同的过程：'
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The assistant thread’s `run` function assesses whether a specific tool or function
    is needed for the given task. If a requirement is identified, it assigns the relevant
    function to the assistant for execution. Once invoked, the function processes
    the task and returns the output, which is then stored in the `tool_response` object:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 助手线程的 `run` 函数评估是否需要特定工具或功能来执行任务。如果识别到需求，它会将相关功能分配给助手执行。一旦调用，该功能处理任务并返回输出，然后存储在
    `tool_response` 对象中：
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The output is sent back to the User Proxy Assistant as a message via the `submit_tool_outputs`
    function, ensuring seamless communication and task completion.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 输出通过 `submit_tool_outputs` 函数作为消息返回给用户代理助手，确保了无缝的通信和任务完成。
- en: For instance, as illustrated in *Figure 10**.6*, the DALL·E Assistant returns
    the generated image to the User Proxy Assistant thread, ensuring the output is
    relayed back for further processing or user interaction.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如*图 10.6*所示，DALL·E 助手将生成的图像返回给用户代理助手线程，确保输出被传回以便进一步处理或用户交互。
- en: '![Figure 10.6: The message and output between assistants](img/B21019_10_06.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.6: 助手之间的消息和输出](img/B21019_10_06.jpg)'
- en: 'Figure 10.6: The message and output between assistants'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '图 10.6: 助手之间的消息和输出'
- en: 'The User Proxy Assistant then initiates a request to the Vision Assistant to
    analyze the generated image and provide feedback. It follows the same process
    as before but now directs the request to the Vision Assistant, creating a new
    thread linked to the existing User Proxy Assistant thread. This cycle can be repeated
    iteratively, calling different assistants as needed, until the overall task is
    fully completed, as illustrated here:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 用户代理助手随后向视觉助手发起请求，分析生成的图像并提供反馈。它遵循与之前相同的流程，但现在将请求发送给视觉助手，创建一个与现有用户代理助手线程相关联的新线程。这个过程可以重复迭代，根据需要调用不同的助手，直到整体任务完全完成，如图所示：
- en: '![Figure 10.7: Multi-agent architecture](img/B21019_10_07.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.7: 多代理架构](img/B21019_10_07.jpg)'
- en: 'Figure 10.7: Multi-agent architecture'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '图 10.7: 多代理架构'
- en: Example output
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例输出
- en: Now, let’s conduct end-to-end testing with all three assistants working together
    to complete the task by deploying the full solution from this chapter’s GitHub
    repository.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们进行端到端测试，所有三个助手协同工作，通过部署本章 GitHub 仓库中的完整解决方案来完成任务。
- en: '*User Agent*: Generate an image of a boat drifting in the water and analyze
    it and enhance the image.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '*用户代理*: 生成一幅船漂浮在水面上的图像，分析并增强该图像。'
- en: '*Dalle Assistant*: Creating the image...'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dalle 助手*: 正在创建图像...'
- en: '![](img/B21019_10_08.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21019_10_08.jpg)'
- en: '*Vision Assistant*: Analyzing the image...'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '*视觉助手*: 正在分析图像...'
- en: '*Vision Assistant*: The image presents a serene and minimalistic composition
    featuring a solitary wooden boat floating on calm waters. The overall tone is
    muted and ethereal, conveying a sense of peace and tranquility. The boat, capped
    with a small canopy and a flag, is perfectly positioned to catch the viewer’s
    focus. The reflection in the water is a nice touch that adds depth to the scene.
    The light is beautifully managed, likely depicting either dawn or dusk, which
    gives the scene a dreamy, soft glow.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*视觉助手*：这幅图呈现了一个宁静且极简的构图，展示了一只孤独的木船漂浮在平静的水面上。整体色调柔和空灵，传达出一种平和与宁静的感觉。船只上有一个小篷和一面旗帜，恰到好处地吸引了观众的注意力。水中的倒影为场景增添了深度。光线的运用非常到位，可能呈现的是清晨或黄昏的时光，给场景带来了一种梦幻般的柔和光辉。'
- en: '**Critique**:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**评论**：'
- en: '**Lack of Detail**: While simplicity is part of the image’s charm, the boat
    itself lacks detailed texture or distinctive features. Adding some details or
    ornaments on the boat could enhance visual interest without disturbing the tranquility.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**细节不足**：虽然简洁是图像魅力的一部分，但船本身缺乏细致的纹理或独特的特征。为船增加一些细节或装饰可以在不打扰宁静氛围的情况下，提升视觉吸引力。'
- en: '**Foreground Wave**: The wave in the foreground is slightly distracting. It
    draws attention away from the boat and seems inconsistent with the otherwise calm
    setting. A more uniform water surface would emphasize the stillness.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**前景波浪**：前景的波浪稍显分散注意力。它让视线从船上转移，似乎与其余平静的环境不太协调。更均匀的水面会更能突出宁静的氛围。'
- en: '**Sky Gradient**: The sky lacks a gradient typical of dawn or dusk scenes,
    which could add to the atmosphere significantly. Introducing some color transitions
    in the sky might enhance the ethereal effect.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**天空渐变**：天空缺乏清晨或黄昏场景中典型的渐变效果，这本可以显著增强氛围。引入一些颜色过渡可能会提升空灵的效果。'
- en: '**Background Content**: The background is very plain, and while this focuses
    attention on the boat, incorporating subtle elements such as distant landmasses
    or birds might create a more dynamic and contextually rich composition.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**背景内容**：背景非常简单，虽然这使观众的注意力集中在船上，但加入一些微妙的元素，如远处的陆地或飞鸟，可能会让构图更具动态感和情境丰富性。'
- en: '*Enhanced prompt for DALL-E*: Generate an ethereal image of a wooden boat with
    detailed texture, floating on calm waters at dawn. The boat should feature a small
    canopy and a decorative flag. The water should appear still, with no waves interrupting
    the serene atmosphere. Capture a soft and colorful gradient in the sky to reflect
    an early morning or evening time, possibly including distant, faint silhouettes
    of land or birds to add subtle complexity and depth to the scene.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '*为DALL-E优化的提示*：生成一幅带有细致纹理的木船漂浮在平静水面上的空灵图像。船应配有一个小篷和一面装饰性旗帜。水面应显得静止，且没有波浪打破宁静氛围。捕捉天空中柔和且多彩的渐变效果，展现清晨或傍晚的时光，或许可以加入远处的陆地或飞鸟的微弱轮廓，为场景增添微妙的复杂性和深度。'
- en: '*Dalle Assistant*: Creating the image...'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dalle助手*：正在创建图像...'
- en: '![](img/B21019_10_09.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21019_10_09.jpg)'
- en: '*Vision Assistant*: Analyzing the image...'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '*视觉助手*：正在分析图像...'
- en: '*Vision Assistant*: The image showcases a beautiful and serene landscape capturing
    a traditional wooden boat on a calm body of water during a picturesque sunrise
    or sunset. The water is so still that the boat and distant silhouettes of other
    boats and some kind of structures stand reflected perfectly, enhancing the image’s
    overall tranquility. The warm color palette of the sky with hues of orange and
    pink transitioning into the blues gives the scene a dreamy and peaceful atmosphere.
    The thin line of birds flying across the sky adds a dynamic element and conveys
    a sense of journey and freedom.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '*视觉助手*：这幅图展示了一个美丽而宁静的景观，捕捉到了一只传统木船漂浮在平静水面上的画面，背景是如画的日出或日落时分。水面静得如镜，船只和远处的其他船只及某些结构的轮廓都清晰地倒映其中，增强了整体的宁静感。天空的暖色调由橙色和粉色渐变至蓝色，为场景增添了一种梦幻和平静的氛围。天际线上稀疏的鸟群飞过，增添了动态元素，并传达了一种旅行与自由的感觉。'
- en: '**Critique**:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**评论**：'
- en: '**Details and Texture**: While the overall composition is compelling, the boat’s
    texture could be enhanced for more realism. Currently, it appears a bit smooth,
    which could detract from potential wood grain detailing.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**细节与纹理**：虽然整体构图非常吸引人，但船的纹理可以进一步增强，以增加真实感。目前，它看起来有些光滑，可能会减少木纹的细节感。'
- en: '**Lighting**: The ambient lighting is well done, but more contrast could be
    applied to make the boat’s features pop and increase the scene’s depth, especially
    for the structure in the background.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**照明**：环境光照效果良好，但可以增加对比度，使船只的特点更加突出，并增加场景的深度，尤其是在背景的结构部分。'
- en: '**Background Elements**: The structures present in the background are intriguing
    and add depth but lack clarity. Offering more details or suggesting a specific
    type of structure could enhance the scene’s storytelling aspect.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**背景元素**：背景中的建筑物具有吸引力并增添了深度，但缺乏清晰度。提供更多细节或建议一种特定类型的结构可能会增强场景的叙事性。'
- en: '**Foreground Interest**: Perhaps including additional elements in the foreground,
    like subtle ripples in the water or nearby wildlife, might add more interest and
    life to the scene without detracting from its simplicity.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**前景兴趣**：或许在前景中加入更多元素，如水面上的轻微涟漪或附近的野生动物，可能会为场景增添更多趣味和生气，同时不影响其简洁性。'
- en: '*Enhanced prompt for DALL-E*: Create a serene scene of a traditional wooden
    boat with detailed wood grain textures on a calm lake during a vivid sunset. The
    sky should be a gradient of warm oranges and pinks blending into cool blues, casting
    a soft reflective glow on the still water. In the background, faint structures
    on stilts suggest a mysterious setting, with enough clarity to hint at their cultural
    significance. Introduce gentle ripples in the water around the boat to imply movement
    and perhaps integrate a few wildlife figures subtly in the foreground to add lively
    elements without compromising the tranquility of the scene.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '*增强的DALL-E提示*：在平静的湖面上，创造一幅传统木船的宁静场景，船体木纹质感细致，背景是一片生动的夕阳。天空应为温暖的橙色和粉色渐变，过渡到冷蓝色，柔和的光辉在平静的水面上反射。在背景中，若隐若现的高脚建筑物暗示着神秘的环境，足够清晰以揭示其文化意义。水面上可以引入轻微的涟漪，表明船只的移动，或许可以巧妙地在前景中融入几只野生动物，增加生动元素，同时保持场景的宁静。'
- en: '*Dalle Assistant*: Creating the image...'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dalle助手*: 正在创建图像...'
- en: '![](img/B21019_10_10.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21019_10_10.jpg)'
- en: With just one user input, you can see how DALL·E and the Vision Assistant collaborate
    to enhance image quality—demonstrating the power of a multi-agent system.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 仅凭一个用户输入，你就可以看到DALL·E和视觉助手如何协同合作提升图像质量——展示了多智能体系统的强大能力。
- en: Summary
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored building a multi-agent system using the Azure OpenAI
    Assistants API. Multi-agent framework with the Azure AI Assistants API offers
    valuable insights into the evolving landscape of AI-driven collaboration. By harnessing
    the capabilities of LLM-based agents within the Azure ecosystem, we can build
    a network of specialized agents that enhance system intelligence, enabling them
    to tackle complex tasks and make informed decisions dynamically. By establishing
    assistants, managing communication threads, sending messages, and executing functions,
    we have outlined a structured approach that developers can adopt.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了如何使用Azure OpenAI Assistants API构建多智能体系统。通过Azure AI Assistants API构建的多智能体框架为我们提供了有关AI驱动的协作不断发展的宝贵见解。通过利用基于LLM的智能体在Azure生态系统中的能力，我们可以构建一个由专业智能体组成的网络，增强系统智能，使它们能够动态地处理复杂任务并做出明智决策。通过建立助手、管理通信线程、发送消息和执行功能，我们概述了开发人员可以采用的结构化方法。
- en: In the next chapter, we will shift our focus to the crucial topics of privacy
    and security as related to AOAI. Having explored the development and implementation
    of practical solutions using AOAI alongside various Azure AI services in previous
    chapters, we will now delve into essential considerations for safeguarding data
    and ensuring compliance. This chapter will cover topics such as Azure OpenAI Service
    compliance, data privacy, content filtering, managed identity, virtual network
    configurations, private endpoint configurations, data encryption, and responsible
    AI practices for Azure OpenAI. These areas are critical for building secure and
    trustworthy AI solutions in enterprise environments.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将把焦点转移到与AOAI相关的隐私和安全性的重要议题。在前几章中，我们已经探讨了利用AOAI和各种Azure AI服务开发和实施实际解决方案，接下来我们将深入探讨保护数据和确保合规性的关键因素。本章将涵盖诸如Azure
    OpenAI服务合规性、数据隐私、内容过滤、托管身份、虚拟网络配置、私有端点配置、数据加密以及Azure OpenAI的负责任AI实践等主题。这些领域对于在企业环境中构建安全可靠的AI解决方案至关重要。
- en: 'Part 3: Mastering Governance, Operations, and AI Optimization with Azure OpenAI'
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三部分：掌握治理、操作和AI优化与Azure OpenAI
- en: In this final part, we shift focus from creating solutions to mastering the
    critical elements of governance, deployment, and advanced optimization strategies
    for Azure OpenAI. This part equips you with the knowledge to safeguard their implementations,
    operationalize their AI solutions effectively, and maximize the potential of generative
    AI through advanced prompt engineering techniques.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后这一部分，我们将重点从创建解决方案转移到掌握治理、部署和 Azure OpenAI 高级优化策略的关键要素。本部分将为你提供保护实施方案、有效地将
    AI 解决方案投入运营，并通过高级提示工程技术最大化生成式 AI 潜力的知识。
- en: You’ll explore essential privacy and security practices to ensure compliance
    and data protection, dive into operational best practices for managing resources
    efficiently, and gain insights into crafting precise and impactful prompts. Whether
    you’re deploying AI at scale or refining its behavior for specific use cases,
    this section provides the tools to transform your Azure OpenAI solutions into
    robust, reliable, and innovative systems.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 你将探索确保合规性和数据保护的基本隐私和安全实践，深入了解高效管理资源的运营最佳实践，并获得精确制定有影响力的提示的洞察。不论你是在大规模部署 AI，还是为特定应用场景优化其行为，本部分提供的工具将帮助你将
    Azure OpenAI 解决方案转变为强大、可靠且富有创新的系统。
- en: 'This part has the following chapters:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 11*](B21019_11.xhtml#_idTextAnchor119), *Privacy and Security*'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第11章*](B21019_11.xhtml#_idTextAnchor119)，*隐私与安全*'
- en: '[*Chapter 12*](B21019_12.xhtml#_idTextAnchor150), *Operationalizing Azure OpenAI*'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第12章*](B21019_12.xhtml#_idTextAnchor150)，*将 Azure OpenAI 付诸实践*'
- en: '[*Chapter 13*](B21019_13.xhtml#_idTextAnchor164), *Advanced Prompt Engineering*'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第13章*](B21019_13.xhtml#_idTextAnchor164)，*高级提示工程*'
