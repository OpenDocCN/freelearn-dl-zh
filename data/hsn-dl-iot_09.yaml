- en: IoT Security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 物联网安全
- en: The use of IoT is growing at a dangerously fast pace, and both researchers and
    industries have estimated that, the number of active wirelessly connected devices
    will exceed 20 billion. This exponential growth of IoT devices is increasing the
    risks to our lives and property, as well as to the entire IT industry. To have
    more connected devices means more attack vectors, and more opportunities for hackers
    to exploit. In this context, secure IoT is not only essential for its applications,
    but also for the rest of the IT industry.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网的使用正在以危险的速度增长，研究人员和行业已经估计，活跃的无线连接设备数量将超过200亿。这种物联网设备的指数级增长正在增加对我们生命和财产的风险，也增加了整个IT行业的风险。更多连接的设备意味着更多的攻击向量，也给黑客提供了更多的利用机会。在这种背景下，物联网的安全性不仅对其应用至关重要，也对整个IT行业至关重要。
- en: In IoT security solutions, networks and devices can be viewed as either signature-based
    or  behavior-based. Behavior-based solutions, such as anomaly detection, are preferable
    in IoT as preparing and maintaining signatures of dynamic and unknown IoT attacks
    is very difficult.  Similarly to human behavior analysis, **deep learning** (**DL**)/**machine
    learning** (**ML**) models can be used in IoT for data exploration, and for learning
    normal and abnormal behavior (security perspective) of IoT devices and networks,
    in various IoT application environments.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在物联网安全解决方案中，网络和设备可以分为基于签名的和基于行为的。与物联网相关的基于行为的解决方案，如异常检测，是更可取的，因为准备和维护动态且未知的物联网攻击签名非常困难。类似于人类行为分析，**深度学习**（**DL**）/**机器学习**（**ML**）模型可以在物联网中用于数据探索，以及学习物联网设备和网络在不同应用环境中的正常与异常行为（从安全角度来看）。
- en: 'This chapter presents behavioral data analysis of DL-based networks and devices,
    and security incident detection techniques for IoT applications in general. In
    the first part of this chapter, we will briefly describe different IoT security
    attacks and their potential detection techniques, including DL/ML-based methods.
    In addition, we will briefly discuss two IoT use cases where security attacks—such
    as **Denial of Service** (**DoS**) and **Distributed DoS** (**DDoS**) attacks**—**can
    be detected intelligently and automatically through DL-based anomaly detection.
    In the second part of the chapter, we will present hands-on DL-based security
    incident detection implementations. In this chapter, we will cover the following
    topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍基于深度学习（DL）技术的物联网网络和设备行为数据分析，以及物联网应用中的安全事件检测技术。在本章的第一部分，我们将简要描述不同的物联网安全攻击及其潜在的检测技术，包括基于深度学习/机器学习（DL/ML）的方法。此外，我们将简要讨论两个物联网用例，其中**拒绝服务攻击**（**DoS**）和**分布式拒绝服务攻击**（**DDoS**）等安全攻击可以通过基于深度学习的异常检测智能地和自动地进行检测。在本章的第二部分，我们将展示基于深度学习的安全事件检测实现。以下是本章将涉及的主题：
- en: IoT security attacks and potential detection approaches
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物联网安全攻击与潜在检测方法
- en: Use case one—intelligent host intrusion detection in IoT
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用例一—物联网智能主机入侵检测
- en: Implementation of intelligent host intrusion detection in IoT
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物联网智能主机入侵检测的实现
- en: Use case two—intelligent network intrusion detection in IoT
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用例二—物联网智能网络入侵检测
- en: Implementation of intelligent network intrusion detection in IoT
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物联网智能网络入侵检测的实现
- en: DL for IoT security incident detection
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于物联网安全事件检测的深度学习（DL）
- en: '**Deep neural networks** (**DNN**), **autoencoder**, and **long short-term
    memory** (**LSTM**) in IoT security incident detection'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**深度神经网络**（**DNN**）、**自编码器**和**长短期记忆网络**（**LSTM**）在物联网安全事件检测中的应用'
- en: Data collection
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据收集
- en: Data preprocessing
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据预处理
- en: Models training
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型训练
- en: Evaluation of the models
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型评估
- en: Security attacks in IoT and detections
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 物联网中的安全攻击与检测
- en: According to statistics, there will be more than 26 billion connected IoT devices
    worldwide. These devices, which include smart TVs, tablets, smartphones, notebooks,
    wearables, sensors, thermostats, and others, will make our lives more efficient,
    more energy saving, more comfortable, and less costly. However, these can only
    be realized when the security of these applications are maintained as, in many
    cases, these devices are dealing with mission-critical applications.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 根据统计数据，全球将有超过260亿个连接的物联网设备。这些设备包括智能电视、平板电脑、智能手机、笔记本电脑、可穿戴设备、传感器、恒温器等，将使我们的生活更高效、更节能、更舒适、更具成本效益。然而，只有当这些应用的安全性得到保障时，这些才能实现，因为在许多情况下，这些设备涉及的是关键任务应用。
- en: 'The reality is that IoT security is currently the number-one challenge faced
    by IoT industries. Without proper security solutions in place, data traversing
    the public internet, especially wirelessly connected devices, is vulnerable to
    hackers. In this context, the entire IoT pipeline or pathway needs to be secure.
    In other words, IoT needs **end-to-end** (**E2E**) security, where data must be
    secured from the time it leaves the end device or appliance, throughout its journey
    to and from the cloud, until it reaches the end user''s mobile app or browser-based
    application. In addition, once it has been processed and a decision has been made
    on this in the user device/app, it has to follow a secure backward path for actuating
    or carrying the control instructions to the device. The following diagram presents
    an E2E (three-layered) view of an IoT solution, and the security requirements
    of the main three layers:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现实情况是，物联网安全目前是物联网行业面临的首要挑战。如果没有合适的安全解决方案，特别是无线联网设备上通过公共互联网传输的数据就容易受到黑客攻击。在这种情况下，整个物联网管道或路径需要保持安全。换句话说，物联网需要**端到端**（**E2E**）安全，数据必须从终端设备或家电离开时开始得到保护，在它通过云端往返的过程中，直到它到达最终用户的移动应用或基于浏览器的应用程序。此外，一旦在用户设备/应用中处理并做出决策，它还必须遵循一个安全的反向路径，将控制指令传输到设备。以下图展示了物联网解决方案的E2E（三层）视图及主要三层的安全要求：
- en: '![](img/11c6b11a-5415-4d2e-a124-5f320e994b00.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/11c6b11a-5415-4d2e-a124-5f320e994b00.png)'
- en: 'The following diagram presents a summary of the main attacks in IoT in a three-layered
    perspective:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图展示了从三层视角总结的物联网（IoT）主要攻击方式：
- en: '![](img/824f25d1-8d25-46a3-b1a9-c7592ef04b68.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/824f25d1-8d25-46a3-b1a9-c7592ef04b68.png)'
- en: Designing and developing IoT security solutions is a very challenging task.
    For example, such devices are generally termed "embedded" devices; these have
    a fixed function designed specifically to perform a specialized task. They are
    resource-constrained, in terms of operating system, processing power, and memory.
    Traditional and PC security solutions are not suitable, as they will not even
    run on most embedded devices. Importantly, there are a large number of devices
    with vulnerabilities to be exploited by attackers. For example, in a smart home,
    we have more IoT/smart devices than our PC/laptops.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 设计和开发物联网安全解决方案是一项非常具有挑战性的任务。例如，这些设备通常被称为“嵌入式”设备，它们具有固定的功能，专门用于执行特定的任务。它们在操作系统、处理能力和内存方面都受到资源限制。传统的PC安全解决方案并不适用，因为它们甚至无法在大多数嵌入式设备上运行。重要的是，有大量设备存在漏洞，可能会被攻击者利用。例如，在智能家居中，我们的物联网/智能设备比PC/笔记本电脑还要多。
- en: 'Very soon, our homes will be equipped with ample connected devices that could
    compete with the number of connections in a mid-sized company. In this context,
    managing updates, passwords, and settings for these connected devices alone, without
    the support of an IT security team or any expensive and enterprise level security
    tools, will be nightmare. Automated approaches based on **artificial intelligence**
    (**AI**)—especially DL/ML—can reactively and/or proactively find the security
    issues and help us to manage them. AI-based solutions can take two different forms:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 很快，我们的家中将配备大量联网设备，其数量可能与中型公司中的连接数相媲美。在这种情况下，仅仅管理这些联网设备的更新、密码和设置，没有IT安全团队的支持，也没有任何昂贵的企业级安全工具，将成为一场噩梦。基于**人工智能**（**AI**）——尤其是深度学习（DL）/机器学习（ML）——的自动化方法可以反应性地和/或主动地发现安全问题并帮助我们进行管理。基于AI的解决方案可以采取两种不同的形式：
- en: '**Network-based solution**: A network-based solution aims to secure IoT devices
    of an IoT application by making a protective shield around the network of the
    application. This approach maintains a whitelist of devices that are allowed to
    access an IoT application network to prevent intruders from getting into the network.
    However, the IoT devices need to access to and be accessed from the outside world,
    such as from the cloud and smartphone applications. A DL/ML engine can monitor
    incoming and outgoing traffic to the IoT devices, and create a profile that defines
    the normal behavior of the IoT application. The DL/ML engine will detect any incoming
    threat by comparing it with established normal behavior. Unlike enterprise networks,
    AI-based threat detection is easier in IoT as, generally, the functionality of
    an IoT device is very limited, and it is not easy to disguise the IoT devices
    in malicious requests. In addition, it is easier to define a finite set of rules
    to determine normal and anomalous behavior for IoT devices. For example, a smart
    bulb communicating with the smart fridge in a smart home is not a normal behavior,
    and it is easy to detect as the bulb is for lighting and does not need to communicate
    with the fridge to produce light.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于网络的解决方案**：基于网络的解决方案旨在通过在应用的网络周围建立保护屏障来保护物联网设备免受攻击。这种方法维护一个允许访问物联网应用网络的设备白名单，以防止入侵者进入网络。然而，物联网设备需要访问并从外部世界访问，例如从云端或智能手机应用程序。深度学习/机器学习引擎可以监控物联网设备的进出流量，并创建一个定义物联网应用正常行为的配置文件。该引擎将通过与已建立的正常行为进行比较，检测任何即将到来的威胁。与企业网络不同，基于AI的威胁检测在物联网中更为简单，因为通常物联网设备的功能非常有限，且很难在恶意请求中伪装物联网设备。此外，定义一个有限的规则集来确定物联网设备的正常行为和异常行为也更为容易。例如，在智能家居中，一个智能灯泡与智能冰箱进行通信并非正常行为，并且很容易检测到，因为灯泡是用来照明的，不需要与冰箱进行通信来产生光。'
- en: '**Device-based solutions**: Generally, IoT devices are resource-constrained
    in terms of processing power and storage capacity. Hence, signature-based security
    solutions are not suitable for IoT devices as they require huge databases of threat
    and malware signature storage. Like network-based solutions, DL/ML-supported automated
    behavior-based solutions are better alternatives as they are less resource-hungry.
    In addition, they can run without bogging down small processors.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于设备的解决方案**：通常，物联网设备在处理能力和存储容量方面是受限的。因此，基于签名的安全解决方案不适合物联网设备，因为它们需要存储大量的威胁和恶意软件签名数据库。与基于网络的解决方案类似，支持深度学习/机器学习的自动化行为检测解决方案是更好的替代方案，因为它们对资源的需求较少。此外，这些解决方案可以在不拖慢小型处理器的情况下运行。'
- en: Although, many people prefer network-based solutions over device-based ones,
    our recommendation would be to opt for both as they will offer stronger protection
    for your IoT devices as well as for the rest of the world.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管许多人更倾向于使用基于网络的解决方案而非基于设备的解决方案，但我们的建议是同时选择两者，因为它们能够为您的物联网设备以及整个网络提供更强的保护。
- en: Anomaly detection and IoT security
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 异常检测与物联网安全
- en: 'Network- and device-level behavioral anomaly detection is an important means
    of detecting potential security incidents, including DoS or DDoS, or any general
    intrusions. Anomaly detection mechanisms can be divided into many subclasses:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 网络和设备级行为异常检测是发现潜在安全事件的重要手段，包括DoS或DDoS攻击，或任何一般性的入侵。异常检测机制可以划分为多个子类：
- en: '**Statistical methods**: These methods use past behaviors to approximate a
    model of the correct behavior of a sensor or thing. If the things or networks
    observe a new behavior, it is compared to the model and, if statistically incompatible,
    is marked as an anomaly.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**统计方法**：这些方法使用过去的行为来近似传感器或设备的正常行为模型。如果事物或网络观察到新的行为，会将其与模型进行比较，并且如果在统计上不兼容，则标记为异常。'
- en: '**Probabilistic methods**: These methods center around the definition of a
    probabilistic model (parametric or nonparametric). If any the probability of an
    incident within a device or network falls below a predefined threshold, then it
    is labelled as an anomalous event.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**概率方法**：这些方法围绕概率模型的定义（参数化或非参数化）展开。如果设备或网络中的某个事件发生的概率低于预定义的阈值，则该事件被标记为异常事件。'
- en: '**Proximity-based methods**: These methods are based on the distances between
    normal and anomalous behavior. Clustering methods also fall into this class.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于接近度的方法**：这些方法基于正常行为与异常行为之间的距离。聚类方法也属于这一类。'
- en: '**Prediction-based methods**: These methods use past network/device behavioral
    data to train a model that can predict the behavior of any incoming or outgoing
    traffic and identify  anomalies. This is the method we will be using in our two
    use cases. The first is anomaly detection for host level or device level intrusion
    detection, and the second is network level intrusion detection.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于预测的方法**：这些方法利用过去的网络/设备行为数据来训练一个模型，该模型可以预测任何进出流量的行为并识别异常。这是我们在两个用例中将使用的方法。第一个是主机级别或设备级别的入侵检测异常检测，第二个是网络级别的入侵检测。'
- en: DoS and DDoS intrusion incidents are common in IoT applications. IoT devices
    could be the target for these attacks and/or IoT devices can be exploited by attackers
    to generate flooding traffic to initiate and run DDoS attacks. These attacks can
    be launched in different layers of an IoT protocol stack, including the network,
    transport, and application layers. Generally, the detection of DDoS attacks launched
    at the application layer is very challenging, as the request packets look similar
    to the normal request packets. As a consequence of this attack, we may observe
    explicit behaviors in terms of resource exhaustion, such as network bandwidth,
    CPU processing, and memory. For instance, a swarm of IoT devices hijacked by Mirai
    malware generated about 1 Tbps of DDoS traffic to a French web host in September
    2016^([3]). In this context, it is essential to detect host/IoT device level as
    well as IoT network level intrusions so that IoT applications become available
    for their intended use and/or they do not become the means for making a DDoS attack
    on others. In the following sections, we present one use case on IoT device-level
    intrusion detection, and another on IoT network level intrusion detection.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: DoS和DDoS入侵事件在物联网应用中非常常见。物联网设备可能成为这些攻击的目标，或者物联网设备可能被攻击者利用，生成洪水流量以发起和运行DDoS攻击。这些攻击可以在物联网协议栈的不同层次上发起，包括网络层、传输层和应用层。通常，在应用层发起的DDoS攻击检测非常具有挑战性，因为请求包看起来与正常的请求包相似。由于这种攻击，我们可能会观察到在资源消耗方面的明显行为，例如网络带宽、CPU处理和内存。例如，2016年9月，由Mirai恶意软件劫持的物联网设备群体向法国某网站主机发起了约1
    Tbps的DDoS流量攻击^([3])。在这种背景下，检测主机/物联网设备级别的入侵以及物联网网络级别的入侵非常关键，以确保物联网应用能够按预期使用并/或不成为对他人发起DDoS攻击的工具。在接下来的部分，我们将展示一个关于物联网设备级别入侵检测的用例，以及一个关于物联网网络级别入侵检测的用例。
- en: 'Use case one: intelligent host intrusion detection in IoT'
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例一：物联网中的智能主机入侵检测
- en: Very often, resource-constrained IoT devices become the target for DoS or DDoS
    attacks by intruders that can make the IoT application unavailable to the consumers.
    For example, consider an IoT-based remote patient-monitoring system. If the sensor's
    reading of the patient at a critical time, such as during a heart attack, are
    not available to their doctors or hospital, the patient may lose their life. In
    this context, devices or host level intrusion detection is essential for most
    IoT applications. In use case one, we will consider IoT device or host level intrusion
    detection.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 很多时候，资源受限的物联网设备成为攻击者的目标，攻击者可以发起DoS或DDoS攻击，导致物联网应用无法提供给消费者。例如，考虑一个基于物联网的远程病人监护系统。如果在关键时刻（如心脏病发作期间）病人的传感器数据无法传输给医生或医院，病人可能会因此失去生命。在这种背景下，设备或主机级别的入侵检测对大多数物联网应用至关重要。在用例一中，我们将考虑物联网设备或主机级别的入侵检测。
- en: It is essential to select a good feature or set of features to determine anomalies
    in IoT devices and networks (such as DoS and DDoS) using predictive methods, including
    DL. Often, we need time series data for real-time or online anomaly detection,
    and if we can exploit any data source that is already in this form, we do not
    need additional feature engineering. CPU utilization data of IoT devices do not
    need further engineering for host/device level anomaly detection.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用预测方法（包括深度学习）检测物联网设备和网络中的异常（例如DoS和DDoS）时，选择一个好的特征或特征集至关重要。通常，我们需要时间序列数据进行实时或在线异常检测，如果可以利用任何已经是这种形式的数据源，就不需要额外的特征工程。物联网设备的CPU利用率数据无需进一步工程化即可进行主机/设备级别的异常检测。
- en: Implementation of use case one
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例一的实现
- en: 'We are considering an IoT-based, remote patient-monitoring application for
    the implementation of intelligent host-level intrusion detection. Monitoring of
    physiotherapy is a challenging task. An IoT-based therapy can solve the progress-monitoring
    issue. The following diagram briefly presents how the IoT-based remote-patient
    monitoring system and its device-level intrusion detection will work:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在考虑一个基于IoT的远程病人监测应用，用于实现智能主机级入侵检测。物理治疗的监测是一项具有挑战性的任务。基于IoT的治疗可以解决进度监测的问题。下图简要展示了基于IoT的远程病人监测系统及其设备级入侵检测的工作原理：
- en: '![](img/ab7c8831-c61e-4176-8a12-d63cc41ff17d.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ab7c8831-c61e-4176-8a12-d63cc41ff17d.png)'
- en: 'As shown in the preceding diagram, an IoT-based remote patient-monitoring system consists
    of three main elements:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，基于IoT的远程病人监测系统由三个主要元素组成：
- en: '**Sensors and patient-side computing platform**: A patient will be attached
    to multiple sensors, including an electrocardiograph, blood pressure sensor, accelerometer,
    and a gyroscope. These sensors will be collecting physiological and activity-related
    information and sending it to care providers for necessary and real-time feedback.
    However, the data from these sensors or things can be unavailable because of DoS
    or DDoS attack. An intruder can launch a DoS attack by flooding these sensors
    with excessive requests in an attempt to overload it, preventing legitimate requests
    from being fulfilled. Similarly, the attacker can launch a DDoS attack by flooding
    these sensors from many different distributed sources. A Raspberry Pi 3 connected
    with the home network can work as the patient-side computing platform and as the
    sensor-level intrusion detector.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传感器和病人端计算平台**：病人将连接多个传感器，包括心电图仪、血压传感器、加速度计和陀螺仪。这些传感器将收集生理和活动相关的信息，并将其发送给护理提供者，以便进行必要的实时反馈。然而，这些传感器或设备的数据可能会因DoS或DDoS攻击而无法获取。攻击者可以通过向这些传感器发送过多请求，发起DoS攻击，试图使其过载，从而阻止合法请求的处理。类似地，攻击者也可以通过来自多个分布式源的请求发起DDoS攻击。连接到家庭网络的树莓派3可以作为病人端计算平台和传感器级入侵检测器。'
- en: '**DL-based intrusion detection**: The Raspberry Pi 3 will be preinstalled with
    a DL-based anomaly detector that will analyze sensors and its CPU utilization
    to detect any potential intrusion into the sensors and computing platform. If
    the sensors come without any MCU, we will consider intrusion detection for the
    Raspberry Pi 3\. The detector will continuously monitor CPU-utilization of the
    Raspberry Pi 3, and if an anomaly is found it will be reported to the management
    team for countermeasure.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于DL的入侵检测**：树莓派3将预安装一个基于DL的异常检测器，该检测器将分析传感器和CPU的使用情况，以检测是否有潜在的入侵行为。如果传感器没有任何MCU，我们将考虑对树莓派3进行入侵检测。该检测器将持续监控树莓派3的CPU使用率，如果发现异常，将报告给管理团队以采取对策。'
- en: '**Healthcloud for model learning**: The healthcloud is a cloud computing platform,
    mainly designed for healthcare-related services. This will train the selected
    DL model for anomaly detection using a reference dataset.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Healthcloud模型学习**：Healthcloud是一个云计算平台，主要用于医疗相关服务。它将使用参考数据集训练选定的DL模型，用于异常检测。'
- en: In the second part of the chapter (that is, the sections starting from *DL for
    IoT security incident detection*), we will describe the implementation of DL-based
    anomaly detection in the preceding use case. All the necessary codes are available
    in the chapter's code folder.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的第二部分（即从*DL用于IoT安全事件检测*开始的章节），我们将描述基于DL的异常检测在前述用例中的实现。所有必要的代码都可以在本章的代码文件夹中找到。
- en: 'Use case two: traffic-based intelligent network intrusion detection in IoT'
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例二：基于流量的IoT智能网络入侵检测
- en: Generally, host intrusion (including device level intrusion) exploits outside
    world communications, and most of the time a successful host intrusion comes with
    the success of a network intrusion. For example, in botnets, remote command-and-control
    servers communicate with the compromised machines to give instructions on operations
    to execute. More importantly, a large number of insecure IoT devices has resulted
    in a surge of IoT botnet attacks in worldwide IT infrastructure. The Dyn **domain
    name system** (**DNS**) attack in October 2016 is an example of this, wherein
    the Mirai botnet commanded 100,000 IoT devices to launch the DDoS attack. This
    incident impacted many popular websites, including GitHub, Amazon, Netflix, Twitter,
    CNN, and PayPal.  In this context, detection of network-level intrusion in IoT
    is not only necessary for IoT applications, but also for the rest of the IT industry.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，主机入侵（包括设备级入侵）利用外部世界的通信，大多数时候，一次成功的主机入侵伴随着网络入侵的成功。例如，在僵尸网络中，远程指挥与控制服务器通过与被攻陷的机器通信，给出执行操作的指令。更重要的是，大量不安全的物联网设备导致了全球IT基础设施中物联网僵尸网络攻击的激增。2016年10月的Dyn**域名系统**（**DNS**）攻击就是一个例子，在该事件中，Mirai僵尸网络指挥了100,000台物联网设备发起DDoS攻击。此事件影响了许多热门网站，包括GitHub、Amazon、Netflix、Twitter、CNN和PayPal。在这种背景下，检测物联网中的网络级入侵不仅对物联网应用程序至关重要，而且对其他IT行业同样重要。
- en: Generally, a network intrusion detector identifies intruders by inspecting traffic
    that passes between the hosts in the network. Like host intrusion detection, network
    intrusion detection can be signature-based or anomaly detection-based. In the
    signature-based approach, all incoming traffic will be compared with a list of
    known signatures of malicious traffic, and the in the anomaly detection approach,
    it compares the incoming traffic with previously established normal behavior.
    Considering the resource-intensive aspect of the former approach, we will consider
    anomaly detection-based **intrusion detection system** (**IDS**).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，网络入侵检测器通过检查在网络中主机之间传输的流量来识别入侵者。与主机入侵检测类似，网络入侵检测可以基于签名或基于异常检测。在基于签名的方法中，所有传入的流量将与已知的恶意流量签名列表进行比较；而在基于异常检测的方法中，它将传入的流量与先前建立的正常行为进行比较。考虑到前者方法对资源的高需求，我们将考虑基于异常检测的**入侵检测系统**（**IDS**）。
- en: Implementation of use case two
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例二的实现
- en: Unlike traditional networks, IDS in IoT needs to be lightweight, distributed
    to different layers, and long-lasting. The first condition is obvious for resource-constrained
    IoT devices. The solution needs to be distributed over many layers to optimize
    the effectiveness of the detection process. Importantly, the solution needs to
    be usable for long-lasting IoT devices. For example, a smart fridge could be in
    a house for more than 10 years, and finding a security solution that can withstand
    that length of time is a difficult task.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统网络不同，物联网中的入侵检测系统（IDS）需要轻量级、分布式于不同层次，并且具有长久性。第一个条件对于资源受限的物联网设备来说显而易见。解决方案需要分布在多个层次，以优化检测过程的效果。更重要的是，解决方案需要适用于长期使用的物联网设备。例如，一个智能冰箱可能会在一个家庭中使用超过10年，找到一个能够经得起如此长时间考验的安全解决方案是一项困难的任务。
- en: 'The following diagram presents an IoT infrastructure, including a multilayered
    network IDS, which can address the first two requirements of the IDS in an IoT.
    For example, an IoT deployment consists of different components that are distributed
    and resource constrained. A system-wide holistic IDS may not work well in terms
    of a real-time response. In this context, each layer in a multilayered IDS will
    work on identifying the layer-specific anomalies and the corresponding intruders
    in real time or quasi real time:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图展示了一个物联网基础设施，包括一个多层网络IDS，它可以解决物联网中IDS的前两个要求。例如，物联网部署由不同的、分布式的、资源受限的组件组成。一个系统范围的整体IDS在实时响应方面可能不太适用。在这种情况下，多层IDS中的每一层都会实时或准实时地识别该层特有的异常以及相应的入侵者：
- en: '![](img/447c4d8b-d209-4b80-91b7-96550945f1cc.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/447c4d8b-d209-4b80-91b7-96550945f1cc.png)'
- en: 'The multilayered network IDS of an IoT (especially in a smart home application)
    consists of the following three main elements:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网的多层网络IDS（特别是在智能家居应用中）由以下三个主要元素组成：
- en: '**Sensors/things and an edge computing platform**: Smart-home devices, such
    as smart TVs, smart fridges, thermostats, smart bulbs, and home physical security
    cameras, are the sensors or ''things'' of the use case. These devices are connected
    to the internet via a home router/gateway. In this use case, we are considering
    a network-based security solution rather than a device-based solution. We are
    also assuming that the home router will work as the edge computing device and
    allow us to install the multilayered IDS.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传感器/物联网设备与边缘计算平台**：智能家居设备，如智能电视、智能冰箱、恒温器、智能灯泡和家庭物理安全摄像头，是该应用场景中的传感器或“物品”。这些设备通过家用路由器/网关连接到互联网。在这个应用场景中，我们考虑的是基于网络的安全解决方案，而非基于设备的解决方案。我们还假设家用路由器将作为边缘计算设备，允许我们安装多层入侵检测系统（IDS）。'
- en: '**DL-based intrusion detection**: The home router/gateway will be preinstalled
    with three (one for each layer) DL-based anomaly detectors that will analyze the
    traffics/packets coming from the home''s connected things. Each of the detectors
    will analyze and compare with that layer''s normal traffic to find any anomaly
    or intrusion that, if detected, will be reported to the home owner and/or automatically
    set up countermeasure.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于DL的入侵检测**：家用路由器/网关将预装三个（每层一个）基于DL的异常检测器，这些检测器将分析来自家庭中连接设备的流量/数据包。每个检测器将与该层的正常流量进行比较，寻找任何异常或入侵，一旦检测到，将报告给家庭用户和/或自动设置对策。'
- en: '**Model learning platform**: A home desktop or cloud platform will be needed
    to learn and update the DL model for the anomaly detectors. This will train the
    selected DL model/models for anomaly detection using three reference datasets.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型学习平台**：学习和更新用于异常检测的DL模型需要一个家用桌面或云平台。这个平台将使用三个参考数据集训练选择的DL模型/模型进行异常检测。'
- en: All of the following sections will describe the implementation of the DL-based
    network-level and node-level anomaly detection of the above use cases. All of
    the necessary code is available in the chapter's code folder.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下各节将描述基于DL的网络级和节点级异常检测在上述应用场景中的实现。所有必要的代码都可以在本章的代码文件夹中找到。
- en: DL for IoT security incident detection
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DL在物联网安全事件检测中的应用
- en: Traditional security solutions (such as encryption, authentication, access control,
    and network security) are ineffective for IoT devices. In recent years, DL/ML-based
    solutions have become very popular alternatives to traditional solutions. DL/ML-based
    solutions can monitor IoT devices and their networks intelligently and detect
    various new or zero-day attacks. Importantly, DL/ML can detect and/or predict
    various devices and network level security incidents through anomaly detection.
    By gathering, processing, and analyzing data about various normal and abnormal
    activities of devices/things and their networks, these DL/ML methods can identify
    various security incidents, including IoT device and network level intrusions.
    In the following sections, we briefly present a few DL models that are useful
    in IoT device and network level IDS.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的安全解决方案（如加密、身份验证、访问控制和网络安全）对于物联网设备来说并不奏效。近年来，基于DL/ML的解决方案已成为传统解决方案的热门替代品。基于DL/ML的解决方案可以智能地监控物联网设备及其网络，并检测各种新的或零日攻击。重要的是，DL/ML可以通过异常检测来检测和/或预测各种设备和网络级安全事件。通过收集、处理和分析设备/物品及其网络的正常与异常活动数据，这些DL/ML方法能够识别各种安全事件，包括物联网设备和网络级入侵。在以下各节中，我们将简要介绍几种在物联网设备和网络级入侵检测系统（IDS）中有用的DL模型。
- en: DNN, autoencoder, and LSTM in IoT security incidents detection
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DNN、自编码器和LSTM在物联网安全事件检测中的应用
- en: A number of DL models, including simple DNNs, autoencoders, and recurrent neural
    networks (RNNs)^([6]), are already being used for IoT security enhancement. These
    approaches can be supervised or unsupervised. In this chapter, we will use both
    supervised and unsupervised approaches. For the first use case, we will use the
    LSTM-based supervised approach for device-level intrusion detection. In use case
    two, we will use DNNs and autoencoders for supervised and unsupervised network-level
    intrusion detection, respectively. We are using LSTM for the first use case, as
    device-level intrusion detection is based on time series CPU utilization data
    and LSTM works well with temporal data. On the other hand, an autoencoder is a
    lightweight model and is well suited for resource-constrained IoT devices. We
    have already presented a brief overview of LSTM in the previous chapter and so,
    in the following diagram, we briefly present an overview of autoencoders as a
    review of the model.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 许多深度学习模型，包括简单的DNN、自编码器和递归神经网络（RNNs）^([6])，已经用于物联网安全增强。这些方法可以是监督的或无监督的。在本章中，我们将使用监督和无监督方法。对于第一个用例，我们将使用基于LSTM的监督方法来进行设备级入侵检测。在第二个用例中，我们将分别使用DNN和自编码器进行监督和无监督的网络级入侵检测。我们在第一个用例中使用LSTM，因为设备级入侵检测基于时间序列CPU利用率数据，而LSTM在处理时间数据时表现良好。另一方面，自编码器是一种轻量级模型，非常适合资源受限的物联网设备。我们已经在前一章节中简要介绍了LSTM，因此在下图中，我们简要介绍了自编码器作为模型回顾。
- en: 'As the name suggests, autoencoders encode and decode algorithms. The following
    diagram presents a simple architecture of an autoencoder model:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 正如其名称所示，自编码器是编码和解码算法。下图展示了自编码器模型的简单架构：
- en: '![](img/b3521404-eb04-42d0-b5ab-9f5fc4609717.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b3521404-eb04-42d0-b5ab-9f5fc4609717.png)'
- en: 'As shown in the preceding diagram, autoencoders consist of an input layer and
    an output layer that are connected through one or more hidden layers [7]. As autoencoders
    reproduce the inputs, they have the same number of input and output neurons. Generally,
    an autoencoder consists of two components: an encoder and a decoder. The encoder
    is connected with the input layer and, once it receives the input (**X**), it
    transforms it to a new and compressed representation (**Z**). The compressed code
    is also known as the code or latent variable (**Z**). In the output layer, the
    decoder receives the generated code or compressed code, and transforms it to a
    reconstruction of the original input. The aim of the training procedure in autoencoders
    is to minimize reconstruction errors in the output layer.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，自编码器由一个输入层和一个输出层组成，通过一个或多个隐藏层连接 [7]。由于自编码器复制输入，它们具有相同数量的输入和输出神经元。通常，自编码器由两个组件组成：编码器和解码器。编码器连接输入层，一旦接收到输入（**X**），它将其转换为新的压缩表示（**Z**）。压缩码也称为编码或潜变量（**Z**）。在输出层，解码器接收生成的代码或压缩代码，并将其转换为原始输入的重建。自编码器训练过程的目标是在输出层中最小化重建错误。
- en: Autoencoders are good for diagnosis and fault detection because of their input
    reconstruction at the output layer. Importantly, this special feature of autoencoders
    is really useful in IoT, including **industrial IoT** (**IIoT**), for fault diagnosis
    in hardware devices and machines, and for anomaly detection in operation/data
    gathering/performance. The anomaly detection capability of autoencoders motivates
    us to use the model in the network intrusion detection use case. Also, autoencoders
    are easily transferred between various IoT devices and the network once they are
    available in the cloud or server. Various types of autoencoders are available,
    including denoising, contractive, stacked, sparse, and variational autoencoders.
    In the use case, we will use a simple autoencoder architecture with a standalone
    DL model for intrusion detection, but autoencoders can be integrated with other
    DL models, including **convolutional neural networks** (**CNNs**) and LSTMs. 
    In the following sections, starting with data collection, we will discuss DL-based
    implementations of the aforementioned use cases.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 自动编码器由于其在输出层的输入重构，适用于诊断和故障检测。特别是，自动编码器的这一特殊功能在物联网中非常有用，包括**工业物联网**（**IIoT**），用于硬件设备和机器的故障诊断，以及操作/数据收集/性能中的异常检测。自动编码器的异常检测能力激励我们在网络入侵检测的用例中使用该模型。此外，一旦自动编码器在云或服务器中可用，它们可以轻松地在各种IoT设备和网络之间迁移。可用的自动编码器类型包括去噪、收缩、堆叠、稀疏和变分自动编码器。在本用例中，我们将使用一个简单的自动编码器架构，并为入侵检测使用独立的深度学习模型，但自动编码器也可以与其他深度学习模型集成，包括**卷积神经网络**（**CNNs**）和LSTMs。在接下来的部分中，我们将从数据收集开始，讨论基于深度学习的上述用例实现。
- en: Data collection
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据收集
- en: For both of the use cases, we can generate our own datasets and train and test
    the models on them. In the following paragraphs, we briefly present how we can
    create a dataset for device-level host intrusion detection through a DoS attack.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这两个用例，我们可以生成自己的数据集并在其上训练和测试模型。接下来的段落中，我们简要介绍如何通过DoS攻击为设备级主机入侵检测创建数据集。
- en: CPU utilisation data
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CPU使用率数据
- en: For the DoS attack, we need an attack machine and a target machine. We are using
    a Kali Linux machine as the attacker and a Windows machine as the target (which
    can be home gateway/Raspberry Pi 3/sensors). In Kali Linux, a DoS attack can be
    achieved in multiple ways. One way is to use the `hping3`[.](https://tools.kali.org/information-gathering/hping3)
    `hping3` command as a network tool to send custom TCP/IP packets, and allowing
    for the testing of firewalls, port scanning, address spoofing, and more.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于DoS攻击，我们需要一台攻击机器和一台目标机器。我们使用Kali Linux机器作为攻击者，Windows机器作为目标（可以是家庭网关/Raspberry
    Pi 3/传感器）。在Kali Linux中，可以通过多种方式实现DoS攻击。一种方式是使用`hping3`[.](https://tools.kali.org/information-gathering/hping3)
    `hping3`命令作为网络工具，发送自定义TCP/IP数据包，用于测试防火墙、端口扫描、地址伪造等。
- en: 'This can be used to perform a DoS attack by sending multiple requests in quick
    succession, taking up an IoT server''s/sensor''s resources and making it slower
    or unable to respond. The following screenshot shows CPU utilization of the target
    Windows server before sending the `hping3` command or launching the DoS attack:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过快速连续发送多个请求来执行DoS攻击，耗尽IoT服务器/传感器的资源，使其变慢或无法响应。以下截图显示了发送`hping3`命令或发起DoS攻击之前，目标Windows服务器的CPU使用率：
- en: '![](img/e3b59bea-e0e5-4bca-b35d-dbe9950693d3.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e3b59bea-e0e5-4bca-b35d-dbe9950693d3.png)'
- en: The following command is an example of a DoS attack using Kali Linux's `hping3`
    tool.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令是使用Kali Linux的`hping3`工具进行DoS攻击的示例。
- en: '[PRE0]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following list is the syntax description of the preceding command:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表是前述命令的语法说明：
- en: '`hping3`: The name of the binary application'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hping3`: 二进制应用程序的名称'
- en: '`-c 100000`: The amount of packets'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-c 100000`: 数据包数量'
- en: '`-d 120`: The sizing of each packet'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-d 120`: 每个数据包的大小'
- en: '`-S`: SYN packets only'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-S`: 仅SYN数据包'
- en: '`-w 64`: TCP window size'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-w 64`: TCP窗口大小'
- en: '`-p 21`: The destination port'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-p 21`: 目标端口'
- en: '`--flood`: Means sending packets as fast as possible, without taking care to
    show incoming replies'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--flood`: 表示以最快的速度发送数据包，而不关心是否显示接收到的回复'
- en: '`--rand-source`: Using random source IP addresses; you can also use `-a` or
    `–spoof` to hide hostnames'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--rand-source`: 使用随机源IP地址；你也可以使用`-a`或`–spoof`来隐藏主机名'
- en: '`example.com`: The website or destination IP address or the target machine''s
    IP address'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`example.com`: 网站或目标IP地址，或者目标机器的IP地址'
- en: 'The following screenshot presents CPU utilization of the windows server after
    the DoS attack. We can clearly see that the CPU utilization of the attacked machine
    has increased by 30%:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了 DoS 攻击后 Windows 服务器的 CPU 利用率。我们可以清晰地看到，被攻击的机器 CPU 利用率增加了 30%：
- en: '![](img/75b97622-73d3-4e11-a2a7-080f64da71a3.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/75b97622-73d3-4e11-a2a7-080f64da71a3.png)'
- en: We can run different `hping3` sessions to different target machines, and save
    CPU utilization data. In Windows, a process monitor can be used to save the data.
    For use case one, we are using CPU utilization data for an LSTM-based intrusion
    detection algorithm.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对不同目标机器运行多个 `hping3` 会话，并保存 CPU 利用率数据。在 Windows 系统中，可以使用进程监控工具来保存数据。对于用例一，我们使用基于
    LSTM（长短期记忆网络）的入侵检测算法所需的 CPU 利用率数据。
- en: KDD cup 1999 IDS dataset
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: KDD Cup 1999 IDS 数据集
- en: Traffic-based intelligent network intrusion detection in IoT, we can use the
    Wireshark network monitoring tool to record and save network traffic against different
    attacks related to network intrusion, and create our own dataset. In addition,
    we can use an existing open source dataset.  We are using the the KDD cup 1999
    IDS dataset.  This dataset is well suited for use case two as it is on the network-level
    intrusions. In the following paragraphs, we will briefly present an overview of
    the dataset. Please see reference for further detail.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 基于流量的物联网智能网络入侵检测，我们可以使用 Wireshark 网络监控工具来记录并保存不同攻击类型下的网络流量，从而创建我们自己的数据集。此外，我们还可以使用现有的开源数据集。我们正在使用
    KDD Cup 1999 IDS 数据集。该数据集非常适合用例二，因为它涉及的是网络级入侵检测。在接下来的段落中，我们将简要介绍该数据集的概况。更多细节请参考相关资料。
- en: 'The KDD cup 1999 datasets were generated by the **Defense Advanced Research
    Projects Agency** (**DARPA**) on a simulated air force model. The datasets were
    collected using two different sessions:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: KDD Cup 1999 数据集由 **国防高级研究计划局** (**DARPA**) 在模拟空军模型上生成。数据集是通过两次不同的会话收集的：
- en: Training data was collected for 7 weeks
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练数据收集时间为 7 周
- en: Testing data was collected for 2 weeks
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试数据收集时间为 2 周
- en: The complete dataset includes 39 network level attack types and 200 instances
    of background traffic. The network traffic dataset is either classified as one
    of the attack types or as 'normal'. There are three versions of the KDD cup 1999
    IDS datasets—a full KDD dataset, corrected KDD dataset, and 10% KDD dataset. The
    10% KDD dataset is the most frequently used of the three datasets, and we are
    using this for use case two. In use case two, we will use an autoencoder for the
    clustering of normal and attack or intrusion traffic. Also, we will test a DNN
    for the classification of normal and attack traffic.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 完整数据集包括 39 种网络级攻击类型和 200 个背景流量实例。网络流量数据集被分类为某一攻击类型或“正常”。KDD Cup 1999 IDS 数据集有三个版本——完整的
    KDD 数据集、修正的 KDD 数据集以及 10% KDD 数据集。10% KDD 数据集是这三个数据集中使用最频繁的，我们将在用例二中使用该数据集。在用例二中，我们将使用自编码器对正常流量和攻击或入侵流量进行聚类。此外，我们还将测试一个
    DNN（深度神经网络）对正常流量和攻击流量进行分类。
- en: Data exploration
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据探索
- en: In the following paragraphs, we will explore the two datasets used for the two
    use cases (the CPU utilization dataset for IoT device level, and the KDD cup 1999
    IDS dataset for network-level intrusion detection).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的段落中，我们将探讨用于两个用例的两个数据集（物联网设备级的 CPU 利用率数据集，以及用于网络级入侵检测的 KDD Cup 1999 IDS
    数据集）。
- en: '**CPU utilization dataset**: The dataset is a CSV file consisting of dates
    and times with the corresponding CPU utilization rates (%). The dataset consists
    of 700 utilization values recorded every minute. The following screenshot presents
    a snapshot of the dataset:'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CPU 利用率数据集**：该数据集是一个 CSV 文件，包含日期和时间以及相应的 CPU 利用率（%）。数据集包含了每分钟记录的 700 个利用率值。以下截图展示了数据集的一个快照：'
- en: '![](img/5a9bd417-c963-429f-8793-92d412f902ac.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5a9bd417-c963-429f-8793-92d412f902ac.png)'
- en: '**KDD cup 1999 IDS dataset**: The following screenshot shows a snapshot of
    the KDD cup 1999 IDS dataset. It is clear from the screenshot that the dataset
    is not ready to be used in the model. The dataset has protocol types, categorical
    values, and data values are not normalized. Also, we need to split the data into
    three sets in order to implement a three-layered, network-level IDS implementation.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**KDD Cup 1999 IDS 数据集**：以下截图展示了 KDD Cup 1999 IDS 数据集的一个快照。从截图中可以明显看出，数据集尚未准备好用于模型。数据集包含协议类型、分类值，且数据值未进行标准化。此外，我们还需要将数据集划分为三个子集，以便实现一个三层网络级入侵检测系统（IDS）。'
- en: 'The following screenshot presents a network traffic pattern of normal communication:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了正常通信的网络流量模式：
- en: '![](img/9e4ba990-37c3-49e6-be70-35bfbd2415b4.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9e4ba990-37c3-49e6-be70-35bfbd2415b4.png)'
- en: 'The following screenshot presents a network traffic pattern of abnormal or
    attack (such as those by  smurf-it, a network-level distributed DoS attack) communication:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了异常或攻击（例如由smurf-it发起的网络级分布式DoS攻击）通信的网络流量模式：
- en: '![](img/1239b537-0426-4d1a-b244-3fe45f9771ae.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1239b537-0426-4d1a-b244-3fe45f9771ae.png)'
- en: Data preprocessing
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据预处理
- en: 'Data preprocessing is an essential step for a DL pipeline. The CPU utilization
    dataset is ready to be used in the training, but the KDD cup 1999 IDS dataset
    needs multilevel preprocessing that includes the following three steps:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 数据预处理是深度学习流程中的一个重要步骤。CPU利用率数据集已准备好用于训练，但KDD Cup 1999 IDS数据集需要多级预处理，包括以下三个步骤：
- en: Splitting the data into three different protocol sets (application, transport,
    and network)
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据分为三个不同的协议集（应用层、传输层和网络层）
- en: Duplicate data removal, categorical data conversion, and normalization
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复数据删除、类别数据转换和归一化
- en: Feature selection (optional)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 特征选择（可选）
- en: 'Using the following lines of code is a potential way of splitting the dataset
    into three datasets, namely `Final_App_Layer`, `Final_Transport_Layer`, and `Final_Network_Layer`:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下代码行是将数据集拆分为三个数据集的一个潜在方法，即`Final_App_Layer`、`Final_Transport_Layer`和`Final_Network_Layer`：
- en: '[PRE1]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once the datasets are ready, we remove the duplicate data entries and normalize
    the values of the remaining entries. The following lines of code or function can
    be used for duplicate removal and normalization:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据集准备好，我们就删除重复的数据条目并归一化其余条目的值。可以使用以下代码行或函数进行重复数据删除和归一化：
- en: '[PRE2]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The final preprocessing of the datasets is the optimal set of features selection
    for the classifier. This is an optional process, but is useful for resource-constrained
    IoT devices, as this will minimize the size of the input layer or neurons of the network.
    The following lines of code or functions exploiting random forest can be used
    to do this preprocessing:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集的最终预处理是为分类器选择最优的特征集。这个过程是可选的，但对于资源受限的物联网设备很有用，因为这将最小化网络输入层或神经元的大小。可以使用以下代码行或利用随机森林的函数进行该预处理：
- en: '[PRE3]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The following two graphs highlight the 41 features of the application-layer
    and network-layer datasets, respectively. Features are ordered according to their
    importance, and it is clear from the graphs that different sets of features are
    important for different layer dataset. We tested the DL models with 8-12 and 41
    features:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下两张图分别突出显示了应用层和网络层数据集的41个特征。特征按重要性排序，从图中可以明显看出，不同层数据集的重要特征集是不同的。我们用8-12个特征和41个特征对深度学习模型进行了测试：
- en: '![](img/93e2b449-e523-4108-a97a-9234a987a43a.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/93e2b449-e523-4108-a97a-9234a987a43a.png)'
- en: 'The following graphs highlight the 41 features of the network-layer datasets:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表突出显示了网络层数据集的41个特征：
- en: '![](img/1487a535-5731-4952-afe6-24d1a4104318.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1487a535-5731-4952-afe6-24d1a4104318.png)'
- en: Model training
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型训练
- en: As we mentioned earlier in the chapter, we are using LSTM for use case one,
    an autoencoder for the multilayer IDS dataset, and DNN for the overall IDS dataset. 
    In the following subsections, we will present the DL model-training process for
    the two use cases.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在本章前面提到的，我们在用例一中使用LSTM，在多层IDS数据集上使用自编码器，在整个IDS数据集上使用DNN。在接下来的小节中，我们将展示这两个用例的深度学习模型训练过程。
- en: Use case one
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例一
- en: 'We considered a three-LSTMs-layered network architecture for the CPU utilization
    based host/device-level intrusion detection. The following diagram presents the
    LSTM architecture we used:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们考虑了一个三层LSTM网络架构用于基于CPU利用率的主机/设备级入侵检测。下图展示了我们使用的LSTM架构：
- en: '![](img/017b7821-457a-4563-9de6-8e53a10ab266.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/017b7821-457a-4563-9de6-8e53a10ab266.png)'
- en: 'We can train and test the model by running the `lstm_anomaly_detection.py`
    file (available in the chapter''s code folder) as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过运行`lstm_anomaly_detection.py`文件（可在本章的代码文件夹中找到）来训练和测试模型，方法如下：
- en: '[PRE4]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Use case two
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例二
- en: 'We used an autoencoder for the multilayered IDS implementation using the KDD
    cup 1999 IDS dataset, and we have trained and tested the autoencoder on the three
    datasets. To train the model on each layer''s dataset, we need to run the `IDS_AutoEncoder_KDD.py` file
    (available in the chapter''s code folder) on the dataset as follows:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用自编码器进行多层IDS实现，使用的是KDD Cup 1999 IDS数据集，并且已经在这三个数据集上进行了训练和测试。为了在每个层的数据集上训练模型，我们需要运行`IDS_AutoEncoder_KDD.py`文件（可在本章的代码文件夹中找到），方法如下：
- en: '[PRE5]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We also trained and tested a DNN model on the overall KDD cup 1999 IDS dataset.
    To do so, we need to run the `DNN-KDD-Overall.py` file (available in the chapter''s
    code folder) as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在整体 KDD Cup 1999 IDS 数据集上训练并测试了一个 DNN 模型。为此，我们需要运行 `DNN-KDD-Overall.py` 文件（位于本章的代码文件夹中），方法如下：
- en: '[PRE6]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For all of the models, we have saved the best possible model to import and
    use in IoT devices. Also, we have saved models'' logs using TensorBoard to visualize
    different aspects of the models, including the networks, and their performance
    graphs. We can generate the performance graphs and networks by running following
    command:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有模型，我们都保存了最佳的模型，以便在 IoT 设备中导入和使用。同时，我们使用 TensorBoard 保存了模型日志，以可视化模型的不同方面，包括网络和性能图表。我们可以通过运行以下命令生成性能图表和网络：
- en: '[PRE7]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Once TensorBoard is running, navigate your web browser to `localhost:6006` to
    view the TensorBoard and view the network of the corresponding model. The following
    diagram is the architecture for the autoencoder used in the multilayered IDS for
    IoT:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 TensorBoard 正在运行，可以通过浏览器访问 `localhost:6006` 来查看 TensorBoard 并查看相应模型的网络结构。以下图是用于物联网多层
    IDS 中的自动编码器架构：
- en: '![](img/f3116f56-5ea6-41d7-bd22-2ee0e0eed884.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3116f56-5ea6-41d7-bd22-2ee0e0eed884.png)'
- en: Model evaluation
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型评估
- en: 'We can evaluate three different aspects of the models:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以评估模型的三个不同方面：
- en: Learning/(re)training time
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习/（重新）训练时间
- en: Storage requirement
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储需求
- en: Performance (accuracy)
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能（准确性）
- en: On a desktop (Intel Xenon CPU E5-1650 v3@3.5GHz and 32 GB RAM) with GPU support,
    the training of LSTM on the CPU-utilization dataset and the autoencoder on the
    KDD layered wise dataset (reduced dataset) took a few minutes. The DNN model on
    the overall dataset took a little over an hour, which was expected as it has been
    trained on a larger dataset (KDD's overall 10% dataset).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在一台配有 GPU 支持的桌面电脑（Intel Xenon CPU E5-1650 v3@3.5GHz 和 32 GB RAM）上，LSTM 在 CPU
    利用率数据集上的训练和自动编码器在 KDD 分层数据集（减少的数据集）上的训练仅花费了几分钟。DNN 模型在整体数据集上的训练花费了超过一个小时，这是可以预料的，因为它是基于更大的数据集（KDD
    整体 10% 数据集）进行训练的。
- en: 'The storage requirement of a model is an essential consideration in resource-constrained
    IoT devices. The following screenshot presents the storage requirements for the
    three models we tested for the two use cases:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 模型的存储需求是资源受限的 IoT 设备中的一个重要考虑因素。以下截图展示了我们为两个用例测试的三种模型的存储需求：
- en: '![](img/5fc04244-20c1-4be5-b407-4b052d45d4a9.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5fc04244-20c1-4be5-b407-4b052d45d4a9.png)'
- en: As shown in the screenshot, autoencoders took storage in the range of KB. The
    final version of a stored autoencoder model took only 85 KB, LSTM took 1.5 MB,
    and DNN took 16.3 MB. In terms of storage requirements, all the models are fine
    to be deployed in many resource-constrained IoT devices, including the Raspberry
    Pi and smartphones. Also, it is clear from the screenshot that an autoencoder
    is a very lightweight model, because of the optimal feature selection process,
    among other reasons.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如截图所示，自动编码器的存储需求在 KB 范围内。存储的自动编码器模型的最终版本仅占 85 KB，LSTM 占 1.5 MB，DNN 占 16.3 MB。在存储需求方面，所有模型都适合在许多资源受限的
    IoT 设备中部署，包括 Raspberry Pi 和智能手机。此外，从截图中可以看出，由于优化的特征选择过程等原因，自动编码器是一个非常轻量的模型。
- en: Finally, we have evaluated the performance of the models. In both of the use
    cases, dataset-wide evaluation or testing has been done during the training phase
    in the PC platform/server side.  We can also test them on the Raspberry Pi 3 or
    any IoT edge-computing devices as the models are saved and importable.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们评估了模型的性能。在这两个用例中，数据集范围的评估或测试是在 PC 平台/服务器端的训练阶段进行的。我们也可以在 Raspberry Pi 3
    或任何 IoT 边缘计算设备上测试它们，因为这些模型已经保存并可导入使用。
- en: Model performance (use case one)
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型性能（用例一）
- en: 'The following graph shows the validation result of the LSTM used on the CPU
    utilization dataset:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表展示了在 CPU 利用率数据集上使用 LSTM 的验证结果：
- en: '![](img/34a51846-ba91-4d78-9cb3-0c9e2b58c2ff.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/34a51846-ba91-4d78-9cb3-0c9e2b58c2ff.png)'
- en: As we can see in the graph, the prediction follows the nonanomalous or 'normal'
    CPU utilization data series closely, and this is a hint that it is working fine.
    Importantly, when it finds the anomalous observations, the difference between
    the observed and predicted CPU utilization values (normalized) are significantly
    different to the normal behavior. This is an indication that there might be a
    DoS or DDoS attack to the IoT device. The error differences are plotted as a root
    mean squared (RMS) value, one of the most popular metrics of this kind.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 从图中可以看出，预测结果紧密跟随非异常或“正常”的CPU利用率数据系列，这表明模型运行良好。重要的是，当它发现异常观察值时，观察到的与预测的CPU利用率值（归一化后的）与正常行为之间存在显著差异。这表明可能存在对物联网设备的DoS或DDoS攻击。误差差异以均方根（RMS）值进行绘制，这是此类指标中最常用的度量标准之一。
- en: Model performance (use case two)
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型性能（用例二）
- en: 'We have tested the autoencoder model on the three datasets for three different
    layer''s IDS. The following screenshot presents the evaluation result snapshot
    for the application layer''s IDS:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在三个数据集上测试了自编码器模型，用于三个不同层次的IDS。以下截图展示了应用层IDS的评估结果快照：
- en: '![](img/31375c99-af8d-4c90-9415-d82dd098be3b.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/31375c99-af8d-4c90-9415-d82dd098be3b.png)'
- en: As we can see from the screenshot, training accuracy and validation and test
    accuracy are well above 90% when we used the first 12 most important features
    for the training. The performance could be different if we used a different feature
    set.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 从截图中可以看出，当我们使用前12个最重要的特征进行训练时，训练准确率、验证准确率和测试准确率均高于90%。如果使用不同的特征集，性能可能会有所不同。
- en: 'The following graph presents epoch-wise training accuracy of the preceding
    model on the application layer IDS dataset:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表展示了前述模型在应用层IDS数据集上的每个epoch的训练准确率：
- en: '![](img/a8821215-c9ca-47c4-9034-7d09bdc35bc9.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8821215-c9ca-47c4-9034-7d09bdc35bc9.png)'
- en: 'We obtained some interesting evaluation results for the network and transport
    layers IDS model training. If we use the first 12 most important features, the
    validation accuracy is in the range of 50%, and if we change the feature set to
    be in between 8 and 10, the accuracy moves into the range of 80–90%. The following
    two screenshots present a snapshot of the evaluation on the network layer IDS
    experimentation:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们获得了一些有趣的评估结果，关于网络和传输层IDS模型的训练。如果使用前12个最重要的特征，验证准确率在50%左右；如果将特征集改为8到10之间，准确率则提高到80%到90%之间。以下两张截图展示了网络层IDS实验的评估快照：
- en: '![](img/dc7bff50-fee4-4072-a7f2-414fc16399d3.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dc7bff50-fee4-4072-a7f2-414fc16399d3.png)'
- en: Interestingly, as we can see from the second screenshot, the accuracy is in
    the range of 50% up to 50 epochs, and then it jumps into the range of 90%. The
    final accuracy, or the accuracy of the saved model, is in the range 91–98%. So,
    they are sufficient for detecting network and transport layer anomalies.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，从第二张截图可以看出，准确率在前50个epoch内约为50%，然后迅速上升到90%以上。最终的准确率，或保存模型的准确率，处于91%到98%之间。因此，它们足以检测网络和传输层的异常。
- en: '![](img/76765bc5-ae6f-4206-8013-8b147c1d7748.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/76765bc5-ae6f-4206-8013-8b147c1d7748.png)'
- en: 'The following screenshot shows the training performance of the DNN model on
    the overall KDD dataset:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了DNN模型在整体KDD数据集上的训练表现：
- en: '![](img/569eaec3-290d-40e1-a793-833fb4c46da1.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/569eaec3-290d-40e1-a793-833fb4c46da1.png)'
- en: '![](img/65470a14-f494-4702-9b01-fe0afe95da56.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65470a14-f494-4702-9b01-fe0afe95da56.png)'
- en: As we can see from the preceding figures, test accuracy is close to 1 or 100%.
    We also separately tested the saved model and test accuracy was well above 0.90
    or 90%. Hence, the DNN is also good enough to detect network-level intrusions
    in IoT networks.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的图示可以看出，测试准确率接近1或100%。我们还单独测试了保存的模型，测试准确率远高于0.90或90%。因此，DNN在检测物联网网络中的网络级入侵方面也足够优秀。
- en: Summary
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Security is the single most important issue in IoT realization. Traditional
    PC/desktop security solutions, especially signature-based solutions, are not effective
    in IoT applications. Behavior-based solutions, such as anomaly detection, are
    preferable in IoT. DL/ML models are very useful tools in IoT for data analysis
    and also for security incident detection. In this chapter, we presented DL-based
    network and device behavioral data analysis, and security incident detection techniques
    for IoT applications in general. In the first part of this chapter, we briefly
    described various IoT security attacks and their potential detection techniques,
    including DL/ML based techniques. We considered two different levels of intrusion
    detection in IoT applications. The first use case is on device-level or host-level
    intrusion detection, and the second use case is on network-level intrusion detection.
    In the second part of the chapter, we presented the DL-based anomaly or incident
    detection part of the use cases' implementations. As found in the evaluations,
    the chosen DL models are good enough to detect device- and network-level intrusions
    in IoT applications.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性是物联网实现中的最重要问题。传统的PC/桌面安全解决方案，特别是基于签名的解决方案，在物联网应用中效果不佳。基于行为的解决方案，如异常检测，更适用于物联网。深度学习（DL）/机器学习（ML）模型是物联网中非常有用的工具，不仅用于数据分析，还用于安全事件检测。在本章中，我们介绍了基于DL的网络和设备行为数据分析以及物联网应用中的安全事件检测技术。在本章的第一部分，我们简要描述了各种物联网安全攻击及其潜在检测技术，包括基于DL/ML的技术。我们考虑了物联网应用中的两种不同级别的入侵检测。第一个使用案例是设备级或主机级的入侵检测，第二个使用案例是网络级的入侵检测。在本章的第二部分，我们介绍了基于DL的异常或事件检测部分的实现。通过评估发现，所选的DL模型足以检测物联网应用中的设备级和网络级入侵。
- en: IoT will be used in various applications, such as infrastructure and industry,
    to monitor their health conditions. One of the potential applications of health
    monitoring is predictive maintenance of the monitored subject (such as a motor)
    to avoid service disruption or any other incidents.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网将被应用于各类场景，如基础设施和工业，以监控其健康状况。健康监控的潜在应用之一是被监控对象（如电机）的预测性维护，以避免服务中断或其他事故发生。
- en: In the next chapter, we will briefly introduce the importance of IoT-based predictive
    maintenance and its implementation using DL models.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将简要介绍基于物联网的预测性维护的重要性及其使用深度学习模型的实现。
- en: References
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '*Internet of Things (IoT) connected devices installed base worldwide from 2015
    to 2025 (in billions)*, at [https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/.](https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*全球2015年至2025年物联网（IoT）连接设备安装基数（以十亿计）*，见[https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/.](https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/)'
- en: '*Real-Time Detection of Application-Layer DDoS Attack Using Time Series Analysis*,
    T. Ni, X. Gu, H. Wang, and Y. Li, Journal of Control Science and Engineering,
    vol. 2013, pp. 1–6, 2013.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*利用时间序列分析实时检测应用层DDoS攻击*，T. Ni，X. Gu，H. Wang 和 Y. Li，《控制科学与工程学报》，第2013卷，第1-6页，2013年。'
- en: '*DDoS in the IoT: **Mirai and Other Botnets*, C. Kolias, G. Kambourakis, A.
    Stavrou, and J. Voas, IEEE Computer, vol. 50, no. 7, pp. 80–84, 2017.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*物联网中的DDoS：**Mirai和其他僵尸网络*，C. Kolias，G. Kambourakis，A. Stavrou，J. Voas，《IEEE计算机》，第50卷，第7期，第80-84页，2017年。'
- en: 2016 Dyn cyberattack, at [https://en.wikipedia.org/wiki/2016_Dyn_cyberattack.](https://en.wikipedia.org/wiki/2016_Dyn_cyberattack)
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2016年Dyn网络攻击，见[https://en.wikipedia.org/wiki/2016_Dyn_cyberattack.](https://en.wikipedia.org/wiki/2016_Dyn_cyberattack)
- en: '*A Big Network Traffic Data Fusion **Approach Based on Fisher and Deep Auto-Encoder*,
    Tao X., Kong D., Wei Y., and Wang Y. (2016), Information, 7(2), 20.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*基于Fisher和深度自编码器的大型网络流量数据融合**方法*，Tao X.，Kong D.，Wei Y. 和 Wang Y.（2016年），《信息》，第7卷第2期，第20页。'
- en: '*An Effective Intrusion Detection Classifier Using Long Short-Term Memory with
    Gradient Descent Optimization*, Kim J., and Kim H. (2017, February), In Platform
    Technology and Service (PlatCon), 2017 International Conference on (pp. 1-6),
    IEEE.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*基于长短时记忆（LSTM）和梯度下降优化的有效入侵检测分类器*，Kim J. 和 Kim H.（2017年2月），在平台技术与服务（PlatCon），2017年国际会议（第1-6页），IEEE。'
- en: Pierre Baldi, *Autoencoders, Unsupervised Learning and Deep Architectures*,
    Isabelle Guyon, Gideon Dror, Vincent Lemaire, Graham Taylor, and Daniel Silver
    (Eds.), In Proceedings of the 2011 International Conference on Unsupervised and
    Transfer Learning workshop—Volume 27 (UTLW'11), Vol. 27, JMLR.org 37-50, 2011.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pierre Baldi，*自编码器、无监督学习与深度架构*，Isabelle Guyon，Gideon Dror，Vincent Lemaire，Graham
    Taylor 和 Daniel Silver（编辑），见《2011年无监督与迁移学习国际会议论文集——第27卷（UTLW'11）》，第27卷，JMLR.org
    37-50，2011。
- en: KDD Cup 1999 Data, at [http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html.](http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html)
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KDD Cup 1999 数据，来自 [http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html](http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html)
