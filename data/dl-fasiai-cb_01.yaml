- en: '*Chapter 1*: Getting Started with fastai'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第1章*: 快速入门fastai'
- en: Over the last decade, deep learning has revolutionized swathes of technology,
    from image recognition to machine translation. Until recently, only those with
    extensive training and access to specialized hardware have been able to unlock
    the benefits of deep learning. The fastai framework is an effort to democratize
    deep learning by making it accessible to non-specialists. One of the key ways
    that fastai opens up deep learning to the masses is by making it easy to get started.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的十年里，深度学习彻底改变了众多技术领域，从图像识别到机器翻译。直到最近，只有那些经过广泛训练并拥有专门硬件的人才能解锁深度学习的好处。fastai框架旨在通过使深度学习对非专业人士更易获取，来实现深度学习的普及化。fastai使得深度学习能够面向大众的关键方式之一就是让入门变得简单。
- en: 'In this chapter, we will show you what you need to get started with fastai,
    starting with how to set up an environment for fastai. By the end of this chapter,
    you will be able to do the following: set up a cloud environment in which to run
    `fastai` examples; exercise a basic fastai example; explain the relationship between
    fastai and PyTorch (the underlying deep learning library for fastai); and contrast
    fastai with Keras, the other high-level library for deep learning.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将向你展示开始使用fastai所需的内容，从如何设置fastai的环境开始。到本章结束时，你将能够做到以下几点：设置一个用于运行`fastai`示例的云环境；练习一个基础的fastai示例；解释fastai与PyTorch（fastai的底层深度学习库）之间的关系；并对比fastai与Keras，这个另一个高层次的深度学习库。
- en: 'Here are the recipes that will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: Setting up a fastai environment in Paperspace Gradient
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Paperspace Gradient中设置fastai环境
- en: Setting up a fastai environment in Google Colaboratory (Google Colab)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Google Colaboratory（Google Colab）中设置fastai环境
- en: Setting up JupyterLab environment in Paperspace Gradient
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Paperspace Gradient中设置JupyterLab环境
- en: '"Hello world" for fastai—creating a model for the **Modified National Institute
    of Science and Technology** (**MNIST) dataset**'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fastai的"Hello world"——为**修改版国家科学技术研究所**（**MNIST**）数据集创建一个模型
- en: 'Understanding the world in four applications: tables, text, recommender systems,
    and images'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从四个应用领域了解世界：表格、文本、推荐系统和图像
- en: Working with PyTorch tensors
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用PyTorch张量
- en: Contrasting fastai with Keras
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对比fastai与Keras
- en: Test your knowledge
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试你的知识
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will be using the following technologies:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，你将使用以下技术：
- en: 'Paperspace Gradient: [https://gradient.paperspace.com/](https://gradient.paperspace.com/)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Paperspace Gradient: [https://gradient.paperspace.com/](https://gradient.paperspace.com/)'
- en: 'Google Colab: [https://colab.research.google.com/notebooks/intro.ipynb](https://colab.research.google.com/notebooks/intro.ipynb)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Google Colab: [https://colab.research.google.com/notebooks/intro.ipynb](https://colab.research.google.com/notebooks/intro.ipynb)'
- en: 'Google Drive: [https://drive.google.com](https://drive.google.com)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Google Drive: [https://drive.google.com](https://drive.google.com)'
- en: 'Keras: [https://keras.io/](https://keras.io/)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Keras: [https://keras.io/](https://keras.io/)'
- en: 'You can find the code referred to in this chapter at the following link:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下链接找到本章提到的代码：
- en: '[https://github.com/PacktPublishing/Deep-Learning-with-fastai-Cookbook/tree/main/ch1](https://github.com/PacktPublishing/Deep-Learning-with-fastai-Cookbook/tree/main/ch1)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Deep-Learning-with-fastai-Cookbook/tree/main/ch1](https://github.com/PacktPublishing/Deep-Learning-with-fastai-Cookbook/tree/main/ch1)'
- en: Setting up a fastai environment in Paperspace Gradient
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Paperspace Gradient中设置fastai环境
- en: 'There are two free cloud environments that you can use to explore fastai: **Paperspace
    Gradient** and **Google Colab**. In this section, we''ll go through the steps
    to set up Paperspace Gradient with a fastai notebook environment, and in the next
    section, we''ll go through the setup steps for Colab. It''s your choice, so pick
    the environment that works best for you.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用两个免费的云环境来探索fastai：**Paperspace Gradient**和**Google Colab**。在本节中，我们将介绍如何设置Paperspace
    Gradient与fastai笔记本环境，并在下一节中介绍Colab的设置步骤。这是你的选择，选择最适合你的环境。
- en: Gradient is simpler to use because you have access to a standard filesystem
    for storage. With Colab, you need to use Google Drive for storage and, unlike
    Gradient, you don't have convenient access to the terminal for command-line interactions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Gradient使用起来更简单，因为你可以访问一个标准的文件系统来进行存储。而在Colab中，你需要使用Google Drive来进行存储，并且与Gradient不同，你无法方便地访问终端来进行命令行交互。
- en: On the other hand, Colab gives you direct access to a wider set of libraries
    beyond those needed for fastai—for example, you can run the Keras MNIST example
    in Colab but it won't work off the shelf in a Gradient fastai instance. To get
    the most out of the examples in the book, it's best to set up both environments
    so that you can choose which one works best for you as you go along. We'll start
    with Gradient, since it is the simplest to get started with.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，Colab 提供了比 fastai 更多的库，例如，你可以在 Colab 中运行 Keras MNIST 示例，但它无法直接在 Gradient
    fastai 实例中运行。为了充分利用本书中的示例，最好设置这两种环境，这样你可以根据需要选择最适合你的环境。我们将从 Gradient 开始，因为它是最容易入手的。
- en: Getting ready
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Prior to setting up Gradient for fastai, you need to create a Paperspace account.
    You can do this by going to [https://console.paperspace.com/signup?gradient=true](https://console.paperspace.com/signup?gradient=true).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在为 fastai 设置 Gradient 之前，你需要创建一个 Paperspace 账户。你可以通过访问 [https://console.paperspace.com/signup?gradient=true](https://console.paperspace.com/signup?gradient=true)
    来完成注册。
- en: How to do it…
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Once you have a Paperspace account, you can create a free fastai notebook in
    Gradient by following these steps to create a fastai notebook instance in Gradient.
    Once created, this will be a complete Jupyter Notebook environment with all the
    libraries that you need (including fastai, PyTorch, and related libraries).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了 Paperspace 账户，就可以按照以下步骤在 Gradient 中创建一个免费的 fastai 笔记本。创建后，这将是一个完整的 Jupyter
    Notebook 环境，包含你需要的所有库（包括 fastai、PyTorch 及相关库）。
- en: Go to the Paperspace site and sign in using the account you created in the *Getting
    ready* section.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 Paperspace 网站并使用在 *准备工作* 部分创建的账户登录。
- en: From the pulldown at the top of the page, select **Gradient**:![Figure 1.1\.
    – Selecting gradient from the pulldown
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在页面顶部的下拉菜单中，选择 **Gradient**：![图 1.1 – 从下拉菜单中选择 Gradient
- en: '](img/B16216_01_01.jpg)'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_01.jpg)'
- en: Figure 1.1\. – Selecting gradient from the pulldown
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.1 – 从下拉菜单中选择 Gradient
- en: Select the **Notebooks** tab:![Figure 1.2 – Selecting the Notebooks tab
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **笔记本** 标签：![图 1.2 – 选择笔记本标签
- en: '](img/B16216_01_02.jpg)'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_02.jpg)'
- en: Figure 1.2 – Select the Notebooks tab
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.2 – 选择笔记本标签
- en: Select the **CREATE** button.![Figure 1.3 – CREATE button
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **创建** 按钮。![图 1.3 – 创建按钮
- en: '](img/B16216_01_03.jpg)'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_03.jpg)'
- en: Figure 1.3 – CREATE button
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.3 – 创建按钮
- en: Enter a name for your notebook in the **Name** field.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **名称** 字段中输入你的笔记本名称。
- en: In the **Select a runtime** section, select **fastai**.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **选择运行时** 部分，选择 **fastai**。
- en: In the **Select a machine** section, select **Free-GPU** or **Free-P5000**.
    Note that you may receive a message indicating out of capacity for the machine
    type you selected. If this happens, you can either choose another GPU-enabled
    machine type or wait a few minutes and try again with your original machine type.
    Also note that after your notebook is created, you can change the machine type—for
    example, if you find that the free instance is not meeting your needs, you can
    switch your notebook to a paid machine. You can also define multiple notebooks
    for different applications and configure auto-shutdown (how many hours your instance
    will run before shutting itself down) if you opt for a paid subscription. For
    details, see [https://console.paperspace.com/teim6pi2i/upgrade](https://console.paperspace.com/teim6pi2i/upgrade).
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **选择机器** 部分，选择 **Free-GPU** 或 **Free-P5000**。请注意，你可能会收到一条提示消息，说明你选择的机器类型超出了容量。如果发生这种情况，你可以选择另一个支持
    GPU 的机器类型，或者稍等几分钟再试。如果你的笔记本已经创建完成，你还可以更改机器类型。例如，如果你发现免费的实例无法满足需求，可以将笔记本切换到付费机器。你还可以为不同的应用程序定义多个笔记本，并配置自动关机（即实例运行多少小时后自动关闭），如果你选择付费订阅。详细信息请参见
    [https://console.paperspace.com/teim6pi2i/upgrade](https://console.paperspace.com/teim6pi2i/upgrade)。
- en: Select the **START NOTEBOOK** button to launch the process of creating a new
    fastai instance for you in Gradient.![Figure 1.4 – START NOTEBOOK button
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **启动笔记本** 按钮，以在 Gradient 中为你创建一个新的 fastai 实例。![图 1.4 – 启动笔记本按钮
- en: '](img/B16216_01_04.jpg)'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_04.jpg)'
- en: Figure 1.4 – START NOTEBOOK button
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.4 – 启动笔记本按钮
- en: Your notebook will take a minute or so to be created. When it is ready, you
    will see a **Running** message at the bottom of the screen:![Figure 1.5 – Running
    message
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的笔记本需要大约一分钟的时间来创建。当它准备好时，你会在屏幕底部看到 **正在运行** 消息：![图 1.5 – 正在运行的消息
- en: '](img/B16216_01_05.jpg)'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_05.jpg)'
- en: Figure 1.5 – Running message
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.5 – 正在运行的消息
- en: Next, you should see a Jupyter button appear in the navigation panel on the
    left, as highlighted in *Figure 1.6*:![Figure 1.6 – Jupyter icon in the navigation
    panel
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你应该会在左侧的导航面板中看到一个 Jupyter 按钮，如 *图 1.6* 中所示：![图 1.6 – 导航面板中的 Jupyter 图标
- en: '](img/B16216_01_06.jpg)'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_06.jpg)'
- en: Figure 1.6 – Jupyter icon in the navigation panel
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.6 – 导航面板中的 Jupyter 图标
- en: 'Select the Jupyter button to start your new notebook environment. You should
    now see a Jupyter files view, as shown in *Figure 1.7*:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 Jupyter 按钮以启动新的笔记本环境。你现在应该会看到 Jupyter 文件视图，如 *图 1.7* 所示：
- en: '![Figure 1.7 – Jupyter file view in Gradient'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.7 – Gradient 中的 Jupyter 文件视图'
- en: '](img/B16216_01_07.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_07.jpg)'
- en: Figure 1.7 – Jupyter file view in Gradient
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – Gradient 中的 Jupyter 文件视图
- en: 'Now that your notebook has started, you need to validate that it was set up
    correctly by running a short notebook that checks the fastai version available
    to your notebook and confirms that your notebook has access to **graphics processing
    units** (**GPUs**), the specialized hardware required to efficiently run subsequent
    examples in this book:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的笔记本已经启动，你需要通过运行一个简短的笔记本来验证它是否正确设置。此笔记本将检查你的笔记本上可用的 fastai 版本，并确认笔记本是否能够访问
    **图形处理单元**（**GPU**），这是后续示例高效运行所必需的专用硬件：
- en: Open a terminal in the root directory of your Gradient notebook environment:![Figure
    1.8– Pulldown to open a terminal in Jupyter notebook
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 Gradient 笔记本环境的根目录中打开终端：![图 1.8– 在 Jupyter 笔记本中下拉打开终端
- en: '](img/B16216_01_08.jpg)'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_08.jpg)'
- en: Figure 1.8– Pulldown to open a terminal in Jupyter notebook
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.8– 在 Jupyter 笔记本中下拉打开终端
- en: 'In the terminal, create a new directory, `fastai_cookbook`, in the root level
    of your notebook:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中，在笔记本的根目录创建一个新目录 `fastai_cookbook`：
- en: '[PRE0]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In the terminal, make this new directory your current directory:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中，将此新目录设置为当前目录：
- en: '[PRE1]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Initialize `git` in this new directory:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此新目录中初始化 `git`：
- en: '[PRE2]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Clone the repository for the book:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克隆本书的仓库：
- en: '[PRE3]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once the repository has been cloned, go to the `ch1` directory and open the
    `validate_gradient_setup.ipynb` notebook:![Figure 1.9 – validate_gradient_setup.ipynb
    notebook in the Files view
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦仓库被克隆，进入 `ch1` 目录并打开 `validate_gradient_setup.ipynb` 笔记本：![图 1.9 – Files 视图中的
    validate_gradient_setup.ipynb 笔记本
- en: '](img/B16216_01_09.jpg)'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_09.jpg)'
- en: Figure 1.9 – validate_gradient_setup.ipynb notebook in the Files view
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.9 – Files 视图中的 validate_gradient_setup.ipynb 笔记本
- en: Run the entire notebook (**Cell -> Run all**) and check the output.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行整个笔记本（**单元格 -> 全部运行**）并检查输出。
- en: For the first code cell, you should see something like the following if your
    notebook has access to the `fastai` library. Don't worry about the exact level
    of fastai—the key point is that you are able to import the library and get back
    a valid version without errors:![Figure 1.10 – Getting the fastai version
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于第一个代码单元，如果你的笔记本能访问 `fastai` 库，你应该会看到类似下面的输出。无需担心 fastai 的具体版本——关键是你能够导入该库并获得有效的版本，而不会出现错误：![图
    1.10 – 获取 fastai 版本
- en: '](img/B16216_01_10.jpg)'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_10.jpg)'
- en: Figure 1.10 – Getting the fastai version
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.10 – 获取 fastai 版本
- en: 'For the second code cell, you should see something like the table shown next
    if your notebook has access to a GPU. A GPU is specialized hardware for deep learning
    that you will need in order to efficiently run subsequent examples. Don''t worry
    about the specific type of GPU listed; just confirm that you get a table like
    this as output of this cell:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于第二个代码单元，如果你的笔记本有访问 GPU 的权限，你应该会看到类似下面的表格。GPU 是一种专门用于深度学习的硬件，后续示例的高效运行将依赖于它。无需担心列出的具体
    GPU 类型；只需确认输出中出现了类似的表格即可：
- en: '![Figure 1.11 – Output of the nvidia-smi command'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.11 – nvidia-smi 命令的输出'
- en: '](img/B16216_01_11.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_11.jpg)'
- en: Figure 1.11 – Output of the nvidia-smi command
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11 – nvidia-smi 命令的输出
- en: 'If you get the following kind of output from this cell, then your notebook
    was not set up correctly with access to a GPU:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从此单元获得如下输出，则说明你的笔记本未正确设置以访问 GPU：
- en: '![Figure 1.12 – Error from the nvidia-smi command'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.12 – 来自 nvidia-smi 命令的错误'
- en: '](img/B16216_01_12.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_12.jpg)'
- en: Figure 1.12 – Error from the nvidia-smi command
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12 – 来自 nvidia-smi 命令的错误
- en: Congratulations! You have set up a Gradient environment that is ready to explore
    fastai.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经设置好一个可以探索 fastai 的 Gradient 环境。
- en: How it works…
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Now that you have a working Gradient instance, you will be able to run fastai
    examples. Gradient includes PyTorch, fastai, and other libraries that you need
    to run the examples in this book, along with access to the GPU hardware that you
    need to run these examples efficiently.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有了一个正常工作的Gradient实例，你将能够运行fastai示例。Gradient包括PyTorch、fastai和其他运行本书示例所需的库，以及你需要的GPU硬件，能够高效地运行这些示例。
- en: 'Some of the aspects of Gradient notebooks that you need to be aware of are
    listed here:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要注意的一些Gradient笔记本的方面列在这里：
- en: By default, your free instance will run for 6 hours and then shut itself down.
    If you want to have longer, uninterrupted sessions, you will need to change to
    a paid subscription.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，你的免费实例将运行6小时后自动关闭。如果你想要更长时间、不间断的会话，你需要更改为付费订阅。
- en: Generally speaking, restarting a Gradient instance takes between 3 and 10 minutes,
    so it's a good idea to go to the **Notebook** section of the Paperspace console
    and click on **START** for your notebook a few minutes before you're ready to
    actually get working. I am in the habit of starting my notebook and then completing
    some other task (such as sending an email or making a cup of tea) so that I'm
    not waiting too long for the notebook to start.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般来说，重新启动一个Gradient实例需要大约3到10分钟，因此在你准备开始工作之前，最好提前几分钟进入Paperspace控制台的**Notebook**部分，然后点击**START**启动你的笔记本。我习惯先启动我的笔记本，然后去做其他事情（例如发邮件或泡一杯茶），这样就不会因为等待笔记本启动而浪费太多时间。
- en: If you are a bit rusty about how to use Jupyter notebooks, the tutorial available
    at [https://www.dataquest.io/blog/jupyter-notebook-tutorial/](https://www.dataquest.io/blog/jupyter-notebook-tutorial/)
    gives a good review of the key points.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你对如何使用Jupyter笔记本有些生疏，[https://www.dataquest.io/blog/jupyter-notebook-tutorial/](https://www.dataquest.io/blog/jupyter-notebook-tutorial/)上的教程会很好地复习关键点。
- en: There's more…
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: If you have completed all the steps in this section and have a working Gradient
    environment, the next section is not strictly required. I recommend that you set
    up both Gradient and Colab, but it's not mandatory to have both environments in
    order to complete most of the examples in this book. However, if you want the
    best of both worlds, you can also set up Colab for fastai—it's also free, and
    it offers some advantages over Gradient, such as supporting Keras applications.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经完成了本节中的所有步骤，并且拥有一个正常工作的Gradient环境，那么下一节不是必需的。我建议你同时设置Gradient和Colab，但并不是必须同时拥有这两个环境才能完成本书中的大部分示例。不过，如果你想要两个环境的优点，你也可以为fastai设置Colab——它也是免费的，而且相比Gradient有一些优势，比如支持Keras应用。
- en: Setting up a fastai environment in Google Colab
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Google Colab中设置fastai环境
- en: If you are already familiar with the **Google Colab** environment or want to
    take advantage of Google's overall machine learning ecosystem, Colab may be the
    right environment for you to use to explore fastai. In this section, we'll go
    through the steps to get set up with Colab and validate that it's ready for you
    to use with fastai.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经熟悉**Google Colab**环境，或者希望利用Google的整体机器学习生态系统，那么Colab可能是你用来探索fastai的合适环境。在本节中，我们将介绍如何设置Colab并验证它是否已准备好用于fastai。
- en: Getting ready
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To use Colab, you will need a Google ID and access to Google Drive. If you
    don''t already have a Google ID, follow the instructions here to create one: [https://support.google.com/accounts/answer/27441?hl=en](https://support.google.com/accounts/answer/27441?hl=en).'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Colab，你需要一个Google ID和访问Google Drive的权限。如果你还没有Google ID，请按照这里的说明创建一个：[https://support.google.com/accounts/answer/27441?hl=en](https://support.google.com/accounts/answer/27441?hl=en)。
- en: 'Once you have a Google ID, you need to confirm that you have access to Google
    Drive. You need access to Drive because it acts as the storage system for Colab.
    You save your notebooks and data in Drive when you are working in Colab. Follow
    the instructions here to get access to Drive: [https://support.google.com/drive/answer/2424384?co=GENIE.Platform%3DDesktop&hl=en](https://support.google.com/drive/answer/2424384?co=GENIE.Platform%3DDesktop&hl=en).'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了Google ID，你需要确认你是否可以访问Google Drive。你需要访问Drive，因为它作为Colab的存储系统。当你在Colab中工作时，你会将笔记本和数据保存到Drive中。按照这里的说明获取Drive访问权限：[https://support.google.com/drive/answer/2424384?co=GENIE.Platform%3DDesktop&hl=en](https://support.google.com/drive/answer/2424384?co=GENIE.Platform%3DDesktop&hl=en)。
- en: How to do it…
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: Once you have a Google ID with access to Drive, you can set up Colab to work
    with fastai by completing the following steps. First, we'll get access to Drive
    from within a Colab notebook, then clone the repository for this book, and finally
    run the validation notebook to confirm the setup worked.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你拥有一个可以访问Drive的Google ID，就可以按照以下步骤设置Colab以与fastai一起使用。首先，我们将在Colab笔记本中获取Drive的访问权限，然后克隆本书的仓库，最后运行验证笔记本来确认设置是否成功。
- en: Open Colab ([https://colab.research.google.com/](https://colab.research.google.com/)).
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Colab ([https://colab.research.google.com/](https://colab.research.google.com/))。
- en: Open a new, blank notebook by selecting **File -> New notebook**.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择**文件 -> 新建笔记本**，打开一个新的空白笔记本。
- en: 'In the new notebook, paste the following statement into an empty cell:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新的笔记本中，将以下语句粘贴到一个空白单元格中：
- en: '[PRE4]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then, select the **Run** button:'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，选择**运行**按钮：
- en: '![Figure 1.13 – Colab run button'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.13 – Colab运行按钮'
- en: '](img/B16216_01_13.jpg)'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_13.jpg)'
- en: Figure 1.13 – Colab run button
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.13 – Colab运行按钮
- en: Confirm that you get the expected output:![Figure 1.14 – Expected output of
    "hello world" in Colab
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认你获得了预期的输出:![图 1.14 – 在Colab中“hello world”预期输出
- en: '](img/B16216_01_14.jpg)'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_14.jpg)'
- en: Figure 1.14 – Expected output of "hello world" in Colab
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.14 – 在Colab中“hello world”预期输出
- en: Go to Drive and create a new folder called `fastai_cookbook` in your root folder
    in Drive.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到Drive并在Drive的根文件夹中创建一个名为`fastai_cookbook`的新文件夹。
- en: Go into this new folder and right-click, and select **Google Colaboratory**:![Figure
    1.15 – Selecting Google Colaboratory in your new directory in Drive
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入这个新文件夹，右键点击，选择**Google Colaboratory**:![图 1.15 – 在Drive中新目录中选择Google Colaboratory
- en: '](img/B16216_01_15.jpg)'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_15.jpg)'
- en: Figure 1.15 – Selecting Google Colaboratory in your new directory in Drive
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.15 – 在Drive中新目录中选择Google Colaboratory
- en: Colab will open a new notebook. In this notebook, select **Connect** -> **Connect
    to hosted runtime**:![Figure 1.16 – Selecting Connect to hosted runtime
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Colab将打开一个新的笔记本。在这个笔记本中，选择**连接** -> **连接到托管运行时**:![图 1.16 – 选择连接到托管运行时
- en: '](img/B16216_01_16.jpg)'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_16.jpg)'
- en: Figure 1.16 – Selecting Connect to hosted runtime
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.16 – 选择连接到托管运行时
- en: 'In a new cell in this notebook, paste the following code and run the cell (for
    example, by clicking the arrow):'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个笔记本的一个新单元格中，粘贴以下代码并运行单元格（例如，点击箭头）：
- en: '[PRE5]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In the response that comes back, click on the link that is provided:![Figure
    1.17 – Prompt to mount Google Drive in your notebook
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在返回的响应中，点击提供的链接:![图 1.17 – 提示在笔记本中挂载Google Drive
- en: '](img/B16216_01_17.jpg)'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_17.jpg)'
- en: Figure 1.17 – Prompt to mount Google Drive in your notebook
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.17 – 提示在笔记本中挂载Google Drive
- en: Select an account:![Figure 1.18 – Dialog to select your Google account
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个帐户:![图 1.18 – 选择Google帐户的对话框
- en: '](img/B16216_01_18.jpg)'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_18.jpg)'
- en: Figure 1.18 – Dialog to select your Google account
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.18 – 选择Google帐户的对话框
- en: On the screen for **Google Drive File Stream** access, select on **Allow**:![Figure
    1.19 – Google Drive File Stream dialog
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Google Drive文件流**访问屏幕上，选择**允许**:![图 1.19 – Google Drive 文件流对话框
- en: '](img/B16216_01_19.jpg)'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_19.jpg)'
- en: Figure 1.19 – Google Drive File Stream dialog
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.19 – Google Drive 文件流对话框
- en: On the **Sign in** screen, select the **copy** icon to copy your access code:![Figure
    1.20 – Dialog to get access code
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**登录**屏幕上，选择**复制**图标以复制你的访问代码:![图 1.20 – 获取访问代码的对话框
- en: '](img/B16216_01_20.jpg)'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_20.jpg)'
- en: Figure 1.20 – Dialog to get access code
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.20 – 获取访问代码的对话框
- en: Now, return to the notebook in Colab and paste the access code in the authorization
    code field, and then press *Enter*:![Figure 1.21 – Access code entered to mount
    Google Drive
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，返回Colab中的笔记本，并将访问代码粘贴到授权码字段中，然后按*Enter*键：![图 1.21 – 输入访问代码以挂载Google Drive
- en: '](img/B16216_01_21.jpg)'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_21.jpg)'
- en: Figure 1.21 – Access code entered to mount Google Drive
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.21 – 输入访问代码以挂载Google Drive
- en: 'The cell will run and produce the following mounted message to confirm that
    your Google Drive has been mounted and is available for your Colab notebook:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该单元格将运行并产生以下挂载消息，以确认你的Google Drive已经挂载，并且可以在Colab笔记本中使用：
- en: '![Figure 1.22 – Message confirming that Google Drive has been mounted'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.22 – 确认Google Drive已挂载的消息'
- en: '](img/B16216_01_22.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_22.jpg)'
- en: Figure 1.22 – Message confirming that Google Drive has been mounted
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.22 – 确认Google Drive已挂载的消息
- en: 'Now that Drive is mounted in Colab, the next step is to clone the book''s repository:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Drive已在Colab中挂载，下一步是克隆本书的仓库：
- en: 'Make the `fastai_cookbook` new directory folder in Drive your current directory
    by running a cell in the notebook with the following command:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在笔记本中运行以下命令，将 `fastai_cookbook` 新的目录文件夹设为当前目录：
- en: '[PRE6]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Run the following command in a new cell to list the contents of this directory:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新单元中运行以下命令来列出此目录的内容：
- en: '[PRE7]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Run the following code in a new cell in your notebook to clone the book''s
    repository:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在笔记本的新单元中运行以下代码来克隆书本的仓库：
- en: '[PRE8]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Run the cell to list the directory contents again, and you should see the directory
    created now for the repository. You can confirm in Drive that the repository has
    been cloned.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次运行该单元来列出目录内容，你应该会看到现在为仓库创建的目录。你可以在 Drive 中确认仓库已被克隆。
- en: 'Now that you have cloned the repository, you can run the validation notebook
    to confirm that you have access to the `fastai` library and GPUs:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经克隆了仓库，可以运行验证笔记本来确认你已能访问 `fastai` 库和 GPU：
- en: In Drive, navigate to the `fastai_cookbook/Deep-Learning-with-fastai-Cookbook/ch1`
    folder, right-click on the `validate_gradient_setup.ipynb` notebook, and select
    **Open With** | **Google Colaboratory**.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Drive 中，导航到 `fastai_cookbook/Deep-Learning-with-fastai-Cookbook/ch1` 文件夹，右键点击
    `validate_gradient_setup.ipynb` 笔记本，并选择 **使用方式** | **Google Colaboratory**。
- en: The notebook opens up in Colab. Select **Runtime** | **Change Runtime Type**.
    In the **Notebook settings** dialog that comes up, select **GPU** in the **Hardware
    accelerator** field, and select **SAVE**:![Figure 1.23 – Selecting GPU as the
    hardware accelerator in the Notebook settings dialog
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 笔记本在 Colab 中打开。选择 **运行时** | **更改运行时类型**。在弹出的 **笔记本设置** 对话框中，选择 **GPU** 作为 **硬件加速器**，然后点击
    **保存**：![图 1.23 – 在笔记本设置对话框中选择 GPU 作为硬件加速器
- en: '](img/B16216_01_23.jpg)'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_23.jpg)'
- en: Figure 1.23 – Selecting GPU as the hardware accelerator in the Notebook settings
    dialog
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.23 – 在笔记本设置对话框中选择 GPU 作为硬件加速器
- en: Run the notebook by selecting **Runtime** | **Run all**.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **运行时** | **全部运行** 来运行笔记本。
- en: Confirm that you get output like the following, with no errors, for the first
    code cell in the notebook:![Figure 1.24 – Confirmation of the fastai version
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认你能像下面这样得到输出，没有错误，这是笔记本中的第一个代码单元的结果：![图 1.24 – 确认 fastai 版本
- en: '](img/B16216_01_24.jpg)'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_24.jpg)'
- en: Figure 1.24 – Confirmation of the fastai version
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.24 – 确认 fastai 版本
- en: 'Confirm that you get output like the following for the second code cell in
    the notebook. Don''t worry about the specific GPU type listed—this will vary depending
    on what''s available. If you did not specify **GPU** as the hardware accelerator
    in *Step 2*, then you won''t get this output:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认你能像下面这样得到输出，这是笔记本第二个代码单元的结果。不要担心列出的具体 GPU 类型——这会根据可用资源有所不同。如果你没有在 *步骤 2* 中指定
    **GPU** 作为硬件加速器，那么你将不会得到这个输出：
- en: '![Figure 1.25 – Output of nvidia-smi confirming access to a GPU'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.25 – nvidia-smi 输出确认访问 GPU'
- en: '](img/B16216_01_25.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_25.jpg)'
- en: Figure 1.25 – Output of nvidia-smi confirming access to a GPU
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.25 – nvidia-smi 输出确认访问 GPU
- en: Congratulations! You have set up a Colab environment that is ready to explore
    fastai.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已设置好一个可以探索 fastai 的 Colab 环境。
- en: How it works…
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Now that you have a working Colab environment, you will be able to run fastai
    examples in it. Colab incorporates PyTorch, fastai, and other libraries that you
    need to run the examples in this book. Note that, unlike Gradient, every time
    you start up a new Colab session, you will need to follow the steps to mount Drive
    and will also need to specify that you want a GPU. By default, Drive is not mounted
    and your Colab notebooks don't have access to GPUs until you explicitly change
    the hardware accelerator type.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已拥有一个可用的 Colab 环境，你将能够在其中运行 fastai 示例。Colab 集成了 PyTorch、fastai 以及其他运行书中示例所需的库。请注意，不同于
    Gradient，每次启动新的 Colab 会话时，你都需要按照步骤挂载 Drive，并指定你需要 GPU。默认情况下，Drive 并未挂载，你的 Colab
    笔记本在没有明确更改硬件加速器类型之前无法访问 GPU。
- en: There's more…
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: If you have set up both Gradient and Colab environments, I recommend that you
    use Gradient to exercise the examples in this book by default. Gradient gives
    you direct access to a terminal, which is handy for entering command-line commands,
    and does not require you to mount a filesystem or request a GPU every time you
    start a new session. Colab does have some advantages, including not shutting down
    after 6 hours, but overall you will have a smoother experience with Gradient.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你同时设置了 Gradient 和 Colab 环境，我建议你默认使用 Gradient 来运行本书中的示例。Gradient 让你可以直接访问终端，这对于输入命令行命令非常方便，而且每次启动新会话时无需挂载文件系统或请求
    GPU。虽然 Colab 有一些优势，比如 6 小时后不会自动关闭，但总体而言，你在 Gradient 上的体验会更流畅。
- en: Setting up JupyterLab environment in Gradient
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Gradient 中设置 JupyterLab 环境
- en: Earlier in this chapter, we went through the steps to set up Gradient as an
    environment to explore fastai. With this set up, you get the standard Jupyter
    notebook environment that features a filesystem view and the ability to update
    notebooks, launch terminal windows, and perform basic operations such as uploading
    and downloading files from your local system. If you want a richer development
    environment, you can set up Gradient to use JupyterLab.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 本章之前我们已经介绍了设置 Gradient 作为 fastai 探索环境的步骤。通过这个设置，你将获得标准的 Jupyter notebook 环境，其中包括文件系统视图，并能够更新笔记本、启动终端窗口，以及执行基本操作，如上传和下载本地系统中的文件。如果你希望拥有更丰富的开发环境，可以设置
    Gradient 使用 JupyterLab。
- en: In addition to allowing you to maintain multiple views (for example, a terminal
    view along with several notebooks) within the same browser tab, JupyterLab also
    lets you take advantage of visual debuggers in the context of a notebook. In this
    section, we will go through the steps to set up Gradient so that you can use JupyterLab.
    Note that this recipe is optional—any example in this book that you can run in
    Gradient with JupyterLab will also work in vanilla Jupyter.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 除了让你在同一个浏览器标签页内维护多个视图（例如，终端视图和多个笔记本视图）外，JupyterLab 还允许你在笔记本环境中利用可视化调试器。在本节中，我们将介绍设置
    Gradient 以便你可以使用 JupyterLab 的步骤。请注意，这个步骤是可选的——本书中任何可以在 Gradient 上运行的 JupyterLab
    示例，也可以在普通 Jupyter 上运行。
- en: Getting ready
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before you attempt to set up Gradient with JupyterLab, ensure that you have
    successfully completed the steps in the *Setting up a fastai environment in Paperspace
    Gradient* section. Once you have set up JupyterLab Gradient, you will be able
    to switch back and forth between the vanilla Jupyter view and JupyterLab at any
    time.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在你尝试设置 Gradient 与 JupyterLab 配合使用之前，确保你已经成功完成了 *在 Paperspace Gradient 中设置 fastai
    环境* 部分的步骤。一旦你设置好 JupyterLab Gradient，你就可以随时在普通 Jupyter 视图和 JupyterLab 视图之间切换。
- en: How to do it…
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'To get JupyterLab set up, you begin by starting up your Gradient instance,
    run a command to install JupyterLab, and then restart the instance to see the
    result. Here are the steps to do this:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置 JupyterLab 环境，首先启动你的 Gradient 实例，运行一个命令来安装 JupyterLab，然后重新启动实例查看效果。以下是执行此操作的步骤：
- en: Start your Gradient fastai instance to bring up the vanilla Jupyter **Files**
    view:![Figure 1.29 – Vanilla Jupyter Files view
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动你的 Gradient fastai 实例以打开普通 Jupyter **Files** 视图：![图 1.29 – 普通 Jupyter 文件视图
- en: '](img/B16216_01_26.jpg)'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_26.jpg)'
- en: Figure 1.26 – Vanilla Jupyter Files view
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.26 – 普通 Jupyter 文件视图
- en: Once you are in the filesystem view for your instance, select **New** | **Terminal**:![Figure
    1.27 – Pulldown to open up a terminal in Jupyter
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你进入了实例的文件系统视图，选择 **New** | **Terminal**：![图 1.27 – 下拉菜单打开 Jupyter 终端
- en: '](img/B16216_01_27.jpg)'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_27.jpg)'
- en: Figure 1.27 – Pulldown to open up a terminal in Jupyter
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.27 – 下拉菜单打开 Jupyter 终端
- en: This will open a terminal window:![Figure 1.28 – Jupyter terminal window
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开一个终端窗口：![图 1.28 – Jupyter 终端窗口
- en: '](img/B16216_01_28.jpg)'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_28.jpg)'
- en: Figure 1.28 – Jupyter terminal window
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.28 – Jupyter 终端窗口
- en: 'In the terminal window, enter this command to install JupyterLab:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端窗口中，输入以下命令安装 JupyterLab：
- en: '[PRE9]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Once the install has completed, exit Jupyter, stop your Gradient instance in
    the Paperspace console, and restart it.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，退出 Jupyter，在 Paperspace 控制台中停止你的 Gradient 实例，然后重新启动它。
- en: 'When you get to the vanilla Jupyter `tree` at the end of the URL with `lab`,
    and hit *Enter*. You should now see the JupyterLab view instead of the vanilla
    Jupyter view:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你在 URL 末尾看到带有 `lab` 的普通 Jupyter `tree` 时，按下 *Enter*。此时，你应该会看到 JupyterLab 视图，而不是普通
    Jupyter 视图：
- en: '![Figure 1.29 – JupyterLab environment in Gradient'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.29 – Gradient 中的 JupyterLab 环境'
- en: '](img/B16216_01_29.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_29.jpg)'
- en: Figure 1.29 – JupyterLab environment in Gradient
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.29 – Gradient 中的 JupyterLab 环境
- en: Congratulations! You have set up Gradient so that you can use the JupyterLab
    view.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经成功设置 Gradient，以便使用 JupyterLab 视图。
- en: How it works…
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: You can go back and forth between the vanilla Jupyter view and JupyterLab any
    time you like by simply modifying the URL so that the end is `tree` (for Jupyter)
    or `lab` (for JupyterLab).
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以随时在原生 Jupyter 视图和 JupyterLab 之间来回切换，只需修改 URL，使其末尾是 `tree`（表示 Jupyter）或 `lab`（表示
    JupyterLab）。
- en: There's more…
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: 'If you want more details on the benefits of JupyterLab, this tutorial explains
    the features and how to use them: [https://dzone.com/articles/getting-started-with-jupyterlab](https://dzone.com/articles/getting-started-with-jupyterlab).'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多 JupyterLab 的好处，这篇教程会解释其功能以及如何使用它们：[https://dzone.com/articles/getting-started-with-jupyterlab](https://dzone.com/articles/getting-started-with-jupyterlab)。
- en: I mentioned earlier that one of the benefits of JupyterLab is that it supports
    a visual Python debugger you can use in notebooks. For more details on this debugger
    and how to set it up, see `https://medium.com/@cristiansaavedra/visual-jupyter-debugger-for-python-e96fdd4f6f68`
    and [https://blog.jupyter.org/a-visual-debugger-for-jupyter-914e61716559](https://blog.jupyter.org/a-visual-debugger-for-jupyter-914e61716559).
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前提到过 JupyterLab 的一个好处是它支持可视化的 Python 调试器，你可以在笔记本中使用它。有关此调试器以及如何设置的更多详细信息，请参阅
    `https://medium.com/@cristiansaavedra/visual-jupyter-debugger-for-python-e96fdd4f6f68`
    和 [https://blog.jupyter.org/a-visual-debugger-for-jupyter-914e61716559](https://blog.jupyter.org/a-visual-debugger-for-jupyter-914e61716559)。
- en: '"Hello world" for fastai – creating a model for MNIST'
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '"Hello world" for fastai – 为 MNIST 创建一个模型'
- en: 'Now that you have set up your environment for fastai, it''s time to run through
    an example. In this section, you will go through the process of creating a simple
    deep learning model trained on the MNIST dataset. This dataset consists of images
    of handwritten digits. The goal of the trained model is to predict the digit given
    an image. For example, we want the trained model to predict that the following
    digits are `6,` `3,` `9,` and `6`:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经为 fastai 设置好了环境，接下来是运行一个示例。在这一节中，你将经历创建一个简单深度学习模型的过程，该模型在 MNIST 数据集上进行训练。这个数据集由手写数字的图像组成。训练后的模型目标是根据给定的图像预测数字。例如，我们希望训练的模型预测以下数字是
    `6`、`3`、`9` 和 `6`：
- en: '![Figure 1.30 – Sample handwritten digits from the MNIST dataset'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.30 – 来自 MNIST 数据集的手写数字样本'
- en: '](img/B16216_01_30.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_30.jpg)'
- en: Figure 1.30 – Sample handwritten digits from the MNIST dataset
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.30 – 来自 MNIST 数据集的手写数字样本
- en: We won't be covering every detail of the fastai solution for MNIST in this section,
    but we will be running a complete example that demonstrates one of the key values
    of fastai—getting a powerful deep learning result with only a few lines of code.
    This example should also whet your appetite for the more advanced fastai examples
    that are coming in subsequent chapters.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们不会涵盖 fastai 解决方案的每个细节，但我们将运行一个完整的示例，展示 fastai 的一个关键优势——仅用几行代码就能获得强大的深度学习结果。这个示例也应该能激发你对接下来几章中更高级
    fastai 示例的兴趣。
- en: Getting ready…
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作……
- en: Ensure that you have followed the steps to set up fastai in Gradient and confirm
    that you can open the `MNIST` `hello_world` notebook (`mnist_hello_world.ipynb`)
    in the `ch1` directory. If you choose to use Colab, ensure that you have selected
    **Runtime** | **Change runtime type** and have selected **GPU** as the hardware
    accelerator.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保你已经按照步骤在 Gradient 中设置好 fastai，并确认你可以在 `ch1` 目录下打开 `MNIST` 的 `hello_world`
    笔记本（`mnist_hello_world.ipynb`）。如果你选择使用 Colab，请确保你选择了 **Runtime** | **Change runtime
    type**，并选择了 **GPU** 作为硬件加速器。
- en: The dataset used in this section is the classic dataset of deep learning, MNIST
    ([http://yann.lecun.com/exdb/mnist/](http://yann.lecun.com/exdb/mnist/)). I gratefully
    acknowledge the opportunity to use this dataset to provide an initial illustration
    of the capabilities of fastai.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 本节使用的数据集是深度学习经典数据集 MNIST（[http://yann.lecun.com/exdb/mnist/](http://yann.lecun.com/exdb/mnist/)）。我非常感谢能使用这个数据集来提供
    fastai 功能的初步演示。
- en: Dataset citation
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集引用
- en: Y. LeCun, L. Bottou, Y. Bengio and P. Haffner.(1998) Gradient-Based Learning
    Applied to Document Recognition (http://yann.lecun.com/exdb/publis/pdf/lecun-98.pdf).
    Proceedings of the IEEE, 86(11):2278-2324, November 1998
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Y. LeCun, L. Bottou, Y. Bengio 和 P. Haffner。（1998）基于梯度的学习应用于文档识别（[http://yann.lecun.com/exdb/publis/pdf/lecun-98.pdf](http://yann.lecun.com/exdb/publis/pdf/lecun-98.pdf)）。IEEE
    会议录，86(11)：2278-2324，1998年11月
- en: How to do it…
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: You will begin by running the notebook all the way through. By running all the
    cells in this notebook you will be executing code that trains an image classification
    deep learning model that predicts the class (that is, which digit from 0 to 9)
    a given image of a hand-written digit belongs to.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 你将开始从头到尾运行整个笔记本。通过运行笔记本中的所有单元格，你将执行训练一个图像分类深度学习模型的代码，该模型预测给定手写数字图像属于哪个类别（即从
    0 到 9 的哪个数字）。
- en: First, you will make the MNIST dataset, which consists of a set of images of
    handwritten digits organized into directories (one for each digit from 0 to 9),
    available to the Python code in the notebook. Next, you will define a `dataloaders`
    object that specifies the training subset of the dataset (that is, the images
    that will be used to train the model) and the validation subset of the dataset
    (that is, the images that will be used to assess the performance of the model
    as it is trained). Next, you will define the deep learning model itself using
    a pre-defined architecture (that is, an organization of layers that make up the
    model) made available by fastai.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你将使 MNIST 数据集可用，该数据集包含一组按目录组织的手写数字图像（每个数字从 0 到 9 都有一个目录）。接下来，你将定义一个 `dataloaders`
    对象，指定数据集的训练子集（即用于训练模型的图像）和验证子集（即用于评估模型训练过程中表现的图像）。接下来，你将使用 fastai 提供的预定义架构（即由多个层组成的模型组织方式）来定义深度学习模型本身。
- en: 'Next, you will train the model, that is iteratively apply the training set
    to update the weights in the model to optimize the performance of the model for
    the specified metric (in the case of this model, accuracy). Next, you will examine
    batches of images in the training and validation sets. You will then look at images
    where the model does the worst job of classification. Finally, you will apply
    the trained deep learning model to example hand-written images to see whether
    the model predicts the correct digit for these images. In the following steps
    you will run the code in the entire notebook and then go through the cells in
    the notebook one-by-one to review what the code is doing:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将训练模型，即迭代地应用训练集来更新模型中的权重，以优化模型在指定指标（在此模型中是准确率）上的表现。接下来，你将检查训练集和验证集中的图像批次。然后，你将查看模型分类表现最差的图像。最后，你将把训练好的深度学习模型应用于示例手写图像，看看模型是否能够预测这些图像的正确数字。接下来的步骤中，你将运行整个笔记本中的代码，然后逐个单元格查看代码的作用：
- en: Open the MNIST `hello_world` notebook `mnist_hello_world.ipynb` in the `ch1`
    directory.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `ch1` 目录下的 MNIST `hello_world` 笔记本 `mnist_hello_world.ipynb`。
- en: 'Run the entire notebook by selecting the appropriate choice for your environment:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择适合你环境的选项来运行整个笔记本：
- en: a) **Cell**|**Run all** (Jupyter)
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) **单元格**|**全部运行**（Jupyter）
- en: b) **Run**|**Run all** (JupyterLab)
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) **运行**|**全部运行**（JupyterLab）
- en: c) **Runtime**|**Run all** (Colab)
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) **运行时**|**全部运行**（Colab）
- en: 'Confirm that the notebook runs correctly to the end. You should see the following
    output from the last cell. Don''t worry if you see a different digit output, as
    long as you get output with no errors in this cell:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认笔记本能够正确运行到最后。你应该看到最后一个单元格的以下输出。如果看到不同的数字输出也不用担心，只要在这个单元格没有错误输出即可：
- en: '![Figure 1.31 – Example MNIST digit prediction'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.31 – 示例 MNIST 数字预测](img/B16216_01_31.jpg)'
- en: '](img/B16216_01_31.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_31.jpg)'
- en: Figure 1.31 – Example MNIST digit prediction
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.31 – 示例 MNIST 数字预测
- en: 'Congratulations! You have just successfully trained your first deep learning
    model with fastai and used the trained model to predict the digits depicted in
    a set of handwritten digits from the MNIST dataset. Now, let''s go through the
    notebook cell by cell to review what this example tells us about fastai:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你刚刚成功地使用 fastai 训练了你的第一个深度学习模型，并使用训练好的模型预测 MNIST 数据集中的一组手写数字。接下来，我们将逐个单元格地回顾这个示例，了解它告诉我们关于
    fastai 的信息：
- en: 'The first code cell imports the libraries that the notebook needs:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个代码单元格导入笔记本所需的库：
- en: '[PRE10]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The second cell calls the `fastai` function to prepare a notebook to run a
    fastai application. In Colab, for example, this function triggers the steps to
    mount Drive so that it''s accessible within the notebook:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二个单元格调用 `fastai` 函数，准备运行 fastai 应用程序的笔记本。在 Colab 中，举例来说，这个函数会触发挂载 Drive 的步骤，使得
    Drive 在笔记本中可用：
- en: '[PRE11]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The third cell defines the location of the dataset that will be used to train
    the model. fastai provides a set of oven-ready datasets (including several varieties
    of the MNIST dataset) that you can ingest into your notebook with a single call
    using the `untar_data()` function. We''ll dig into more details about these datasets
    in [*Chapter 2*](B16216_02_Final_VK_ePub.xhtml#_idTextAnchor057)*, Exploring and
    Cleaning Up Data with fastai*:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第三个单元格定义了将用于训练模型的数据集的位置。fastai 提供了一组现成的数据集（包括多个版本的 MNIST 数据集），你可以通过一次调用 `untar_data()`
    函数将其导入到你的笔记本中。我们将在[*第 2 章*](B16216_02_Final_VK_ePub.xhtml#_idTextAnchor057)《使用
    fastai 探索和清理数据》中详细讨论这些数据集：
- en: '[PRE12]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The fifth cell is the heart of the notebook and demonstrates the power of fastai.
    Here are three lines of code that completely define and train a deep learning
    model:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第五个单元格是笔记本的核心，展示了 fastai 的强大功能。以下是三行代码，完全定义并训练了一个深度学习模型：
- en: 'a) The first line creates a `dataloaders` object from the `path` object created
    in the previous cell and identifies the subdirectories that contain the training
    and validation datasets. See the fastai documentation ([https://docs.fast.ai/vision.data.html#ImageDataLoaders](https://docs.fast.ai/vision.data.html#ImageDataLoaders))
    for more details on `ImageDataLoaders`, the specific kind of `dataloaders` object
    used for image problems:'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 第一行代码从前一个单元格创建的 `path` 对象生成一个 `dataloaders` 对象，并识别包含训练和验证数据集的子目录。有关 `ImageDataLoaders`
    的更多详细信息，请参见 fastai 文档（[https://docs.fast.ai/vision.data.html#ImageDataLoaders](https://docs.fast.ai/vision.data.html#ImageDataLoaders)），`dataloaders`
    对象的具体类型，专门用于图像问题：
- en: '[PRE13]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'b) The second line defines the structure of the deep learning model, including
    its architecture (based on the famous `1` epoch (that is, one iteration through
    the entire training set) and the learning rate will be `0.1`:'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 第二行定义了深度学习模型的结构，包括其架构（基于著名的 `1` 轮（即，遍历整个训练集一次）和学习率将设置为 `0.1`）：
- en: '[PRE14]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The output of this cell shows the results of the training process, including
    the training and validation loss, the validation accuracy, and the time taken
    to complete the training. Note that the accuracy is very high:![Figure 1.32 –
    Output of training the MNIST model
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个单元格的输出显示了训练过程的结果，包括训练和验证损失、验证准确率以及完成训练所花费的时间。请注意，准确率非常高：![图 1.32 – MNIST 模型训练输出
- en: '](img/B16216_01_32.jpg)'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_32.jpg)'
- en: Figure 1.32 – Output of training the MNIST model
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.32 – MNIST 模型训练输出
- en: The next two cells display examples of the training and validation **test**
    datasets:![Figure 1.33 – Examples from the MNIST train and test datasets
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来的两个单元格展示了训练和验证 **测试** 数据集的示例：![图 1.33 – 来自 MNIST 训练和测试数据集的示例
- en: '](img/B16216_01_33.jpg)'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_33.jpg)'
- en: Figure 1.33 – Examples from the MNIST train and test datasets
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.33 – 来自 MNIST 训练和测试数据集的示例
- en: The next cell shows examples of digits that the model got the most wrong. Note
    how these digits are not easy for us humans to identify, so it's not surprising
    that the model got them wrong:![Figure 1.34 – Digits for which the MNIST model
    made the worst predictions
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个单元格展示了模型预测错误最多的数字示例。注意，这些数字对于我们人类来说也不容易识别，所以模型预测错它们并不令人惊讶：![图 1.34 – MNIST
    模型最差预测的数字
- en: '](img/B16216_01_34.jpg)'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_34.jpg)'
- en: Figure 1.34 – Digits for which the MNIST model made the worst predictions
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.34 – MNIST 模型最差预测的数字
- en: 'The next cell displays a summary of information about the model, including
    the layers that make it up, how many parameters it has, and the optimizer and
    loss function used:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个单元格显示了关于模型的摘要信息，包括构成它的层、它的参数数量以及使用的优化器和损失函数：
- en: '[PRE15]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Finally, we have a set of cells at the end of the notebook that display digit
    images from the validation set, and then apply the trained model to get a prediction
    of which digit is shown in the image. In the following example, the model correctly
    identifies from the validation set an image of a zero as a zero:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在笔记本的最后一组单元格中，显示来自验证集的数字图像，并应用训练好的模型对图像中的数字进行预测。在以下示例中，模型正确地从验证集中识别出零的图像为零：
- en: '![Figure 1.35 – Example prediction by the MNIST model'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.35 – MNIST 模型的预测示例'
- en: '](img/B16216_01_35.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_35.jpg)'
- en: Figure 1.35 – Example prediction by the MNIST model
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.35 – MNIST 模型的预测示例
- en: That's it—a complete, self-contained deep learning model that solves a famous
    computer vision problem (predicting a digit in a handwritten image) with remarkable
    accuracy. With fastai, you can accomplish this with just a few lines of code.
    This notebook contains some additional code to validate the model and investigate
    the dataset, but all you really need are the first five cells, which together
    contain barely 10 lines of code.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样——一个完整的、自包含的深度学习模型，成功解决了一个著名的计算机视觉问题（预测手写图像中的数字），并且具有惊人的准确性。使用fastai，你只需几行代码就能完成这项工作。这个笔记本包含一些额外的代码来验证模型并调查数据集，但你真正需要的只有前五个单元格，这些单元格加起来不到10行代码。
- en: How it works…
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: You may be asking yourself about the details of the code that we just went through.
    How exactly does the data ingestion work? What's a dataloader? How does the model
    know to include all the layers that are shown by the `summary()` function? We'll
    be answering these questions in subsequent chapters. In [*Chapter 2*](B16216_02_Final_VK_ePub.xhtml#_idTextAnchor057)*,
    Exploring and Cleaning Up Data with fastai*, we'll dig into the data ingestion
    story for fastai, and in subsequent chapters we'll take a detailed tour through
    fastai's solutions for a set of common deep learning applications, including tabular
    data, text data, recommender systems, and computer vision.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会问自己关于我们刚才讲解的代码的细节。数据摄取是如何工作的？什么是dataloader？模型是如何知道包含`summary()`函数显示的所有层的？我们将在后续章节中回答这些问题。在[*第2章*](B16216_02_Final_VK_ePub.xhtml#_idTextAnchor057)*，使用fastai探索和清理数据*中，我们将深入探讨fastai的数据摄取过程，在后续章节中，我们将详细介绍fastai为一系列常见深度学习应用提供的解决方案，包括表格数据、文本数据、推荐系统和计算机视觉。
- en: One of the beauties of fastai is that you can abstract away much of the complexity
    of deep learning (if you want), and get a working and useful model with just a
    few lines of code, as with the MNIST model we just saw. However, fastai doesn't
    keep the details hidden or limit your flexibility. In addition to providing an
    elegant way to create deep learning models with very little code, fastai incorporates
    a set of layers, each of which reveals more flexibility and detail. This means
    that as you learn more about fastai, you can continue to dig deeper and customize
    your solution to meet your exact needs.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: fastai的一个优点是，你可以抽象掉深度学习的大部分复杂性（如果你愿意的话），并且仅用几行代码就能得到一个有效且有用的模型，就像我们刚才看到的MNIST模型一样。然而，fastai并没有隐藏这些细节，也没有限制你的灵活性。除了提供一种用非常少的代码创建深度学习模型的优雅方式，fastai还包含了一套层，每一层都揭示了更多的灵活性和细节。这意味着，随着你对fastai了解的深入，你可以继续挖掘并自定义你的解决方案，以满足你的具体需求。
- en: There's more…
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: 'This section makes use of some standard machine learning terminology, including
    **loss function**, **optimizer**, **accuracy**, and **multi-class classification**.
    If you need a refresher on these and other fundamental machine learning concepts,
    I recommend the series of tutorials here: [https://machinelearningmastery.com/](https://machinelearningmastery.com/).
    This site includes clear descriptions of the major concepts of machine learning,
    along with Python code samples that illustrate how to apply the concepts.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 本节使用了一些标准的机器学习术语，包括**损失函数**、**优化器**、**准确率**和**多类分类**。如果你需要复习这些和其他基础机器学习概念，我推荐你参考这里的教程系列：[https://machinelearningmastery.com/](https://machinelearningmastery.com/)。这个网站包含了机器学习的主要概念的清晰描述，并且提供了Python代码示例，展示了如何应用这些概念。
- en: 'Understanding the world in four applications: tables, text, recommender systems,
    and images'
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过四个应用理解世界：表格、文本、推荐系统和图像
- en: 'In their seminal paper describing fastai, Howard and Gugger ([https://arxiv.org/pdf/2002.04688.pdf](https://arxiv.org/pdf/2002.04688.pdf))
    describe the four application areas that fastai supports *out of the box*. In
    this section, we will go through these four applications of deep learning that
    fastai directly supports: tabular data, text data, recommender systems, and computer
    vision. The MNIST example that you saw in the previous section is an example of
    a computer vision application. The MNIST example included the following:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在他们描述fastai的开创性论文中，Howard和Gugger（[https://arxiv.org/pdf/2002.04688.pdf](https://arxiv.org/pdf/2002.04688.pdf)）描述了fastai支持的四个应用领域，这些领域是*开箱即用*的。在本节中，我们将介绍fastai直接支持的这四个深度学习应用：表格数据、文本数据、推荐系统和计算机视觉。你在上一节看到的MNIST示例就是计算机视觉应用的一个例子。MNIST示例包括以下内容：
- en: 'Curated dataset: MNIST. You can find an overall list of curated datasets here:'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 精选数据集：MNIST。你可以在这里找到精选数据集的总体列表：
- en: '[https://course.fast.ai/datasets](https://course.fast.ai/datasets)'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://course.fast.ai/datasets](https://course.fast.ai/datasets)'
- en: Easy ingestion of the curated dataset via `untar_data()`
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过`untar_data()`轻松加载精心整理的数据集
- en: Image-specific handling of the dataset via a data loader object
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过数据加载器对象对数据集进行图像特定处理
- en: Definition of an image-specific model structure via a `Learner` object
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过`Learner`对象定义图像特定模型结构
- en: Utilities to examine the dataset
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于检查数据集的工具
- en: 'Similarly, fastai also provides components specifically aimed at the other
    three application areas: tabular data, text data, and recommender systems. In
    this section, we''ll examine each of these application areas and learn about how
    fastai provides support for them.'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，fastai还提供了专门针对其他三个应用领域（表格数据、文本数据和推荐系统）的组件。在本节中，我们将逐一查看这些应用领域，并了解fastai如何为它们提供支持。
- en: Getting ready
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Have the MNIST example that you went through in the last section open because
    we will be referring to is as we go through the four application areas. Before
    we get into the description of the four application areas, it''s important to
    get some definitions:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 保持你在上一节中完成的MNIST示例打开，因为我们将在回顾四个应用领域时引用它。在进入四个应用领域的描述之前，先定义一些术语：
- en: '`DataLoader`: A structure that allows you to access batches of *x* (independent)
    and *y* (dependent) values. The *x* values are the data you use to train the model,
    and the *y* values are what you are trying to predict with the model.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataLoader`：一种结构，允许你访问批次的*x*（独立）值和*y*（依赖）值。*x*值是你用来训练模型的数据，而*y*值是你希望模型预测的内容。'
- en: '`DataLoaders`: A structure that contains training and validation `DataLoader`
    objects.'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataLoaders`：包含训练和验证`DataLoader`对象的结构。'
- en: '`Learner`: An object that combines `DataLoaders`, architecture, and other characteristics
    (including loss function and optimizer) to define a model. To contrast `Learner`
    objects with models in Keras, `Learner` objects fully incorporate the data used
    to train the model, whereas with Keras models, the various facets of the dataset
    (such as training independent values, training dependent values, and much more)
    are arguments to the model that need to be addressed separately from the model
    itself.'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Learner`：一个结合了`DataLoaders`、架构和其他特征（包括损失函数和优化器）的对象，用来定义一个模型。为了与Keras中的模型进行对比，`Learner`对象完全包含了用于训练模型的数据，而在Keras模型中，数据集的各个方面（如训练中的独立值、依赖值等）是作为参数传递给模型，需要与模型本身分开处理。'
- en: How to do it…
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现…
- en: Let's go through each of the four application areas and examine the support
    that fastai provides for them.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐个回顾这四个应用领域，并检查fastai如何为它们提供支持。
- en: '`AG_NEWS` (~ 0.5 M categorized news articles), and `DBPedia` (training/testing
    samples from a knowledge base ([https://wiki.dbpedia.org/about](https://wiki.dbpedia.org/about))
    containing structured content from Wikimedia projects), `YELP_REVIEWS` (~1.5 M
    Yelp reviews along with corresponding star scores)'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`AG_NEWS`（约50万篇分类新闻文章），以及`DBPedia`（来自知识库的训练/测试样本，[https://wiki.dbpedia.org/about](https://wiki.dbpedia.org/about)，包含来自Wikimedia项目的结构化内容），`YELP_REVIEWS`（约150万条Yelp评论及其相应的星级评分）'
- en: 'b) Text-specific `DataLoaders` object: `TextDataLoaders` [https://docs.fast.ai/text.data.html#TextDataLoaders](https://docs.fast.ai/text.data.html#TextDataLoaders)'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 针对文本的`DataLoaders`对象：`TextDataLoaders` [https://docs.fast.ai/text.data.html#TextDataLoaders](https://docs.fast.ai/text.data.html#TextDataLoaders)
- en: 'c) Text-specific learner object: `TextLearner` [https://docs.fast.ai/text.learner.html#TextLearner](https://docs.fast.ai/text.learner.html#TextLearner)'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 针对文本的学习器对象：`TextLearner` [https://docs.fast.ai/text.learner.html#TextLearner](https://docs.fast.ai/text.learner.html#TextLearner)
- en: '`DataLoaders` object: `TabularDataLoaders` [https://docs.fast.ai/tabular.data.html#TabularDataLoaders](https://docs.fast.ai/tabular.data.html#TabularDataLoaders)'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`DataLoaders`对象：`TabularDataLoaders` [https://docs.fast.ai/tabular.data.html#TabularDataLoaders](https://docs.fast.ai/tabular.data.html#TabularDataLoaders)'
- en: 'b) Tabular data-specific `Learner` object: `TabularDataLearner` [https://docs.fast.ai/tabular.learner.html#TabularLearner](https://docs.fast.ai/tabular.learner.html#TabularLearner)'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 针对表格数据的`Learner`对象：`TabularDataLearner` [https://docs.fast.ai/tabular.learner.html#TabularLearner](https://docs.fast.ai/tabular.learner.html#TabularLearner)
- en: 'c) Utilities to examine the dataset: `TabularPandas` [https://docs.fast.ai/tabular.core.html#TabularPandas](https://docs.fast.ai/tabular.core.html#TabularPandas)'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 用于检查数据集的工具：`TabularPandas` [https://docs.fast.ai/tabular.core.html#TabularPandas](https://docs.fast.ai/tabular.core.html#TabularPandas)
- en: '`ML_SAMPLE` and `ML_100k` (rankings of thousands of movies by thousands of
    users)'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ML_SAMPLE`和`ML_100k`（成千上万用户对成千上万电影的评分）'
- en: 'b) Recommender system-specific `DataLoaders` object: `CollabDataLoaders` [https://docs.fast.ai/collab.html#CollabDataLoaders](https://docs.fast.ai/collab.html#CollabDataLoaders)'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 特定推荐系统的 `DataLoaders` 对象：`CollabDataLoaders` [https://docs.fast.ai/collab.html#CollabDataLoaders](https://docs.fast.ai/collab.html#CollabDataLoaders)
- en: 'c) Recommender system-specific `Learner` object: `collab_learner` [https://docs.fast.ai/collab.html#Create-a-Learner](https://docs.fast.ai/collab.html#Create-a-Learner)'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 特定推荐系统的 `Learner` 对象：`collab_learner` [https://docs.fast.ai/collab.html#Create-a-Learner](https://docs.fast.ai/collab.html#Create-a-Learner)
- en: '`BIWI_HEAD_POSE` (images of people, along with descriptions of their positions),
    `PASCAL_2007`, and `PASCAL_2012` (images, along with corresponding segmentation
    maps for each image) image localization datasets'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`BIWI_HEAD_POSE`（人物图像及其位置描述）、`PASCAL_2007` 和 `PASCAL_2012`（图像及每个图像的对应分割图）图像定位数据集'
- en: 'b) Image-specific `DataLoaders` object: `ImageDataLoaders` [https://docs.fast.ai/vision.data.html#ImageDataLoaders](https://docs.fast.ai/vision.data.html#ImageDataLoaders)'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 特定图像的 `DataLoaders` 对象：`ImageDataLoaders` [https://docs.fast.ai/vision.data.html#ImageDataLoaders](https://docs.fast.ai/vision.data.html#ImageDataLoaders)
- en: 'c) Image-specific `Learner` object: `cnn_learner` [https://docs.fast.ai/vision.learner.html#cnn_learner](https://docs.fast.ai/vision.learner.html#cnn_learner)'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 特定图像的 `Learner` 对象：`cnn_learner` [https://docs.fast.ai/vision.learner.html#cnn_learner](https://docs.fast.ai/vision.learner.html#cnn_learner)
- en: 'd) Utilities to examine the dataset: many convenient functions that make it
    easy to render individual images and categories of images'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 用于检查数据集的工具：许多便捷的函数，使得渲染单个图像和图像类别变得简单
- en: How it works…
  id: totrans-277
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: 'There is a lot to digest in this section, but don''t worry. Each application-specific
    aspect of fastai gets its own dedicated chapter in which we''ll cover the details
    of the application-specific features (datasets, `DataLoaders`, `Learners`, and
    others) and show you how to harness these features to create deep learning solutions
    for each application area. The important thing to note is that fastai provides
    these application-specific features to make it easy for you to create applications
    across all four of the areas: **tabular data**, **text data**, **recommender systems**,
    and **computer vision**.'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容较多需要消化，但不用担心。fastai 的每个应用特定方面都有专门的章节，我们将详细介绍应用特定功能（数据集、`DataLoaders`、`Learners`
    等）并展示如何利用这些功能为各个应用领域创建深度学习解决方案。需要注意的重要一点是，fastai 提供这些应用特定功能，旨在让你能够轻松创建涉及以下四个领域的应用：**表格数据**、**文本数据**、**推荐系统**和**计算机视觉**。
- en: Working with PyTorch tensors
  id: totrans-279
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PyTorch 张量
- en: Throughout most of this book, the focus will be on the features provided by
    the fastai framework. However, some of the solutions that we'll review also exploit
    general Python libraries (such as the `pandas` library for deep learning applications
    with tabular data) as well as aspects of PyTorch, the low-level deep learning
    framework upon which fastai is built. To give you a small taste of PyTorch, in
    this section we'll go through some basic examples of using tensors, the PyTorch
    structure for multidimensional matrices.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的大部分内容将重点讲解 fastai 框架提供的功能。然而，我们回顾的一些解决方案也会利用一些通用的 Python 库（例如用于表格数据的深度学习应用中的
    `pandas` 库），以及 fastai 构建所基于的低级深度学习框架 PyTorch 的一些方面。为了让你初步了解 PyTorch，本节将介绍一些使用张量的基础示例，张量是
    PyTorch 用于表示多维矩阵的结构。
- en: Getting ready
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'If you are already familiar with NumPy arrays, then you will have a good basis
    for examining PyTorch tensors because tensors play much the same role for PyTorch
    as NumPy arrays do for general-purpose Python applications. If you are not familiar
    with NumPy arrays or it''s been a while since you have had a chance to use them,
    take a bit of time to review them—for example, by going through this tutorial:
    [https://numpy.org/doc/stable/user/quickstart.html](https://numpy.org/doc/stable/user/quickstart.html).'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经熟悉 NumPy 数组，那么你会有一个很好的基础来理解 PyTorch 张量，因为张量在 PyTorch 中的作用与 NumPy 数组在通用
    Python 应用中的作用类似。如果你不熟悉 NumPy 数组，或者有一段时间没有使用过它们，建议花点时间复习一下它们，比如通过阅读这个教程：[https://numpy.org/doc/stable/user/quickstart.html](https://numpy.org/doc/stable/user/quickstart.html)。
- en: Once you have completed your NumPy array review, ensure that you have followed
    the steps to set up fastai in Gradient and confirm that you can open the PyTorch
    tensor walkthrough notebook (`pytorch_tensor_walkthrough.ipynb`) in the `ch1`
    directory. If you choose to use Colab, ensure that you have selected **Runtime**
    | **Change runtime type** and have selected **GPU** as the hardware accelerator.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 完成 NumPy 数组回顾后，确保你已经按照步骤在 Gradient 中设置 fastai，并确认你可以打开 `ch1` 目录中的 PyTorch 张量演练笔记本
    (`pytorch_tensor_walkthrough.ipynb`)。如果你选择使用 Colab，确保你已经选择了**运行时** | **更改运行时类型**并选择了**GPU**作为硬件加速器。
- en: How to do it…
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'In this section, we''ll go through some basic operations with PyTorch tensors:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍一些基本的 PyTorch 张量操作：
- en: Open the `pytorch_tensor_walkthrough.ipynb` PyTorch tensor walkthrough notebook
    in the `ch1` directory.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `ch1` 目录中的 `pytorch_tensor_walkthrough.ipynb` PyTorch 张量演练笔记本。
- en: Run the first four cells of the notebook to import the necessary libraries and
    define three tensors.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行笔记本中的前四个单元格，以导入所需的库并定义三个张量。
- en: 'a) Note that since this notebook only makes use of PyTorch and doesn''t need
    any fastai libraries, we only need one `import` statement:'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 请注意，由于本笔记本只使用了 PyTorch，并不需要任何 fastai 库，因此我们只需要一个`import`语句：
- en: '[PRE16]'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'b) Define `a`: a two-dimensional 5x7 tensor with value `1` in every position:'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 定义`a`：一个二维的5x7张量，所有位置的值都是`1`：
- en: '![Figure 1.36 – Defining a 5x7 tensor'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.36 – 定义一个 5x7 张量'
- en: '](img/B16216_01_36.jpg)'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_36.jpg)'
- en: Figure 1.36 – Defining a 5x7 tensor
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.36 – 定义一个 5x7 张量
- en: 'c) Define `b`: a two-dimensional 5x7 tensor with `0`s in every position except
    a diagonal of `1`s:'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 定义`b`：一个二维的5x7张量，除对角线上的`1`外，其他位置都为`0`：
- en: '![Figure 1.37 – Defining a 5x7 tensor with 1s on the diagonal'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.37 – 定义一个对角线为 1 的 5x7 张量'
- en: '](img/B16216_01_37.jpg)'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_37.jpg)'
- en: Figure 1.37 – Defining a 5x7 tensor with 1s on the diagonal
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.37 – 定义一个对角线为 1 的 5x7 张量
- en: 'd) Define `c`: a two-dimensional 5x5 identity tensor:'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 定义`c`：一个二维的5x5单位张量：
- en: '![Figure 1.38 – Defining a 5x5 identity tensor'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.38 – 定义一个 5x5 单位张量'
- en: '](img/B16216_01_38.jpg)'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_38.jpg)'
- en: Figure 1.38 – Defining a 5x5 identity tensor
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.38 – 定义一个 5x5 单位张量
- en: Now, run the cells in the `0`th row of tensor `b`:![Figure 1.39 – The 0th row
    of tensor b
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行张量`b`的`0`行单元格：![图 1.39 – 张量 b 的第 0 行
- en: '](img/B16216_01_39.jpg)'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_39.jpg)'
- en: Figure 1.39 – The 0th row of tensor b
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.39 – 张量 b 的第 0 行
- en: 'b) Get the `0`th element of the `0`th row:'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 获取`0`行的`0`元素：
- en: '![Figure 1.40 – Element [0,0] of tensor b'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.40 – 张量 b 的元素 [0,0]'
- en: '](img/B16216_01_40.jpg)'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_40.jpg)'
- en: Figure 1.40 – Element [0,0] of tensor b
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.40 – 张量 b 的元素 [0,0]
- en: 'c) Get rows starting at row 2 to the end:'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 获取从第 2 行开始到最后一行的所有行：
- en: '![Figure 1.41 – Rows of tensor b from row to the end'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.41 – 张量 b 从某一行到最后一行'
- en: '](img/B16216_01_41.jpg)'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_01_41.jpg)'
- en: Figure 1.41 – Rows of tensor b from row to the end
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.41 – 张量 b 从某一行到最后一行
- en: 'Run the cells in the `a` and `b`:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `a` 和 `b` 的单元格：
- en: '![Figure 1.42 – Adding two tensors'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.42 – 添加两个张量'
- en: '](img/B16216_01_42.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_42.jpg)'
- en: Figure 1.42 – Adding two tensors
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.42 – 添加两个张量
- en: 'b) Attempt to multiply tensors `a` and `c`—note that you get an error because
    the tensors do not have compatible dimensions. To multiply two two-dimensional
    tensors, the second dimension of the first tensor has to be identical to the first
    dimension of the second vector:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: b) 尝试将张量`a`和`c`相乘——请注意，你会遇到错误，因为这两个张量的维度不兼容。要乘以两个二维张量，第一个张量的第二维必须与第二个张量的第一维相同：
- en: '![Figure 1.43 – Attempt to multiply two incompatible tensors generates an error'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.43 – 尝试乘以两个不兼容的张量会产生错误'
- en: '](img/B16216_01_43.jpg)'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_43.jpg)'
- en: Figure 1.43 – Attempt to multiply two incompatible tensors generates an error
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.43 – 尝试乘以两个不兼容的张量会产生错误
- en: 'c) Define a 7x7 identity tensor:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: c) 定义一个 7x7 单位张量：
- en: '![Figure 1.44 – Defining a 7x7 identity tensor'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.44 – 定义一个 7x7 单位张量'
- en: '](img/B16216_01_44.jpg)'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_44.jpg)'
- en: Figure 1.44 – Defining a 7x7 identity tensor
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.44 – 定义一个 7x7 单位张量
- en: 'd) Now, multiply tensors `a` and `d`—this time, there is no error because the
    tensors'' dimensions are compatible:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: d) 现在，乘以张量`a`和`d`——这次没有错误，因为这两个张量的维度是兼容的：
- en: '![Figure 1.45 – Multiplying two compatible tensors'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.45 – 乘法运算两个兼容的张量'
- en: '](img/B16216_01_45.jpg)'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_45.jpg)'
- en: Figure 1.45 – Multiplying two compatible tensors
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.45 – 乘法运算两个兼容的张量
- en: 'e) Create a new tensor that is the transpose of tensor `a` (that is, the columns
    of tensor `a` become the rows of the new tensor):'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: e) 创建一个新的张量，它是张量`a`的转置（即，张量`a`的列变为新张量的行）：
- en: '![Figure 1.46 – Transposing a tensor'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.46 – 转置张量](img/B16216_01_46.jpg)'
- en: '](img/B16216_01_46.jpg)'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_46.jpg)'
- en: Figure 1.46 – Transposing a tensor
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.46 – 转置张量
- en: 'f) Multiply the transpose of tensor `a` with tensor `c` — while tensor `a`
    multiplied by tensor `c` caused an error, there will be no error this time because
    the tensors'' dimensions are compatible:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: f) 计算张量`a`的转置与张量`c`的乘积——尽管张量`a`与张量`c`相乘时会导致错误，但这次不会发生错误，因为张量的维度是兼容的：
- en: '![Figure 1.47 – Multiplying two compatible tensors'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.47 – 乘法两个兼容的张量](img/B16216_01_47.jpg)'
- en: '](img/B16216_01_47.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_47.jpg)'
- en: Figure 1.47 – Multiplying two compatible tensors
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.47 – 乘法两个兼容的张量
- en: Congratulations! You have had your first direct taste of PyTorch, the framework
    that underlies fastai.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经初步体验了PyTorch，这也是fastai的底层框架。
- en: How it works…
  id: totrans-338
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何运作…
- en: In this section you got a taste of tensors, one of the building blocks of PyTorch.
    If you are familiar with the relationship between Keras and TensorFlow, you can
    think of the relationship between fastai and PyTorch being similar. Similar to
    the way that Keras is a high-level **application programming interface** (**API**)
    for TensorFlow, fastai is built on top of PyTorch and abstracts away some of the
    complexity of PyTorch (for example, by making reasonable assumptions about defaults).
    With fastai, you can focus on creating deep learning applications without having
    to worry about all the details.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你了解了张量，PyTorch的基本构建块之一。如果你熟悉Keras与TensorFlow之间的关系，可以将fastai与PyTorch之间的关系视为类似。就像Keras是TensorFlow的高级**应用程序编程接口**（**API**）一样，fastai构建在PyTorch之上，并简化了PyTorch的一些复杂性（例如，通过对默认值做出合理的假设）。有了fastai，你可以专注于创建深度学习应用，而无需担心所有细节。
- en: There's more…
  id: totrans-340
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: 'If you are curious and want to get an overview of PyTorch now, you can check
    out this introductory tutorial: [https://pytorch.org/tutorials/beginner/nlp/pytorch_tutorial.html](https://pytorch.org/tutorials/beginner/nlp/pytorch_tutorial.html).'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感到好奇并想了解PyTorch的概况，你可以查看这个入门教程：[https://pytorch.org/tutorials/beginner/nlp/pytorch_tutorial.html](https://pytorch.org/tutorials/beginner/nlp/pytorch_tutorial.html)。
- en: Contrasting fastai with Keras
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对比fastai与Keras
- en: In this section, we'll cover some of the similarities and differences between
    fastai and Keras. While both frameworks provide high-level APIs for deep learning,
    there are some significant differences between them in terms of their architecture
    and approach to the problem, as well as differences between the communities using
    each. By contrasting these two frameworks, you will get a clearer idea of the
    strengths of fastai and be better prepared for the detailed examinations of fastai
    applications that are coming in subsequent chapters.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论fastai与Keras之间的一些相似性和差异。虽然这两个框架都提供了深度学习的高级API，但在架构、解决问题的方法以及使用这两个框架的社区之间，它们存在一些显著的差异。通过对比这两个框架，你将能更清晰地了解fastai的优势，为后续章节中对fastai应用的详细探讨做好准备。
- en: Getting ready
  id: totrans-344
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备开始
- en: 'If you have used Keras recently, then you''ll be in good shape to benefit from
    this section. If you haven''t used Keras before, or it''s been a while since you''ve
    used it, I recommend that you take a brief look at this tutorial so that you have
    a fresh overview of Keras: [https://keras.io/getting_started/intro_to_keras_for_engineers/](https://keras.io/getting_started/intro_to_keras_for_engineers/).'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你最近使用过Keras，那么你将能很好地从这一节中受益。如果你以前没有使用过Keras，或者已经有一段时间没用过了，我建议你快速浏览一下这个教程，这样你就可以重新了解Keras：[https://keras.io/getting_started/intro_to_keras_for_engineers/](https://keras.io/getting_started/intro_to_keras_for_engineers/)。
- en: How to do it…
  id: totrans-346
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: In this section, we will compare a Keras approach to the MNIST problem with
    the fastai MNIST solution that we reviewed earlier in this chapter. You can see
    the Keras approach in the `ch1` directory of the repository, in `keras_sequential_api_hello_world.ipynb`.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将把Keras处理MNIST问题的方法与我们在本章前面回顾过的fastai MNIST解决方案进行对比。你可以在仓库的`ch1`目录下的`keras_sequential_api_hello_world.ipynb`文件中查看Keras的方法。
- en: Note that, by default, you will not be able to execute this Keras notebook in
    your fastai Gradient instance because the required TensorFlow and Keras libraries
    are not installed in that instance. You will be able to run the Keras MNIST notebook
    in Colab, if you have that set up.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，默认情况下，你无法在fastai的Gradient实例中运行这个Keras笔记本，因为所需的TensorFlow和Keras库在该实例中并未安装。如果你已经设置好了Colab，你可以在Colab中运行Keras的MNIST笔记本。
- en: 'Compare the library `import` statements. Both MNIST examples require a similar
    number of `import` statements:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较库的`import`语句。两个MNIST示例需要的`import`语句数量相似：
- en: 'a) Keras:'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) Keras：
- en: '[PRE17]'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'b) fastai:'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) fastai：
- en: '[PRE18]'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Compare the setup and definition of the dataset:'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较数据集的设置和定义：
- en: 'a) Keras—The MNIST dataset is *oven ready* with Keras. Keras offers seven such
    datasets—for details, see [https://keras.io/api/datasets/](https://keras.io/api/datasets/).
    By comparison, fastai has over 25 such datasets. For details, see [https://course.fast.ai/datasets](https://course.fast.ai/datasets):'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) Keras—MNIST数据集在Keras中是*现成的*。Keras提供了七个这样的数据集—详情请参见[https://keras.io/api/datasets/](https://keras.io/api/datasets/)。相比之下，fastai提供了超过25个这样的数据集。详情请参见[https://course.fast.ai/datasets](https://course.fast.ai/datasets)：
- en: '[PRE19]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'b) fastai—This requires a `setup` statement that Keras doesn''t need (although
    this `setup` statement saves a step in the Drive mounting process when you are
    using Colab) but only requires two statements to define the dataset, versus three
    statements for Keras:'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) fastai—这需要一个Keras不需要的`setup`语句（尽管这个`setup`语句在使用Colab时可以节省Drive挂载过程中的一步），但只需要两条语句来定义数据集，而Keras则需要三条语句：
- en: '[PRE20]'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Compare the model definition statements:'
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较模型定义语句：
- en: 'a) Keras—Every layer in the model needs to be explicitly spelled out:'
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) Keras—模型中的每一层都需要明确列出：
- en: '[PRE21]'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'b) fastai—A single statement defines the model. The ability to specify the
    architecture (in this case, `resnet18`) with a single parameter streamlines the
    model definition. Note that the architecture specified for the fastai model is
    not identical to the architecture for the Keras model. For example, if you compared
    the layers listed in the output of the `learn.summary()` cell in this notebook
    with the layers specified in the definition of the Keras model, you can see that
    the fastai model has many more layers than the Keras model. In sum, the contrast
    between the fastai and Keras solutions for MNIST is not strictly *apples to apples*:'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) fastai—一个语句定义整个模型。通过单一参数来指定架构（例如`resnet18`）使得模型定义更加简洁。需要注意的是，fastai模型的架构与Keras模型的架构并不完全相同。例如，如果你将本笔记本中`learn.summary()`单元输出的层与Keras模型定义中的层进行比较，你会发现fastai模型比Keras模型有更多的层。总之，fastai和Keras在MNIST问题上的解决方案并不是严格的*对等比较*：
- en: '[PRE22]'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Compare the `fit` statements:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较`fit`语句：
- en: 'a) Keras:'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) Keras：
- en: '[PRE23]'
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'b) fastai:'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) fastai：
- en: '[PRE24]'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Compare the performance of the Keras model and the fastai model. Again, note
    that because of differences between the models (including the architecture and
    details of the fitting process), it''s not possible to draw a general conclusion
    from the differences in performance between the two models:'
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较Keras模型和fastai模型的性能。同样需要注意的是，由于模型之间存在差异（包括架构和拟合过程的细节），因此无法从两者在性能上的差异中得出一般性结论：
- en: 'a) Keras:'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) Keras：
- en: '[PRE25]'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'b) fastai:'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) fastai：
- en: '![Figure 1.48 – Results of training the MNIST model in fastai'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.48 – 使用fastai训练MNIST模型的结果'
- en: '](img/B16216_01_48.jpg)'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_01_48.jpg)'
- en: Figure 1.48 – Results of training the MNIST model in fastai
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.48 – 使用fastai训练MNIST模型的结果
- en: You have now seen a quick comparison of fastai and Keras for the same MNIST
    problem.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经快速比较了fastai和Keras在相同MNIST问题上的表现。
- en: How it works…
  id: totrans-377
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: What does this comparison between a Keras solution for MNIST and a fastai solution
    for MNIST tell us?
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 这个Keras解决方案和fastai解决方案在MNIST问题上的对比告诉了我们什么？
- en: Keras offers far fewer *oven-ready* datasets than fastai, and the fastai statements
    for defining such datasets are simpler. This is a critical benefit for fastai,
    particularly for beginners. It really helps in the process of learning about deep
    learning to have a wide variety of datasets that can be ingested easily. fastai
    really delivers on this count thanks to the big and varied set of *oven-ready*
    datasets available with fastai. We'll spend some time in the next chapter taking
    a closer look at these datasets.
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Keras提供的*现成*数据集远少于fastai，而定义这些数据集的fastai语句更简单。这是fastai的一个关键优势，特别是对于初学者来说。拥有多种可以轻松获取的数据集，对于学习深度学习非常有帮助。得益于fastai提供的大量且多样化的*现成*数据集，fastai在这方面表现非常出色。在下一章，我们将花一些时间更详细地了解这些数据集。
- en: Other than the model definition, there isn't that much difference in the number
    of lines of code between Keras and fastai for each of the steps in the solution.
    This means that for the MNIST problem, Keras isn't far behind fastai's standard
    of delivering a complete solution with a handful of lines of code.
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除了模型定义之外，在每个解决方案步骤中，Keras 和 fastai 之间的代码行数没有太大差别。这意味着对于 MNIST 问题，Keras 在提供一个完整解决方案时，并不比
    fastai 的标准逊色多少，后者只需要几行代码。
- en: The model definition is more complex in Keras, primarily because fastai lets
    us define the layers that make up the model with a single architecture parameter,
    whereas we have to explicitly define the layers in Keras. A mitigating factor
    for the complexity of the model definition in Keras is readability. In Keras,
    the layers are explicitly listed. By comparison, in the high-level fastai API,
    the layers are not listed.
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Keras 中，模型定义更为复杂，主要是因为 fastai 允许我们通过一个单一的架构参数定义构成模型的各个层，而在 Keras 中我们必须显式地定义每一层。尽管模型定义的复杂性增加，但
    Keras 的可读性较好。因为在 Keras 中，层是显式列出的。相比之下，在高级的 fastai API 中，层并没有列出。
- en: fastai offers better usability than Keras by making it possible for users to
    use the high-level fastai API without having to worry about all the explicit details.
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fastai 提供的可用性优于 Keras，因为它使用户可以使用高级 fastai API，而不必担心所有显式的细节。
- en: The statement for fitting the model is simpler in fastai. In addition, fastai
    incorporates best practices in default settings that often result in faster fitting
    times and better performance.
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 fastai 中，模型拟合的语句更简洁。此外，fastai 默认设置集成了最佳实践，这通常能带来更快的拟合时间和更好的性能。
- en: Keras benefits from greater transparency because the layers are explicitly listed.
    fastai has superior usability and out-of-the box performance thanks to carefully
    selected defaults for many settings. We are not going to do additional Keras versus
    fastai bakeoffs in this book, but I expect that, based on my experience using
    both Keras and fastai, fastai's benefits would stand out even more in complex
    applications. In addition, fastai has a big advantage because of its large set
    of curated, *oven-ready* datasets.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: Keras 由于显式列出了各个层，具有更高的透明性。而 fastai 则通过精心挑选的默认设置，提供了更好的可用性和开箱即用的性能。本书中我们不打算对
    Keras 和 fastai 进行更多的比较，但根据我对 Keras 和 fastai 的使用经验，fastai 的优势在复杂应用中会更加突出。此外，fastai
    还具有一个巨大的优势，那就是其拥有大量精心策划的*现成可用*数据集。
- en: Test your knowledge
  id: totrans-385
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试你的知识
- en: 'Now that you have completed the recipes in this chapter, you can follow the
    next steps to exercise that you have learned:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经完成了本章的所有示例，接下来可以按照以下步骤来巩固你所学的知识：
- en: Make a copy of the `mnist_hello_world.ipynb` notebook—call it `mnist_hello_world_variations.ipynb`.
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制 `mnist_hello_world.ipynb` 笔记本，并将其命名为 `mnist_hello_world_variations.ipynb`。
- en: Update your new copy of the notebook to ingest a variation of the MNIST dataset,
    called `MNIST_SAMPLE`. Which statement will you need to update to ingest this
    dataset rather than the full-blown MNIST curated dataset?
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新你新复制的笔记本，使其能够加载一种 MNIST 数据集的变体，称为 `MNIST_SAMPLE`。为了加载这个数据集，你需要更新哪个语句，而不是使用完整的
    MNIST 精选数据集？
- en: Use the `path.ls()` statement to examine the directory structure of the `MNIST_SAMPLE`
    dataset. How is the output of this statement different from its output for the
    full-blown MNIST dataset?
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `path.ls()` 语句检查 `MNIST_SAMPLE` 数据集的目录结构。该语句的输出与完整 MNIST 数据集的输出有什么不同？
- en: 'Keeping in mind the difference in the directory structure of the `MNIST_SAMPLE`
    dataset, update the values of the `train` and `valid` parameters in the following
    statement so that it will work with this dataset:'
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记住 `MNIST_SAMPLE` 数据集的目录结构差异，更新以下语句中的 `train` 和 `valid` 参数值，以便它们能够与该数据集一起使用：
- en: '[PRE26]'
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Again keeping the directory structure in mind, update the following statement
    so that it will work with the `MNIST_SAMPLE` dataset:'
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次考虑目录结构的差异，更新以下语句，使其能够与 `MNIST_SAMPLE` 数据集一起使用：
- en: '[PRE27]'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The `MNIST_SAMPLE` dataset is smaller than the full-blown MNIST dataset. Keeping
    this in mind, update the following statements so that they will work with the
    smaller dataset:'
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`MNIST_SAMPLE` 数据集比完整的 MNIST 数据集要小。记住这一点，请更新以下语句，以便它们能够与较小的数据集一起使用：'
- en: '[PRE28]'
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Now that you have updated the notebook to work with the `MNIST_SAMPLE` dataset,
    run the whole notebook to confirm that it can run to the end with no errors.
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你已经更新了笔记本，使其能够与 `MNIST_SAMPLE` 数据集一起使用，运行整个笔记本来确认它能够顺利运行到最后，不会出现错误。
- en: Congratulations! If you have completed this section, then you have successfully
    adapted a recipe to work with another curated dataset.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！如果你已经完成这一部分，那么你就成功地将一个食谱调整为适应另一个精选数据集。
