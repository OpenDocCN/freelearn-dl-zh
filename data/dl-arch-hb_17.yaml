- en: '17'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '17'
- en: Managing Drift Effectively in a Dynamic Environment
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在动态环境中有效管理漂移
- en: Drift is a significant factor in the performance deterioration of deployed deep
    learning models over time, encompassing concept drift, data drift, and model drift.
    Let’s understand the drift of a deployed model through a culinary-based analogy.
    Imagine a deployed deep learning model as a skilled chef who aims to create dishes
    that delight customers but excels in a particular cuisine. Concept drift occurs
    when the taste preferences of the diner shift, which alters the relationships
    between ingredients and popular dishes that can satisfy the diner’s palate. Data
    drift, on the other hand, happens when the ingredients themselves change, such
    as variations in flavor or availability. Finally, model metric monitoring alerts
    happen most straightforwardly when the chef loses customers. In all cases, the
    chef must adapt their dishes to maintain their success, just as deep learning
    models need to be updated to account for concept drift, which deals with the changing
    relationships between input and target variables, and data drift, which tackles
    adjustments in the input data distribution and characteristics.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 漂移是已部署深度学习模型随着时间推移性能下降的一个重要因素，涵盖了概念漂移、数据漂移和模型漂移。让我们通过一个基于烹饪的类比来理解已部署模型的漂移。假设一个已部署的深度学习模型就像一位技艺精湛的厨师，他旨在创造让顾客满意的菜肴，但他擅长某种特定的菜系。概念漂移发生在顾客的口味偏好发生变化时，这会改变食材和受欢迎菜肴之间的关系，从而影响顾客的口味需求。而数据漂移则是当食材本身发生变化时，比如口味的变化或食材的供应变化。最后，模型指标监控警报最直接的表现是当厨师失去顾客时。在所有这些情况下，厨师都必须调整菜肴以维持其成功，就像深度学习模型需要更新，以应对概念漂移（即输入和目标变量之间关系的变化）以及数据漂移（即输入数据分布和特征的调整）。
- en: 'Monitoring drift is crucial to ensuring the continued success of deep learning
    models, just as a chef needs to keep track of their customers’ evolving preferences
    and the changing nature of ingredients. As a sneak peek, only some use cases require
    monitoring. In this chapter, we will delve into the techniques to measure and
    detect drift, which will allow us to effectively monitor and send timely alerts
    when drift is detected, and make necessary model maintenance adjustments. Drawing
    parallels with our chef analogy, techniques to monitor drift can be likened to
    a chef observing the reactions of their customers, reading reviews, or collecting
    feedback to better understand their preferences and the quality of their ingredients.
    By staying alert to any drift, both the chef and the deep learning model can adapt
    and evolve, maintaining their expertise and delivering exceptional results in
    a dynamic environment. Specifically, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 监测漂移对于确保深度学习模型的持续成功至关重要，就像厨师需要跟踪顾客不断变化的口味和食材的变化一样。作为一个预告，只有某些用例需要监控。在本章中，我们将深入探讨测量和检测漂移的技术，这将使我们能够有效监控并在检测到漂移时及时发送警报，并进行必要的模型维护调整。通过与厨师类比，监控漂移的技术可以类比为厨师观察顾客反应、阅读评论或收集反馈，以更好地了解顾客的偏好和食材的质量。通过保持警觉，避免任何漂移，厨师和深度学习模型都能适应和进化，保持专业水平，并在动态环境中提供卓越的成果。具体来说，我们将涵盖以下主题：
- en: Exploring the issues of drift
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索漂移问题
- en: Exploring the types of drift
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索漂移的类型
- en: Exploring strategies to handle drift
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索处理漂移的策略
- en: Detecting drift programmatically
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以编程方式检测漂移
- en: Comparing and contrasting the Evidently and Alibi-Detect libraries for drift
    detection
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较和对比Evidently和Alibi-Detect库在漂移检测中的应用
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter will cover a practical example to test out data drift techniques.
    We will be using Python 3.10 and, additionally, we will require the following
    Python libraries to be installed:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖一个实际示例，用于测试数据漂移技术。我们将使用Python 3.10，此外，我们还需要安装以下Python库：
- en: '`evidently`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`evidently`'
- en: '`numpy`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numpy`'
- en: '`transformers==4.21.3`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`transformers==4.21.3`'
- en: '`torch==1.12.0`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`torch==1.12.0`'
- en: '`syllables`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`syllables`'
- en: '`audiomentations`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`audiomentations`'
- en: '`datasets`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`datasets`'
- en: 'The code files are available on GitHub: [https://github.com/PacktPublishing/The-Deep-Learning-Architect-Handbook/tree/main/CHAPTER_17](https://github.com/PacktPublishing/The-Deep-Learning-Architect-Handbook/tree/main/CHAPTER_17).'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 代码文件可以在 GitHub 上找到：[https://github.com/PacktPublishing/The-Deep-Learning-Architect-Handbook/tree/main/CHAPTER_17](https://github.com/PacktPublishing/The-Deep-Learning-Architect-Handbook/tree/main/CHAPTER_17)。
- en: Exploring the issues of drift
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索漂移问题
- en: 'The most obvious issue of drift is the degradation of the accuracy. However,
    there are more issues than you might initially notice, which include the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 漂移最明显的问题是准确度的下降。然而，漂移带来的问题比你最初注意到的要多，包括以下几点：
- en: '**Applicability**: The model’s ability to make accurate predictions on new,
    unseen data may be compromised as data patterns and distributions shift. This
    can result in reduced effectiveness in real-world scenarios and diminished value
    for decision-making, which raises the likelihood of the model becoming less relevant
    and practical to use.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**适用性**：随着数据模式和分布的变化，模型对新数据的准确预测能力可能会受到影响。这可能导致模型在现实场景中的效果降低，从而减少决策价值，进而增加模型变得不相关且难以使用的可能性。'
- en: '**Interpretability**: Understanding and explaining the model’s decisions can
    become challenging, as the factors influencing its predictions may no longer align
    with the current data landscape. This can hinder effective communication with
    stakeholders and impede trust in the model’s predictions. Note that an originally
    explainable model is still explainable as we can still produce accurate information
    on how it used the input data, but it can become more difficult to interpret with
    drifted data.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可解释性**：理解和解释模型的决策可能变得具有挑战性，因为影响其预测的因素可能不再与当前的数据环境相符。这可能会妨碍与利益相关者的有效沟通，并且削弱对模型预测的信任。需要注意的是，原本可以解释的模型仍然是可以解释的，因为我们仍然可以准确地说明它是如何使用输入数据的，但随着数据的漂移，解释可能变得更加困难。'
- en: '**Fairness**: Biases and disparities could emerge or worsen, raising fairness
    concerns in the model’s output. This can lead to the unequal treatment of different
    groups, perpetuating harmful disparities and posing ethical concerns in the model’s
    application.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公平性**：偏见和差异可能会出现或加剧，引发模型输出中的公平性问题。这可能导致不同群体受到不平等待遇，延续有害的不平等，并在模型应用中带来伦理问题。'
- en: '**Stability**: Sensitivity to changes in input data may result in fluctuating
    performance, impacting the model’s stability and consistency. Unstable models
    can lead to unreliable results, making it difficult for decision-makers to rely
    on the model’s outputs.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**稳定性**：对输入数据变化的敏感性可能导致性能波动，影响模型的稳定性和一致性。不稳定的模型可能导致不可靠的结果，使决策者难以依赖模型的输出。'
- en: These issues comprehensively highlight the challenges that can arise from drift
    in data. By now, we know about the three high-level drift groups. This is useful,
    but not enough to implement drift detection. Prior knowledge of the types of drift
    that can impact your model will enable you to prepare your model for any deployment-related
    concerns and implement drift monitoring, which brings us to the next topic.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题全面地突显了数据漂移可能带来的挑战。现在，我们已经了解了三种高层次的漂移类型。这些是有用的，但不足以实施漂移检测。了解可能影响模型的漂移类型将帮助你为任何部署相关的问题做好准备，并实施漂移监测，这也引出了下一个话题。
- en: Exploring the types of drift
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索漂移的类型
- en: Drift is like a shift in the way things work with data. It happens when the
    data changes, or the environment it comes from changes. This can sometimes happen
    suddenly or quickly, sometimes slowly, or even in a recurring pattern. When it
    comes to drift, it’s important to look at the big picture, not just a couple of
    odd blips. Drift isn’t about those rare anomalies or one or two odd predictions;
    it’s about changes that stick around, like a new pattern that stays. These persistent
    shifts can mess up your model permanently, making it way less useful. It’s like
    if your friend suddenly started speaking a different language occasionally, which
    could lead to one-off confusion but not really be a problem. But if they started
    speaking a different language all the time, it’d be a big problem.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 漂移就像是数据工作方式的变化。当数据本身发生变化，或其来源的环境发生变化时，就会发生漂移。这种变化有时会突然或快速发生，有时会很缓慢，甚至以某种重复的模式出现。面对漂移时，重要的是要看到大局，而不仅仅是几次偶然的异常波动。漂移并不是指那些稀有的异常或一两次奇怪的预测；它指的是那些长期存在的变化，就像是一个新的、持久的模式。这些持续的变化可能会永久破坏你的模型，使其变得不那么有用。这就像是你的朋友偶尔突然开始说另一种语言，这可能会导致一些偶尔的困惑，但不会成为大问题。但如果他们开始一直讲另一种语言，那就会是个大问题。
- en: 'Furthermore, drift can be categorized into three main types: data drift, concept
    drift, and model drift. While concept drift is related to the data and can be
    argued to be part of data drift, concept and data drift are often considered separate
    in the field. Let’s dive into each of the drift types sequentially, starting with
    data drift.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，漂移可以分为三种主要类型：数据漂移、概念漂移和模型漂移。虽然概念漂移与数据有关，可以认为它是数据漂移的一部分，但在该领域中，概念漂移和数据漂移通常被视为分开的。让我们依次深入探讨每种漂移类型，从数据漂移开始。
- en: Exploring data drift types
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索数据漂移类型
- en: Data drift occurs when certain features of a current data batch differ from
    those of a historical batch. It is essential to understand that data drift is
    not limited to a single type of change. Many practitioners mistakenly focus only
    on the most widely known type of characteristic change for data drift, which is
    the shift in distribution. Distribution is a fundamental concept in statistics
    that reveals how frequently various values of a variable appear in a dataset.
    It helps us comprehend the nature of the data we are working with, but vaguely.
    Some well-known distribution patterns include normal, uniform, skewed, exponential,
    Poisson, binomial, and multinomial. Determining whether a change in distribution
    is beneficial or harmful can be challenging because a change in distribution can
    sometimes result in good consequences, while no change in distribution doesn’t
    necessarily imply that performance won’t be degraded. The relationship between
    distribution changes and model performance is not always straightforward, making
    it difficult to assess the impact accurately. *So, it is advisable to always consider
    other, more understandable, cross-validation-tested statistical data drift that
    strongly correlates with performance metrics instead of data* *distribution drift.*
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 数据漂移是指当前数据批次的某些特征与历史批次的特征存在差异。需要理解的是，数据漂移不仅仅局限于某一种类型的变化。许多从业者错误地只关注数据漂移中最为广为人知的特征变化类型——分布的变化。分布是统计学中的一个基本概念，揭示了数据集中各种变量值出现的频率。它帮助我们理解数据的性质，但这种理解是模糊的。一些常见的分布模式包括正态分布、均匀分布、偏态分布、指数分布、泊松分布、二项分布和多项分布。判断分布变化是有益还是有害可能具有挑战性，因为分布变化有时会带来好的结果，而分布不变也不一定意味着性能不会下降。分布变化与模型性能之间的关系并非总是直观的，这使得准确评估影响变得困难。*因此，建议始终考虑其他更易理解、经过交叉验证测试的统计数据漂移，这些数据漂移与性能指标高度相关，而非数据*
    *分布漂移。*
- en: Statistical drift refers to changes in statistical characteristics, such as
    mean, variance, correlation, or skewness, that can have a more direct impact on
    model performance. This also means that the relationship between them is more
    predictable, which allows for more targeted maintenance actions. Change between
    statistical values can be measured through difference or ratio. For example, if
    a deep learning model is trained to recognize handwritten digits, a statistical
    drift in the mean intensity of the digits (for example, due to changes in lighting
    conditions) could have a direct impact on the model’s accuracy. This approach
    will enable us to better prepare for any potential negative impacts and maintain
    the effectiveness of our data analysis. More broadly, the choice between these
    two is part of the **data** **drift techniques**.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 统计漂移指的是统计特征的变化，例如均值、方差、相关性或偏度等，这些变化可能对模型性能产生更直接的影响。这也意味着它们之间的关系更可预测，从而可以采取更有针对性的维护措施。统计值之间的变化可以通过差异或比率来衡量。例如，如果一个深度学习模型被训练用于识别手写数字，则数字的均值强度发生统计漂移（例如，由于光照条件的变化）可能会直接影响模型的准确性。采用这种方法将使我们更好地为潜在的负面影响做准备，并保持数据分析的有效性。更广泛地说，这两者之间的选择是**数据**
    **漂移技术**的一部分。
- en: 'However, the prerequisite of drift being relevantly and reliably handled comes
    down to the choice of the **data types** to apply distributional or statistical
    drift methods. Some examples of the other data types are the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，漂移的相关性和可靠性处理的前提在于选择应用分布或统计漂移方法的数据类型。其他数据类型的一些示例如下：
- en: '**Data characteristic drift**: Occurs when there are changes in the underlying
    properties or attributes of the data. It’s important to remember that drift doesn’t
    just cover actual model input or output data changes and can also cover external
    descriptors or metadata associated with the input or output data. To make this
    more concrete, let’s explore some example characteristics that can be monitored
    and measured for drift:'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据特征漂移**：当数据的基础属性或特征发生变化时，就会发生数据特征漂移。需要记住的是，漂移不仅仅涵盖实际的模型输入或输出数据变化，还可以包括与输入或输出数据相关的外部描述符或元数据。为了更具体地说明这一点，下面是一些可以监控和测量漂移的特征示例：'
- en: '**Text**: The usage of certain words, phrases, sentiment, word count, and average
    length of sentences'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本**：某些词语、短语、情感、词数以及句子的平均长度'
- en: '**Image**: Object orientation, lighting hue, color, size, and any styles'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图像**：物体方向、光照色调、颜色、大小以及任何样式'
- en: '**Audio**: Sound or speaker pitch, tempo, timbre, tone, speaker gender, speaker
    accents, speaker dialects, and speaking styles'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**音频**：声音或说话人音高、节奏、音色、语调、说话人性别、说话人口音、说话人方言和说话风格'
- en: '**Data quality drift**: Occurs when there are distribution changes in the quality
    of the data being collected, such as missing values, data entry errors, or measurement
    errors. These changes can impact the model’s ability to make accurate predictions.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据质量漂移**：当收集的数据质量发生分布变化时，例如缺失值、数据输入错误或测量误差，就会发生数据质量漂移。这些变化可能会影响模型进行准确预测的能力。'
- en: '**Core data drift**: This involves the raw data of image, text, audio, and
    any embedding data that is extracted from a deep learning model at any level.
    This drift data type can be hard to interpret and it can be hard to find a correlation
    with the metrics you care about. Drift in the unstructured raw data itself rarely
    correlates with the metrics you care about. However, embedding data from the actual
    deep learning model that was used for the prediction is more likely to show drift
    values that are relevant to the metric you care about. As a standard, practitioners
    usually choose the embeddings from the final layer output.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心数据漂移**：涉及图像、文本、音频以及从深度学习模型的任何层级提取的嵌入数据。该数据类型的漂移可能很难解读，而且很难找到与您关心的指标之间的关联。原始的非结构化数据本身的漂移很少与您关心的指标相关。然而，从实际用于预测的深度学习模型中提取的嵌入数据更有可能显示出与您关心的指标相关的漂移值。作为标准，实践者通常选择来自最终层输出的嵌入数据。'
- en: 'While these data type categories cover what characteristics of the data drifted,
    there are two higher-level data drift types that should be known. The higher-level
    data drift types govern where the drift is measured, monitored, and detected,
    which can be labeled as part of the **drift scenarios**. These are the following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些数据类型类别涵盖了数据漂移的特征，但还有两种更高层次的数据漂移类型需要了解。这些更高层次的数据漂移类型决定了漂移的测量、监控和检测位置，可以被标记为**漂移场景**的一部分。它们如下所示：
- en: '**Covariate drift** or input features drift, which involves shifts in the input
    features while maintaining the same relationship with the target variable. This
    can arise from changes in data collection methods, user behavior, or external
    factors, challenging the model’s ability to generalize effectively. It can affect
    the importance or relevance of certain features in predicting the target variable.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协变量漂移**或输入特征漂移，涉及输入特征的变化，同时保持与目标变量的关系不变。这可能源于数据收集方法、用户行为或外部因素的变化，挑战模型有效泛化的能力。它可能影响某些特征在预测目标变量时的重要性或相关性。'
- en: '`Electronics` to specific labels such as `Smartphones` constitute label drift
    when underlying user-product relationships remain unchanged.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`电子产品` 到具体标签，如 `智能手机`，当基础的用户-产品关系保持不变时，就构成了标签漂移。'
- en: Building upon our understanding of data drift, let’s now delve into the equally
    important phenomenon of concept drift, which focuses on the evolving relationships
    between input data and target variables in various use cases and scenarios.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们理解数据漂移的基础上，接下来我们将深入探讨同样重要的概念漂移现象，关注不同用例和场景中输入数据与目标变量之间不断变化的关系。
- en: Exploring concept drift
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索概念漂移
- en: 'Concept drift is intimately tied to the specific use case and data characteristics.
    Rather than adhering to predefined types, concept drift’s occurrence and impact
    vary based on factors such as problem context, data attributes, temporal dynamics,
    external influences, and adaptation strategies. Acknowledging this context dependency
    is essential for tailoring effective concept drift detection and adaptation methods
    that align with the nuances of each individual scenario. Let’s explore some examples
    of concept drift:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 概念漂移与特定的应用场景和数据特征密切相关。概念漂移的发生和影响并不拘泥于预定义的类型，而是基于问题背景、数据属性、时间动态、外部影响和适应策略等因素的变化。认识到这一背景依赖性对于定制有效的概念漂移检测和适应方法至关重要，以确保方法能够与每种情境的细微差异相匹配。让我们来看看一些概念漂移的例子：
- en: '**Search engine algorithms**: A search engine’s ranking algorithm learns from
    user behavior, but the user preferences evolve over time. What was once considered
    relevant might not be anymore, causing a shift in the concept of relevance and
    altering both the input data (queries) and target (rankings) relationships.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**搜索引擎算法**：搜索引擎的排名算法从用户行为中学习，但用户偏好随着时间的推移而演变。曾经被认为相关的内容可能不再相关，导致相关性的概念发生变化，并改变输入数据（查询）和目标（排名）之间的关系。'
- en: '**Online advertisement campaigns**: In online advertising, users’ click-through
    behavior changes due to new trends or demographics. This leads to shifts in user
    preferences, affecting both the input data (ad impressions) and the target (click-through
    rates) relationships.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在线广告活动**：在在线广告中，用户的点击行为由于新的趋势或人口统计特征而发生变化。这导致用户偏好的变化，影响输入数据（广告展示）和目标（点击率）之间的关系。'
- en: '**Medical diagnostics**: In medical diagnosis, patient profiles change as demographics
    or health trends shift. This impacts the concept of “normal” and “abnormal” within
    the data, altering both the input data (patient characteristics) and the target
    (diagnosis) relationships.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**医疗诊断**：在医学诊断中，患者的个人资料随着人口统计数据或健康趋势的变化而发生变化。这会影响数据中“正常”和“异常”的概念，改变输入数据（患者特征）和目标（诊断）之间的关系。'
- en: Finally, it’s time to explore the last drift type, called model drift.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，是时候探索最后一种漂移类型，称为模型漂移。
- en: Exploring model drift
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索模型漂移
- en: Model drift simply deals with the shift in model evaluation metrics, which usually
    require real and natural targets being provided later, system metrics, and business
    metrics. This drift is the most straightforward to monitor and capture as it is
    a drift that can be directly connected to metrics you care about.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 模型漂移仅仅涉及模型评估指标的变化，这通常需要提供真实和自然的目标，系统指标和业务指标。这个漂移是最直接可以监控和捕捉的，因为它可以直接与你关心的指标相关联。
- en: Now, we are ready to explore strategies to handle drift.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好探索处理漂移的策略。
- en: Exploring strategies to handle drift
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索处理漂移的策略
- en: 'Simply setting up drift monitoring for a deployed model isn’t enough to effectively
    tackle all potential drift-related challenges. It’s crucial to ask yourself: does
    the specific drift with the chosen data type impact the model’s performance in
    the metrics that matter the most? At what point does drift become intolerable?
    To properly address drift, start by pinpointing the drift metric and data type
    that carries the most significance for your model and the business. If your model
    has been developed correctly, it may possess generalizable properties, which is
    the primary goal for most machine learning practitioners. This means that a well-developed
    model should be able to handle drift effectively. When drift detection and alerts
    are configured without proper consideration of their effects, it poses the risk
    that drift alerts can be raised without an actual issue, which can result in wasted
    time and resources that could have been used more productively elsewhere. *Figure
    17**.1* shows the high-level methodology that encompasses the strategies we will
    explore:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅为已部署的模型设置漂移监控并不足以有效应对所有潜在的漂移相关问题。你需要问自己：选择的数据类型的具体漂移是否会影响模型在最关键的指标上的表现？漂移在何种情况下变得不可接受？要正确处理漂移，首先要确定对你的模型和业务最重要的漂移指标和数据类型。如果你的模型开发得当，它可能具有通用性，这是大多数机器学习从业者的主要目标。这意味着一个开发良好的模型应该能够有效应对漂移。当漂移检测和警报配置不充分考虑其影响时，可能会出现在没有实际问题的情况下触发漂移警报的风险，这可能导致时间和资源的浪费，而这些本可以用于其他更有生产力的地方。*图17.1*展示了我们将要探讨的涵盖策略的高层次方法：
- en: '![Figure 17.1 – Drift-handling methodology](img/B18187_17_1.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.1 – 漂移处理方法](img/B18187_17_1.jpg)'
- en: Figure 17.1 – Drift-handling methodology
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.1 – 漂移处理方法
- en: Let’s start with a deep dive into the first strategy, which is to explore drift
    detection methods and strategies.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨第一种策略，即探索漂移检测方法和策略。
- en: Exploring drift detection strategies
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索漂移检测策略
- en: 'Not every drift type that can impact your model and the metrics you care about
    requires monitoring. There are two primary ways to detect drift, which are the
    following:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 并不是所有可能影响模型及其相关指标的漂移类型都需要监控。检测漂移有两种主要方法，如下所示：
- en: '**Estimating future drift events based on manual insights and domain knowledge**:
    This method doesn’t require any monitoring setup and depends on humans as the
    alerting mechanism. Imagine an e-commerce platform that uses a deep learning model
    to recommend products to its customers, with the goal of increasing product purchases.
    Drift in customer preferences consistently happens during different seasons, such
    as Halloween or Christmas. For instance, people might search for costumes in October
    and gifts in December. Building on this domain knowledge, instead of measuring
    and detecting drift, before each season arrives, you pre-emptively adjust the
    model’s recommendations according to the expected season trend. This prevents
    the need to measure and detect any change in preferences and ultimately can also
    prevent any degradation in performance.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于人工洞察和领域知识估计未来漂移事件**：这种方法不需要任何监控设置，依赖人工作为警报机制。假设有一个电子商务平台，使用深度学习模型向客户推荐商品，目的是增加商品购买量。在不同季节，比如万圣节或圣诞节，顾客偏好的漂移通常会发生。例如，人们在十月可能会搜索服装，而在十二月则会搜索礼物。基于这些领域知识，在每个季节来临之前，你可以预先根据预期的季节趋势调整模型的推荐，而不是测量和检测漂移。这避免了测量和检测偏好的变化，并最终可以防止性能下降。'
- en: '**Using automated programmatic measurements, monitoring, and detection of specific
    traits or patterns**: Imagine you trained a deep learning model to identify whether
    an email is spam and validated with real data. Through analysis, you find that
    the average length of an email degrades the model’s performance. You don’t have
    sufficient data to train the model to tackle this issue, deploy it, and decide
    to monitor it if the email length changes. By tracking and comparing this programmatic
    measurement of email length, you can effectively detect the drift and take subsequent
    actions to improve the model’s performance. Programmatic data distribution drift
    detection methods include statistical tests, distance metrics, and classification
    models and will be explored further in the *Detecting drift* *programmatically*
    section.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用自动化程序化测量、监控和检测特定特征或模式**：假设你训练了一个深度学习模型来识别电子邮件是否是垃圾邮件，并通过真实数据进行了验证。通过分析，你发现电子邮件的平均长度影响了模型的性能。由于没有足够的数据来训练模型解决这个问题，你决定部署该模型，并监控电子邮件长度的变化。通过跟踪和比较这个程序化的电子邮件长度测量，你可以有效地检测到漂移，并采取后续行动来改进模型性能。程序化数据分布漂移检测方法包括统计检验、距离度量和分类模型，将在*程序化检测漂移*部分进一步探讨。'
- en: Sometimes, both are required, and sometimes, only the first method is needed.
    Having planned fixed dates on when you expect concept drift to occur and assigning
    planned dates to mitigate them are more reasonable strategies than trying to detect
    them. However, as mentioned, there are cases where you absolutely need to implement
    drift monitoring and detection.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 有时两者都需要，有时只需要第一种方法。在预计概念漂移发生的固定日期上进行规划，并安排相应的日期来缓解漂移，比尝试检测漂移更为合理。然而，正如前面所提到的，某些情况下你确实需要实施漂移监控和检测。
- en: If the choice is to measure, monitor, and detect drift programmatically, it
    is important to make sure that you set a big enough time interval to how you’re
    measuring and detecting drift. You want to catch those shifts that are there to
    stay, and those are the ones that can make your model struggle. This ensures we’re
    not chasing after one-time anomalies but addressing substantial shifts that can
    impact the reliability of our models. To that end, drift detection in production
    should be configured to be run in batch mode and does not need real-time monitoring
    and detection.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果选择以编程方式测量、监控和检测漂移，重要的是要确保为漂移的测量和检测设置足够长的时间间隔。你需要捕捉到那些持久的漂移，它们可能会让你的模型表现不佳。这能确保我们不是在追踪一次性异常，而是在解决那些能影响模型可靠性的显著变化。为此，生产中的漂移检测应配置为批处理模式运行，不需要实时监控和检测。
- en: For other metrics for monitoring a deployed deep learning model, the recommended
    route is to use real-time predictions and monitoring and alerting functionalities
    using NVIDIA Triton Inference Server, the Prometheus server, and Grafana. However,
    for batch predictions, the recommended stack would be to use Apache Airflow for
    scheduling a drift detection task to be executed regularly, a database such as
    PostgreSQL to store drift measurements from Airflow tasks, and Grafana to connect
    to PostgreSQL for monitoring batch drift and creating alerts. Notably, a database
    is recommended over using Prometheus, being the more efficient choice, as Prometheus
    requires more services to be set up, which can take up more resources. This can
    be wasteful as Prometheus is set up to take up resources for real-time usage when
    it’s not needed. Look into [https://github.com/evidentlyai/evidently/tree/v0.4.4/examples/integrations/airflow_batch_monitoring](https://github.com/evidentlyai/evidently/tree/v0.4.4/examples/integrations/airflow_batch_monitoring)
    for a tutorial on how to set this up.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他监控已部署深度学习模型的指标，推荐的方案是使用 NVIDIA Triton 推理服务器、Prometheus 服务器和 Grafana 来实现实时预测、监控和告警功能。然而，对于批量预测，推荐的技术栈是使用
    Apache Airflow 来调度漂移检测任务定期执行，使用 PostgreSQL 等数据库存储来自 Airflow 任务的漂移测量值，并通过 Grafana
    连接到 PostgreSQL 进行批量漂移监控和告警创建。特别地，推荐使用数据库而不是 Prometheus，因为数据库更为高效，Prometheus 需要设置更多服务，占用更多资源。使用
    Prometheus 可能会浪费资源，因为它是为实时使用而设计的，而在这里并不需要实时使用。可以参考 [https://github.com/evidentlyai/evidently/tree/v0.4.4/examples/integrations/airflow_batch_monitoring](https://github.com/evidentlyai/evidently/tree/v0.4.4/examples/integrations/airflow_batch_monitoring)
    获取如何设置此方案的教程。
- en: The prerequisite to setting the recommended batch predictions stack up is that
    the input data used must be saved somewhere for an Airflow task to pick it up
    in the future. The data can live in any format, and most typically for actual
    business use cases, the input data should already live in a database such as PostgreSQL.
    If drift is applied to the predictions, then either the predictions also need
    to be saved in a database or it can be a task prior to the drift measurement under
    the same directed acyclic graph in Airflow, which can be scheduled regularly.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 设置推荐的批量预测栈的前提是，输入数据必须保存在某个地方，以便 Airflow 任务能够在未来获取。数据可以以任何格式存储，通常对于实际业务用例，输入数据应已存在于如
    PostgreSQL 等数据库中。如果漂移应用于预测结果，那么预测结果要么也需要保存在数据库中，要么可以作为漂移测量之前的任务，置于 Airflow 中相同的有向无环图（DAG）下，并可以定期调度执行。
- en: As a follow-up, to ensure reliable drift monitoring and detection programmatically,
    we need an additional step before setting it up, which is to analyze the impact
    of drift.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了确保能够可靠地进行漂移监控和检测，我们需要在设置之前进行一个额外步骤，即分析漂移的影响。
- en: Analyzing the impact of drift
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析漂移的影响
- en: To mitigate the risk that drift alerts are raised without an actual issue, perform
    a **drift impact analysis** on your chosen model before deployment. Drift impact
    analysis is closely related to the adversarial performance analysis methods introduced
    in [*Chapter 14*](B18187_14.xhtml#_idTextAnchor206), *Analyzing Adversarial Performance*.
    The same strategy of using controllable augmentation or collecting real-world
    data with the targeted data characteristic drift to perform an evaluation can
    be adopted. So, re-explore that chapter and apply the same analysis methods with
    drift in mind. The idea is to make sure any variation in the data type or types
    you choose to monitor for drift correlates with the model performance metrics
    in some way. In other words, perform correlation analysis, adversarial performance
    analysis, or drift impact analysis at once! But do be aware of the issue where
    correlation not being causation can lead to misleading conclusions.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少漂移警报在没有实际问题的情况下被触发的风险，在部署之前对所选模型进行**漂移影响分析**。漂移影响分析与[*第14章*](B18187_14.xhtml#_idTextAnchor206)，*分析对抗性性能*部分中介绍的对抗性性能分析方法密切相关。可以采用相同的策略，使用可控的增强或收集具有目标数据特征漂移的真实世界数据进行评估。因此，可以重新探索该章节，并将相同的分析方法应用于漂移的考虑。其核心思想是确保你选择用于监控漂移的数据类型或类型的任何变化与模型性能指标之间有某种关联。换句话说，一次性进行相关性分析、对抗性性能分析或漂移影响分析！但要注意相关性不等于因果关系的问题，避免得出误导性结论。
- en: Note
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When there are cases where you can’t augment the characteristics, it can be
    crucial to monitor it after deployment and perform impact analysis then.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 当无法增强特征时，部署后进行监控并进行影响分析可能是至关重要的。
- en: Consequently, as a bonus, findings from adversarial performance analysis should
    guide the establishment of an appropriate detection threshold, determined by pinpointing
    the stage at which any additional metric degradation becomes unacceptable. Just
    as a binary threshold must be finely calibrated to balance recall and precision
    trade-offs for a binary classification model. This is part of the guardrail filter
    component introduced in the *Governing deep learning model utilization* section
    in the previous chapter, [*Chapter 16*](B18187_16.xhtml#_idTextAnchor238), *Governing
    Deep Learning Models*. With guardrail filters implemented through data characteristic
    thresholding, the risk of data drifting in extreme ways negatively will be decreased.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，作为额外奖励，来自对抗性性能分析的发现应指导建立适当的检测阈值，这个阈值通过确定在任何额外的指标降级变得不可接受的阶段来决定。就像二进制阈值必须精细调校，以平衡二分类模型中召回率和精确度的权衡一样。这是上一章中[*第16章*](B18187_16.xhtml#_idTextAnchor238)，*深度学习模型管理*部分引入的护栏过滤器组件的一部分。通过数据特征阈值实现的护栏过滤器，可以降低数据在极端情况下漂移的风险。
- en: It’s important here to differentiate the two related approaches introduced that
    help to combat performance degradation, which are guardrail filters with thresholds
    and drift monitoring. Guardrail filters operate on a per-prediction request level
    and drift operates at a higher level working with a batch of predictions made
    in a specified time frame. The key mutually beneficial relationship between them
    is that guardrail filters aid in eliminating extreme examples known to yield inaccurate
    or unreliable results, thus reducing the likelihood and adverse effects of more
    extreme drift. It can still be useful to measure and monitor the statistics of
    the same data types even when extreme values are prevented through guardrail filters.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这里需要区分介绍的两种相关方法，它们有助于应对性能降级，即带有阈值的护栏过滤器和漂移监控。护栏过滤器在每个预测请求级别上运行，而漂移则在更高层次上进行，在特定时间范围内与一批预测一起工作。它们之间的关键互利关系是，护栏过滤器有助于消除已知会导致不准确或不可靠结果的极端示例，从而减少更极端漂移的可能性和不良影响。即使通过护栏过滤器避免了极端值，测量和监控相同数据类型的统计数据仍然是有用的。
- en: 'Another important aspect to consider is that deployed models can be vulnerable
    to various types of drift. Sometimes, you can reliably analyze the impact of specific
    characteristics on your desired metric, while in other cases, you might not be
    able to, even if the characteristics are measurable. This inability could stem
    from the lack of viable augmentations to simulate the characteristic or the insufficient
    availability of natural data examples containing the targeted characteristic.
    When you’re unable to reliably analyze the impact, you have two main options to
    consider:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要考虑的重要方面是，部署后的模型可能会受到各种类型的漂移影响。有时候，你可以可靠地分析特定特征对期望指标的影响，而在其他情况下，即使特征是可测量的，你也可能无法分析这种影响。这种无法分析的原因可能来自于缺乏有效的增广方法来模拟该特征，或是缺乏包含目标特征的自然数据示例。当你无法可靠地分析影响时，有两种主要的选择可以考虑：
- en: Set up monitoring of the statistics of the chosen data characteristics without
    a detection component, allowing for future analysis once more data has been gathered
    over time. Alternatively, consider implementing soft alerts that prompt post-deployment
    analysis when extreme or unknown values emerge in the characteristic you suspect
    could influence the model.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置对所选数据特征统计的监控，而不包含检测组件，从而允许在随着时间的推移收集到更多数据后进行未来的分析。或者，考虑实施软警报机制，当你怀疑可能影响模型的特征出现极端或未知值时，提醒进行部署后的分析。
- en: Apply data distribution drift-based monitoring and detection. Although it is
    hard to predict the metric impact from distribution change, there is value in
    using it as a more reliable arbitrary soft alert mechanism, similar to as described
    in the previous point.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用基于数据分布漂移的监控和检测。虽然很难预测分布变化对指标的影响，但将其作为一种更可靠的任意软警报机制仍然有价值，类似于前面提到的方式。
- en: After crafting a detection strategy and verifying its impact, it’s time to consider
    how we can tackle the potential issues caused by drift and determine the steps
    to address any drift incidents that arise.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在制定检测策略并验证其影响后，接下来就是考虑如何解决漂移可能带来的潜在问题，并确定应对任何漂移事件的步骤。
- en: Exploring strategies to mitigate drift
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索减缓漂移的策略
- en: 'This falls within the domain of model maintenance, where we take action to
    ensure our model stays on track and remains effective over time. Here are a few
    techniques that can be used to tackle drift alerts:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这属于模型维护的范畴，我们采取行动以确保模型保持在正确轨道上，并在时间推移中保持有效性。以下是一些可以用于处理漂移警报的技术：
- en: '**Retrain or fine-tune**: Regularly retrain or fine-tune the model with new
    data, incorporating any changes in patterns or trends. This will help the model
    adapt to evolving data dynamics and maintain its accuracy.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重新训练或微调**：定期使用新数据重新训练或微调模型，融入任何模式或趋势的变化。这将帮助模型适应不断变化的数据动态，并保持其准确性。'
- en: '**Prevent predictions of high-risk drift metric score ranges**: Don’t allow
    data that lies in a high-risk range of characteristics or range of distribution
    distances to be predicted. For example, face recognition systems should only predict
    frontal, unobstructed faces without masks or glasses. This will result in targeted
    prevention of drift, as the data you receive will always be in the expected range.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**防止预测高风险漂移指标范围**：不要允许数据位于高风险特征范围或分布距离范围内的预测。例如，人脸识别系统应仅预测正面无遮挡、没有戴口罩或眼镜的人脸。这样可以实现针对漂移的有针对性预防，因为你接收到的数据始终会在预期的范围内。'
- en: '**Manual human analysis**: This is where a human expert is involved in the
    decision-making process when drift alerts are triggered. The expert can review
    the situation, validate the model’s predictions in aggregate, and provide feedback
    to improve the model’s performance over time. This approach helps maintain the
    model’s accuracy and effectiveness while also providing valuable insights for
    future improvements. This can be useful to handle new, unseen, non-numerical data
    types properly, such as new words for text data or new label categories.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**人工分析**：当漂移警报触发时，专家参与决策过程。专家可以审查情况，验证模型的总体预测，并提供反馈以改善模型的性能。这种方法有助于保持模型的准确性和有效性，同时也为未来的改进提供宝贵的见解。这对于处理新的、未见过的、非数值型数据（如文本数据中的新词或新的标签类别）非常有用。'
- en: With proper drift impact analysis, drift detection strategy, and model maintenance
    flow setup, you can now ensure that your deep learning model remains robust and
    accurate even as the underlying data distribution evolves. By understanding how
    changes in the data can affect your model’s performance, having a strategy in
    place to identify and quantify drift, and establishing a clear process for model
    updates and maintenance, you can proactively address issues, maintain model reliability,
    and provide consistent and trustworthy results over time.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 通过适当的漂移影响分析、漂移检测策略和模型维护流程设置，你可以确保即使在基础数据分布发生变化的情况下，你的深度学习模型仍然保持稳健和准确。通过理解数据变化如何影响模型的性能，制定识别和量化漂移的策略，并建立清晰的模型更新和维护流程，你可以主动解决问题，保持模型的可靠性，并随着时间的推移提供一致且值得信赖的结果。
- en: We will dive deeper into the topic of programmatic drift detection in the next
    section.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将深入探讨程序化漂移检测的主题。
- en: Detecting drift programmatically
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 程序化检测漂移
- en: With a comprehensive understanding of drift types and their effects, we will
    explore techniques for detecting drift programmatically, diving into the realms
    of concept drift and data drift. Armed with these methods, you’ll be well equipped
    to implement high-risk drift detection components. Let’s start with concept drift.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在全面理解漂移类型及其影响的基础上，我们将探索程序化检测漂移的技术，深入探讨概念漂移和数据漂移的领域。掌握这些方法后，你将能够实施高风险的漂移检测组件。让我们从概念漂移开始。
- en: Detecting concept drift programmatically
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 程序化检测概念漂移
- en: 'Concept drift involves both the input data and the target data. This means
    that we can effectively detect concept drift for a deployed model only when we
    can get access to the real target labels in production. When you do have access
    to them, you can adopt the following techniques to detect concept drift:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 概念漂移涉及输入数据和目标数据。这意味着，只有当我们能够访问生产环境中的真实目标标签时，才能有效地检测部署模型的概念漂移。当你能够访问这些标签时，可以采用以下技术来检测概念漂移：
- en: '**Check the similarity of production data to the reference training data**:
    This should include both input and output data.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检查生产数据与参考训练数据的相似性**：这应包括输入数据和输出数据。'
- en: '**Use model evaluation metrics as a proxy**: Evaluation metrics can signal
    concept drift or data drift.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用模型评估指标作为代理**：评估指标可以指示概念漂移或数据漂移。'
- en: '**Use multivariate-based data drift detection and include both input and target
    data**: This can be unreliable where detection can be data drift instead of concept
    drift. But it doesn’t change the fact that something needs to be done, so it’s
    fine.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用基于多变量的数据漂移检测，并包括输入和目标数据**：这在检测数据漂移而非概念漂移时可能不可靠。但这并不改变必须采取措施的事实，所以这是可以接受的。'
- en: Next, we will explore programmatic data drift detection.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探索程序化数据漂移检测。
- en: Detecting data drift programmatically
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 程序化检测数据漂移
- en: 'Detecting data drift programmatically involves two essential steps: quantifying
    the type of change of data and applying a detection threshold based on reference
    or training data and the current data. For statistical-based drift, detection
    can be implemented with data statistical value thresholds identified during the
    analysis. However, for distribution-based data drift, it can be hard and ambiguous
    to define the threshold properly. In this section, we will focus on methods to
    quantify the distribution change. To do that, one can employ either of the following
    methods:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 程序化检测数据漂移涉及两个关键步骤：量化数据变化的类型，并基于参考或训练数据和当前数据应用检测阈值。对于基于统计的漂移，检测可以通过分析中识别的数据统计值阈值来实现。然而，对于基于分布的数据漂移，定义阈值可能会变得困难且模糊。在本节中，我们将重点介绍量化分布变化的方法。为此，可以采用以下任一方法：
- en: '`evidently`, along with its pros and cons:'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`evidently`，以及它的优缺点：'
- en: '| **Statistical** **test type** | **Pros** | **Cons** | **Evidently** **implementation
    info** |'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **统计** **检验类型** | **优点** | **缺点** | **Evidently** **实现信息** |'
- en: '| **Kolmogorov-** **Smirnov** (**K-S**) test | Non-parametric and distribution-free,
    making it versatile. Fast to compute and interpret. | Less sensitive to differences
    in tails of distributions. Assumes continuous and one-dimensional data. | Supports:
    Numerical data typeThreshold: Score < 0.05Default: For numerical data, if <= 1,000
    samples |'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **Kolmogorov-** **Smirnov** (**K-S**) 检验 | 非参数且无分布要求，使其具有广泛适用性。计算和解释速度快。
    | 对分布尾部的差异不太敏感。假设数据是连续且一维的。 | 支持：数值数据类型阈值：得分 < 0.05 默认：对于数值数据，样本数 <= 1,000 |'
- en: '| Chi-squared test | Works well for categorical data. Fast to compute and interpret.
    | Requires data to be binned, which can be subjective. Assumes that observations
    are independent. | Supports: Categorical data typeThreshold: Score < 0.05Default:
    For categorical with > 2 labels, if <= 1,000 samples |'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 卡方检验 | 适用于分类数据。计算和解释速度快。 | 需要将数据分箱，这可能是主观的。假设观察值是独立的。 | 支持：分类数据类型 阈值：得分 <
    0.05 默认：对于标签 > 2 的分类数据，如果样本量 <= 1,000 |'
- en: '| Z-test | Works well for large sample sizes. Fast to compute and interpret.
    | Assumes normal distribution and known population variance. Not suitable for
    small sample sizes. | Supports: Categorical data typeThreshold: Score < 0.05Default:
    For binary categorical data, if <= 1,000 samples |'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Z 检验 | 适用于大样本。计算和解释速度快。 | 假设数据符合正态分布且已知总体方差。对于小样本不适用。 | 支持：分类数据类型 阈值：得分 <
    0.05 默认：对于二元分类数据，如果样本量 <= 1,000 |'
- en: '| Anderson-Darling test | More sensitive to differences in tails of distributions
    compared to the K-S test. Can be used for various distributions with proper scaling.
    | Assumes continuous data. Computationally more complex than the K-S test. | Supports:
    Numerical data typeThreshold: Score < 0.05Default: N/A |'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Anderson-Darling 检验 | 相比 K-S 检验，对分布尾部的差异更为敏感。可以通过适当的缩放用于多种分布。 | 假设数据是连续的。计算上比
    K-S 检验更复杂。 | 支持：数值数据类型 阈值：得分 < 0.05 默认：N/A |'
- en: '| Fisher’s exact test | Accurate even with small sample sizes. Suitable for
    categorical data. | Computationally intensive, especially with large sample sizes.
    Limited to 2x2 contingency tables. | Supports: Categorical data typeThreshold:
    Score < 0.05Default: N/A |'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Fisher 精确检验 | 即使在小样本下也能准确。适用于分类数据。 | 计算密集，特别是在大样本时。仅限于 2x2 的列联表。 | 支持：分类数据类型
    阈值：得分 < 0.05 默认：N/A |'
- en: '| Cramér-von Mises test | Sensitive to differences in both central and tail
    regions of distributions. Non-parametric and distribution-free. | Computationally
    more complex than the K-S test. Assumes continuous data. | Supports: Numerical
    data typeThreshold: Score < 0.05Default: N/A |'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Cramér-von Mises 检验 | 对分布的中心区域和尾部区域的差异敏感。非参数性且不依赖分布。 | 比 K-S 检验计算上更复杂。假设数据是连续的。
    | 支持：数值数据类型 阈值：得分 < 0.05 默认：N/A |'
- en: '| G-test (likelihood ratio test) | Suitable for categorical data. Asymptotically
    equivalent to the Chi-squared test. | Requires large sample sizes for accurate
    results. Assumes independent observations. | Supports: Categorical data typeThreshold:
    Score < 0.05Default: N/A |'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| G 检验（似然比检验） | 适用于分类数据。渐近上与卡方检验等效。 | 需要较大的样本量才能获得准确的结果。假设观察值是独立的。 | 支持：分类数据类型
    阈值：得分 < 0.05 默认：N/A |'
- en: '| Epps-Singleton test | Sensitive to differences in the shape of distributions.
    Robust against outliers. | Computationally complex. Assumes continuous data. |
    Supports: Numerical data typeThreshold: Score < 0.05Default: N/A |'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Epps-Singleton 检验 | 对分布形状的差异敏感。对异常值具有鲁棒性。 | 计算复杂。假设数据是连续的。 | 支持：数值数据类型 阈值：得分
    < 0.05 默认：N/A |'
- en: '| T-test | Fast to compute and interpret. Applicable for comparing the means
    of two groups. | Assumes normal distribution and equal variance. Not suitable
    for small sample sizes when the normality assumption is not met. | Supports: Numerical
    data typeThreshold: Score < 0.05Default: N/A |'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| T 检验 | 计算和解释速度快。适用于比较两个组的均值。 | 假设数据符合正态分布且方差相等。当正态性假设不成立时，适用于小样本的情况不佳。 |
    支持：数值数据类型 阈值：得分 < 0.05 默认：N/A |'
- en: Table 17.1 – Statistical tests for distribution change
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 表 17.1 – 分布变化的统计检验
- en: '`evidently` along with its pros and cons:'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`evidently` 及其优缺点：'
- en: '| **Distance metric** | **Pros** | **Cons** | **Evidently** **implementation
    info** |'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **距离度量** | **优点** | **缺点** | **显然** **实施信息** |'
- en: '| Wasserstein distance | Captures the geometric differences between two distributions,
    taking into account both the shape and location. Provides a natural and interpretable
    metric for comparing distributions. | Computationally expensive, especially for
    high-dimensional data. May not work well for discrete distributions or sparse
    data. | Supports: Numerical data typeThreshold: Distance >= 0.1Default: For numerical
    data, if > 1,000 samples |'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Wasserstein 距离 | 捕捉两种分布之间的几何差异，考虑到形状和位置。为比较分布提供了一种自然且可解释的度量标准。 | 计算开销较大，尤其是在高维数据中。对于离散分布或稀疏数据可能效果不佳。
    | 支持：数值数据类型 阈值：距离 >= 0.1 默认：对于数值数据，如果样本量 > 1,000 |'
- en: '| **Kullback-Leibler** (**KL**) divergence | Quantifies the difference between
    two probability distributions by measuring the extra number of bits required to
    encode one distribution using the other. Works well for continuous distributions
    and has a strong theoretical foundation. | Asymmetric: KL(P &#124;&#124; Q) ≠
    KL(Q &#124;&#124; P), which may affect the interpretation of the measure. May
    be infinite if the support of the two distributions does not overlap, making it
    less suitable for data drift detection. | Supports: Numerical and categorical
    data typesThreshold: Distance >= 0.1 |'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **Kullback-Leibler**（**KL**）散度 | 通过测量使用一个分布编码另一个分布所需的额外位数来量化两个概率分布之间的差异。适用于连续分布，并且具有较强的理论基础。
    | 非对称：KL(P &#124;&#124; Q) ≠ KL(Q &#124;&#124; P)，这可能影响度量的解释。如果两个分布的支持不重叠，可能会导致结果为无限值，这使得它不太适合数据漂移检测。
    | 支持：数值型和类别型数据阈值：距离 >= 0.1 |'
- en: '| **Jensen-Shannon** (**JS**) distance | Symmetric measure: JS(P &#124;&#124;
    Q) = JS(Q &#124;&#124; P), making it more suitable for comparison. Bounded between
    0 and 1, making it easier to interpret. Combines the strengths of KL divergence
    and mutual information. | In some cases, JS distance might not be sensitive enough
    to detect small differences between distributions. | Supports: Numerical and categorical
    data typeThreshold: Distance >= 0.1Default: For categorical, if > 1,000 samples
    |'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **Jensen-Shannon**（**JS**）距离 | 对称度量：JS(P &#124;&#124; Q) = JS(Q &#124;&#124;
    P)，使得它更适合进行比较。值范围在 0 到 1 之间，便于解释。结合了 KL 散度和互信息的优点。 | 在某些情况下，JS 距离可能对分布之间的小差异不够敏感。
    | 支持：数值型和类别型数据阈值：距离 >= 0.1默认：对于类别型数据，如果样本量 > 1,000 |'
- en: '| Hellinger distance | Bounded: Produces values between 0 and 1, providing
    easier interpretation | Might not be sensitive enough to detect small differences
    between distributions. | Supports: Numerical and categorical data typeThreshold:
    Distance >= 0.1 |'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Hellinger 距离 | 有界：生成的值在 0 到 1 之间，易于解释 | 可能对分布之间的小差异不够敏感。 | 支持：数值型和类别型数据阈值：距离
    >= 0.1 |'
- en: Table 17.2 – Distance metrics for data drift
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 表 17.2 – 数据漂移的距离度量
- en: '**Classification model to differentiate between the reference and the current
    data**: A binary threshold needs to be set. Although this isn’t strictly a distribution
    change measurement, it can be considered an approximated distribution change.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类模型区分参考数据和当前数据**：需要设置一个二元阈值。虽然这严格来说不是一个分布变化的测量，但它可以视为一个近似的分布变化。'
- en: Fortunately, the `evidently` library provides all these methods out of the box
    with default thresholds. Evidently is an easy-to-use toolkit that provides metrics
    monitoring, data drift detection, and data drift analysis functionalities for
    machine learning models.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，`evidently` 库提供了所有这些方法，并且有默认阈值。Evidently 是一个易于使用的工具包，提供了度量监控、数据漂移检测和数据漂移分析功能，适用于机器学习模型。
- en: 'As a follow-up to the data distribution-based drift detection topic, either
    of the methods introduced can be executed using either univariate or multivariate
    approaches. The choice between these approaches depends on the complexity of the
    data and the desired level of granularity in drift detection. Here are some suggestions
    on when to choose each method:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据分布基础漂移检测主题的后续，介绍的任何方法都可以通过单变量或多变量方法来执行。选择这些方法的依据取决于数据的复杂性和所需的漂移检测粒度。以下是选择每种方法的建议：
- en: 'Use univariate drift detection in the following cases:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在以下情况下使用单变量漂移检测：
- en: The relationships between individual variables are not significant or not of
    primary concern
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各个变量之间的关系不显著或不是主要关注点
- en: The goal is to detect drift at a granular level, focusing on each variable separately
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标是从细粒度层面检测漂移，专注于每个变量单独分析
- en: The data has a low dimensionality or a small number of variables, making it
    less challenging to analyze each variable individually
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据维度低或变量数量少，分析每个变量时不那么具有挑战性
- en: The computational resources or time available for analysis are limited, as univariate
    methods are generally less computationally demanding than multivariate methods
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用于分析的计算资源或时间有限，因为单变量方法通常比多变量方法计算需求更低
- en: 'Use multivariate drift detection in the following cases:'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在以下情况下使用多变量漂移检测：
- en: The relationships between multiple variables are essential, and detecting drift
    in these relationships is crucial for model performance
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个变量之间的关系至关重要，检测这些关系中的漂移对于模型性能至关重要
- en: The data has high dimensionality or many variables, making it challenging to
    analyze each variable individually
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据具有高维度或有很多变量，导致很难单独分析每个变量
- en: The goal is to capture a holistic view of the data drift, considering the interactions
    between variables
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标是捕捉数据漂移的全貌，考虑变量之间的相互作用
- en: The computational resources and time available for analysis are sufficient,
    as multivariate methods can be more computationally intensive than univariate
    methods
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用的计算资源和分析时间是充足的，因为多变量方法可能比单变量方法更消耗计算资源
- en: The meaning of individual variables is not defined, for example, embeddings
    generated from deep learning models
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个变量的意义未定义，例如来自深度学习模型生成的嵌入
- en: Evaluate these factors to determine the appropriate method for detecting data
    drift in machine learning models.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 评估这些因素，以确定检测机器学习模型中数据漂移的适当方法。
- en: One final step is to identify the detection threshold. As any distribution change
    doesn’t necessarily mean a positive impact or negative impact, it’s hard to set
    a threshold through any cross-validation techniques for your dataset. The idea
    here is to set a reasonable large distribution change value that can at least
    cause a change in impact. Fortunately, if you use the `evidently` library, it
    provides default thresholds that allow us to truly treat this technique as an
    arbitrary drift detector when you don’t have the means to analyze the metric impact.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是确定检测阈值。由于任何分布变化不一定意味着正面或负面的影响，因此很难通过交叉验证技术为您的数据集设置阈值。这里的思路是设定一个合理的大幅度分布变化值，至少能够引起影响变化。幸运的是，如果使用
    `evidently` 库，它提供了默认的阈值，使我们能够在无法分析指标影响时，将此技术真正视为一个任意漂移检测器。
- en: Next, we will dive into a short practical implementation of programmatic data
    distribution drift detection using the Python **evidently** library.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入探讨使用 Python **evidently** 库进行程序化数据分布漂移检测的简短实践实现。
- en: Implementing programmatic data distribution drift detection using evidently
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 evidently 实现程序化数据分布漂移检测
- en: 'One thing you are probably curious about is whether the absolute magnitude
    of distribution matters in distribution drift computation. In this section, we
    will explore a short tutorial on using evidently that demonstrates three things:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能好奇的是，分布的绝对幅度是否在分布漂移计算中很重要。在这一部分，我们将探索一个简短的教程，演示如何使用 evidently，该教程展示了以下三点：
- en: Absolute magnitude matters as well in distribution drift measurements along
    with relative magnitude
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在分布漂移的测量中，绝对幅度和相对幅度都很重要。
- en: A detected distribution drift or a highly drifted score doesn’t necessarily
    result in degraded performance
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测到的分布漂移或高度漂移的分数不一定导致性能下降
- en: Distribution drift alignment with a drop in metric performance
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分布漂移与指标性能下降的对齐
- en: 'The tutorial will be based on the same model, dataset, and dataset characteristic
    used in the *Executing adversarial performance analysis for speech recognition
    models* section in [*Chapter 14*](B18187_14.xhtml#_idTextAnchor206), *Analyzing
    Adversarial Performance*, which is about speech recognition. Let’s dive into it
    in a step-by-step manner:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 该教程将基于与 [*第14章*](B18187_14.xhtml#_idTextAnchor206) 中的 *执行对抗性性能分析用于语音识别模型* 部分相同的模型、数据集和数据集特征，*分析对抗性性能*，讲解语音识别。让我们按步骤深入探讨：
- en: 'First, we will import the necessary libraries:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将导入必要的库：
- en: '[PRE0]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, we will load the dataset and the speech recognition model in the GPU:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将在 GPU 上加载数据集和语音识别模型：
- en: '[PRE1]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We will be using the word error rate performance metric here, so let’s use
    the method from the Hugging Face `evaluate` library along with the method to compute
    and return a list of the metric scores:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在这里使用词错误率（WER）性能指标，因此我们将使用 Hugging Face `evaluate` 库中的方法，并结合计算并返回指标分数列表的方法：
- en: '[PRE2]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We will be using a known characteristic that affects the metric performance
    of the model, can be controlled through augmentation, and can be measured, which
    is syllables per second. Let’s define the method that gets the augmented results
    and calls the method to compute the metric scores:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用一个已知特征，它会影响模型的指标性能，可以通过增强进行控制，并且可以测量，这就是每秒音节数。让我们定义一个方法，获取增强结果并调用该方法来计算指标分数：
- en: '[PRE3]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To properly demonstrate the behavior of performance improvements even when
    drift is detected, we will use a modified version of the dataset as the reference
    baseline. Let’s obtain it by first extracting the original dataset info:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了正确演示即使检测到漂移时性能改进的行为，我们将使用修改过的数据集作为参考基准。让我们通过首先提取原始数据集信息来获取它：
- en: '[PRE4]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, we obtain the audio dataset that is expanded three times its original
    duration and prepare the DataFrame compatible with `evidently` library processing,
    which effectively reduces the syllables per second by three times:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们获取一个扩展到原始时长三倍的音频数据集，并准备与`evidently`库处理兼容的DataFrame，从而有效地将每秒音节数减少三倍：
- en: '[PRE5]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now that we have a reference dataset, we need a current dataset that simulates
    new data that we receive with a deployed model. We will modify 90% of the reference
    dataset to 10 syllables per second to show a more extreme case of distribution
    change from normal to highly skewed distribution:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了参考数据集，我们需要一个当前数据集来模拟我们在部署的模型中接收到的新数据。我们将把参考数据集的90%修改为每秒10个音节，以展示从正常分布到高度偏斜分布的极端分布变化情况：
- en: '[PRE6]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now that we have both a reference dataset and a current dataset, let’s obtain
    the data drift report:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们既有参考数据集，也有当前数据集，让我们获取数据漂移报告：
- en: '[PRE7]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Figure 17.2 – Data drift report by evidently](img/B18187_17_2.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图17.2 – Evidently生成的数据漂移报告](img/B18187_17_2.jpg)'
- en: Figure 17.2 – Data drift report by evidently
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.2 – Evidently生成的数据漂移报告
- en: Remember that the default K-S test is used when the dataset has less than 1,000
    columns, which reflects what was used here. Drift was detected with a 0.05 threshold
    and the metric performance dropped significantly; this is the ideal situation.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，当数据集的列数少于1,000列时，会使用默认的K-S检验，这也是此处所使用的情况。在0.05的阈值下，检测到了漂移，并且度量指标的性能显著下降；这是理想的情况。
- en: 'Next, we’ll create a simulation in which the number of syllables pronounced
    per second is tripled compared to the current data. We’ll use the original dataset
    for this and get the `evidently` drift report:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个模拟，其中每秒发音的音节数将是当前数据的三倍。我们将使用原始数据集，并获取`evidently`的漂移报告：
- en: '[PRE8]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This will result in the report shown in *Figure 17**.3*:'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将生成如*图17.3*所示的报告：
- en: '![Figure 17.3 – Evidently report with same distribution but different magnitude
    still detected drift](img/B18187_17_3.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图17.3 – Evidently报告显示相同分布但不同幅度的漂移仍被检测到](img/B18187_17_3.jpg)'
- en: Figure 17.3 – Evidently report with same distribution but different magnitude
    still detected drift
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.3 – Evidently报告显示相同分布但不同幅度的漂移仍被检测到
- en: Here, the distribution pattern is visibly the same, but the absolute magnitude
    of each group of syllables per second is much higher. The K-S test still managed
    to detect this as drift as it uses cumulative distribution difference, showcasing
    the versatility of distribution drift methods. With that, we have completed the
    tutorial! `evidently` offers a broader range of metrics for measurement, including
    data quality statistics and model evaluation metrics. It also includes built-in
    support for monitoring data drift and detecting data types such as embeddings
    and text. Be sure to explore these features separately. Additionally, consider
    diving into each of the methods in detail to discover new behaviors of distribution
    drift techniques that you never thought were possible.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，分布模式明显相同，但每组每秒音节的绝对幅度要高得多。K-S检验仍然成功地将其检测为漂移，因为它使用累积分布差异，展示了分布漂移方法的多功能性。至此，我们已经完成了教程！`evidently`提供了更广泛的度量指标，包括数据质量统计和模型评估指标。它还内置支持监控数据漂移，并检测数据类型，如嵌入和文本。请务必单独探索这些功能。此外，考虑深入研究每种方法的细节，发现分布漂移技术中你从未想到过的新行为。
- en: Other than Evidently, there is one more notable open source library that you
    can use to handle drift programmatically, which is part of what we will discover
    next.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Evidently之外，还有一个值得注意的开源库可以用于以编程方式处理漂移，这也是我们接下来要探讨的内容的一部分。
- en: Comparing and contrasting the Evidently and Alibi-Detect libraries for drift
    detection
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 比较和对比Evidently与Alibi-Detect库在漂移检测中的应用
- en: 'In this section, we will compare and contrast two popular libraries for drift
    detection in deep learning models: Evidently and Alibi-Detect. Both libraries
    provide tools for monitoring and detecting drift in data, but they differ in terms
    of their features. By understanding the strengths and weaknesses of each library,
    you can choose the one that best suits your needs and requirements for drift detection
    in your deep learning models.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将对比和分析两种流行的深度学习模型漂移检测库：**Evidently** 和 **Alibi-Detect**。这两种库都提供用于监控和检测数据漂移的工具，但它们在功能上有所不同。通过了解每个库的优缺点，你可以选择最适合你需求的漂移检测工具，帮助你在深度学习模型中实现数据漂移的检测。
- en: 'Evidently has the following characteristics:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**Evidently** 具有以下特点：'
- en: Provides an easy-to-use toolkit for monitoring data drift, including built-in
    support for various data types such as embeddings and text
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供一个易于使用的工具包，用于监控数据漂移，包括对各种数据类型（如嵌入和文本）的内置支持
- en: Offers a comprehensive set of metrics for measuring drift, including statistical
    tests, distance metrics, and classification models
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供一整套用于衡量漂移的指标，包括统计测试、距离度量和分类模型
- en: Supports both univariate and multivariate drift detection methods, allowing
    for flexibility in handling different types of data and use cases
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持单变量和多变量漂移检测方法，能够灵活处理不同类型的数据和使用场景
- en: Offers a simple and intuitive interface for generating drift detection reports
    and visualizations
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供简单直观的界面，用于生成漂移检测报告和可视化
- en: Supports general evaluation metrics and data quality metrics
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持通用评估指标和数据质量指标
- en: 'Alibi-Detect, on the other hand, has the following characteristics:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，**Alibi-Detect** 具有以下特点：
- en: A Python library that includes a wide range of drift detection, outlier detection,
    and adversarial detection techniques
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Python库，包含多种漂移检测、离群值检测和对抗性检测技术
- en: Supports both online and offline detectors for tabular data, text, images, and
    time series
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持在线和离线检测器，用于表格数据、文本、图像和时间序列
- en: Claims to support TensorFlow and PyTorch models out of the box
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 声称支持 TensorFlow 和 PyTorch 模型，开箱即用
- en: Both Evidently and Alibi-Detect are powerful libraries for drift detection in
    deep learning models. Depending on your specific needs and requirements, you can
    choose either Evidently or Alibi-Detect as your preferred library for drift detection
    in deep learning models. Under typical conditions, Evidently can serve as the
    de facto library. However, as of the time of writing this book, if you’re dealing
    with non-tabular data without available embedding models, require outlier detection,
    or need a statistical test that Evidently doesn’t offer, Alibi-Detect is a more
    suitable choice.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '**Evidently** 和 **Alibi-Detect** 都是深度学习模型中漂移检测的强大库。根据你的具体需求，你可以选择 **Evidently**
    或 **Alibi-Detect** 作为首选的漂移检测库。在典型情况下，**Evidently** 可以作为事实上的标准库。然而，在撰写本书时，如果你处理的是没有可用嵌入模型的非表格数据、需要离群值检测，或需要
    **Evidently** 不提供的统计测试，那么 **Alibi-Detect** 是一个更合适的选择。'
- en: Summary
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored the concept of drift, which affects the performance
    of deployed deep learning models over time. We covered the three types of drift
    – concept drift, data drift, and model drift – and discussed strategies to handle
    them effectively. This included strategies to approach drift, including automatic
    programmatic detection and manual domain expert predictions, strategies to quantify
    drift, and strategies to mitigate drift effectively. We learned that statistical-based
    drift should always be opted for over ambiguous data distribution drift. We also
    learned that monitoring drift by batch in regular intervals is crucial in ensuring
    the continued success of deep learning models. Finally, using the `evidently`
    library, we demonstrated how to implement programmatic data distribution drift
    detection in a practical tutorial and understood behaviors that can shape how
    you think of data distribution drift methods. This knowledge can be applied across
    various industries and applications, such as healthcare, finance, retail, and
    manufacturing, where maintaining the accuracy and performance of deep learning
    models is crucial for efficient decision-making and optimizing business processes.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了漂移的概念，它会随着时间的推移影响已部署深度学习模型的性能。我们介绍了三种类型的漂移——概念漂移、数据漂移和模型漂移，并讨论了有效应对这些问题的策略。包括处理漂移的策略，诸如自动化编程检测和人工领域专家预测，量化漂移的策略，以及有效减缓漂移的策略。我们了解到，基于统计的漂移应始终优于模糊的数据分布漂移。我们还了解到，以批处理方式在定期间隔内监控漂移对于确保深度学习模型的持续成功至关重要。最后，使用`evidently`库，我们展示了如何在实际教程中实现编程数据分布漂移检测，并理解了能够塑造你对数据分布漂移方法思考方式的行为。这些知识可以应用于多个行业和领域，例如医疗、金融、零售和制造业，在这些行业中，保持深度学习模型的准确性和性能对于高效决策和优化业务流程至关重要。
- en: This chapter marks the completion of our deep dive into every component of the
    deep learning life cycle. In the next chapter, we will explore how a paid-for
    platform called DataRobot covers crucial components of the deep learning life
    cycle in an easy-to-use user interface.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 本章标志着我们深入探讨深度学习生命周期每个组件的完成。在下一章中，我们将探索一个付费平台——DataRobot，如何在一个易于使用的用户界面中涵盖深度学习生命周期的关键组件。
