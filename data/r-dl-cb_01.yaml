- en: Getting Started
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主题：
- en: Installing R with an IDE
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 IDE 安装 R
- en: Installing a Jupyter Notebook application
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Jupyter Notebook 应用程序
- en: Starting with the basics of machine learning in R
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 R 中的机器学习基础开始
- en: Setting up deep learning tools/packages in R
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 R 中设置深度学习工具/包
- en: Installing MXNet in R
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 R 中安装 MXNet
- en: Installing TensorFlow in R
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 R 中安装 TensorFlow
- en: Installing H2O in R
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 R 中安装 H2O
- en: Installing all three packages at once using Docker
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Docker 一次性安装所有三个包
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: This chapter will get you started with deep learning and help you set up your
    systems to develop deep learning models. The chapter is more focused on giving
    the audience a heads-up on what is expected from the book and the prerequisites
    required to go through the book. The current book is intended for students or
    professionals who want to quickly build a background in the applications of deep
    learning. The book will be more practical and application-focused using R as a
    tool to build deep learning models.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将帮助你开始深度学习，并帮助你设置系统以开发深度学习模型。本章更侧重于让读者了解本书的期望内容以及阅读本书所需的前置条件。本书面向那些希望快速建立深度学习应用背景的学生或专业人士。本书将更侧重于实践和应用，使用
    R 作为工具来构建深度学习模型。
- en: For a detailed theory on deep learning, refer to *Deep Learning* by *Goodfellow
    et al. 2016.* For a machine learning background refer *Python Machine Learning*
    by S. Raschka, 2015.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习的详细理论请参考*《深度学习》*（*Goodfellow 等人，2016*）。对于机器学习的背景知识，请参考 *《Python 机器学习》*（S.
    Raschka，2015）。
- en: 'We will use the R programming language to demonstrate applications of deep
    learning. You are expected to have the following prerequisites throughout the
    book:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 R 编程语言来演示深度学习的应用。你在本书中需要具备以下前置知识：
- en: Basic R programming knowledge
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本的 R 编程知识
- en: Basic understanding of Linux; we will use the Ubuntu (16.04) operating system
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本了解 Linux；我们将使用 Ubuntu（16.04）操作系统
- en: Basic understanding of machine learning concepts
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习概念的基础理解
- en: For Windows or macOS, a basic understanding of Docker
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Windows 或 macOS，基本了解 Docker
- en: Installing R with an IDE
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 IDE 安装 R
- en: Before we begin, let's install an IDE for R. For R the most popular IDEs are
    Rstudio and Jupyter. Rstudio is dedicated to R whereas Jupyter provide multi-language
    support including R. Jupyter also provides an interactive environment and allow
    you to combine code, text, and graphics into a single notebook.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，让我们先为 R 安装一个 IDE。对于 R，最受欢迎的 IDE 是 Rstudio 和 Jupyter。Rstudio 专注于 R，而
    Jupyter 提供包括 R 在内的多语言支持。Jupyter 还提供一个交互式环境，允许你将代码、文本和图形合并成一个单一的笔记本。
- en: Getting ready
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: R supports multiple operating systems such as Windows, macOS X, and Linux. The
    installation files for R can be downloaded from any one of the mirror sites at
    **Comprehensive R Archive Network** (**CRAN**) at [https://cran.r-project.org/](https://cran.r-project.org/).
    The CRAN is also a major repository for packages in R. The programming language
    R is available under both 32-bit and 64-bit architectures.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: R 支持多种操作系统，如 Windows、macOS X 和 Linux。R 的安装文件可以从 **Comprehensive R Archive Network**（**CRAN**）的任何一个镜像站点下载，网址为
    [https://cran.r-project.org/](https://cran.r-project.org/)。CRAN 也是 R 包的一个主要仓库。编程语言
    R 有 32 位和 64 位架构可供选择。
- en: How to do it...
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'Of r-base-dev is also highly recommended as it has many inbuilt functions.
    It also enables the `install.packages()` command, which is used to compile and
    install new R packages directly from the CRAN using the **R console**. The default
    **R console** looks as follows:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 强烈推荐安装 r-base-dev，因为它有许多内建函数。它还启用了 `install.packages()` 命令，可用于通过 **R 控制台**直接从
    CRAN 编译并安装新的 R 包。默认的 **R 控制台**如下所示：
- en: '![](img/00076.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00076.jpeg)'
- en: Default R console
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 默认 R 控制台
- en: 'For programming purposes, an **Integrated Development Environment** (**IDE**)
    is recommended as it helps enhance productivity. One of the most popular open
    source IDEs for R is Rstudio. Rstudio also provides you with an Rstudio server,
    which facilitates a web-based environment to program in R. The interface for the
    Rstudio IDE is shown in the following screenshot:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了编程目的，推荐使用 **集成开发环境**（**IDE**），因为它有助于提高生产力。最受欢迎的开源 IDE 之一是 Rstudio。Rstudio
    还提供了一个 Rstudio 服务器，便于你在基于 Web 的环境中编程。Rstudio IDE 的界面如下所示：
- en: '![](img/00077.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00077.jpeg)'
- en: Rstudio Integrated Development Environment for R
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Rstudio 集成开发环境
- en: Installing a Jupyter Notebook application
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Jupyter Notebook 应用程序
- en: Another famous editor these days is the Jupyter Notebook app. This app produces
    notebook documents that integrate documentation, code, and analysis together.
    It supports many computational kernels including R. It is a server, client-side,
    web-based application that can be accessed using a browser.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，另一个著名的编辑器是 Jupyter Notebook 应用程序。该应用程序生成整合了文档、代码和分析的 notebook 文件。它支持多种计算内核，包括
    R。它是一个基于浏览器的客户端服务器应用程序，可以通过浏览器访问。
- en: How to do it...
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Jupyter Notebook can be installed using the following steps:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 可以通过以下步骤进行安装：
- en: 'Jupyter Notebook can be installed using `pip`:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用 `pip` 安装 Jupyter Notebook：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you have installed Anaconda, then the default computational kernel installed
    is Python. To install an R computation kernel in Jupyter within the same environment,
    type the following command in a terminal:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您已安装 Anaconda，那么默认安装的计算内核是 Python。要在同一环境中为 Jupyter 安装 R 计算内核，请在终端中输入以下命令：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To install the R computational kernel in a new environment named `new-env`
    within conda, type as follows:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在 conda 中安装名为 `new-env` 的新环境中的 R 计算内核，请输入以下命令：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Another way to include the R computational kernel in Jupyter Notebook uses
    the `IRkernel` package. To install through this process, start the R IDE. The
    first step is to install dependencies required for the `IRkernal` installation:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另一种将 R 计算内核添加到 Jupyter Notebook 的方式是使用 `IRkernel` 包。通过此方法安装时，请启动 R IDE。第一步是安装
    `IRkernel` 安装所需的依赖项：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once all the dependencies are installed from CRAN, install the `IRkernal` package
    from GitHub:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦所有依赖项从 CRAN 安装完成，便可以从 GitHub 安装 `IRkernel` 包：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Once all the requirements are satisfied, the R computation kernel can be set
    up in Jupyter Notebook using the following script:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦满足所有要求，可以使用以下脚本在 Jupyter Notebook 中设置 R 计算内核：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Jupyter Notebook can be started by opening a shell/terminal. Run the following
    command to start the Jupyter Notebook interface in the browser, as shown in the
    screenshot following this code:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以通过打开 shell/终端启动 Jupyter Notebook。运行以下命令即可在浏览器中启动 Jupyter Notebook 界面，如代码后的截图所示：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](img/00079.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00079.jpeg)'
- en: Jupyter Notebook with the R computation engine
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 带有 R 计算引擎的 Jupyter Notebook
- en: There's more...
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: R, as with most of the packages utilized in this book, is supported by most
    operating systems. However, you can make use of Docker or VirtualBox to set up
    a working environment similar to the one used in this book.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: R 和本书中使用的大多数软件包一样，支持大多数操作系统。然而，您可以使用 Docker 或 VirtualBox 来设置一个与本书中使用的工作环境类似的环境。
- en: For Docker installation and setup information, refer to [https://docs.docker.com/](https://docs.docker.com/)
    and select the Docker image appropriate to your operating system. Similarly, VirtualBox
    binaries can be downloaded and installed at [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Docker 安装和设置的详细信息，请参考 [https://docs.docker.com/](https://docs.docker.com/)，并选择适合您操作系统的
    Docker 镜像。同样，VirtualBox 的二进制文件可以在 [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)
    下载并安装。
- en: Starting with the basics of machine learning in R
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 R 中学习机器学习基础
- en: Deep learning is a subcategory of machine learning inspired by the structure
    and functioning of a human brain. In recent times, deep learning has gained a
    lot of traction primarily because of higher computational power, bigger datasets,
    and better algorithms with (artificial) intelligent learning abilities and more
    inquisitiveness for data-driven insights. Before we get into the details of deep
    learning, let's understand some basic concepts of machine learning that form the
    basis for most analytical solutions.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习是受人类大脑结构和功能启发的机器学习的一个子领域。近年来，深度学习因更强的计算能力、更大的数据集、更好的算法（具有人工智能学习能力）以及对数据驱动见解的更高需求而得到了广泛关注。在我们深入探讨深度学习的细节之前，让我们先了解一些机器学习的基本概念，这些概念构成了大多数分析解决方案的基础。
- en: Machine learning is an arena of developing algorithms with the ability to mine
    natural patterns from the data such that better decisions are made using predictive
    insights. These insights are pertinent across a horizon of real-world applications,
    from medical diagnosis (using computational biology) to real-time stock trading
    (using computational finance), from weather forecasting to natural language processing,
    from predictive maintenance (in automation and manufacturing) to prescriptive
    recommendations (in e-commerce and e-retail), and so on.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习是一个开发算法的领域，这些算法能够从数据中挖掘自然模式，从而通过预测性洞察做出更好的决策。这些洞察力在多个现实世界应用中都具有重要意义，从医学诊断（使用计算生物学）到实时股票交易（使用计算金融），从天气预测到自然语言处理，从预测性维护（在自动化和制造业中）到处方推荐（在电子商务和电子零售中）等。
- en: 'The following figure elucidates two primary techniques of machine learning;
    namely, supervised learning and unsupervised learning:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表阐明了机器学习的两种主要技术：即监督学习和无监督学习：
- en: '![](img/00137.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00137.jpeg)'
- en: Classification of different techniques in machine learning
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习中不同技术的分类
- en: '**Supervised learning**: Supervised learning is a form of evidence-based learning.
    The evidence is the known outcome for a given input and is in turn used to train
    the predictive model. Models are further classified into regression and classification,
    based on the outcome data type. In the former, the outcome is continuous, and
    in the latter the outcome is discrete. Stock trading and weather forecasting are
    some widely used applications of regression models, and span detection, speech
    recognition, and image classification are some widely used applications of classification
    models.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**监督学习**：监督学习是一种基于证据的学习方式。证据是给定输入的已知结果，进而用来训练预测模型。模型进一步根据结果数据类型分为回归和分类。在回归中，结果是连续的，而在分类中，结果是离散的。股票交易和天气预测是回归模型的广泛应用，跨度检测、语音识别和图像分类是分类模型的广泛应用。'
- en: Some algorithms for regression are linear regression, **Generalized Linear Models**
    (**GLM**), **Support Vector Regression** (**SVR**), neural networks, decision
    trees, and so on; in classification, we have logistic regression, **Support Vector
    Machines** (**SVM**), **Linear discriminant analysis** (**LDA**), Naive Bayes,
    nearest neighbors, and so on.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 回归算法包括线性回归、**广义线性模型**（**GLM**）、**支持向量回归**（**SVR**）、神经网络、决策树等；在分类问题中，我们有逻辑回归、**支持向量机**（**SVM**）、**线性判别分析**（**LDA**）、朴素贝叶斯、最近邻等。
- en: '**Semi-supervised learning**: Semi-supervised learning is a class of supervised
    learning using unsupervised techniques. This technique is very useful in scenarios
    where the cost of labeling an entire dataset is highly impractical against the
    cost of acquiring and analyzing unlabeled data.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**半监督学习**：半监督学习是一类使用无监督技术的监督学习。这种技术在需要对整个数据集进行标注的成本过高，而获取和分析未标注数据的成本较低的场景中非常有用。'
- en: '**Unsupervised learning**: As the name suggests, learning from data with no
    outcome (or supervision) is called unsupervised learning. It is a form of inferential
    learning based on hidden patterns and intrinsic groups in the given data. Its
    applications include market pattern recognition, genetic clustering, and so on.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**无监督学习**：顾名思义，学习没有结果（或监督）的数据称为无监督学习。这是一种基于给定数据中隐藏模式和内在分组的推理性学习方式。其应用包括市场模式识别、基因聚类等。'
- en: Some widely used clustering algorithms are *k*-means, hierarchical, *k*-medoids,
    Fuzzy C-means, hidden markov, neural networks, and many more.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一些广泛使用的聚类算法包括 *k*-均值、层次聚类、*k*-中值、模糊C均值、隐马尔可夫、神经网络等。
- en: How to do it...
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'Let''s take a look at linear regression in supervised learning:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下监督学习中的线性回归：
- en: 'Let''s begin with a simple example of linear regression where we need to determine
    the relationship between men''s height (in cms) and weight (in kgs). The following
    sample data represents the height and weight of 10 random men:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从一个简单的线性回归示例开始，其中我们需要确定男性身高（以厘米为单位）和体重（以千克为单位）之间的关系。以下样本数据代表了10个随机男性的身高和体重：
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, generate a linear regression model as follows:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，生成一个线性回归模型，如下所示：
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following plot shows the relationship between men''s height and weight
    along with the fitted line:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下图展示了男性身高与体重之间的关系，并且包含了拟合线：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](img/00091.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00091.jpeg)'
- en: Linear relationship between weight and height
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 体重和身高之间的线性关系
- en: In semi-supervised models, the learning is primarily initiated using labeled
    data (a smaller quantity in general) and then augmented using unlabeled data (a
    larger quantity in general).
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在半监督模型中，学习主要是通过使用标签数据（通常量较小）来启动的，然后使用未标签数据（通常量较大）进行增强。
- en: Let's perform K-means clustering (unsupervised learning) on a widely used dataset,
    iris.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们对一个广泛使用的数据集——鸢尾花（iris）执行K-means聚类（无监督学习）。
- en: 'This dataset consists of three different species of iris (**Setosa**, **Versicolor**,
    and **Virginica**) along with their distinct features such as sepal length, sepal
    width, petal length, and petal width:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该数据集包含三种不同的鸢尾花种类（**Setosa**、**Versicolor** 和 **Virginica**），以及它们的不同特征，如萼片长度、萼片宽度、花瓣长度和花瓣宽度：
- en: '[PRE10]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following plots show the variation of features across irises. Petal features
    show a distinct variation as against sepal features:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下图展示了鸢尾花特征的变异。与萼片特征相比，花瓣特征表现出明显的变化：
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](img/00080.jpeg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00080.jpeg)'
- en: Variation of sepal and petal features by length and width
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 按长度和宽度划分的萼片和花瓣特征的变异
- en: 'As petal features show a good variation across irises, let''s perform K-means
    clustering using the petal length and petal width:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于花瓣特征在鸢尾花中有很好的变异性，让我们使用花瓣长度和花瓣宽度来执行K-means聚类：
- en: '[PRE12]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following code snippet shows a cross-tab between clusters and species (irises).
    We can see that cluster 1 is primarily attributed with setosa, cluster 2 with
    versicolor, and cluster 3 with virginica:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码片段展示了聚类与物种（鸢尾花）之间的交叉表。我们可以看到，聚类1主要归为Setosa，聚类2主要归为Versicolor，而聚类3主要归为Virginica：
- en: '[PRE13]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following plot shows the distribution of clusters:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下图展示了聚类的分布：
- en: '![](img/00081.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00081.jpeg)'
- en: Variation of irises across three clusters
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 三个聚类中的鸢尾花变异
- en: How it works...
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Model evaluation is a key step in any machine learning process. It is different
    for supervised and unsupervised models. In supervised models, predictions play
    a major role; whereas in unsupervised models, homogeneity within clusters and
    heterogeneity across clusters play a major role.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 模型评估是任何机器学习过程中的关键步骤。它对于监督模型和无监督模型有所不同。在监督模型中，预测起着重要作用；而在无监督模型中，聚类内部的同质性和聚类之间的异质性起着重要作用。
- en: 'Some widely used model evaluation parameters for regression models (including
    cross validation) are as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 一些广泛使用的回归模型评估参数（包括交叉验证）如下：
- en: Coefficient of determination
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定系数
- en: Root mean squared error
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 均方根误差
- en: Mean absolute error
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平均绝对误差
- en: Akaike or Bayesian information criterion
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 赤池信息量准则（AIC）或贝叶斯信息量准则（BIC）
- en: 'Some widely used model evaluation parameters for classification models (including
    cross validation) are as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一些广泛使用的分类模型评估参数（包括交叉验证）如下：
- en: Confusion matrix (accuracy, precision, recall, and F1-score)
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混淆矩阵（准确率、精确度、召回率和F1分数）
- en: Gain or lift charts
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增益或提升图
- en: Area under ROC (receiver operating characteristic) curve
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ROC（接收操作特征）曲线下的面积
- en: Concordant and discordant ratio
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一致比率和不一致比率
- en: 'Some of the widely used evaluation parameters of unsupervised models (clustering)
    are as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 一些广泛使用的无监督模型（聚类）评估参数如下：
- en: Contingency tables
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列联表
- en: Sum of squared errors between clustering objects and cluster centers or centroids
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚类对象与聚类中心或质心之间的平方误差和
- en: Silhouette value
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轮廓值
- en: Rand index
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 兰德指数
- en: Matching index
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 匹配指数
- en: Pairwise and adjusted pairwise precision and recall (primarily used in NLP)
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成对及调整后的成对精度和召回率（主要用于自然语言处理）
- en: Bias and variance are two key error components of any supervised model; their
    trade-off plays a vital role in model tuning and selection. Bias is due to incorrect
    assumptions made by a predictive model while learning outcomes, whereas variance
    is due to model rigidity toward the training dataset. In other words, higher bias
    leads to underfitting and higher variance leads to overfitting of models.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 偏差和方差是任何监督学习模型的两个关键误差组成部分；它们的权衡在模型调优和选择中起着至关重要的作用。偏差是由于预测模型在学习结果时做出的不正确假设，而方差是由于模型对训练数据集的僵化。换句话说，较高的偏差会导致欠拟合，较高的方差会导致过拟合。
- en: In bias, the assumptions are on target functional forms. Hence, this is dominant
    in parametric models such as linear regression, logistic regression, and linear
    discriminant analysis as their outcomes are a functional form of input variables.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在偏差中，假设是关于目标函数形式的。因此，这在参数模型中占主导地位，例如线性回归、逻辑回归和线性判别分析，因为它们的结果是输入变量的函数形式。
- en: Variance, on the other hand, shows how susceptible models are to change in datasets.
    Generally, target functional forms control variance. Hence, this is dominant in
    non-parametric models such as decision trees, support vector machines, and K-nearest
    neighbors as their outcomes are not directly a functional form of input variables.
    In other words, the hyperparameters of non-parametric models can lead to overfitting
    of predictive models.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '另一方面，方差展示了模型对数据集变化的敏感度。通常，目标函数形式控制方差。因此，这在非参数化模型中占主导地位，例如决策树、支持向量机和 K 最近邻，因为它们的结果不是输入变量的直接函数形式。换句话说，非参数化模型的超参数可能会导致预测模型的过拟合。  '
- en: Setting up deep learning tools/packages in R
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '在 R 中设置深度学习工具/包  '
- en: The major deep learning packages are developed in C/C++ for efficiency purposes
    and wrappers are developed in R to efficiently develop, extend, and execute deep
    learning models.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '主要的深度学习包都是用 C/C++ 开发的，以提高效率，而 R 中则开发了包装器，旨在高效地开发、扩展和执行深度学习模型。  '
- en: 'A lot of open source deep learning libraries are available. The prominent libraries
    in this area are as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '有许多开源深度学习库可供使用。该领域的主要库如下：  '
- en: Theano
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Theano  '
- en: TensorFlow
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'TensorFlow  '
- en: Torch
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Torch  '
- en: Caffe
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Caffe  '
- en: There are other prominent packages available on the market such as H2O, CNTK
    (Microsoft Cognitive Toolkit), darch, Mocha, and ConvNetJS. There are a lot of
    wrappers that are developed around these packages to support the easy development
    of deep learning models, such as Keras and Lasagne in Python and MXNet, both supporting
    multiple languages.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '市面上还有其他一些知名的包，如 H2O、CNTK（微软认知工具包）、darch、Mocha 和 ConvNetJS。围绕这些包，已经开发了许多包装器，支持深度学习模型的便捷开发，例如
    Python 中的 Keras 和 Lasagne 以及支持多种语言的 MXNet。  '
- en: How to do it...
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '如何操作...  '
- en: This chapter will cover the MXNet and TensorFlow packages (developed in C++
    and CUDA for a highly optimized performance in GPU).
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '本章将介绍 MXNet 和 TensorFlow 包（这两个包使用 C++ 和 CUDA 开发，以便在 GPU 上实现高度优化的性能）。  '
- en: Additionally, the `h2o` package will be used to develop some deep learning models.
    The `h2o` package in R is implemented as a REST API, which connects to the H2O
    server (it runs as **Java Virtual Machines** (**JVM**)). We will provide quick
    setup instructions for these packages in the following sections
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '此外，`h2o` 包将用于开发一些深度学习模型。R 中的 `h2o` 包作为 REST API 实现，连接到 H2O 服务器（它作为 **Java 虚拟机**（**JVM**）运行）。我们将在接下来的部分中提供这些包的快速设置说明。  '
- en: Installing MXNet in R
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '在 R 中安装 MXNet  '
- en: This section will cover the installation of MXNet in R.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '本节将介绍如何在 R 中安装 MXNet。  '
- en: Getting ready
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '准备工作  '
- en: The MXNet package is a lightweight deep learning architecture supporting multiple
    programming languages such as R, Python, and Julia. From a programming perspective,
    it is a combination of symbolic and imperative programming with support for CPU
    and GPU.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 'MXNet 包是一个轻量级的深度学习架构，支持 R、Python 和 Julia 等多种编程语言。从编程角度看，它结合了符号式和命令式编程，支持 CPU
    和 GPU。  '
- en: The CPU-based MXNet in R can be installed using the prebuilt binary package
    or the source code where the libraries need to be built. In Windows/mac, prebuilt
    binary packages can be download and installed directly from the R console. MXNet
    requires the R version to be 3.2.0 and higher. The installation requires the `drat`
    package from CRAN. The `drat` package helps maintain R repositories and can be
    installed using the `install.packages()` command.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 'R 中的基于 CPU 的 MXNet 可以通过预构建的二进制包或源代码安装，源代码需要构建相关的库。在 Windows/mac 上，预构建的二进制包可以直接从
    R 控制台下载并安装。MXNet 要求 R 版本为 3.2.0 或更高版本。安装过程需要 CRAN 中的 `drat` 包。`drat` 包帮助维护 R 仓库，可以通过
    `install.packages()` 命令安装。  '
- en: 'To install MXNet on Linux (13.10 or later), the following are some dependencies:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '要在 Linux（13.10 或更高版本）上安装 MXNet，以下是一些依赖项：  '
- en: Git (to get the code from GitHub)
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Git（从 GitHub 获取代码）  '
- en: libatlas-base-dev (to perform linear algebraic operations)
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'libatlas-base-dev（用于执行线性代数运算）  '
- en: libopencv-dev (to perform computer vision operations)
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'libopencv-dev（用于执行计算机视觉操作）  '
- en: 'To install MXNet with a GPU processor, the following are some dependencies:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '要安装带 GPU 处理器的 MXNet，以下是一些依赖项：  '
- en: Microsoft Visual Studio 2013
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Microsoft Visual Studio 2013  '
- en: The NVIDIA CUDA Toolkit
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVIDIA CUDA 工具包
- en: The MXNet package
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MXNet 包  '
- en: cuDNN (to provide a deep neural network library)
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'cuDNN（提供深度神经网络库）  '
- en: 'Another quick way to install `mxnet` with all the dependencies is to use the
    prebuilt Docker image from the `chstone` repository. The `chstone`/`mxnet-gpu`
    Docker image will be installed using the following tools:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 `mxnet` 及其所有依赖项的另一种快速方法是使用 `chstone` 仓库中的预构建 Docker 镜像。以下工具将用于安装 `chstone`/`mxnet-gpu`
    Docker 镜像：
- en: MXNet for R and Python
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R 和 Python 中的 MXNet
- en: Ubuntu 16.04
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu 16.04
- en: CUDA (Optional for GPU)
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CUDA（可选，适用于 GPU）
- en: cuDNN (Optional for GPU)
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cuDNN（可选，适用于 GPU）
- en: How to do it...
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following R command installs MXNet using prebuilt binary packages, and
    is hassle-free. The `drat` package is then used to add the `dlmc` repository from
    git followed by the `mxnet` installation:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下 R 命令通过使用预构建的二进制包来安装 MXNet，操作简单方便。然后使用 `drat` 包从 Git 添加 `dlmc` 仓库，并随后安装 `mxnet`：
- en: '[PRE14]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '2\. The following code helps install MXNet in Ubuntu (V16.04). The first two
    lines are used to install dependencies and the remaining lines are used to install
    MXNet, subject to the satisfaction of all the dependencies:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 以下代码帮助在 Ubuntu（V16.04）中安装 MXNet。前两行用于安装依赖项，剩余的行用于安装 MXNet，前提是满足所有依赖项：
- en: '[PRE15]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '3\. If MXNet is to be built for GPU, the following `config` needs to be updated
    before the `make` command:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 如果要为 GPU 构建 MXNet，则需要在运行 `make` 命令之前更新以下 `config`：
- en: '[PRE16]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: A detailed installation of MXNet for other operating systems can be found at
    [http://mxnet.io/get_started/setup.html](http://mxnet.io/get_started/setup.html4).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 有关其他操作系统的 MXNet 详细安装说明，请访问 [http://mxnet.io/get_started/setup.html](http://mxnet.io/get_started/setup.html4)。
- en: '4\. The following command is used to install MXNet (GPU-based) using Docker
    with all the dependencies:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 使用以下命令通过 Docker 安装 MXNet（基于 GPU），并安装所有依赖项：
- en: '[PRE17]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Installing TensorFlow in R
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 R 中安装 TensorFlow
- en: This section will cover another very popular open source machine learning package,
    TensorFlow, which is very effective in building deep learning models.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍另一个非常流行的开源机器学习包——TensorFlow，它在构建深度学习模型方面非常有效。
- en: Getting ready
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: TensorFlow is another open source library developed by the Google Brain Team
    to build numerical computation models using data flow graphs. The core of TensorFlow
    was developed in C++ with the wrapper in Python. The `tensorflow` package in R
    gives you access to the TensorFlow API composed of Python modules to execute computation
    models. TensorFlow supports both CPU- and GPU-based computations.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow 是由 Google Brain 团队开发的另一个开源库，旨在使用数据流图构建数值计算模型。TensorFlow 的核心是用 C++
    开发的，并且在 Python 中提供了封装。R 中的 `tensorflow` 包使您能够访问由 Python 模块组成的 TensorFlow API 来执行计算模型。TensorFlow
    支持基于 CPU 和 GPU 的计算。
- en: 'The `tensorflow` package in R calls the Python tensorflow API for execution,
    which is essential to install the `tensorflow` package in both R and Python to
    make R work. The following are the dependencies for `tensorflow`:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: R 中的 `tensorflow` 包调用 Python tensorflow API 执行计算，这就需要在 R 和 Python 中都安装 `tensorflow`
    包，以便让 R 正常工作。以下是 `tensorflow` 的依赖项：
- en: Python 2.7 / 3.x
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 2.7 / 3.x
- en: R (>3.2)
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R (>3.2)
- en: devtools package in R for installing TensorFlow from GitHub
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R 中用于从 GitHub 安装 TensorFlow 的 devtools 包
- en: TensorFlow in Python
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 中的 TensorFlow
- en: pip
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pip
- en: How to do it...
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Once all the mentioned dependencies are installed, `tensorflow` can be installed
    from `devtools` directly using the `install_github` command as follows:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装了所有提到的依赖项，可以通过 `devtools` 使用以下 `install_github` 命令直接安装 `tensorflow`：
- en: '[PRE18]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Before loading `tensorflow` in R, you need to set up the path for Python as
    the system environment variable. This can be done directly from the R environment,
    as shown in the following command:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 R 中加载 `tensorflow` 之前，您需要将 Python 的路径设置为系统环境变量。这可以直接从 R 环境中完成，方法如下命令所示：
- en: '[PRE19]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'If the Python `tensorflow` module is not installed, R will give the following
    error:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未安装 Python `tensorflow` 模块，R 将显示以下错误：
- en: '![](img/00104.jpeg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00104.jpeg)'
- en: Error raised by R if tensorflow in Python is not installed
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Python 中未安装 tensorflow，R 会引发错误
- en: '`tensorflow` in Python can be installed using `pip`:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`tensorflow` 在 Python 中可以通过 `pip` 安装：'
- en: '[PRE20]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: How it works...
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: TensorFlow follows directed graph philosophy to set up computational models
    where mathematical operations are represented as nodes with each node supporting
    multiple input and output while the edges represent the communication of data
    between nodes. There are also edges known as **control dependencies** in TensorFlow
    that do not represent the data flow; rather the provide information related to
    control dependence such as node for the control dependence must finish processing
    before the destination node of control dependence starts executing.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow遵循有向图哲学来设置计算模型，其中数学操作表示为节点，每个节点支持多个输入和输出，而边缘代表节点间数据的传输。TensorFlow中还有一些边缘被称为**控制依赖**，它们不代表数据流；而是提供与控制依赖相关的信息，如控制依赖的节点必须在目标控制依赖节点开始执行之前完成处理。
- en: 'An example TensorFlow graph for logistic regression scoring is shown in the
    following diagram:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示出了一个示例TensorFlow图，用于逻辑回归评分：
- en: '![](img/00083.jpeg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00083.jpeg)'
- en: TensorFlow graph for logistic regression
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑回归的TensorFlow图
- en: 'The preceding figure illustrates the TensorFlow graph to score logistic regression
    with optimized weights:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 上图展示了一个TensorFlow图，说明如何用优化后的权重对逻辑回归进行评分：
- en: '![](img/00084.jpeg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00084.jpeg)'
- en: The *MatMul* node performs matrix multiplication between input feature matrix
    *X* and optimized weight β. The constant *C* is then added to the output from
    the *MatMul* node. The output from *Add* is then transformed using the *Sigmoid*
    function to output *Pr(y=1|X)*.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '*MatMul*节点执行输入特征矩阵*X*与优化后的权重β之间的矩阵乘法。常数*C*随后被加到*MatMul*节点的输出上。然后，*Add*的输出会通过*Sigmoid*函数转化，最终输出*Pr(y=1|X)*。'
- en: See also
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: Get started with TensorFlow in R using resources at [https://rstudio.github.io/tensorflow/](https://rstudio.github.io/tensorflow/).
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[https://rstudio.github.io/tensorflow/](https://rstudio.github.io/tensorflow/)中的资源，在R中开始使用TensorFlow。
- en: Installing H2O in R
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在R中安装H2O
- en: H2O is another very popular open source library to build machine learning models.
    It is produced by H2O.ai and supports multiple languages including R and Python.
    The H2O package is a multipurpose machine learning library developed for a distributed
    environment to run algorithms on big data.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: H2O是另一个非常流行的开源库，用于构建机器学习模型。它由H2O.ai开发，支持包括R和Python在内的多种语言。H2O包是一个多功能的机器学习库，专为分布式环境而开发，用于在大数据上运行算法。
- en: Getting ready
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To set up H2O, the following systems are required:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置H2O，以下系统是必需的：
- en: 64-bit Java Runtime Environment (version 1.6 or later)
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 64位Java运行时环境（版本1.6或更高）
- en: Minimum 2 GB RAM
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小2GB RAM
- en: 'H2O from R can be called using the `h2o` package. The `h2o` package has the
    following dependencies:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过`h2o`包从R中调用H2O。`h2o`包有以下依赖项：
- en: RCurl
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RCurl
- en: rjson
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: rjson
- en: statmod
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: statmod
- en: survival
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生存分析
- en: stats
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: stats
- en: tools
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: tools
- en: utils
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: utils
- en: methods
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: methods
- en: For machines that do not have curl-config installed, the RCurl dependency installation
    will fail in R and curl-config needs to be installed outside R.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 对于没有安装curl-config的机器，RCurl依赖项在R中安装会失败，curl-config需要在R之外进行安装。
- en: How to do it...
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'H2O can be installed directly from CRAN with the dependency parameter TRUE
    to install all CRAN-related `h2o` dependencies. This command will install all
    the R dependencies required for the `h2o` package:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以直接从CRAN安装H2O，并使用依赖参数TRUE来安装所有与CRAN相关的`h2o`依赖项。此命令将安装`h2o`包所需的所有R依赖项：
- en: '[PRE21]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The following command is used to call the `h2o` package in the current R environment.
    The first-time execution of the `h2o` package will automatically download the
    JAR file before launching H2O, as shown in the following figure:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下命令用于在当前R环境中调用`h2o`包。第一次执行`h2o`包时，会自动下载JAR文件，然后启动H2O，如下图所示：
- en: '[PRE22]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](img/00085.jpeg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00085.jpeg)'
- en: Starting H2O cluster
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 启动H2O集群
- en: 'The H2O cluster can be accessed using **cluster** **ip** and **port information**.
    The current H2O cluster is running on localhost at port `54321`, as shown in the
    following screenshot:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以通过**集群**的**IP地址**和**端口信息**访问H2O集群。目前，H2O集群在本地主机的`54321`端口上运行，如下截图所示：
- en: '![](img/00004.jpeg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00004.jpeg)'
- en: H2O cluster running in the browser
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中运行H2O集群
- en: Models in H2O can be developed interactively using a browser or scripting from
    R. H2O modeling is like creating a Jupyter Notebook but you create a flow with
    different operations such as importing data, splitting data, setting up a model,
    and scoring.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过浏览器交互式地开发H2O中的模型，或者通过R脚本进行开发。H2O建模就像创建一个Jupyter Notebook，但你在其中创建一个包含不同操作的流程，如导入数据、拆分数据、设置模型和评分。
- en: How it works...
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Let's build a logistic regression interactively using the H2O browser.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 H2O 浏览器互动地构建一个逻辑回归模型。
- en: 'Start a new flow, as shown in the following screenshot:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个新流程，如下图所示：
- en: '![](img/00065.jpeg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00065.jpeg)'
- en: Creating a new flow in H2O
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在 H2O 中创建一个新流程
- en: 'Import a dataset using the Data menu, as shown in the following screenshot:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用“数据”菜单导入数据集，如下图所示：
- en: '![](img/00151.jpeg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00151.jpeg)'
- en: Importing files to the H2O environment
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件导入到 H2O 环境
- en: 'The imported file in H2O can be parsed into the hex format (the native file
    format for H2O) using the **Parse these files** action, which will appear once
    the file is imported to the H2O environment:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入到 H2O 中的文件可以通过 **解析这些文件** 操作转换为 hex 格式（H2O 的原生文件格式），该操作将在文件导入到 H2O 环境后出现：
- en: '![](img/00086.jpeg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00086.jpeg)'
- en: Parsing the file to the hex format
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件解析为 hex 格式
- en: 'The parsed data frame in H2O can be split into training and validation using
    the *Data |* Split Frame action, as shown in the following screenshot:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解析后的数据框可以使用 *数据 |* 拆分框架操作，在 H2O 中拆分为训练集和验证集，如下图所示：
- en: '![](img/00125.jpeg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00125.jpeg)'
- en: Splitting the dataset into training and validation
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据集拆分为训练集和验证集
- en: 'Select the model from the Model menu and set up the model-related parameters.
    An example for a glm model is seen in the following screenshot:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从“模型”菜单中选择模型并设置模型相关的参数。以下截图展示了一个 glm 模型的示例：
- en: '![](img/00087.jpeg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00087.jpeg)'
- en: Building a model in H2O
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在 H2O 中构建模型
- en: 'The Score *|* predict action can be used to score another hex data frame in
    H2O:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*|* 预测操作可以用来对另一个 H2O 数据框进行评分：'
- en: '![](img/00089.jpeg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00089.jpeg)'
- en: Scoring in H2O
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在 H2O 中进行评分
- en: There's more...
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'For more complicated scenarios that involve a lot of preprocessing, H2O can
    be called from R directly. This book will focus more on building models using
    H2O from R directly. If H2O is set up at a different location instead of localhost,
    then it can be connected within R by defining the correct `ip` and `port` at which
    the cluster is running:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 对于涉及大量预处理的复杂场景，可以直接从 R 调用 H2O。本书将更多关注如何直接从 R 使用 H2O 构建模型。如果 H2O 被设置在本地主机以外的位置，则可以通过在
    R 中定义正确的 `ip` 和 `port` 来连接该集群：
- en: '[PRE23]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Another critical parameter is the number of threads to be used to build the
    model; by default, *n* threads are set to -2, which means that two cores will
    be used. The value of -1 for *n* threads will make use of all available cores.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个关键参数是构建模型时使用的线程数；默认情况下，*n* 线程设置为 -2，这意味着将使用两个核心。*n* 线程值为 -1 时，将使用所有可用核心。
- en: '[http://docs.h2o.ai/h2o/latest-stable/index.html#gettingstarted](http://docs.h2o.ai/h2o/latest-stable/index.html#gettingstarted)
    is very good using H2O in interactive mode.'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.h2o.ai/h2o/latest-stable/index.html#gettingstarted](http://docs.h2o.ai/h2o/latest-stable/index.html#gettingstarted)
    在交互模式下使用 H2O 非常好。'
- en: Installing all three packages at once using Docker
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Docker 一次性安装所有三个软件包
- en: Docker is a software-contained platform that is used to host multiple software
    or apps side by side in isolated containers to get better computing density. Unlike
    virtual machines, containers are built only using libraries and the settings required
    by any software but do not bundle the entire operating system, thus making it
    lightweight and efficient.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 是一个软件容器平台，用于在隔离的容器中并行托管多个软件或应用，以提高计算密度。与虚拟机不同，容器仅使用所需的库和设置来构建软件，但不包含整个操作系统，因此更加轻量和高效。
- en: Getting ready
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Setting up all three packages could be quite cumbersome depending on the operating
    system utilized. The following dockerfile code can be used to set up an environment
    with `tensorflow`, `mxnet` with GPU, and `h2o` installed with all the dependencies:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 设置所有三个软件包可能会很麻烦，具体取决于所使用的操作系统。以下的 dockerfile 代码可以用来设置一个安装了 `tensorflow`、带 GPU
    的 `mxnet` 和 `h2o` 的环境，并且包含所有依赖项：
- en: '[PRE24]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The current image is created on top of the `chstone/mxnet-gpu` Docker image.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的镜像是基于 `chstone/mxnet-gpu` Docker 镜像创建的。
- en: The chstone/mxnet-gpu is a docker hub repository at [https://hub.docker.com/r/chstone/mxnet-gpu/](https://hub.docker.com/r/chstone/mxnet-gpu/).
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: chstone/mxnet-gpu 是一个 Docker Hub 仓库，地址为 [https://hub.docker.com/r/chstone/mxnet-gpu/](https://hub.docker.com/r/chstone/mxnet-gpu/)。
- en: How to do it...
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Docker will all dependencies can be installed using following steps:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 将通过以下步骤安装所有依赖项：
- en: Save the preceding code to a location with a name, say, `Dockerfile`.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将前面的代码保存到一个位置，命名为 `Dockerfile`。
- en: 'Using the command line, go to the file location and use the following command
    and it is also shown in the screenshot after the command:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用命令行，进入文件所在位置，并运行以下命令，命令后面的截图也展示了相同内容：
- en: '[PRE25]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![](img/00149.jpeg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00149.jpeg)'
- en: Building the docker image
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 构建 Docker 镜像
- en: 'Access the image using the `docker images` command as follows:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`docker images`命令查看镜像，方法如下：
- en: '![](img/00090.jpeg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00090.jpeg)'
- en: View docker images
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 Docker 镜像
- en: 'Docker images can be executed using the following command:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Docker 镜像可以使用以下命令来执行：
- en: '[PRE26]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![](img/00001.jpeg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00001.jpeg)'
- en: Running a Docker image
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 Docker 镜像
- en: Here, the option *-i* is for interactive mode and *-t* is to allocate --*tty*.
    The option *-p* is used to forward the port. As we will be running Jupyter on
    port `8888` and H2O on `54321`, we have forwarded both ports to accessible from
    the local browser.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，选项*-i*表示交互模式，*-t*用于分配--*tty*。选项*-p*用于端口转发。由于我们将 Jupyter 运行在端口`8888`，将 H2O
    运行在端口`54321`，因此我们将两个端口转发以便从本地浏览器访问。
- en: There's more...
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: More options for Docker can be checked out using `docker run --help`.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 更多 Docker 选项可以通过运行`docker run --help`来查看。
