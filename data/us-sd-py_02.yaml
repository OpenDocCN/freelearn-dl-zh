- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Setting Up the Environment for Stable Diffusion
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置稳定扩散的环境
- en: Welcome to [*Chapter 2*](B21263_02.xhtml#_idTextAnchor037). In this chapter,
    we will be focusing on setting up the environment to run Stable Diffusion. We
    will cover all the necessary steps and aspects to ensure a seamless experience
    while working with Stable Diffusion models. Our primary goal is to help you understand
    the importance of each component and how they contribute to the overall process.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到[*第二章*](B21263_02.xhtml#_idTextAnchor037)。在本章中，我们将专注于设置运行稳定扩散的环境。我们将涵盖所有必要的步骤和方面，以确保与稳定扩散模型一起工作时体验顺畅。我们的主要目标是帮助您了解每个组件的重要性以及它们如何对整个过程做出贡献。
- en: 'The contents of this chapter are as follows:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章内容如下：
- en: Introduction to the hardware requirements to run Stable Diffusion
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稳定扩散运行所需的硬件要求介绍
- en: 'Detailed steps to install the required software dependencies: CUDA from NVIDIA,
    Python, a Python virtual environment (optional but recommended), and PyTorch'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装所需软件依赖项的详细步骤：NVIDIA 的 CUDA、Python、Python 虚拟环境（可选但推荐），以及 PyTorch
- en: Alternative options for users without a GPU, such as Google Colab and Apple
    MacBook with silicon CPU (M series)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有 GPU 的用户的其他替代选项，例如 Google Colab 和配备硅 CPU（M 系列的）的 Apple MacBook
- en: Troubleshooting common issues during the setup process
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置过程中常见问题的故障排除
- en: Tips and best practices for maintaining a stable environment
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护稳定环境的技巧和最佳实践
- en: We will begin by providing an overview of Stable Diffusion, its significance,
    and its applications in various fields. This will help you gain a better understanding
    of the core concept and its importance.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先概述稳定扩散（Stable Diffusion）的概念、其重要性以及在各个领域的应用。这将帮助您更好地理解核心概念及其重要性。
- en: Next, we will dive into the step-by-step installation process for each dependency,
    including CUDA, Python, and PyTorch. We will also discuss the benefits of using
    a Python virtual environment and guide you through setting one up.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将详细介绍每个依赖项的安装步骤，包括 CUDA、Python 和 PyTorch。我们还将讨论使用 Python 虚拟环境的优点，并指导您如何设置一个。
- en: For those who do not have access to a machine with a GPU, we will explore alternative
    options such as Google Colab. We will provide a comprehensive guide to using these
    services and discuss the trade-offs associated with them.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于没有访问带有 GPU 的机器的用户，我们将探讨替代选项，例如 Google Colab。我们将提供使用这些服务的全面指南，并讨论与之相关的权衡。
- en: Finally, we will address common issues that may arise during the setup process
    and provide troubleshooting tips. Additionally, we will share best practices for
    maintaining a stable environment to ensure a smooth experience while working with
    Stable Diffusion models.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将解决在设置过程中可能出现的常见问题，并提供故障排除技巧。此外，我们将分享维护稳定环境的最佳实践，以确保与稳定扩散模型一起工作时体验顺畅。
- en: By the end of this chapter, you will have a solid foundation for setting up
    and maintaining an environment tailored for Stable Diffusion, allowing you to
    focus on building and experimenting with your models efficiently.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将拥有为稳定扩散设置和维护定制的环境的基础，让您能够高效地构建和实验您的模型。
- en: Hardware requirements to run Stable Diffusion
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行稳定扩散所需的硬件要求
- en: This section will discuss the hardware requirements of running a Stable Diffusion
    model. This book will cover **Stable Diffusion v1.5** and the **Stable Diffusion
    XL** (**SDXL**) version. These two are also the most used models at the time of
    writing this book.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将讨论运行稳定扩散模型所需的硬件要求。本书将涵盖**稳定扩散 v1.5**和**稳定扩散 XL（SDXL**）版本。这两个版本也是本书撰写时最常用的模型。
- en: Stable Diffusion v1.5, released in October 2022, is considered a general-purpose
    model, and can be used interchangeably with v1.4\. On the other hand, SDXL, which
    was released in July 2023, is known for its ability to handle higher resolutions
    more effectively compared to Stable Diffusion v1.5\. It can generate images with
    larger dimensions without compromising on quality.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 2022 年 10 月发布的稳定扩散 v1.5 被视为通用模型，可以与 v1.4 互换使用。另一方面，2023 年 7 月发布的 SDXL 以其更有效地处理更高分辨率的能力而闻名，与稳定扩散
    v1.5 相比。它可以在不牺牲质量的情况下生成更大尺寸的图像。
- en: 'Essentially, Stable Diffusion is a set of models that includes the following:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 实质上，稳定扩散是一组包括以下内容的模型：
- en: '**Tokenizer**: This tokenizes a text prompt into a sequence of tokens.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标记器（Tokenizer）**：将文本提示转换为一系列标记。'
- en: '**Text Encoder**: The Stable Diffusion text encoder is a special Transformer
    language model – specifically, the text encoder of a CLIP model. In SDXL, a larger-size
    OpenCLIP [6] text encoder is also used to encode the tokens into text embeddings.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本编码器**：Stable Diffusion文本编码器是一个特殊的Transformer语言模型——具体来说，是CLIP模型的文本编码器。在SDXL中，还使用了更大尺寸的OpenCLIP
    [6] 文本编码器，将标记编码成文本嵌入。'
- en: '**Variational Autoencoder** (**VAE**): This encodes images into a latent space
    and decodes them back into images.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变分自编码器**（**VAE**）：这会将图像编码到潜在空间，并将其解码回图像。'
- en: '**UNet**: This is where the denoising process happens. The UNet structure is
    employed to comprehend the steps involved in the noising/denoising cycle. It accepts
    certain elements such as noise, time step data, and a conditioning signal (for
    instance, a representation of a text description), and forecasts noise residuals
    that can be utilized in the denoising process.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UNet**：这是去噪过程发生的地方。UNet结构被用来理解噪声/去噪循环中的步骤。它接受某些元素，如噪声、时间步数据和一个条件信号（例如，文本描述的表示），并预测可用于去噪过程的噪声残差。'
- en: The components of Stable Diffusion provide neural network weight data, except
    for the tokenizer. While the CPU can handle the training and inference in theory,
    a physical machine with a GPU or parallel computing device can provide the best
    experience to learn and run Stable Diffusion models.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Stable Diffusion的组件提供神经网络权重数据，除了分词器。虽然理论上CPU可以处理训练和推理，但带有GPU或并行计算设备的物理机器可以提供学习并运行Stable
    Diffusion模型的最佳体验。
- en: GPU
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GPU
- en: In theory, Stable Diffusion models can run on both GPU and CPU. In reality,
    PyTorch-based models work best on an NVIDIA GPU with CUDA.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，Stable Diffusion模型可以在GPU和CPU上运行。实际上，基于PyTorch的模型在NVIDIA GPU上使用CUDA运行效果最佳。
- en: Stable Diffusion requires a GPU with at least 4 GB VRAM. From my own experience,
    a GPU with 4 GB VRAM can only enable you to generate 512x512 images but it may
    take a long time to generate them. A GPU with at least 8 GB VRAM grants a relatively
    pleasant learning and usage experience. The larger the VRAM size, the better.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Stable Diffusion需要至少4 GB VRAM的GPU。根据我的经验，4 GB VRAM的GPU只能让你生成512x512的图像，但生成它们可能需要很长时间。至少8
    GB VRAM的GPU可以提供相对愉悦的学习和使用体验。VRAM的大小越大越好。
- en: The code of this book is tested on NVIDIA RTX 3070Ti with 8 GB VRAM and RTX
    3090 with 24 GB VRAM.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的代码在8 GB VRAM的NVIDIA RTX 3070Ti和24 GB VRAM的RTX 3090上进行了测试。
- en: System memory
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 系统内存
- en: There will be a lot of data transferred between GPU and CPU, and some Stable
    Diffusion models will easily take up to 6 GB RAM. Please prepare at least 16 GB
    of system RAM; 32 GB RAM will be good – the more, the better, especially for multiple
    models.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: GPU和CPU之间将进行大量的数据传输，一些Stable Diffusion模型可能会轻松占用高达6 GB的RAM。请至少准备16 GB的系统RAM；32
    GB RAM会更好——越多越好，尤其是对于多个模型。
- en: Storage
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储
- en: Do prepare a large drive. By default, the Hugging Face package will download
    model data to a cache folder located in the system drive. If you only have 256
    GB or 512 GB storage, you will find it quickly running out. Preparing a 1 TB NVME
    SSD is recommended, although 2 TB or more will be even better.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请准备一个大硬盘。默认情况下，Hugging Face包会将模型数据下载到系统驱动器中的缓存文件夹。如果你只有256 GB或512 GB的存储空间，你会发现它很快就会用完。建议准备1
    TB的NVME SSD，尽管2 TB或更多会更好。
- en: Software requirements
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件需求
- en: Now we have the hardware prepared, Stable Diffusion requires additional software
    to support its execution and provide better control using Python. This section
    will provide you with the steps to prepare the software environment.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好了硬件，Stable Diffusion需要额外的软件来支持其执行并提供使用Python的更好控制。本节将为你提供准备软件环境的步骤。
- en: CUDA installation
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CUDA安装
- en: If you are using Microsoft Windows, please install Microsoft **Visual Studio**
    (**VS**) [5] first. VS will install all other dependent packages and binary files
    for CUDA. You can simply choose the latest Community version of VS for free.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是Microsoft Windows，请首先安装Microsoft **Visual Studio** (**VS**) [5]。VS将安装CUDA所需的所有其他依赖包和二进制文件。你可以简单地选择VS的最新社区版本，这是免费的。
- en: 'Now, go to the NVIDIA CUDA download page [1] to get the CUDA installation file.
    The following screenshot shows an example of selecting CUDA for Windows 11:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，前往NVIDIA CUDA下载页面 [1] 下载CUDA安装文件。以下截图显示了选择Windows 11的CUDA示例：
- en: '![Figure 2.1: Selecting the CUDA installation download file for Windows](img/B21263_02_01.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图2.1：选择Windows的CUDA安装下载文件](img/B21263_02_01.jpg)'
- en: 'Figure 2.1: Selecting the CUDA installation download file for Windows'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1：选择Windows的CUDA安装下载文件
- en: Download the CUDA installation file, then double-click this file to install
    CUDA like any other Windows application.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下载CUDA安装文件，然后双击此文件，就像安装任何其他Windows应用程序一样安装CUDA。
- en: 'If you are using a Linux operating system, installing CUDA for Linux is slightly
    different. You can execute the Bash script provided by NVIDIA to automate the
    installation. Here are the detailed steps:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是Linux操作系统，安装CUDA的过程略有不同。您可以执行NVIDIA提供的Bash脚本来自动化安装。以下是详细步骤：
- en: 'It is better to uninstall all NVIDIA drivers first to ensure minimum errors,
    so if you have NVIDIA’s driver already installed, use the following command to
    uninstall it:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了确保最小化错误，最好首先卸载所有NVIDIA驱动程序，所以如果您已经安装了NVIDIA的驱动程序，请使用以下命令来卸载它：
- en: '[PRE0]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, reboot your system:'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，重新启动您的系统：
- en: '[PRE2]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Install GCC. **GNU Compiler Collection** (**GCC**) is a set of compilers for
    various programming languages such as C, C++, Objective-C, Fortran, Ada, and others.
    It is an open source project developed by the GNU Project and is widely used for
    compiling and building software on Unix-like operating systems, including Linux.
    Without GCC being installed, we will get errors during the CUDA installation.
    Install it with the following command:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装GCC。**GNU编译器集合**（**GCC**）是一组用于各种编程语言的编译器，如C、C++、Objective-C、Fortran、Ada等。它是由GNU项目开发的开源项目，并且在Unix-like操作系统（包括Linux）上广泛用于编译和构建软件。如果没有安装GCC，我们在CUDA安装过程中会遇到错误。使用以下命令安装它：
- en: '[PRE3]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Select the right CUDA version for your system on the CUDA download page [2].
    The following screenshot shows an example of selecting CUDA for Ubuntu 22.04:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在CUDA下载页面[2]上为您的系统选择正确的CUDA版本。以下截图显示了为Ubuntu 22.04选择CUDA的示例：
- en: '![Figure 2.2: Selecting the CUDA installation download file for Linux](img/B21263_02_02.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图2.2：选择Linux的CUDA安装下载文件](img/B21263_02_02.jpg)'
- en: 'Figure 2.2: Selecting the CUDA installation download file for Linux'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2：选择Linux的CUDA安装下载文件
- en: 'After your selection, the page will show you the command scripts that handle
    the entire installation process. Here is one example:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在您选择之后，页面将显示处理整个安装过程的命令脚本。以下是一个示例：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The script may have been updated by the time you read this book. To avoid errors
    and potential installation failures, I would suggest opening the page and using
    the script that reflects your selection.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在您阅读这本书的时候，脚本可能已经被更新。为了避免错误和潜在的安装失败，我建议打开页面并使用反映您选择的脚本。
- en: Installing Python for Windows, Linux, and macOS
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Windows、Linux和macOS上的Python
- en: We will first install Python for Windows.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先将为Windows安装Python。
- en: Installing Python for Windows
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装Windows上的Python
- en: You can visit [https://www.python.org/](https://www.python.org/) and download
    Python 3.9 or Python 3.10 to install it.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以访问[https://www.python.org/](https://www.python.org/)并下载Python 3.9或Python
    3.10进行安装。
- en: After years of manually downloading and clicking through the installation process,
    I found that using a package manager is quite useful to automate the installation.
    With a package manager, you write a script once, save it, and then the next time
    you need to install the software, all you have to do is run the same script in
    a terminal window. One of the best package managers for Windows is Chocolatey
    ([https://chocolatey.org/](https://chocolatey.org/)).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 经过多年的手动下载和点击安装过程后，我发现使用包管理器来自动化安装非常有用。使用包管理器，您只需编写一次脚本，保存它，然后下次需要安装软件时，您只需在终端窗口中运行相同的脚本即可。Windows上最好的包管理器之一是Chocolatey
    ([https://chocolatey.org/](https://chocolatey.org/))。
- en: 'Once you have Chocolatey installed, use the following command to install Python
    3.10.6:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您安装了Chocolatey，可以使用以下命令安装Python 3.10.6：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create a Python virtual environment:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 创建Python虚拟环境：
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We will move on to the steps to install Python for Linux.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将继续安装Linux上Python的步骤。
- en: Installing Python for Linux
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装Linux上的Python
- en: 'Let’s now install Python for Linux (Ubuntu). Follow these steps:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将为Linux（Ubuntu）安装Python。按照以下步骤操作：
- en: 'Install the required packages:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装所需的软件包：
- en: '[PRE7]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Install `pip`:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`pip`：
- en: '[PRE13]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create a Python virtual environment:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建Python虚拟环境：
- en: '[PRE15]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Installing Python for macOS
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装macOS上的Python
- en: 'If you are using a Mac with the silicon chip inside (with Apple Mx CPU), there
    is a high chance you have Python installed already. You can test whether you have
    Python installed on your Mac with the following command:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是内置硅芯片的Mac（带有Apple Mx CPU），您很可能已经安装了Python。您可以使用以下命令测试您的Mac上是否已安装Python：
- en: '[PRE18]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If your machine doesn’t have a Python interpreter yet, you can install it with
    one simple command using Homebrew [7] like this:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的机器还没有 Python 解释器，您可以使用 Homebrew [7] 通过一条简单的命令来安装它，如下所示：
- en: '[PRE19]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Keep in mind that Python versions are regularly updated, usually on an annual
    basis. You can change the version number to install a specific Python version.
    For example, you can change `python3.10` to `python3.11`.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，Python 版本通常会定期更新，通常每年更新一次。您可以通过更改版本号来安装特定的 Python 版本。例如，您可以将 `python3.10`
    更改为 `python3.11`。
- en: Installing PyTorch
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 PyTorch
- en: 'The Hugging Face Diffusers package relies on the PyTorch package, so we will
    need to have the PyTorch package installed. Go to the PyTorch **Get Started**
    page ([https://pytorch.org/get-started/locally/](https://pytorch.org/get-started/locally/))
    and select the appropriate PyTorch version for your system. The following is a
    screenshot of PyTorch for Windows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Hugging Face Diffusers 包依赖于 PyTorch 包，因此我们需要安装 PyTorch 包。访问 PyTorch **入门**页面
    ([https://pytorch.org/get-started/locally/](https://pytorch.org/get-started/locally/))
    并选择适合您系统的适当 PyTorch 版本。以下是在 Windows 上的 PyTorch 截图：
- en: '![Figure 2.3: Installing PyTorch](img/B21263_02_03.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3：安装 PyTorch](img/B21263_02_03.jpg)'
- en: 'Figure 2.3: Installing PyTorch'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3：安装 PyTorch
- en: 'Next, use the dynamically generated command to install PyTorch:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用动态生成的命令来安装 PyTorch：
- en: '[PRE20]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: In addition to CUDA 11.7, there is also CUDA 11.8\. The choice of version will
    depend on the CUDA version installed on your machine.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 CUDA 11.7 之外，还有 CUDA 11.8。版本的选择将取决于您机器上安装的 CUDA 版本。
- en: 'You can use the following command to find out your CUDA version:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下命令来查找您的 CUDA 版本：
- en: '[PRE21]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can also use this command:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以使用以下命令：
- en: '[PRE22]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Your machine’s CUDA version may be higher than the listed versions of 11.7 or
    11.8, such as 12.1\. Often, a specific version is required by a certain model
    or package. For Stable Diffusion, just install the newest version.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 您机器的 CUDA 版本可能高于列出的 11.7 或 11.8 版本，例如 12.1。通常，某些模型或包需要特定的版本。对于 Stable Diffusion，只需安装最新版本即可。
- en: If you are using a Mac, select the **Mac** option to install PyTorch for macOS.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用 Mac，请选择 **Mac** 选项来安装适用于 macOS 的 PyTorch。
- en: If you are using a Python virtual environment, make sure to install PyTorch
    within the activated virtual environment. Otherwise, you may encounter issues
    where PyTorch is not installed correctly if you accidentally install it outside
    the virtual environment and then run your Python code within the virtual environment.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用 Python 虚拟环境，请确保在激活的虚拟环境中安装 PyTorch。否则，如果您意外地在虚拟环境外安装 PyTorch，然后在虚拟环境中运行
    Python 代码，您可能会遇到 PyTorch 没有正确安装的问题。
- en: Running a Stable Diffusion pipeline
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行 Stable Diffusion 管道
- en: 'Now that you have installed all the dependencies, it is time to run a Stable
    Diffusion pipeline to test whether the environment is correctly set up. You can
    use any Python editing tool, such as VS Code or Jupyter Notebook, to edit and
    execute Python code. Follow these steps:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经安装了所有依赖项，是时候运行一个 Stable Diffusion 管道来测试环境是否正确设置了。您可以使用任何 Python 编辑工具，例如
    VS Code 或 Jupyter Notebook，来编辑和执行 Python 代码。按照以下步骤操作：
- en: 'Install the packages for Hugging Face Diffusers:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Hugging Face Diffusers 的包：
- en: '[PRE23]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Start a Stable Diffusion pipeline:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Stable Diffusion 管道：
- en: '[PRE25]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: If you are using a Mac, change `cuda` to `mps`. Even though macOS is supported
    and can generate images using the Diffusers package, its performance is relatively
    slow. As a comparison, an NVIDIA RTX 3090 can achieve about 20 iterations per
    second to generate one 512x512 image using Stable Diffusion V1.5, whereas an M3
    Max CPU can only reach around 5 iterations per second with the default settings.
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您正在使用 Mac，将 `cuda` 更改为 `mps`。尽管 macOS 受支持并且可以使用 Diffusers 包生成图像，但其性能相对较慢。作为比较，使用
    Stable Diffusion V1.5 生成一个 512x512 的图像，NVIDIA RTX 3090 可以达到大约每秒 20 次迭代，而 M3 Max
    CPU 在默认设置下只能达到大约每秒 5 次迭代。
- en: 'Generate an image:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成图像：
- en: '[PRE31]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: If you see an image of an astronaut riding a horse, you have all the environments
    set up correctly in your physical machine.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您看到一位宇航员骑马的图像，那么您在物理机器上已经正确设置了所有环境。
- en: Using Google Colaboratory
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Google Colaboratory
- en: '**Google Colaboratory** (or **Google Colab**) is an online computing service
    provided by Google. In essence, Google Colab is an online Jupyter notebook with
    GPU/CUDA capability.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**Google Colaboratory**（或 **Google Colab**）是 Google 提供的在线计算服务。本质上，Google Colab
    是一个具有 GPU/CUDA 功能的在线 Jupyter Notebook。'
- en: Its free notebook can provide CUDA computing with 15 GB VRAM equivalent to an
    NVIDIA RTX 3050 or RTX 3060\. The performance is decent if you don’t have a discrete
    GPU at hand.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 它的免费笔记本可以提供与NVIDIA RTX 3050或RTX 3060相当的15 GB VRAM的CUDA计算。如果你没有现成的独立GPU，性能还算不错。
- en: 'Let’s look at the advantages and disadvantages of using Google Colab:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看使用Google Colab的优缺点：
- en: '`pip` and downloading of resources are fast'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pip` 和资源下载都很快速'
- en: '**Disadvantages**:'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺点**：'
- en: There is a disk limitation for each notebook
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个笔记本都有一个磁盘限制
- en: You don't have full control of the backend server; terminal access requires
    a Colab Pro subscription
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你无法完全控制后端服务器；终端访问需要Colab Pro订阅
- en: The performance is not guaranteed so you may experience slow GPU inference during
    peak time and could be disconnected for long-time computing
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能无法保证，因此在高峰时段你可能会遇到慢速GPU推理，并且可能会因为长时间计算而被断开连接。
- en: The Colab notebook compute environment will be reset every time you restart
    the notebook; in other words, you will need to reinstall all the packages and
    download the model files every time you start the notebook
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每次重启笔记本时，Colab笔记本的计算环境都会被重置；换句话说，每次启动笔记本时，你都需要重新安装所有包和下载模型文件。
- en: Using Google Colab to run a Stable Diffusion pipeline
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Google Colab运行稳定扩散管道
- en: 'Here are the detailed steps to start using Google Colab:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是开始使用Google Colab的详细步骤：
- en: Create a new instance from [https://colab.research.google.com/](https://colab.research.google.com/).
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://colab.research.google.com/](https://colab.research.google.com/) 创建一个新的实例。
- en: 'Click **Runtime** | **Change runtime type** and select **T4 GPU**, as shown
    in *Figure 2**.4*:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **运行** | **更改运行时类型** 并选择 **T4 GPU**，如图 *图2.4* 所示：
- en: '![Figure 2.4: Selecting GPU in the Google Colab notebook](img/B21263_02_04.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图2.4：在Google Colab笔记本中选择GPU](img/B21263_02_04.jpg)'
- en: 'Figure 2.4: Selecting GPU in the Google Colab notebook'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4：在Google Colab笔记本中选择GPU
- en: 'Create a new cell and use the following command to check whether the GPU and
    CUDA are working:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的单元格，并使用以下命令检查GPU和CUDA是否工作：
- en: '[PRE36]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Install the packages for Hugging Face Diffusers:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Hugging Face Diffusers的包：
- en: '[PRE37]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Start a Stable Diffusion pipeline:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始启动稳定的扩散管道：
- en: '[PRE39]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Generate an image:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成图像：
- en: '[PRE45]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'In a few seconds, you should be able to see the result as shown in *Figure
    2**.5*:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟后，你应该能看到如图 *图2.5* 所示的结果：
- en: '![Figure 2.5: Running a Stable Diffusion pipeline in Google Colab](img/B21263_02_05.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图2.5：在Google Colab中运行稳定扩散管道](img/B21263_02_05.jpg)'
- en: 'Figure 2.5: Running a Stable Diffusion pipeline in Google Colab'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5：在Google Colab中运行稳定扩散管道
- en: If you see an image generated as in *Figure 2**.5*, you have successfully set
    up the Diffusers package to run the Stable Diffusion model in Google Colab.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到生成的图像如图 *图2.5* 所示，那么你已经成功设置了Diffusers包，在Google Colab中运行稳定扩散模型。
- en: Summary
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Some say that the most challenging part of starting to train a machine learning
    model is not the math or its internal logic. Often, the biggest hurdle is setting
    up a proper working environment to run the model. It's not uncommon to see engineers
    and professors spend an entire weekend trying to install CUDA on their lab machines.
    This can be due to missing dependencies, skipped steps, or version incompatibilities.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 有人说，开始训练机器学习模型最具挑战性的部分不是数学或其内部逻辑。通常，最大的障碍是设置一个合适的运行环境来运行模型。工程师和教授们花整个周末试图在他们的实验室机器上安装CUDA的情况并不少见。这可能是由于缺少依赖项、跳过的步骤或版本不兼容造成的。
- en: I dedicated an entire chapter to covering the installation process, hoping that
    these detailed steps would help you avoid common pitfalls. By following these
    steps, you’ll be able to delve into the Stable Diffusion model and start image
    generation with minimum obstacles.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我专门用了一章来介绍安装过程，希望这些详细的步骤能帮助你避免常见的陷阱。通过遵循这些步骤，你将能够深入了解稳定扩散模型，并开始图像生成，障碍最小化。
- en: Furthermore, the software and packages you installed will also work for Transformer-based
    large language models.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你安装的软件和包也将适用于基于Transformer的大型语言模型。
- en: In the next chapter, we will start using Stable Diffusion to generate images.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始使用稳定扩散来生成图像。
- en: References
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '*CUDA Installation Guide for Microsoft* *Windows*: [https://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/index.html](https://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/index.html)'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Microsoft Windows的CUDA安装指南*：[https://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/index.html](https://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/index.html)'
- en: '*NVIDIA CUDA* *Downloads*: [https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads)'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*NVIDIA CUDA* *下载*: [https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads)'
- en: '*Google* *Colab*: [https://colab.research.google.com/](https://colab.research.google.com/)'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Google* *Colab*: [https://colab.research.google.com/](https://colab.research.google.com/)'
- en: '*Hugging Face Diffusers* *Installation*: [https://huggingface.co/docs/diffusers/installation](https://huggingface.co/docs/diffusers/installation)'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Hugging Face Diffusers* *安装*: [https://huggingface.co/docs/diffusers/installation](https://huggingface.co/docs/diffusers/installation)'
- en: '*Visual Studio Community* *Download*: [https://visualstudio.microsoft.com/vs/community/](https://visualstudio.microsoft.com/vs/community/)'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Visual Studio Community* *下载*: [https://visualstudio.microsoft.com/vs/community/](https://visualstudio.microsoft.com/vs/community/)'
- en: '*OpenCLIP GitHub* *repository*: [https://github.com/mlfoundations/open_clip](https://github.com/mlfoundations/open_clip)'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*OpenCLIP GitHub* *仓库*: [https://github.com/mlfoundations/open_clip](https://github.com/mlfoundations/open_clip)'
- en: '*Homebrew*: [https://brew.sh/](https://brew.sh/)'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Homebrew*: [https://brew.sh/](https://brew.sh/)'
