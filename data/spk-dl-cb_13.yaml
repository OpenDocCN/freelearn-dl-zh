- en: Image Classification with TensorFlow on Spark
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用TensorFlow和Spark进行图像分类
- en: 'The following recipes will be covered in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: Downloading 30 images each of Messi and Ronaldo
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载梅西和C罗各30张图片
- en: Configuring PySpark installation with deep learning packages
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置带深度学习包的PySpark安装
- en: Loading images onto PySpark dataframes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将图片加载到PySpark数据框中
- en: Understanding transfer learning
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解迁移学习
- en: Creating a pipeline for image classification training
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建图像分类训练的流水线
- en: Evaluating model performance
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评估模型性能
- en: Fine-tuning model parameters
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微调模型参数
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'Over the last couple of years, image recognition software has become increasingly
    in demand. It is not a coincidence that this demand has coincided with the advancements
    of big data storage. Google Photos, Facebook, and Apple all utilize image classification
    software to tag photos for their users. Much of the image recognition software
    used by these companies are powered by deep learning models built on top of popular
    libraries such as TensorFlow. This chapter extends the technique of deep learning
    by leveraging the training of one set of images to the learning or recognition
    of another set of images. This concept is referred to as transfer learning. In
    this chapter, we will focus on leveraging transfer learning to recognize the top
    two football players in the world:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几年中，图像识别软件的需求日益增长。这种需求的增加与大数据存储的进展不无关系。Google Photos、Facebook和Apple都使用图像分类软件来为用户标记照片。这些公司使用的大部分图像识别软件都是基于流行的库，如TensorFlow，使用深度学习模型构建的。本章通过利用一组图像的训练来学习或识别另一组图像，拓展了深度学习的技术。这个概念被称为迁移学习。在本章中，我们将重点介绍如何利用迁移学习来识别世界上排名前两的足球运动员：
- en: Lionel Messi
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 利昂内尔·梅西
- en: Cristiano Ronaldo
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克里斯蒂亚诺·罗纳尔多
- en: 'Take a look at this photo:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下这张照片：
- en: '![](img/1aa798b3-2945-4cd5-bd03-5d6bc1cc95b3.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1aa798b3-2945-4cd5-bd03-5d6bc1cc95b3.png)'
- en: Downloading 30 images each of Messi and Ronaldo
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载梅西和C罗各30张图片
- en: Before any classification of images can take place, we must first download images
    of our footballers from the web.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行任何图片分类之前，我们必须先从网上下载我们足球运动员的图片。
- en: Getting ready
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: There are several add-ons to browsers that download images in bulk. Since Ubuntu
    comes pre-installed with Mozilla Firefox as a browser, we will use it as our browser
    of choice to install a bulk image downloader extension.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个浏览器插件可以批量下载图片。由于Ubuntu预装了Mozilla Firefox浏览器，我们将使用它作为首选浏览器来安装批量图片下载扩展。
- en: How to do it...
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following section explains how to download images in bulk. Take a look
    at these steps:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分解释了如何批量下载图片。请参考这些步骤：
- en: 'Visit the following website for downloading and installing Firefox add-ons:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问以下网站以下载和安装Firefox插件：
- en: '[https://addons.mozilla.org/en-US/firefox/](https://addons.mozilla.org/en-US/firefox/)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://addons.mozilla.org/en-US/firefox/](https://addons.mozilla.org/en-US/firefox/)'
- en: 'Search for and select the Download all Images add-on, as seen in the following
    screenshot:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索并选择“下载所有图片”插件，如下面的截图所示：
- en: '![](img/2e921ad4-e29b-4d4d-bb7e-e71c9b24693d.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2e921ad4-e29b-4d4d-bb7e-e71c9b24693d.png)'
- en: 'This will take us to the installation page. At which point, select Add to Firefox,
    as seen in the following screenshot:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带我们到安装页面。此时，选择“添加到Firefox”，如下面的截图所示：
- en: '![](img/264ce1b4-6a2c-49fa-a839-525abc4b713a.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/264ce1b4-6a2c-49fa-a839-525abc4b713a.png)'
- en: Confirm your installation, as this add-on will require permission to access
    your browser's download history, access your data for all websites, and send you
    notifications.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认你的安装，因为这个插件将需要权限访问你的浏览器下载历史，访问所有网站的数据，并发送通知。
- en: 'Once that is complete, you should see a small picture icon for Download all
    Images on the upper right-hand side of your browser, as seen in the following
    screenshot:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦完成，你应该会在浏览器右上角看到一个小的图片图标，表示“下载所有图片”，如下面的截图所示：
- en: '![](img/bd0c3da6-303f-4194-accb-f2745b35df54.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bd0c3da6-303f-4194-accb-f2745b35df54.png)'
- en: 'We are now ready to begin downloading images of our footballers, using the
    newly added extension for Firefox. We can visit many different websites to download
    images from, such as [https://www.google.com](https://www.google.com). For the
    purposes of this chapter, search for Cristiano Ronaldo and download his images
    using [https://www.pexels.com](https://www.pexels.com), as seen in the following
    screenshot:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在准备好开始下载我们的足球运动员的图片了，使用的是新安装的Firefox扩展。我们可以访问许多不同的网站来下载图片，例如[https://www.google.com](https://www.google.com)。为了本章节的目的，搜索克里斯蒂亚诺·罗纳尔多，并通过[https://www.pexels.com](https://www.pexels.com)下载他的图片，如下图所示：
- en: '![](img/b6db583e-4f6b-4502-a0ca-3b3287128844.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6db583e-4f6b-4502-a0ca-3b3287128844.png)'
- en: 'Next, click on the Download all Images icon and specify the following download
    settings for the images as shown in the following screenshot:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击“下载所有图片”图标，并按照下图所示指定图片的下载设置：
- en: '![](img/35952ce0-3f64-4357-af9f-766a2ab4ef2f.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35952ce0-3f64-4357-af9f-766a2ab4ef2f.png)'
- en: 'Click on Save, as you will then have the option to download all of the pictures
    as a `.zip` file to a local directory. You can then unzip the file into a folder
    and peruse through all of the images. In our example, the images have all been
    extracted to `/Home/sparkNotebooks/Ch13/football/ronaldo/`, as seen in the following
    screenshot:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“保存”，这样你将能够选择将所有图片下载为一个`.zip`文件并保存到本地目录。然后，你可以将该文件解压到一个文件夹，并浏览所有图片。在我们的示例中，所有图片已经被提取到`/Home/sparkNotebooks/Ch13/football/ronaldo/`，如下图所示：
- en: '![](img/d05a2be3-3239-45ad-923c-9ecae2733026.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d05a2be3-3239-45ad-923c-9ecae2733026.png)'
- en: 'Of all the images that are available in the folder, choose 30 images of Ronaldo
    and name them `ronaldo1.jpg`, `ronaldo2.jpg`....`ronaldo30.jpg`, as shown in the
    following screenshot:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件夹中所有可用的图片中，选择30张罗纳尔多的图片，并将其命名为`ronaldo1.jpg`、`ronaldo2.jpg`…`ronaldo30.jpg`，如下图所示：
- en: '![](img/a4476a21-9ead-4bb9-98bc-ca9300025f35.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a4476a21-9ead-4bb9-98bc-ca9300025f35.png)'
- en: 'Repeat the steps again, this time for Messi to obtain 30 images of each. The
    final folder structure should look like the following:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次重复步骤，这次为梅西获取30张图片。最终的文件夹结构应该如下所示：
- en: '![](img/c981fa82-30e8-4c49-b2af-05e6c8f1205f.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c981fa82-30e8-4c49-b2af-05e6c8f1205f.png)'
- en: How it works...
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其工作原理...
- en: 'This section explains the process of how the add-on downloads the images in
    bulk to our desired location:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了插件如何将图片批量下载到我们所需位置的过程：
- en: Bulk image downloading software is readily available these days and integrated
    within browsers. We will use Download all Images as an add-on with Firefox to
    quickly download images for Messi and Ronaldo.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目前有很多批量图片下载软件，并且已经集成到浏览器中。我们将使用Firefox的“下载所有图片”插件，快速下载梅西和罗纳尔多的图片。
- en: We want to specify settings in the app to download lower-quality images, so
    we set a minimum threshold of 0 bytes, a maximum threshold of 500 bytes, and an
    image type of `jpg` or `jpeg`.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们想要在应用中设置下载低质量的图片，因此我们设置了最小阈值为0字节，最大阈值为500字节，并将图片类型设置为`jpg`或`jpeg`。
- en: Finally, we want to handpick only the 30 images that best represent each player,
    as 20 of them will serve as our training dataset, and the remaining 10 will serve
    as our test dataset. All other images can be deleted.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们希望精心挑选出最能代表每位球员的30张图片，其中20张将作为训练数据集，剩余的10张将作为测试数据集。其他所有图片都可以删除。
- en: All of the images will be tagged or labeled for training purposes by their last
    name and a number between 1 and 30\. For example, `Messi1.jpg`, `Messi2.jpg`,
    `Ronaldo1.jpg`, `Ronaldo2.jpg`, and so on.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有的图片将按姓氏和1到30之间的数字进行标记或标签，以便于训练使用。例如，`Messi1.jpg`、`Messi2.jpg`、`Ronaldo1.jpg`、`Ronaldo2.jpg`，依此类推。
- en: There's more...
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多内容...
- en: 'While you can use your own images that you have downloaded using Download all
    Images, you can download the same images for Ronaldo and Messi that will be used
    for training purposes in this chapter by visiting the following websites:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你可以使用你自己下载的图片，也可以通过访问以下网站下载梅西和罗纳尔多的图片，这些图片将用于本章节的训练目的：
- en: 'For Messi:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 对于梅西：
- en: '[https://github.com/asherif844/ApacheSparkDeepLearningCookbook/tree/master/CH13/football/messi](https://github.com/asherif844/ApacheSparkDeepLearningCookbook/tree/master/CH13/football/messi)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/asherif844/ApacheSparkDeepLearningCookbook/tree/master/CH13/football/messi](https://github.com/asherif844/ApacheSparkDeepLearningCookbook/tree/master/CH13/football/messi)'
- en: 'For Ronaldo:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于罗纳尔多：
- en: '[https://github.com/asherif844/ApacheSparkDeepLearningCookbook/tree/master/CH13/football/ronaldo](https://github.com/asherif844/ApacheSparkDeepLearningCookbook/tree/master/CH13/football/ronaldo)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/asherif844/ApacheSparkDeepLearningCookbook/tree/master/CH13/football/ronaldo](https://github.com/asherif844/ApacheSparkDeepLearningCookbook/tree/master/CH13/football/ronaldo)'
- en: See also
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'There are similar add-ons and extensions for other browsers. If you are working
    with Google Chrome, there is a similar add-on called *D*ownload''em All that can
    be downloaded from the following website:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 其他浏览器也有类似的插件和扩展。如果你使用的是Google Chrome，可以从以下网站下载名为*D*ownload'em All的类似插件：
- en: '[https://chrome.google.com/webstore/detail/downloadem-all/ccdfjnniglfbpaplecpifdiglfmcebce?hl=en-US](https://chrome.google.com/webstore/detail/downloadem-all/ccdfjnniglfbpaplecpifdiglfmcebce?hl=en-US)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://chrome.google.com/webstore/detail/downloadem-all/ccdfjnniglfbpaplecpifdiglfmcebce?hl=en-US](https://chrome.google.com/webstore/detail/downloadem-all/ccdfjnniglfbpaplecpifdiglfmcebce?hl=en-US)'
- en: Configuring PySpark installation with deep learning packages
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置PySpark安装与深度学习包
- en: There are some additional configurations that need to be done within PySpark
    to implement deep learning packages from Databricks called `spark-deep-learning`.
    These are configurations that were made all the way back in [chapter 1](a010c7af-0e48-4bac-9146-47ddecc2cc8e.xhtml),
    *Setting up your Spark Environment for Deep Learning*.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些额外的配置需要在PySpark中完成，以实现来自Databricks的`spark-deep-learning`深度学习包。这些配置是在[第1章](a010c7af-0e48-4bac-9146-47ddecc2cc8e.xhtml)中进行的，*为深度学习设置您的Spark环境*。
- en: Getting ready
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: This configuration requires making changes in the terminal, using **bash**.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配置需要在终端中进行更改，使用**bash**。
- en: How to do it...
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到……
- en: 'The following section walks through the steps to configure PySpark with deep
    learning packages:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的部分详细介绍了如何配置PySpark与深度学习包：
- en: 'Open the terminal application and type in the following command:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端应用程序，并输入以下命令：
- en: '[PRE0]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Scroll all the way to the bottom of the document and look for the `sparknotebook()` function
    we created back in [chapter 1](a010c7af-0e48-4bac-9146-47ddecc2cc8e.xhtml), *Setting
    up your Spark Environment for Deep Learning*.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到文档底部，并查找我们在[第1章](a010c7af-0e48-4bac-9146-47ddecc2cc8e.xhtml)中创建的`sparknotebook()`函数，*为深度学习设置您的Spark环境*。
- en: 'Update the last row of the function. It should currently look like the following:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新函数的最后一行。当前应如下所示：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Change it to the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 将其更改为以下内容：
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once the configuration change is made, exit the document and execute the following
    script to confirm that all necessary changes were saved:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦配置更改完成，退出文档并执行以下脚本以确认所有必要的更改已保存：
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How it works...
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理……
- en: 'The following section explains how PySpark is modified to incorporate deep
    learning packages take a look at these steps:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的部分解释了如何修改PySpark以整合深度学习包，请看这些步骤：
- en: 'Accessing bash allows us to make configurations at the command line, as seen
    in the following screenshot:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问bash允许我们在命令行上进行配置，就像下面的屏幕截图所示：
- en: '![](img/2180139f-528c-4aac-a32a-f962b417f9c8.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2180139f-528c-4aac-a32a-f962b417f9c8.png)'
- en: At the end of our document, we can see our original function, `sparknotebook()`,
    still intact; however, we need to modify it to incorporate the `spark-deep-learning`
    package.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的文档末尾，我们可以看到我们原始的函数`sparknotebook()`仍然完好无损；然而，我们需要修改它以整合`spark-deep-learning`包。
- en: 'Since this modification is to PySpark directly, and not to a Python library,
    we cannot incorporate it into our framework using a typical `pip` installation.
    Instead, we will modify our PySpark configuration to appear as shown in the following
    screenshot:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于这次修改直接针对PySpark，而不是Python库，我们无法通过典型的`pip`安装将其整合到我们的框架中。相反，我们将修改我们的PySpark配置，使其显示如下屏幕截图所示：
- en: '![](img/30251b6b-9821-4935-8e95-6622fefeb5ba.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/30251b6b-9821-4935-8e95-6622fefeb5ba.png)'
- en: We have now configured our PySpark installation to incorporate deep learning
    libraries that incorporate APIs that help build models for all types of solutions,
    such as image classification.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在已经配置了PySpark安装，以整合包含各种解决方案模型构建API的深度学习库，如图像分类。
- en: There's more...
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多……
- en: This package, `spark-deep-learning`, is managed by `Databricks`. Databricks
    was founded by one of the co-creators of Spark, Ali Ghodsi, and is used to deliver
    managed Spark offerings through a unified platform.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这个包，`spark-deep-learning`，由`Databricks`管理。Databricks是由Spark的共同创始人之一Ali Ghodsi创立的，用于通过统一平台提供托管的Spark解决方案。
- en: See also
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'To learn more about other third-party packages developed for Spark, visit the
    following website:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 若想了解更多为Spark开发的其他第三方包，请访问以下网站：
- en: '[https://spark-packages.org/](https://spark-packages.org/).'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://spark-packages.org/](https://spark-packages.org/)。'
- en: Loading images on to PySpark dataframes
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载图像到PySpark数据框中
- en: We are now ready to begin importing our images into our notebook for classification.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经准备好将我们的图像导入笔记本进行分类。
- en: Getting ready
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'We will be using several libraries and their dependencies in this section,
    which will require us to install the following packages through `pip install`
    on the terminal within Ubuntu Desktop:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将使用几个库及其依赖项，这将要求我们在Ubuntu桌面中的终端通过`pip install`安装以下包：
- en: '[PRE4]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: How to do it...
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps will demonstrate how to decode images into a Spark dataframe:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将展示如何将图像解码为Spark数据框：
- en: 'Initiate a `spark` session, using the following script:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动一个`spark`会话，使用以下脚本：
- en: '[PRE5]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Import the following libraries from PySpark to create dataframes, using the
    following script:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从PySpark中导入以下库以创建数据框，使用以下脚本：
- en: '[PRE6]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Execute the following script to create two dataframes for Messi and Ronaldo,
    using the main folder location for each player:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下脚本，创建两个数据框，分别用于梅西和罗纳尔多，并使用每个球员的主文件夹位置：
- en: '[PRE7]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Split each dataframe into a train-and-test set at a `66.7/33.3` ratio, and
    set a random seed set to `12`, using the following script:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个数据框按照`66.7/33.3`的比例拆分为训练和测试集，并设置随机种子为`12`，使用以下脚本：
- en: '[PRE8]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Finally, merge both the training dataframes and the testing dataframes into
    one new dataframe each, `trainDF` and `testDF`, using the following script:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用以下脚本将训练数据框和测试数据框合并为两个新的数据框，`trainDF`和`testDF`：
- en: '[PRE9]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How it works...
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The following section explains how the images are loaded and read into a Jupyter
    notebook. Take a look at these steps:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分解释了如何将图像加载并读取到Jupyter笔记本中。请查看这些步骤：
- en: We always begin a Spark project by initiating a Spark session to set the application
    name as well as to set the Spark executor memory.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们总是通过启动Spark会话来开始一个Spark项目，以设置应用程序名称并设置Spark执行内存。
- en: 'We import both `pyspark.sql.functions` and `sparkdl` to help build dataframes
    based on encoded images. When `sparkdl` is imported, we see that it is using TensorFlow
    in the backend, as seen in the following screenshot:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们导入了`pyspark.sql.functions`和`sparkdl`，以帮助基于编码图像构建数据框。当导入`sparkdl`时，我们看到它在后端使用了TensorFlow，如下图所示：
- en: '![](img/2f0bbcf0-95fb-4966-9bbb-5954cc4b8ff8.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2f0bbcf0-95fb-4966-9bbb-5954cc4b8ff8.png)'
- en: 'The dataframes are created using `sparkdl` with three columns: filepath, image,
    and label. Sparkdl is used to import each image and encode it by color and shape.
    Additionally, a function, `lit`, is used to tag a literal value (0 or 1) to each
    of the two dataframes under the label column for training purposes, as seen in
    the following screenshot:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据框使用`sparkdl`创建，包含三列：文件路径、图像和标签。Sparkdl用于导入每个图像，并通过颜色和形状对其进行编码。此外，`lit`函数用于为训练目的，在标签列下为每个数据框添加一个字面值（0或1），如下图所示：
- en: '![](img/eed74346-0732-4f81-aafc-4d5a7c4859e0.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eed74346-0732-4f81-aafc-4d5a7c4859e0.png)'
- en: 'Since there are 30 images for each footballer, a split of 66.7/33.3 is used
    to create 18 training images and 12 testing images, as seen in the following screenshot:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于每位足球运动员有30张图片，采用66.7/33.3的比例来创建18张训练图像和12张测试图像，如下图所示：
- en: Please note that the more images used in the training process the better when
    using deep learning. However, the point we will try and prove in this chapter
    is that with transfer learning being implemented as an extension of deep learning,
    we can classify images using fewer training samples, as is the case in this chapter
    with only 30 images for Ronaldo and Messi each.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在深度学习中，使用更多的图像进行训练会更好。然而，我们在本章中要证明的是，随着迁移学习作为深度学习的扩展的实施，我们可以使用更少的训练样本来分类图像，正如本章中梅西和罗纳尔多每人只有30张图片的情况。
- en: '![](img/abef3f04-4a7a-4646-a3e4-062e06937597.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/abef3f04-4a7a-4646-a3e4-062e06937597.png)'
- en: 'To build out our model, we are only interested in creating a single training
    dataframe with the 36 images, as well as a single testing dataframe with the remaining
    24 images. Once we merge the dataframes we can confirm that they are the correct
    size, as seen in the following screenshot:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了构建我们的模型，我们只关心创建一个包含36张图片的训练数据框，以及一个包含其余24张图片的测试数据框。一旦我们合并了数据框，可以确认它们的大小是正确的，如下图所示：
- en: '![](img/7f0beaf7-034e-4afe-9ffb-520857b1b2cb.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7f0beaf7-034e-4afe-9ffb-520857b1b2cb.png)'
- en: There's more...
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多…
- en: It may be lost in the process but it is important to note that loading the images
    into a dataframe was easy, and only took a few lines of code using `sparkdl.readImages`.
    This showcases the power of the machine learning pipelines that are available
    with Spark.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能在过程中丢失，但重要的是要注意，将图像加载到数据框架中非常简单，只需要几行代码，使用` sparkdl.readImages`。这展示了Spark提供的机器学习管道的强大功能。
- en: See also
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参见
- en: 'To learn more about the `sparkdl` package, visit the following repository:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于` sparkdl`包的信息，请访问以下仓库：
- en: '[https://databricks.github.io/spark-deep-learning/site/api/python/sparkdl.html](https://databricks.github.io/spark-deep-learning/site/api/python/sparkdl.html)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://databricks.github.io/spark-deep-learning/site/api/python/sparkdl.html](https://databricks.github.io/spark-deep-learning/site/api/python/sparkdl.html)'
- en: Understanding transfer learning
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解迁移学习
- en: The rest of this chapter will involve transfer learning techniques; therefore,
    we will spend this section explaining how transfer learning works within our architecture.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 本章剩余部分将涉及迁移学习技术；因此，我们将在本节中解释迁移学习如何在我们的架构中工作。
- en: Getting ready
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: There are no dependencies required for this section.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 本节不需要任何依赖项。
- en: How to do it...
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'This section walks through the steps for how transfer learning works:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了迁移学习的工作步骤：
- en: Identify a pre-trained model that will be used as the training methodology that
    will be transferred to our chosen task. In our case, the task will be in identifying
    images of Messi and Ronaldo.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定一个预训练模型，将其作为迁移到我们选择任务的训练方法。在我们的例子中，任务将是识别梅西和罗纳尔多的图像。
- en: 'There are several available pre-trained models that can be used. The most popular
    ones are the following:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有多个可用的预训练模型可以使用。最流行的几个如下：
- en: Xception
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Xception
- en: InceptionV3
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: InceptionV3
- en: ResNet50
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: ResNet50
- en: VGG16
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: VGG16
- en: VGG19
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: VGG19
- en: The features from the pre-trained convolutional neural network are extracted
    and saved for a certain set of images over several layers of filtering and pooling.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从预训练的卷积神经网络中提取特征，并在多个过滤和池化层中保存这些特征，应用于特定的图像集。
- en: The final layer for the pre-trained convolutional neural network is substituted
    with the specific features that we are looking to classify based on our dataset.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预训练卷积神经网络的最终层被替换为我们基于数据集要分类的特定特征。
- en: How it works...
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'This section explains the methodology of transfer learning:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了迁移学习的方法论：
- en: In early chapters, we discuss how machine learning models, and more importantly
    deep learning models, work best with larger samples for training purposes. In
    fact, the general motto with deep learning is the more the merrier.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在前几章中，我们讨论了机器学习模型，尤其是深度学习模型，如何在较大样本的训练中表现最佳。事实上，深度学习的一般格言是：越多越好。
- en: 'However, there are situations when a high volume of data or images is just
    not available to train a model. It is in these circumstances where we wish to
    transfer the learning of one field to predict the outcome of a different field.
    The heavy lifting of extracting features and filtering through layers and layers
    within a convolutional neural network have already been performed by institutions
    that have developed many pre-trained models such as InceptionV3 and ResNet50:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然而，有些情况下可能没有足够的高量数据或图像来训练一个模型。正是在这种情况下，我们希望将一个领域的学习迁移到预测另一个领域的结果。提取特征并通过卷积神经网络中的多个层进行过滤的繁重工作已经由一些开发了许多预训练模型的机构（如InceptionV3和ResNet50）完成。
- en: InceptionV3 was developed over at Google and has smaller weights than ResNet50
    and VGG
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: InceptionV3是在谷歌开发的，权重比ResNet50和VGG小。
- en: ResNet50 uses 50 weight layers
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: ResNet50使用50个权重层
- en: VGG16 and VGG19 have 16 and 19 weight layers respectively
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: VGG16和VGG19分别具有16个和19个权重层
- en: Several higher level deep learning libraries such as Keras now come pre-built
    with these pre-trained networks for a more simplified application by specifying
    the model name.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一些高级深度学习库，如Keras，现在预先构建了这些预训练网络，简化了应用，只需要指定模型名称。
- en: There's more...
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多…
- en: Determining which pre-trained model works best for the data or image set in
    question will depend on the image types used. It is always best to try different
    pre-trained sets and determine which one delivers the best accuracy.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 确定哪种预训练模型最适合特定数据或图像集，取决于所使用的图像类型。最好尝试不同的预训练模型，确定哪个模型能提供最佳的准确度。
- en: See also
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参见
- en: 'To learn more about the Inception V3 pre-trained model, read the following
    paper:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于Inception V3预训练模型的信息，请阅读以下论文：
- en: '[https://arxiv.org/abs/1409.4842](https://arxiv.org/abs/1409.4842)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://arxiv.org/abs/1409.4842](https://arxiv.org/abs/1409.4842)'
- en: 'To learn more about the VGG pre-trained models, read the following paper:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于VGG预训练模型的信息，请阅读以下论文：
- en: '[https://arxiv.org/abs/1409.1556](https://arxiv.org/abs/1409.1556)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://arxiv.org/abs/1409.1556](https://arxiv.org/abs/1409.1556)'
- en: Creating a pipeline for image classification training
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建图像分类训练管道
- en: We are now ready to build the deep learning pipeline for training our dataset.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备好为我们的数据集构建深度学习管道。
- en: Getting ready
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The following libraries will be imported to assist with the pipeline development:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 以下库将被导入，以协助管道开发：
- en: '`LogisticRegression`'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LogisticRegression`'
- en: '`Pipeline`'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Pipeline`'
- en: How to do it...
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'The following section walks through the following steps for creating a pipeline
    for image classification:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将讲解创建图像分类管道的步骤：
- en: 'Execute the following script to begin the deep learning pipeline as well as
    to configure the classification parameters:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下脚本以开始深度学习管道并配置分类参数：
- en: '[PRE10]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Create a new dataframe, `predictDF`, that houses the original testing labels
    as well as the new prediction scores, using the following script:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的数据框`predictDF`，其中包含原始测试标签以及新的预测分数，使用以下脚本：
- en: '[PRE11]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: How it works...
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'The following section explains how the pipeline for image classification is
    configured for optimal performance:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分解释了如何为图像分类配置管道，以实现最佳性能：
- en: '`LogisticRegression` is imported, as it will be the main classification algorithm
    used to distinguish between Messi and Ronaldo images. `DeepImageFeaturizer` is
    imported from `sparkdl` to create features based off of the images that will be
    used as the final input to the logistic regression algorithm.'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`LogisticRegression`已被导入，因为它将是区分梅西和罗纳尔多图像的主要分类算法。`DeepImageFeaturizer`从`sparkdl`导入，用于基于图像创建特征，这些特征将作为逻辑回归算法的最终输入。'
- en: It is important to note that the features created from `DeepImageFeaturizer`
    will be using a pre-trained model based on `InceptionV3`, and assigned a variable
    of `vectorizer`.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，通过`DeepImageFeaturizer`创建的特征将使用基于`InceptionV3`的预训练模型，并分配一个名为`vectorizer`的变量。
- en: 'The logistic regression model is tuned to run for a maximum of 30 iterations.
    Finally, the pipeline ingests both `vectorizer` and `LogisticRegression` variables
    and fits it into the training dataframe, `trainDF`. `vectorizer` is used to create
    numeric values out of the images. The output of the `DeepImageFeaturizer` can
    be seen in the following screenshot:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑回归模型的调优次数最多为30次迭代。最后，管道将`vectorizer`和`LogisticRegression`变量输入并拟合到训练数据框`trainDF`中。`vectorizer`用于将图像转化为数值。`DeepImageFeaturizer`的输出可见于以下截图：
- en: '![](img/db806e60-8e9e-4cd1-813d-61c3a991ece1.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/db806e60-8e9e-4cd1-813d-61c3a991ece1.png)'
- en: 'The test dataframe, `testDF`, is transformed into a new dataframe, `predictDF`,
    by applying the fitted pipeline model, `pipeline_model`, which creates a new column
    called prediction. We can then compare our label column with our prediction column,
    as seen in the following screenshot:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试数据框`testDF`通过应用拟合后的管道模型`pipeline_model`，转换成新的数据框`predictDF`，并创建一个名为“prediction”的新列。我们可以将标签列与预测列进行比较，如下截图所示：
- en: '![](img/63b637a7-0e98-4870-8c8a-ff58c1b27fee.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/63b637a7-0e98-4870-8c8a-ff58c1b27fee.png)'
- en: There's more...
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多…
- en: '`InceptionV3` is the image classifier model that we used for classifying our
    images; however, we could have very easily chosen other pre-trained models and
    compared accuracy within our pipeline.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`InceptionV3`是我们用于图像分类的图像分类模型；然而，我们完全可以选择其他预训练模型，并在管道中比较准确性。'
- en: See also
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'To learn more about transfer learning, read the following article from the
    University of Wisconsin:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于迁移学习的信息，请阅读威斯康星大学的以下文章：
- en: '[http://ftp.cs.wisc.edu/machine-learning/shavlik-group/torrey.handbook09.pdf](http://ftp.cs.wisc.edu/machine-learning/shavlik-group/torrey.handbook09.pdf)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://ftp.cs.wisc.edu/machine-learning/shavlik-group/torrey.handbook09.pdf](http://ftp.cs.wisc.edu/machine-learning/shavlik-group/torrey.handbook09.pdf)'
- en: Evaluating model performance
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估模型性能
- en: We are ready to evaluate our model and see how well we can distinguish between
    Messi and Ronaldo.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经准备好评估我们的模型，看看我们能多好地区分梅西和罗纳尔多。
- en: Getting ready
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Since we will be doing some model evaluation, we will need to import the following
    library:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将进行一些模型评估，因此需要导入以下库：
- en: '`MulticlassClassificationEvaluator`'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MulticlassClassificationEvaluator`'
- en: How to do it...
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following section walks through the following steps to evaluate model performance:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分介绍了评估模型性能的步骤：
- en: 'Execute the following script to create a confusion matrix from the `predictDF`
    dataframe:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下脚本，从`predictDF`数据框创建混淆矩阵：
- en: '[PRE12]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Calculate an accuracy score based on our 24 test images of Ronaldo and Messi
    by executing the following script:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下脚本，基于我们的24张罗纳尔多和梅西的测试图像计算准确度分数：
- en: '[PRE13]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: How it works...
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'The following section explains how we evaluate the model performance. Take
    a look at these images:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分解释了如何评估模型性能。请查看这些图像：
- en: 'We can convert our dataframe, predictDF, into a crosstab to create a confusion
    matrix. This allows us to understand how many true positives, false positives,
    true negatives, and false negatives are in our model, as seen in the following
    screenshot:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以将数据框`predictDF`转换为交叉表，创建混淆矩阵。这让我们能够理解模型中有多少真正例、假正例、真反例和假反例，如下图所示：
- en: '![](img/7945778a-5717-4a78-9356-1e26cb9a11ba.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7945778a-5717-4a78-9356-1e26cb9a11ba.png)'
- en: 'At this point, we are ready to calculate how well we did with our model in
    using the 36 training images to accurately classify the 24 remaining test images
    of Ronaldo and Messi. From the previous screenshot, it shows that we had 21 accurate
    classifications out of 24\. We had 2 images of Messi misclassified as Ronaldo
    and only one image of Ronaldo misclassified as Messi. This should come out to
    an accuracy score of 88%. We can see that the accuracy score from the MulticlassClassificationEvaluator
    also scores our accuracy at 87.5%, as seen in the following screenshot:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，我们准备好计算使用36张训练图像准确分类24张剩余的罗纳尔多和梅西测试图像的模型效果。从上一张截图来看，我们在24张测试图像中有21张正确分类。我们有2张梅西的图像被误分类为罗纳尔多，还有一张罗纳尔多的图像被误分类为梅西。这应该会得出88%的准确率。我们可以看到，来自`MulticlassClassificationEvaluator`的准确率得分也显示我们的准确率为87.5%，如下截图所示：
- en: '![](img/ea5e38f9-2d4d-4ec5-9170-cde3a73c09cd.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea5e38f9-2d4d-4ec5-9170-cde3a73c09cd.png)'
- en: There's more...
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多内容...
- en: 'While we did end up using accuracy as our benchmark indicator for how well
    our model performed, we could have just as easily used precision or recall. Additionally,
    we used the `MulticlassClassificationEvaluator` for evaluating the accuracy of
    the model. Since we are dealing with a binary outcome in this specific case for
    only two types of images for Ronaldo or Messi, we could have also just used a `BinaryClassificationEvaluator`
    as seen in the following screenshot:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们最终使用了准确率作为评估模型性能的基准指标，但我们也可以同样使用精度或召回率。此外，我们使用了`MulticlassClassificationEvaluator`来评估模型的准确性。由于在此特定情况下，我们处理的是二分类问题，只有罗纳尔多和梅西两种类型的图像，因此我们也可以使用`BinaryClassificationEvaluator`，如下图所示：
- en: '![](img/b99835c6-e22d-41bb-9bb2-53a0081e4b51.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b99835c6-e22d-41bb-9bb2-53a0081e4b51.png)'
- en: We still end up with the same accuracy rate of 87.5%.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终得到了相同的87.5%的准确率。
- en: See also
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: 'To learn more about `MulticlassClassificationEvaluator` from the logistic regression
    function in PySpark, visit the following website:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于PySpark逻辑回归函数中的`MulticlassClassificationEvaluator`，请访问以下网站：
- en: '[https://spark.apache.org/docs/2.2.0/ml-classification-regression.html](https://spark.apache.org/docs/2.2.0/ml-classification-regression.html)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://spark.apache.org/docs/2.2.0/ml-classification-regression.html](https://spark.apache.org/docs/2.2.0/ml-classification-regression.html)'
- en: Fine-tuning model parameters
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 微调模型参数
- en: There is always room for improvement in the accuracy of any model. In this section,
    we will talk about some of the parameters that can be tweaked to improve our model
    accuracy score of 87.5% obtained from the previous section.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 任何模型的准确率总是有提升空间。在本节中，我们将讨论一些可以调整的参数，以提高我们从上一节得到的87.5%的模型准确率。
- en: Getting ready
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: This section does not require any new prerequisites.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 本节不需要任何新的前提条件。
- en: How to do it...
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: This section walks through the steps to fine-tune the model.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了如何微调模型的步骤。
- en: 'Define a new logistic regression model with additional parameters for `regParam`
    and `elasticNetParam` as seen in the following script:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个新的逻辑回归模型，添加`regParam`和`elasticNetParam`参数，如下脚本所示：
- en: '[PRE14]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create a new pipeline configured for the newly created model using the following
    script:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本为新创建的模型配置一个新的管道：
- en: '[PRE15]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Fit the pipeline to the trained dataset, `trainDF`, using the following script:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本将管道拟合到训练数据集`trainDF`：
- en: '[PRE16]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Apply the model transformation to the test dataset, `testDF`, to be able to
    compare actual versus predicted scores using the following script:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用模型转换到测试数据集`testDF`，以便使用以下脚本比较实际与预测的得分：
- en: '[PRE17]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Finally, evaluate the new model accuracy rate, `binary_rate_FT`, using the
    following script:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用以下脚本评估新模型的准确率`binary_rate_FT`：
- en: '[PRE18]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: How it works...
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'This section explains how the model is fine-tuned:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了如何微调模型：
- en: The logistic regression model, `logregFT`, is fine-tuned using both the `regParam`
    and the `elasticNetParam` parameters. Both parameters correspond to the γ and
    the α parameters of a logistic regression model. The regularization parameter
    or `regParam` is used to find a balance between minimizing the loss function and
    minimizing overfitting the model. The more complex we make the model, the more
    likely it will overfit and not be generalized, but we will also likely get a lower
    training error. Additionally, the less complex we make the model, the less likely
    it will overfit, but the more likely it will have a higher training error.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 逻辑回归模型`logregFT`通过调整`regParam`和`elasticNetParam`参数进行微调。两个参数分别对应逻辑回归模型的 γ 和 α
    参数。正则化参数`regParam`用于在最小化损失函数和减少模型过拟合之间找到平衡。我们越是让模型复杂化，它就越容易过拟合而无法泛化，但也可能会得到较低的训练误差。此外，我们越简化模型，它过拟合的可能性就越小，但训练误差可能会更高。
- en: The elastic net parameter or `elasticNetParam` is another regularization technique
    that is used to combine multiple regularizers, L1 and L2, to minimize overfitting
    in a model. Additionally, we have decreased our iteration run from 20 to 15 to
    see if we can achieve a better accuracy score by including regularization and
    decreasing runs at the same time.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 弹性网络参数`elasticNetParam`是另一种正则化技术，用于结合多个正则化器（L1 和 L2），以减少模型的过拟合。此外，我们还将迭代次数从20次减少到15次，以查看通过同时包含正则化和减少迭代次数是否能够提高准确度。
- en: Once again, as we did previously in this chapter, we create a pipeline that
    incorporates our numerical features generated from our images, `vectorizer`, as
    well our logistic regression model, `logregFT`.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如同本章前面所做的，我们创建了一个流水线，融合了从图像生成的数值特征、`vectorizer`，以及我们的逻辑回归模型`logregFT`。
- en: The model is then fit on the training data, `trainDF`, and the transformation
    of the model is applied to the testing data, `testDF`.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，模型在训练数据`trainDF`上进行拟合，并将模型的转换应用到测试数据`testDF`上。
- en: 'We can once again compare our actual versus predicted results from the outcome
    of the model in a crosstab as seen in the following screenshot:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以再次通过交叉表对比模型的实际结果和预测结果，如下图所示：
- en: '![](img/f1062a3c-9ecb-431b-97e0-ff98a224df6d.png)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f1062a3c-9ecb-431b-97e0-ff98a224df6d.png)'
- en: We have now only 1 miss-classified image compared to 3 from the previous section.
    We accomplished this by lowering our maxIter to `15` runs and setting `regParam`
    to `0.05` and the `elasticNetParam` to `0.3`.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们只有1张被错误分类的图像，而上一节中有3张。我们通过将`maxIter`降低到`15`轮次，并将`regParam`设置为`0.05`，`elasticNetParam`设置为`0.3`来实现这一点。
- en: 'Our new accuracy rate is now at `95.83%` as seen in the following screenshot:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的新准确率已经达到了`95.83%`，如下图所示：
- en: '![](img/d34f16a0-ce02-43f6-9881-762972d5cbf3.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d34f16a0-ce02-43f6-9881-762972d5cbf3.png)'
- en: There's more...
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多…
- en: Certainly, we have improved our rate from 87.5% from 95.83% simply by incorporating
    specific parameters into our model. Additional fine-tuning and tweaking of our
    parameters could take place to determine if an accuracy of 100% could be reached
    for our image classification model.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们的准确率从87.5%提升到了95.83%，仅仅通过将特定参数融入我们的模型。进一步的微调和调整参数可能会帮助我们确定是否能够达到100%的准确率，用于图像分类模型。
- en: See also
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: 'To learn more about the regularization and elastic net parameters within a
    logistic regression, visit the following website:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于逻辑回归中的正则化和弹性网络参数，请访问以下网站：
- en: '[https://spark.apache.org/docs/2.2.0/mllib-linear-methods.html#logistic-regression](https://spark.apache.org/docs/2.2.0/mllib-linear-methods.html#logistic-regression)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://spark.apache.org/docs/2.2.0/mllib-linear-methods.html#logistic-regression](https://spark.apache.org/docs/2.2.0/mllib-linear-methods.html#logistic-regression)'
