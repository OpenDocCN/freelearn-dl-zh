- en: '*Chapter 8*: Extended fastai and Deployment Features'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 8 章*：扩展的 fastai 和部署功能'
- en: So far in this book, you have learned how to ingest and explore datasets using
    fastai, how to train fastai models with tabular, text, and image datasets, and
    how to deploy fastai models. Throughout the book so far, the emphasis has been
    on covering as much of the functionality of fastai as possible using the highest-level
    fastai API. In particular, we have emphasized using `dataloaders` objects as the
    basis for defining the datasets used to train the model. Up to this point in the
    book, we have taken the *happy path* whenever possible. To demonstrate how to
    accomplish tasks using fastai, we have chosen the most straightforward way possible.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在本书中，你已经学习了如何使用 fastai 获取和探索数据集，如何使用表格数据、文本数据和图像数据集训练 fastai 模型，以及如何部署
    fastai 模型。到目前为止，本书的重点一直是在尽可能多地展示 fastai 的功能，且主要使用 fastai 高级 API。特别是，我们强调了使用 `dataloaders`
    对象作为定义用于训练模型的数据集的基础。在本书的这一部分，我们尽可能地遵循了*理想路径*。为了演示如何使用 fastai 完成任务，我们选择了最直接的方式。
- en: In this chapter, we are going to take some steps off the *happy path* to explore
    additional features of fastai. You will learn how to track what is happening with
    your model more closely, how to control the training process, and generally how
    to take advantage of more of the capabilities that fastai has to offer. We are
    also going to cover some more advanced topics related to model deployment.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将从*理想路径*中走出一些步骤，探索 fastai 的额外功能。你将学习如何更密切地追踪模型的变化，如何控制训练过程，并且如何充分利用 fastai
    提供的更多功能。我们还将介绍一些与模型部署相关的高级主题。
- en: 'Here are the recipes that will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本章将覆盖的食谱：
- en: Getting more details about models trained with tabular data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取更多关于使用表格数据训练的模型的详细信息
- en: Getting more details about image classification models
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取更多关于图像分类模型的详细信息
- en: Training a model with augmented data
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用增强数据训练模型
- en: Using callbacks to get the most out of your training cycle
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用回调函数充分利用训练周期
- en: Making your model deployments available to others
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使你的模型部署对他人可用
- en: Displaying thumbnails in your image classification model deployment
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在图像分类模型部署中显示缩略图
- en: Test your knowledge
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试你的知识
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'In this chapter, you will be using both your cloud environment and your local
    environment for model deployment:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将同时使用云环境和本地环境来进行模型部署：
- en: Ensure that you have completed the setup sections from [*Chapter 1*](B16216_01_Final_VK_ePub.xhtml#_idTextAnchor019),
    *Getting Started with fastai*, and have a working Gradient instance or Colab setup.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你已完成[*第 1 章*](B16216_01_Final_VK_ePub.xhtml#_idTextAnchor019)《快速入门 fastai》中的设置部分，并且拥有一个可用的
    Gradient 实例或 Colab 设置。
- en: Ensure that you have completed the steps described in the *Setting up fastai
    on your local system* recipe in [*Chapter 7*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*,
    Deployment and Model Maintenance*, to set up fastai on your local system.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你已完成[*第 7 章*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)《部署与模型维护》中的*在本地系统上设置
    fastai*的步骤，以便在本地系统上设置 fastai。
- en: Ensure that you have cloned the repo for the book from [https://github.com/PacktPublishing/Deep-Learning-with-fastai-Cookbook](https://github.com/PacktPublishing/Deep-Learning-with-fastai-Cookbook)
    and have access to the `ch8` folder. This folder contains the code samples described
    in this chapter.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你已从 [https://github.com/PacktPublishing/Deep-Learning-with-fastai-Cookbook](https://github.com/PacktPublishing/Deep-Learning-with-fastai-Cookbook)
    克隆了本书的代码仓库，并且能够访问 `ch8` 文件夹。这个文件夹包含了本章中描述的代码示例。
- en: Getting more details about models trained with tabular data
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取更多关于使用表格数据训练的模型的详细信息
- en: 'In the *Training a model in fastai with a curated tabular dataset* recipe of
    [*Chapter 3*](B16216_03_Final_VK_ePub.xhtml#_idTextAnchor083)*, Training Models
    with Tabular Data*, you trained a fastai model on a tabular dataset and used accuracy
    as the metric. In this recipe, you will learn how to get additional metrics for
    this model: **precision** and **recall**. Precision is the ratio of true positives
    divided by true positives plus false positives. Recall is the ratio of true positives
    divided by true positives plus false negatives.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第 3 章*](B16216_03_Final_VK_ePub.xhtml#_idTextAnchor083)《使用表格数据训练模型》中的*使用
    fastai 训练模型并使用精度作为度量指标*的食谱中，你使用表格数据集训练了一个 fastai 模型，并使用了准确度作为评估指标。在本食谱中，你将学习如何为这个模型获取额外的指标：**精确度**和**召回率**。精确度是指真正例除以真正例加上假正例的比例。召回率是指真正例除以真正例加上假负例的比例。
- en: These are useful metrics. For example, the model we are training in this recipe
    is predicting whether an individual's income is over 50,000\. If it is critical
    to avoid false positives – that is, predicting an income over 50,000 when the
    individual has an income less than that – then we want precision to be as high
    as possible. This recipe will show you how to add these useful metrics to the
    training process for a fastai model.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是有用的指标。例如，在本示例中，我们正在训练的模型预测个人收入是否超过50,000美元。如果要尽量避免假阳性 – 即在个人收入低于50,000美元时预测其收入超过该金额
    – 那么我们希望精确率尽可能高。本示例将向您展示如何将这些有用的指标添加到fastai模型的训练过程中。
- en: Getting ready
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Confirm that you can open the `training_with_tabular_datasets_metrics.ipynb`
    notebook in the `ch8` directory of your repo.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 确认您可以在您的repo的`ch8`目录中打开`training_with_tabular_datasets_metrics.ipynb`笔记本。
- en: How to do it…
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'In this recipe, you will be running through the `training_with_tabular_datasets_metrics.ipynb`
    notebook. Once you have the notebook open in your fastai environment, complete
    the following steps:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，您将运行`training_with_tabular_datasets_metrics.ipynb`笔记本。一旦您在您的fastai环境中打开笔记本，请完成以下步骤：
- en: Run the cells in the notebook up to the `Define and train model` cell to import
    the required libraries, set up your notebook, and prepare the dataset.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行笔记本中的单元格，直到`Define and train model`单元格以导入所需的库、设置您的笔记本和准备数据集。
- en: 'Run the following cell to define and train the model:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以定义和训练模型：
- en: '[PRE0]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here are the key items in this cell:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本单元格中的关键项如下：
- en: a) `recall_instance = Recall()` – defines a recall metric object. Note that
    you will get an error if you put `Recall` directly in the metrics list for the
    model. Instead, you need to define a recall metric object, such as `recall_instance`,
    and include that object in the metrics list. See the fastai documentation ([https://docs.fast.ai/metrics.html#Recall](https://docs.fast.ai/metrics.html#Recall))
    for more details on this metric.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `recall_instance = Recall()` – 定义一个召回率度量对象。请注意，如果您直接将`Recall`放入模型的指标列表中，将会出现错误。相反，您需要定义一个召回率度量对象，例如`recall_instance`，然后将该对象包含在指标列表中。有关此度量标准的更多详细信息，请参阅fastai文档（[https://docs.fast.ai/metrics.html#Recall](https://docs.fast.ai/metrics.html#Recall)）。
- en: b) `precision_instance = Precision()` – defines a precision metric object. You
    will get an error if you put `Precision` directly in the metrics list, so you
    need to define the `precision_instance` object first and then include that object
    in the metrics list for the model.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `precision_instance = Precision()` – 定义一个精确率度量对象。如果您直接将`Precision`放入指标列表中，将会出现错误，因此您需要首先定义`precision_instance`对象，然后将该对象包含在模型的指标列表中。
- en: c) `metrics=[accuracy,recall_instance,precision_instance]` – specifies that
    the model will be trained with accuracy, recall, and precision as metrics.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) `metrics=[accuracy,recall_instance,precision_instance]` – 指定模型将以准确率、召回率和精确率作为指标进行训练。
- en: 'The output of this cell, as shown in *Figure 8.1*, includes accuracy as well
    as recall and precision for each epoch of the training run:'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元格的输出，如*图8.1*所示，包括每个训练运行时的准确率以及召回率和精确率：
- en: '![Figure 8.1 – Training output including recall and precision'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 8.1 – 训练输出包括召回率和精确率'
- en: '](img/B16216_8_01.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_01.jpg)'
- en: Figure 8.1 – Training output including recall and precision
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.1 – 训练输出包括召回率和精确率
- en: Congratulations! You have trained a model with tabular data and generated recall
    and precision metrics for the training process.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已经用表格数据训练了一个模型，并生成了召回率和精确率指标以用于训练过程。
- en: How it works…
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'You may have asked yourself how I knew that you could not include `Recall`
    and `Precision` directly in the metrics list for the model and that you needed
    to define objects first and then include those objects in the metrics list. The
    simple answer is that it was trial and error. More specifically, when I attempted
    to include `Recall` and `Precision` directly in the metrics list, I got the following
    error:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会问自己，我是如何知道您不能直接将`Recall`和`Precision`放入模型的指标列表中，并且需要先定义对象，然后将这些对象包含在指标列表中的。简单的答案是通过试错。具体来说，当我尝试直接将`Recall`和`Precision`放入模型的指标列表时，我遇到了以下错误：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'When I searched for this error, I came across this post in the fastai forum:
    [https://forums.fast.ai/t/problem-with-f1scoremulti-metric/63721](https://forums.fast.ai/t/problem-with-f1scoremulti-metric/63721).
    The post explained the reason for the error and that to get around it I needed
    to define the `Recall` and `Precision` objects first and then include them in
    the metrics list.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当我搜索这个错误时，我在fastai论坛上找到了这篇帖子：[https://forums.fast.ai/t/problem-with-f1scoremulti-metric/63721](https://forums.fast.ai/t/problem-with-f1scoremulti-metric/63721)。帖子解释了错误的原因，并指出为了解决这个问题，我需要先定义`Recall`和`Precision`对象，然后再将它们包含在metrics列表中。
- en: This experience is an example of both a weakness and a strength of fastai. The
    weakness is that the documentation for `Precision` and `Recall` is missing an
    essential detail – you cannot use them directly in the metrics list. The strength
    is that the fastai forum provides clear and accurate resolutions for issues like
    this and demonstrates the strength of the fastai community.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这个经验既展示了fastai的一个弱点，也展示了它的一个优点。弱点是`Precision`和`Recall`的文档缺少一个重要的细节——你不能直接将它们用于metrics列表。优点是fastai论坛提供了清晰准确的解决方案，解决了像这样的疑难问题，体现了fastai社区的力量。
- en: Getting more details about image classification models
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取有关图像分类模型的更多细节
- en: 'In the *Training a classification model with a simple curated vision dataset*
    recipe of [*Chapter 6*](B16216_06_Final_VK_ePub.xhtml#_idTextAnchor152)*, Training
    Models with Visual Data*, you trained an image classification model using the
    `CIFAR` curated dataset. The code to train and exercise the model was straightforward
    because we took advantage of the highest-level structures in fastai. In this recipe,
    we will revisit this image classification model and explore techniques in fastai
    to get additional information about the model and its performance, including the
    following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第6章*](B16216_06_Final_VK_ePub.xhtml#_idTextAnchor152)的*使用简单整理视觉数据集训练分类模型*食谱中，你使用`CIFAR`整理数据集训练了一个图像分类模型。训练和训练模型的代码很简单，因为我们利用了fastai中的高级结构。在本食谱中，我们将重新审视这个图像分类模型，并探索fastai中的技术，以获取关于模型及其表现的更多信息，包括以下内容：
- en: Examining the **pipeline** that fastai generates to prepare the data
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查fastai生成的数据预处理**流水线**
- en: Getting a chart of the training and validation loss during the training process
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取训练过程中的训练和验证损失图表
- en: Displaying the images where the model performs worst
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示模型表现最差的图像
- en: Displaying the **confusion matrix** to get a snapshot of where the model is
    not doing well
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示**混淆矩阵**以获取模型表现不佳的情况快照
- en: Applying the model to the test set and examining the model's performance on
    the test set
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将模型应用于测试集，并检查模型在测试集上的表现
- en: In this recipe, we are going to expand the recipe where we trained the `CIFAR`
    curated dataset. By taking advantage of the additional features of fastai, we
    will be able to understand our model better.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将扩展之前训练`CIFAR`整理数据集的食谱。通过利用fastai的附加功能，我们将能够更好地理解我们的模型。
- en: Getting ready
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: Confirm that you can open the `training_with_image_datasets_datablock.ipynb`
    notebook in the `ch8` directory of your repo.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 确认你可以在仓库的`ch8`目录中打开`training_with_image_datasets_datablock.ipynb`笔记本。
- en: How to do it…
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'In this section, you will be running through the `training_with_image_datasets_datablock.ipynb`
    notebook. Once you have the notebook open in your fastai environment, complete
    the following steps:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将运行`training_with_image_datasets_datablock.ipynb`笔记本。一旦你在fastai环境中打开了该笔记本，请完成以下步骤：
- en: 'Update the following cell to ensure that `model_path` points to a writeable
    directory in your Gradient or Colab instance:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新以下单元格，以确保`model_path`指向你在Gradient或Colab实例中的可写目录：
- en: '[PRE2]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Run the cells in the notebook up to the `Define a DataBlock` cell to import
    the required libraries, set up your notebook, and ingest the `CIFAR` dataset.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行笔记本中的单元格，直到`定义DataBlock`单元格，以导入所需的库，设置你的笔记本，并加载`CIFAR`数据集。
- en: 'Run the following cell to define a `DataBlock` object. By defining a `DataBlock`
    object explicitly, we will be able to do additional actions that we couldn''t
    do directly on a `dataloaders` object, such as getting a summary of the pipeline:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以定义一个`DataBlock`对象。通过显式地定义一个`DataBlock`对象，我们将能够执行一些我们无法在`dataloaders`对象上直接执行的额外操作，比如获取流水线的摘要：
- en: '[PRE3]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here are the key items in this cell:'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是此单元格中的关键内容：
- en: a) `blocks = (ImageBlock, CategoryBlock)` – specifies that the input to the
    model is images (`ImageBlock`) and the target is a categorization of the input
    images (`CategoryBlock`).
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `blocks = (ImageBlock, CategoryBlock)` – 指定模型的输入为图像（`ImageBlock`），目标为对输入图像的分类（`CategoryBlock`）。
- en: b) `get_items=get_image_files` – specifies that the `get_image_files` function
    is called to get the input to the `DataBlock` object.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `get_items=get_image_files` – 指定调用`get_image_files`函数来获取`DataBlock`对象的输入。
- en: c) `splitter=RandomSplitter(seed=42)` – specifies how the validation set is
    defined from the training set. By default, 20% of the training set is randomly
    selected to make up the validation set. By specifying a value for `seed`, this
    call to `RandomSplitter` produces consistent results across multiple runs. See
    the documentation for `RandomSplitter` ([https://docs.fast.ai/data.transforms.html#RandomSplitter](https://docs.fast.ai/data.transforms.html#RandomSplitter))
    for more details.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) `splitter=RandomSplitter(seed=42)` – 指定如何从训练集中定义验证集。默认情况下，20%的训练集被随机选择构成验证集。通过为`seed`指定值，此调用`RandomSplitter`将在多次运行中产生一致的结果。有关`RandomSplitter`的更多细节，请参阅文档（[https://docs.fast.ai/data.transforms.html#RandomSplitter](https://docs.fast.ai/data.transforms.html#RandomSplitter)）。
- en: d) `get_y=parent_label` – specifies that the labels for the images (that is,
    the categories to which the images belong) are defined by the directories where
    the images are located in the input dataset. For example, on Gradient, cat images
    in the training set are found in the `/storage/data/cifar10/train/cat` directory.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) `get_y=parent_label` – 指定图像的标签（即图像所属的类别）由图像所在目录在输入数据集中的位置定义。例如，在Gradient上，训练集中的猫图像位于`/storage/data/cifar10/train/cat`目录下。
- en: 'Run the following cell to define a `dataloaders` object using the `DataBlock`
    object `db` that you created in the previous cell:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码单元，使用在前一个代码单元中创建的`DataBlock`对象`db`来定义一个`dataloaders`对象：
- en: '[PRE4]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here are the key items in this cell:'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是此代码单元中的关键项：
- en: a) `db.dataloaders` – specifies that the `dataloaders` object is created using
    the `DataBlock` object `db`
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `db.dataloaders` – 指定使用`DataBlock`对象`db`来创建`dataloaders`对象
- en: b) `path/'train'` – specifies that the input to this model is only the training
    subset of the `CIFAR` dataset.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `path/'train'` – 指定此模型的输入仅为`CIFAR`数据集的训练子集。
- en: 'Run the following cell to get a summary of the pipeline:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码单元来获取管道的概述：
- en: '[PRE5]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Let''s look at the key parts of the output of this cell. First, the output
    shows details about the input dataset, including the source directory, the size
    of the whole dataset, and the size of the training and validation sets, as shown
    in the following screenshot:'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让我们看一下此代码单元输出的关键部分。首先，输出展示了有关输入数据集的详细信息，包括源目录、整个数据集的大小以及训练集和验证集的大小，如下图所示：
- en: '![](img/B16216_8_02.jpg)'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/B16216_8_02.jpg)'
- en: Figure 8.2 – Summary description of the input dataset
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图8.2 – 输入数据集的概述
- en: 'Next, the output shows the pipeline that fastai applies to a single input sample,
    including the source directory of the sample, the image object that is created
    for the sample, and the label (category) for the sample, as shown in *Figure 8.3*:'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，输出展示了fastai应用于单个输入样本的管道，包括样本的源目录、为该样本创建的图像对象以及样本的标签（类别），如*图8.3*所示：
- en: '![Figure 8.3 – Summary description of the pipeline for one image file'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图8.3 – 单个图像文件的管道概述'
- en: '](img/B16216_8_03.jpg)'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_03.jpg)'
- en: Figure 8.3 – Summary description of the pipeline for one image file
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图8.3 – 单个图像文件的管道概述
- en: 'Next, the output shows the pipeline that fastai applies to build a single batch,
    that is, converting the image objects that are output from the sample pipeline
    into tensors. As shown in *Figure 8.4*, the 32 x 32-pixel image objects are converted
    to 3 x 32 x 32 tensors, where the first dimension contains color information about
    the image:'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，输出展示了fastai应用于构建单个批次的管道，即将从样本管道中输出的图像对象转换为张量。如*图8.4*所示，32 x 32像素的图像对象被转换为3
    x 32 x 32的张量，其中第一维包含图像的颜色信息：
- en: '![Figure 8.4 – Summary description of the pipeline applied to a single batch'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图8.4 – 应用于单个批次的管道的概述'
- en: '](img/B16216_8_04.jpg)'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_04.jpg)'
- en: Figure 8.4 – Summary description of the pipeline applied to a single batch
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图8.4 – 应用于单个批次的管道的概述
- en: 'Finally, the output shows the transformations applied to the batches as a whole,
    as shown in *Figure 8.5*:'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，输出展示了应用于整个批次的变换，如*图8.5*所示：
- en: '![Figure 8.5 – Summary description of the pipeline applied to all batches'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.5 – 应用于所有批次的流水线总结描述'
- en: '](img/B16216_8_05.jpg)'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_05.jpg)'
- en: Figure 8.5 – Summary description of the pipeline applied to all batches
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.5 – 应用于所有批次的流水线总结描述
- en: 'Run the following cell to define a `DataBlock` object for the test set:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以为测试集定义一个 `DataBlock` 对象：
- en: '[PRE6]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note that unlike the `DataBlock` object for the training set, we define `db_test`
    with an explicit value for `valid_pct`. We set this value to 99% because we won't
    be doing any training of the model when we apply the test set to it, so there
    is no need to hold back any of the test set for training. We don't set `valid_pct`
    to `1.0` because that value will produce an error when you apply a summary to
    `db_test`.
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，与训练集的 `DataBlock` 对象不同，我们为 `db_test` 定义了一个明确的 `valid_pct` 值。我们将此值设置为 99%，因为在将测试集应用于模型时我们不会进行任何训练，因此无需将测试集的一部分用于训练。我们没有将
    `valid_pct` 设置为 `1.0`，因为这个值会在你对 `db_test` 应用汇总时产生错误。
- en: Run the cells in the notebook up to the `Define and train the model` cell to
    examine the dataset.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行笔记本中的单元格直到 `定义并训练模型` 单元格以检查数据集。
- en: 'Run the following cell to define the model with a `cnn_learner` object. Note
    that because you defined a `dataloaders` object from the `DataBlock` object you
    get the best of both worlds: the additional features (such as a summary) available
    only with a `DataBlock` object along with the familiar code pattern for `dataloaders`
    objects that you have used for most of the recipes in this book:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以使用 `cnn_learner` 对象定义模型。请注意，由于你从 `DataBlock` 对象定义了一个 `dataloaders` 对象，你将获得两全其美的效果：既有
    `DataBlock` 对象特有的附加功能（例如汇总），又有你在本书中大多数食谱中使用的 `dataloaders` 对象的熟悉代码模式：
- en: '[PRE7]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Run the following cell to train the model:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以训练模型：
- en: '[PRE8]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Note the `cbs=ShowGraphCallback()` parameter. With this parameter, the output
    of the training process includes a graph of training and validation loss, as shown
    in *Figure 8.6*:'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意 `cbs=ShowGraphCallback()` 参数。使用该参数，训练过程的输出包括训练和验证损失的图形，如 *图 8.6* 所示：
- en: '![Figure 8.6 – Training and validation loss graph'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.6 – 训练和验证损失图'
- en: '](img/B16216_8_06.jpg)'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_06.jpg)'
- en: Figure 8.6 – Training and validation loss graph
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.6 – 训练和验证损失图
- en: 'This graph contains the same data as the table of training results that you
    get by default from the training process, as shown in *Figure 8.7*:'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该图表包含与从训练过程中默认获得的训练结果表相同的数据，如 *图 8.7* 所示：
- en: '![Figure 8.7 – Training and validation loss table'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.7 – 训练和验证损失表'
- en: '](img/B16216_8_07.jpg)'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_07.jpg)'
- en: Figure 8.7 – Training and validation loss table
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.7 – 训练和验证损失表
- en: 'Run the following cell to save the trained model. We update the path for the
    model temporarily to a directory that is writeable in Gradient so that we can
    save the model:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以保存训练好的模型。我们暂时将模型的路径更新为一个在 Gradient 中可写的目录，以便我们能够保存模型：
- en: '[PRE9]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here are the key items in this cell:'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个单元格中的关键项如下：
- en: a) `save_path = learn.path` – specifies that the current path for the model
    is saved to `save_path`.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `save_path = learn.path` – 指定将当前模型路径保存到 `save_path`。
- en: b) `learn.path = Path(model_path)` – specifies that the path for the model is
    set to a writeable directory.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `learn.path = Path(model_path)` – 指定将模型路径设置为可写目录。
- en: c) `learn.save('cifar_save_'+modifier)` – saves the model. We will load the
    saved model later to exercise the model with the test set.
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) `learn.save('cifar_save_'+modifier)` – 保存模型。稍后我们将加载保存的模型，并使用测试集对其进行验证。
- en: d) `learn.path = save_path` – resets the path for the model to its original
    value.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) `learn.path = save_path` – 将模型的路径重置为其原始值。
- en: 'Run the following cell to confirm the performance of the trained model in terms
    of accuracy:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以确认训练模型的准确性表现：
- en: '[PRE10]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The second value in the output should match the accuracy you saw in the final
    epoch of the training, as shown in *Figure 8.8*:'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出中的第二个值应与在训练的最后一个时期看到的准确度相匹配，如 *图 8.8* 所示：
- en: '![Figure 8.8 – Output of validate'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.8 – 验证输出'
- en: '](img/B16216_8_08.jpg)'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_08.jpg)'
- en: Figure 8.8 – Output of validate
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.8 – 验证输出
- en: Run the cells up to the `Examine the top loss examples and confusion matrix`
    cell.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行单元格直到 `检查顶级损失示例和混淆矩阵` 单元格。
- en: 'Run the following cell to see the samples where the model has the biggest loss:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以查看模型损失最大的样本：
- en: '[PRE11]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Here are the key items in this cell:'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个单元格中的关键项如下：
- en: a) `interp = ClassificationInterpretation.from_learner(learn)` – specifies that
    `interp` is an interpretation object for the `learn` model
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `interp = ClassificationInterpretation.from_learner(learn)` – 指定`interp`是`learn`模型的解释对象
- en: b) `interp.plot_top_losses(9, figsize=(15,11))` – specifies that the nine images
    with the highest losses should be displayed
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `interp.plot_top_losses(9, figsize=(15,11))` – 指定显示损失最大的九张图片
- en: 'The output shows examples of the images where the model has the biggest loss
    along with the predicted contents of the image and the actual contents of the
    image. You can think of these as the images where the model did the worst job
    predicting what''s in the images. *Figure 8.9* shows a subset of the output. For
    example, for the first displayed image, the model predicted the image contained
    a bird while the image is actually labeled as a cat:'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出显示了模型在预测时损失最大的图像示例，以及图像的预测内容和实际内容。你可以将这些图像视为模型预测最差的图像。*图 8.9*展示了输出的一个子集。例如，对于显示的第一张图像，模型预测图像包含一只鸟，而图像实际上标记为猫：
- en: '![Figure 8.9 – Examples of images with the most loss'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.9 – 最大损失的图像示例'
- en: '](img/B16216_8_09.jpg)'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_09.jpg)'
- en: Figure 8.9 – Examples of images with the most loss
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.9 – 最大损失的图像示例
- en: 'Run the following cell to generate a confusion matrix for the trained model:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以生成训练模型的混淆矩阵：
- en: '[PRE12]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output of this cell is a confusion matrix that summarizes the performance
    of the trained model, as shown in *Figure 8.10*. A confusion matrix is an *N*
    x *N* matrix, where *N* is the number of target classes. It compares the actual
    target class values (the vertical axis) with the predicted values (the horizontal
    axis). The diagonal of the matrix shows the cases where the model made the correct
    prediction, while all the entries off the diagonal are cases where the model made
    an incorrect prediction. For example, in the confusion matrix shown in *Figure
    8.10*, in 138 instances the model predicted that an image of a dog was a cat,
    and in 166 instances it predicted that an image of a cat was a dog:'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元格的输出是一个混淆矩阵，用于总结训练模型的性能，如*图 8.10*所示。混淆矩阵是一个*N* x *N*的矩阵，其中*N*是目标类别的数量。它将实际的目标类别值（纵轴）与预测值（横轴）进行比较。矩阵的对角线显示了模型做出正确预测的情况，而对角线之外的所有条目则是模型做出错误预测的情况。例如，在*图
    8.10*所示的混淆矩阵中，在138个实例中，模型将一张狗的图片预测为猫，而在166个实例中，它将一张猫的图片预测为狗：
- en: '![Figure 8.10 – Confusion matrix for the trained model'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.10 – 训练模型的混淆矩阵'
- en: '](img/B16216_8_010.jpg)'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_010.jpg)'
- en: Figure 8.10 – Confusion matrix for the trained model
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.10 – 训练模型的混淆矩阵
- en: 'Now that you have examined the performance of the model with the training set,
    let''s examine how the model does with the test set. To do this, we will define
    a new `dataloaders` object using the test set, define a model with this `dataloaders`
    object, load the saved weights from the trained model, and then do the same steps
    to evaluate the model performance that we did with the model trained on the training
    set. To begin, run the following cell to create a new `dataloaders` object `dls_test`
    that is defined with the test dataset:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你已经检查了模型在训练集上的表现，接下来让我们检查模型在测试集上的表现。为此，我们将使用测试集定义一个新的`dataloaders`对象，定义一个基于该`dataloaders`对象的模型，加载训练模型的保存权重，然后执行与训练集上训练的模型相同的步骤来评估模型性能。首先，运行以下单元格以创建一个新的`dataloaders`对象`dls_test`，该对象是使用测试数据集定义的：
- en: '[PRE13]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Run the following cell to define a new model object, `learn_test`, that is
    based on the `dataloaders` object you created in the previous step. Note that
    the model definition is identical to the model you defined for the training set
    in *Step 8* except that it uses the `dataloaders` object `dls_test` that was defined
    with the test dataset in the previous step:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以定义一个新的模型对象`learn_test`，该对象基于你在前一步创建的`dataloaders`对象。注意，模型定义与在*步骤 8*中为训练集定义的模型完全相同，只是它使用了在前一步中用测试数据集定义的`dataloaders`对象`dls_test`：
- en: '[PRE14]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Run the following cell to load the saved weights from the model trained with
    the training set:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以加载使用训练集训练的模型的保存权重：
- en: '[PRE15]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Here are the key items in this cell:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是该单元格中的关键项：
- en: a) `learn_test.path = Path(model_path)` – specifies that the path for the `learn_test`
    model is changed to the directory where the model weights were saved in *Step
    10*
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `learn_test.path = Path(model_path)` – 指定`learn_test`模型的路径更改为保存模型权重的目录，该目录在*步骤
    10*中定义
- en: b) `learn_test.load('cifar_save_'+modifier')` – specifies that the `learn_test`
    model gets loaded with the weights from the model trained with the training set
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `learn_test.load('cifar_save_'+modifier')` – 指定`learn_test`模型加载来自使用训练集训练的模型的权重
- en: Now we are all set to exercise the model with the test set.
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们准备好使用测试集来测试模型了。
- en: 'Run the following cell to see the overall accuracy of the model on the test
    set:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以查看模型在测试集上的总体准确度：
- en: '[PRE16]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The second value in the output is the accuracy of the model on the test set,
    as shown in *Figure 8.11*:'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出中的第二个值是模型在测试集上的准确度，如*图 8.11*所示：
- en: '![Figure 8.11 – Output of validate on the test set'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.11 – 在测试集上验证的输出'
- en: '](img/B16216_8_011.jpg)'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_011.jpg)'
- en: Figure 8.11 – Output of validate on the test set
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.11 – 在测试集上验证的输出
- en: 'Run the following cell to see the images in the test set where the model has
    the biggest loss:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以查看测试集中模型损失最大的一些图像：
- en: '[PRE17]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The output shows examples of the images in the test set where there was the
    biggest loss along with the predicted contents of the image and the actual contents
    of the image in the test set. *Figure 8.12* shows a subset of the output:'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出显示了测试集中损失最大的一些图像示例，以及图像的预测内容和实际内容。*图 8.12*显示了输出的一部分：
- en: '![Figure 8.12 – Sample images from the test set where the model performed worst'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.12 – 测试集中模型表现最差的样本图像'
- en: '](img/B16216_8_012.jpg)'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_012.jpg)'
- en: Figure 8.12 – Sample images from the test set where the model performed worst
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.12 – 测试集中模型表现最差的样本图像
- en: 'Run the following cell to get the confusion matrix for the model applied to
    the test set:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以获取应用于测试集的模型的混淆矩阵：
- en: '[PRE18]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The output of this cell is a confusion matrix that summarizes the performance
    of the model on the test set, as shown in *Figure 8.13*. Note that the numbers
    in this confusion matrix are smaller than the numbers in the confusion matrix
    for the model applied to the training set:'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元格的输出是一个混淆矩阵，汇总了模型在测试集上的表现，如*图 8.13*所示。请注意，这个混淆矩阵中的数字比应用于训练集的模型的混淆矩阵中的数字要小：
- en: '![Figure 8.13 – Confusion matrix for the model applied to the test set'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.13 – 应用在测试集上的模型的混淆矩阵'
- en: '](img/B16216_8_013.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_013.jpg)'
- en: Figure 8.13 – Confusion matrix for the model applied to the test set
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.13 – 应用在测试集上的模型的混淆矩阵
- en: Congratulations! You have worked through an image classification model to see
    the benefit of additional information that fastai can provide. You have also learned
    how to apply the model to the entire test set and examine the model's performance
    on the test set.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经完成了图像分类模型的工作，见证了fastai所提供的附加信息的好处。你还学会了如何将模型应用于整个测试集，并检查模型在测试集上的表现。
- en: How it works…
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: It's instructive to compare the model we created in the recipe in this section
    with the model we created in the *Training a classification model with a simple
    curated vision dataset* recipe of [*Chapter 6*](B16216_06_Final_VK_ePub.xhtml#_idTextAnchor152)*,
    Training Models with Visual Data*.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 将本节中创建的模型与[*第6章*](B16216_06_Final_VK_ePub.xhtml#_idTextAnchor152)*，使用视觉数据训练模型*配方中创建的模型进行比较是很有启发性的。
- en: 'Here is the definition of the `dataloaders` object from the [*Chapter 6*](B16216_06_Final_VK_ePub.xhtml#_idTextAnchor152)*,
    Training Models with Visual Data*, recipe:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是来自[*第6章*](B16216_06_Final_VK_ePub.xhtml#_idTextAnchor152)*，使用视觉数据训练模型*配方中的`dataloaders`对象的定义：
- en: '[PRE19]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'And here is the definition of the `dataloaders` object from this recipe. Unlike
    the previous `dataloaders` definition, this definition makes use of the `DataBlock`
    object `db`:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是这个配方中`dataloaders`对象的定义。与之前的`dataloaders`定义不同，这个定义使用了`DataBlock`对象`db`：
- en: '[PRE20]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here is the definition of the `DataBlock` object `db`:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是`DataBlock`对象`db`的定义：
- en: '[PRE21]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: What is the benefit of defining the `dataloaders` object using the `DataBlock`
    object?
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`DataBlock`对象定义`dataloaders`对象有什么好处？
- en: First, by starting with a `DataBlock` object, you have more control over the
    details of how the dataset is set up. You can explicitly define the function that
    defines the input dataset (the function assigned to `get_items`) as well as the
    function that defines the label (the function assigned to `get_y`). You may recall
    that we took advantage of this flexibility in the *Training a multi-image classification
    model with a curated vision dataset* recipe of [*Chapter 6*](B16216_06_Final_VK_ePub.xhtml#_idTextAnchor152)*,
    Training Models with Visual Data*. In that recipe, we needed to ensure that the
    input dataset excluded images that had no annotation. By using a `DataBlock` object
    in that recipe, we were able to define a custom function to assign to `get_items`
    that excluded images with no annotation.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，从`DataBlock`对象开始，你可以更好地控制数据集的详细设置。你可以显式定义用于定义输入数据集的函数（赋值给`get_items`的函数），以及用于定义标签的函数（赋值给`get_y`的函数）。你可能还记得，在[*第6章*](B16216_06_Final_VK_ePub.xhtml#_idTextAnchor152)《使用视觉数据训练模型》的*使用多图像分类模型与精心策划的视觉数据集训练*示例中，我们利用了这种灵活性。在那个例子中，我们需要确保输入数据集排除没有注释的图像。通过在那个例子中使用`DataBlock`对象，我们能够定义一个自定义函数并赋值给`get_items`，从而排除了没有注释的图像。
- en: Second, we can take advantage of some additional functions in fastai if we have
    a `DataBlock` object. In this recipe, we were able to apply the `summary()` function
    to the `DataBlock` object to see the pipeline that fastai applied to the input
    dataset. The `summary()` function cannot be applied to a `dataloaders` object,
    so we would have missed out on the additional details about the data pipeline
    if we had not defined a `DataBlock` object.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，如果我们有一个`DataBlock`对象，可以利用fastai的一些附加功能。在这个例子中，我们能够对`DataBlock`对象应用`summary()`函数，查看fastai对输入数据集应用的处理流程。`summary()`函数不能应用于`dataloaders`对象，因此如果没有定义`DataBlock`对象，我们将错过有关数据处理流程的额外细节。
- en: If a `DataBlock` object is so useful, why didn't we use one in the *Training
    a classification model with a simple curated vision dataset* recipe of [*Chapter
    6*](B16216_06_Final_VK_ePub.xhtml#_idTextAnchor152)*, Training Models with Visual
    Data*? We only used a `dataloaders` object in that recipe (instead of starting
    with a `DataBlock` object) because that recipe was relatively simple – we didn't
    need the additional flexibility of a `DataBlock` object. Throughout this book,
    we have stuck with the highest-level APIs for fastai whenever we could, including
    in that recipe. Simplicity is a key benefit of fastai, so if it's possible to
    go with the highest-level APIs (including using `dataloaders` directly), it makes
    sense to keep it simple and stick with the highest-level APIs.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`DataBlock`对象如此有用，为什么在[*第6章*](B16216_06_Final_VK_ePub.xhtml#_idTextAnchor152)《使用视觉数据训练模型》的*使用简单的精心策划视觉数据集训练分类模型*示例中没有使用它呢？在那个例子中，我们只使用了`dataloaders`对象（而不是从`DataBlock`对象开始），因为那个例子相对简单——我们不需要`DataBlock`对象的额外灵活性。在整本书中，我们尽可能使用fastai的最高级API，包括在那个例子中。简洁性是fastai的一个关键优势，因此如果可以使用最高级的API（包括直接使用`dataloaders`），那么保持简单并坚持使用最高级的API是合乎逻辑的。
- en: Training a model with augmented data
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用增强数据训练模型
- en: 'In the previous recipe, you learned about some additional facilities that fastai
    provides to keep track of your model and you learned how to apply the test set
    to the model trained on the training set. In this recipe, you will learn how to
    combine these techniques with another technique that fastai makes it easy to incorporate
    in your model training: **data augmentation**. With data augmentation, you can
    expand your training dataset to include variations on the original training samples
    and, potentially, improve the performance of the trained model.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，你了解了fastai提供的一些额外功能，以跟踪你的模型，并学习了如何将测试集应用于在训练集上训练的模型。在这个例子中，你将学习如何将这些技术与fastai使其易于融入模型训练的另一项技术结合起来：**数据增强**。通过数据增强，你可以扩展训练数据集，包含原始训练样本的变体，并可能提高训练模型的性能。
- en: '*Figure 8.14* shows some results of augmentation applied to an image from the
    `CIFAR` dataset:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8.14* 显示了对来自`CIFAR`数据集的图像应用增强的结果：'
- en: '![Figure 8.14 – Augmentation applied to an image'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.14 – 应用于图像的增强'
- en: '](img/B16216_8_014.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_014.jpg)'
- en: Figure 8.14 – Augmentation applied to an image
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.14 – 应用于图像的增强
- en: You can see in these examples that the augmentations applied to the image include
    flipping the image on the vertical axis, rotating the image, and adjusting the
    brightness of the image.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这些示例中看到，应用到图像上的增强操作包括在垂直轴上翻转图像、旋转图像以及调整图像的亮度。
- en: As in the previous recipe, in this recipe, we are going to work with an image
    classification model trained on the `CIFAR` curated dataset, but in this recipe,
    we will experiment with augmenting the images in the dataset.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的教程类似，本教程中我们将使用在`CIFAR`精选数据集上训练的图像分类模型，但本教程中我们将尝试对数据集中的图像进行增强。
- en: Getting ready
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Confirm that you can open the `training_with_image_datasets_datablock_augmented.ipynb`
    notebook in the `ch8` directory of your repo.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 确认你能在你的仓库的`ch8`目录中打开`training_with_image_datasets_datablock_augmented.ipynb`笔记本。
- en: How to do it…
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何执行...
- en: 'In this recipe, you will be running through the `training_with_image_datasets_datablock_augmented.ipynb`
    notebook. Here is a high-level summary of what you will do in this recipe:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你将运行`training_with_image_datasets_datablock_augmented.ipynb`笔记本。以下是你在本教程中将要完成的高层次概述：
- en: Train the model with non-augmented data.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用未增强的数据训练模型。
- en: Train the model with augmented data.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用增强的数据训练模型。
- en: Exercise the model trained with non-augmented data with the test set.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用未增强的数据的模型对测试集进行测试。
- en: Exercise the model trained with augmented data with the test set.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用增强数据训练的模型对测试集进行测试。
- en: 'Once you have the notebook open in your fastai environment, complete the following
    steps:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在fastai环境中打开了笔记本，按照以下步骤完成操作：
- en: 'Update the following cell to ensure that `model_path` points to a writeable
    directory in your Gradient or Colab instance:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新以下单元格，确保`model_path`指向你在Gradient或Colab实例中可写的目录：
- en: '[PRE22]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Run the cells in the notebook up to the `Try augmenting the training set` cell
    to import the required libraries, set up your notebook, and train a model on the
    non-augmented `CIFAR` dataset.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行笔记本中的单元格，直到`尝试增强训练集`单元格，以导入所需的库、设置笔记本并在未增强的`CIFAR`数据集上训练模型。
- en: 'Run the following cell to create a new `DataBlock` object `db2` that incorporates
    augmentation and a `dataloaders` object `dls2` that is defined with this new `DataBlock`
    object:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以创建一个新的`DataBlock`对象`db2`，该对象包含增强功能，并定义了一个新的`dataloaders`对象`dls2`：
- en: '[PRE23]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Here are the key items in this cell:'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元格中的关键内容如下：
- en: 'a) `db2 = db.new(batch_tfms=aug_transforms())` – defines a new `DataBlock`
    object `db2` that incorporates the default augmentation defined by `aug_transforms()`.
    See the fastai documentation for details on `aug_transforms()`: [https://docs.fast.ai/vision.augment.html#aug_transforms](https://docs.fast.ai/vision.augment.html#aug_transforms).'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `db2 = db.new(batch_tfms=aug_transforms())` – 定义了一个新的`DataBlock`对象`db2`，该对象包含由`aug_transforms()`定义的默认增强。有关`aug_transforms()`的详细信息，请参见fastai文档：[https://docs.fast.ai/vision.augment.html#aug_transforms](https://docs.fast.ai/vision.augment.html#aug_transforms)。
- en: b) `dls2 = db2.dataloaders(path/'train',bs=32)` – defines a new `dataloaders`
    object `dls2` based on the `DataBlock` object `db2`. Now, `dls2` is defined with
    the training subset of the input dataset.
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `dls2 = db2.dataloaders(path/'train',bs=32)` – 基于`DataBlock`对象`db2`定义了一个新的`dataloaders`对象`dls2`。现在，`dls2`定义了输入数据集的训练子集。
- en: 'Run the following cell to get a summary of the pipeline:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以获取处理流程的总结：
- en: '[PRE24]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The output of this cell gives us details about the pipeline that is applied
    to the dataset. First, the output shows details about the input dataset, including
    the source directory, the size of the whole dataset, and the size of the training
    and validation sets, as shown in *Figure 8.15*:'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此单元格的输出为我们提供了关于应用到数据集的处理流程的详细信息。首先，输出显示了输入数据集的详细信息，包括源目录、整个数据集的大小以及训练集和验证集的大小，如*图8.15*所示：
- en: '![Figure 8.15 – Summary description of the input dataset'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图8.15 – 输入数据集的总结描述'
- en: '](img/B16216_8_015.jpg)'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_015.jpg)'
- en: Figure 8.15 – Summary description of the input dataset
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图8.15 – 输入数据集的总结描述
- en: 'Next, the output shows the pipeline that fastai applies to a single input sample,
    including the source directory of the sample, the image object that is created
    for the sample, and the label (category) for the sample, as shown in *Figure 8.16*:'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，输出展示了fastai对单个输入样本应用的处理流程，包括样本的源目录、为样本创建的图像对象以及样本的标签（类别），如*图8.16*所示：
- en: '![Figure 8.16 – Summary description of the pipeline for one image file'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图8.16 – 单个图像文件的处理流程总结描述'
- en: '](img/B16216_8_016.jpg)'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_016.jpg)'
- en: Figure 8.16 – Summary description of the pipeline for one image file
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.16 – 单个图像文件的管道概述描述
- en: 'Next, the output shows the pipeline that fastai applies to build a single batch,
    that is, converting the image objects that are output from the sample pipeline
    into tensors. As shown in *Figure 8.17*, the 32 x 32-pixel image objects are converted
    to 3 x 32 x 32 tensors, where the first dimension contains color information about
    the image:'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，输出显示了fastai应用于构建单个批次的管道，即将从样本管道输出的图像对象转换为张量。如*图 8.17*所示，32 x 32像素的图像对象被转换为3
    x 32 x 32的张量，其中第一维包含图像的颜色信息：
- en: '![Figure 8.17 – Summary description of the pipeline applied to a single batch'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.17 – 应用于单个批次的管道概述描述'
- en: '](img/B16216_8_017.jpg)'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_017.jpg)'
- en: Figure 8.17 – Summary description of the pipeline applied to a single batch
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.17 – 应用于单个批次的管道概述描述
- en: 'These first three portions of the output are identical to the same portions
    of the output of `summary()` from the *Getting more details about image classification
    models* recipe. The final portion, however, is different and describes the transformations
    that are applied to images in the augmentation process, as shown in *Figure 8.18*:'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出的前三部分与*获取更多关于图像分类模型的细节*食谱中`summary()`的输出的相同部分一致。然而，最后一部分不同，它描述了在增强过程中应用于图像的变换，如*图
    8.18*所示：
- en: '![Figure 8.18 – Description of the pipeline (including augmentation transformations)'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.18 – 数据处理管道描述（包括增强变换）'
- en: '](img/B16216_8_018.jpg)'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_018.jpg)'
- en: Figure 8.18 – Description of the pipeline (including augmentation transformations)
    applied to all batches
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.18 – 应用于所有批次的管道描述（包括增强变换）
- en: 'Run the following cell to see examples of the augmentation transformations
    being applied to an image in the dataset:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以查看应用于数据集中图像的增强变换示例：
- en: '[PRE25]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The `unique=True` argument specifies that we want to see examples of augmentations
    applied to a single image.
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`unique=True`参数指定我们希望看到应用于单个图像的增强示例。'
- en: 'An example of the output of this cell is shown in *Figure 8.19*: note the variations
    in the augmented images, including being flipped on the vertical axis, having
    varying brightness, and having varying degrees of vertical space taken up by the
    truck:'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元格的输出示例如*图 8.19*所示：请注意增强图像的变化，包括在垂直轴上翻转、亮度变化和卡车占据垂直空间的程度变化：
- en: '![Figure 8.19 – Augmented versions of an image'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.19 – 图像的增强版本'
- en: '](img/B16216_8_019.jpg)'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_019.jpg)'
- en: Figure 8.19 – Augmented versions of an image
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.19 – 图像的增强版本
- en: 'Run the following cell to define a model to be trained with the augmented dataset:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格来定义一个模型，以便使用增强数据集进行训练：
- en: '[PRE26]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Run the following cell to train the model with the augmented dataset:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格来使用增强数据集训练模型：
- en: '[PRE27]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The output of this cell shows the training loss, validation loss, and validation
    accuracy, as shown in *Figure 8.20*:'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元格的输出显示了训练损失、验证损失和验证准确率，如*图 8.20*所示：
- en: '![Figure 8.20 – Output of training the model with the augmented dataset'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.20 – 使用增强数据集训练模型的输出'
- en: '](img/B16216_8_020.jpg)'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_020.jpg)'
- en: Figure 8.20 – Output of training the model with the augmented dataset
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.20 – 使用增强数据集训练模型的输出
- en: 'Run the following cell to save the model that was trained on the augmented
    dataset:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格来保存使用增强数据集训练后的模型：
- en: '[PRE28]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Run the cells up to the `Examine the performance of the model trained on the
    augmented dataset on the test set` cell to get an idea of the performance of the
    model trained on the non-augmented dataset making predictions on the test dataset.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行单元格直到`检查使用增强数据集训练的模型在测试集上的表现`单元格，以了解使用未增强数据集训练的模型在测试数据集上进行预测的表现。
- en: 'Run the following cell to define a `dataloaders` object `dls_test` associated
    with the test set:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格来定义一个与测试集关联的`dataloaders`对象`dls_test`：
- en: '[PRE29]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Run the following cell to define the `learn_augment_test` model to be exercised
    on the test dataset:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格来定义`learn_augment_test`模型，以便在测试数据集上进行测试：
- en: '[PRE30]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Run the following cell to load the `learn_augment_test` model with the weights
    saved from training the model with the augmented dataset:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格来加载`learn_augment_test`模型，并使用从增强数据集训练模型时保存的权重：
- en: '[PRE31]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Now we have a `learn_augment_test` learner object that has the weights from
    training with the augmented dataset and is associated with the test dataset.
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们有一个`learn_augment_test`学习器对象，它包含了使用增强数据集训练后的权重，并与测试数据集关联。
- en: 'Run the following cell to get the overall accuracy of the `learn_augment_test`
    model exercised on the test set:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格，查看`learn_augment_test`模型在测试集上的整体准确性：
- en: '[PRE32]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The output of this cell shows the accuracy of the model on the test set, as
    shown in *Figure 8.21*:'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此单元格的输出显示了该模型在测试集上的准确性，如*图 8.21*所示：
- en: '![Figure 8.21 – Accuracy of the model trained on the augmented dataset applied
    to the test set'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.21 – 在增广数据集上训练的模型应用于测试集的准确性'
- en: '](img/B16216_8_021.jpg)'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_021.jpg)'
- en: Figure 8.21 – Accuracy of the model trained on the augmented dataset applied
    to the test set
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.21 – 在增广数据集上训练的模型应用于测试集的准确性
- en: 'Run the following cell to get examples of the images from the test dataset
    where the model trained on the augmented dataset has the biggest loss:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格，获取在增广数据集上训练的模型在测试集上损失最大时的图像示例：
- en: '[PRE33]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: "The output of this cell shows the images from the test set where the model\
    \ trained on the augmented dataset has the biggest loss. *Figure 8.22* shows examples\
    \ from \Lthis output:"
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此单元格的输出显示了在增广数据集上训练的模型在测试集上损失最大的图像。*图 8.22*显示了这个输出结果的示例：
- en: '![Figure 8.22 – Examples of images where the model trained on'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.22 – 模型在增广数据集上训练时损失最大的图像示例'
- en: the augmented dataset has the biggest losses
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 增广数据集的损失最大
- en: '](img/B16216_8_022.jpg)'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_022.jpg)'
- en: Figure 8.22 – Examples of images where the model trained on the augmented dataset
    has the biggest losses
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.22 – 模型在增广数据集上训练时损失最大的图像示例
- en: 'Run the following cell to see the confusion matrix for the model trained on
    the augmented dataset applied to the test set:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格，查看在增广数据集上训练的模型应用于测试集的混淆矩阵：
- en: '[PRE34]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The output of this cell is the confusion matrix shown in *Figure 8.23*:'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此单元格的输出是*图 8.23*所示的混淆矩阵：
- en: '![Figure 8.23 – Confusion matrix for the model trained on the augmented dataset
    applied to the test set'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.23 – 在增广数据集上训练的模型应用于测试集的混淆矩阵'
- en: '](img/B16216_8_023.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_023.jpg)'
- en: Figure 8.23 – Confusion matrix for the model trained on the augmented dataset
    applied to the test set
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.23 – 在增广数据集上训练的模型应用于测试集的混淆矩阵
- en: Congratulations! You have trained a fastai image classification model using
    an augmented dataset and exercised the trained model on the test set.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你！你已经使用增广数据集训练了一个fastai图像分类模型，并在测试集上进行了验证。
- en: How it works…
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In this recipe, we went through the process of training an image classification
    model on an augmented dataset. The notebook we worked through in this recipe also
    included training an image classification on a non-augmented dataset. Let's compare
    the performance between the models to see whether it was worthwhile to use the
    augmented dataset.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们详细讲解了如何在增广数据集上训练图像分类模型。我们在这个示例中使用的笔记本还包括了在非增广数据集上训练图像分类模型。现在让我们比较这两个模型的性能，看看使用增广数据集是否值得。
- en: 'If we compare the training results between the two models, as shown in *Figure
    8.24*, the performance of the model trained on the non-augmented dataset seems
    to be better:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们比较两个模型的训练结果，如*图 8.24*所示，训练于非增广数据集上的模型似乎表现更好：
- en: '![Figure 8.24 – Comparison of training results when training with and without
    augmented data'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.24 – 使用和不使用增广数据训练时的结果对比'
- en: '](img/B16216_8_024.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_024.jpg)'
- en: Figure 8.24 – Comparison of training results when training with and without
    augmented data
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.24 – 使用和不使用增广数据训练时的结果对比
- en: 'Now let''s compare the performance of the two models on the test dataset. *Figure
    8.25* shows the output of `validate()` for the model trained on the non-augmented
    and augmented datasets, applied to the test set. Again, the model trained on the
    non-augmented dataset seems to be better:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们比较这两个模型在测试数据集上的表现。*图 8.25*显示了在增广和非增广数据集上训练的模型应用于测试集时`validate()`的输出结果。再次强调，训练于非增广数据集上的模型似乎表现更好：
- en: '![Figure 8.25 – Comparison of validate() results when training with and without
    augmented data'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.25 – 使用和不使用增广数据训练时`validate()`结果的对比'
- en: '](img/B16216_8_025.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_025.jpg)'
- en: Figure 8.25 – Comparison of validate() results when training with and without
    augmented data
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.25 – 使用和不使用增广数据训练时`validate()`结果的对比
- en: '*Figure 8.26* shows the confusion matrixes for the model trained on the non-augmented
    and augmented datasets, applied to the test set:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8.26*显示了在增广数据集和非增广数据集上训练的模型应用于测试集时的混淆矩阵：'
- en: '![Figure 8.26 – Comparison of confusion matrix when training with and without
    augmented data'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.26 – 使用和不使用增强数据训练时混淆矩阵的对比'
- en: '](img/B16216_8_026.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_026.jpg)'
- en: Figure 8.26 – Comparison of confusion matrix when training with and without
    augmented data
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.26 – 使用和不使用增强数据训练时混淆矩阵的对比
- en: Overall, the model trained with the augmented dataset does not seem to have
    better performance on the test set than the model trained with the non-augmented
    data. This may be disappointing, but it's OK.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，使用增强数据集训练的模型在测试集上的表现似乎并不比使用非增强数据训练的模型更好。这可能令人失望，但没关系。
- en: 'The purpose of this recipe was to demonstrate to you how to take advantage
    of the augmented data facilities in fastai, not to do a thorough analysis to get
    the best possible results with augmented data. Not every application will benefit
    from augmentation, and we only tried the default augmentation approach. fastai
    offers a wide range of augmentation options for image models, as described in
    the fastai documentation: [https://docs.fast.ai/vision.augment.html](https://docs.fast.ai/vision.augment.html).
    It is possible that this particular dataset had characteristics (such as relatively
    low resolution) that made augmentation less effective. It''s also possible that
    the set of augmentations included in the default fastai augmentation approach
    were not ideal for this dataset, and a custom set of augmentations could have
    produced better results.'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程的目的是向你展示如何利用 fastai 中的增强数据功能，而不是进行深入的分析以获得增强数据的最佳结果。并非所有应用都会从数据增强中受益，我们只尝试了默认的增强方法。fastai
    为图像模型提供了广泛的增强选项，具体可以参考 fastai 文档：[https://docs.fast.ai/vision.augment.html](https://docs.fast.ai/vision.augment.html)。可能这个数据集具有某些特性（例如相对较低的分辨率），导致数据增强效果不佳。也有可能默认的
    fastai 增强方法中的增强操作集并不适合这个数据集，使用自定义的增强操作集可能会得到更好的结果。
- en: 'How does `aug_transforms()`, the function applied in this recipe, augment the
    images in the training set? We can get a clue by comparing the pipeline summary
    for the model trained with the non-augmented training set with the model trained
    with augmented data. *Figure 8.27* shows the final section of the output of `summary()`
    for the non-augmented `DataBlock` object:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`aug_transforms()` 这个函数是如何增强训练集中的图像的？我们可以通过对比使用非增强训练集训练的模型与使用增强数据训练的模型的流水线摘要来获得线索。*图
    8.27* 显示了非增强型 `DataBlock` 对象的 `summary()` 输出的最后部分：'
- en: '![Figure 8.27 – Output of summary for the non-augmented DataBlock object'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.27 – 非增强型 DataBlock 对象的摘要输出'
- en: '](img/B16216_8_027.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_027.jpg)'
- en: Figure 8.27 – Output of summary for the non-augmented DataBlock object
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.27 – 非增强型 DataBlock 对象的摘要输出
- en: '*Figure 8.28* shows the final section of the output of `summary()` for the
    augmented `DataBlock` object:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8.28* 显示了增强型 `DataBlock` 对象的 `summary()` 输出的最后部分：'
- en: '![Figure 8.28 – Output of summary for the non-augmented DataBlock object'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.28 – 非增强型 DataBlock 对象的摘要输出'
- en: '](img/B16216_8_028.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_028.jpg)'
- en: Figure 8.28 – Output of summary for the non-augmented DataBlock object
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.28 – 非增强型 DataBlock 对象的摘要输出
- en: 'By comparing the section of the summary output for these two models, you can
    understand what transformations are being applied on the augmented dataset, as
    shown in *Figure 8.29*:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对比这两个模型的摘要输出部分，你可以了解在增强数据集上应用了哪些变换，如 *图 8.29* 所示：
- en: '![Figure 8.29 – Transformations applied in aug_transforms()'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.29 – 在 `aug_transforms()` 中应用的变换'
- en: '](img/B16216_8_029.jpg)'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_029.jpg)'
- en: Figure 8.29 – Transformations applied in aug_transforms()
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.29 – 在 `aug_transforms()` 中应用的变换
- en: You have now examined some of the differences between training an image classification
    model with an augmented dataset and training with a non-augmented dataset.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经了解了使用增强数据集与非增强数据集训练图像分类模型之间的一些区别。
- en: Using callbacks to get the most out of your training cycle
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用回调函数来最大化你的训练周期的效果
- en: 'So far in this book, we have kicked off the training process for a fastai model
    by applying `fit_one_cycle` or `fine_tune` to the learner object and have then
    just let the training run through the specified number of epochs. For many of
    the models we have trained in this book, this approach has been good enough, particularly
    for models where each epoch takes a long time and we only train for one or two
    epochs. But what about models where we want to train the model for 10 or more
    epochs? If we simply let the training process go to the end, we face the problem
    shown in the training results shown in *Figure 8.30*. In *Figure 8.30*, we see
    the result of training a tabular model for 10 epochs with `metric` set to `accuracy`:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在本书中，我们已经通过将`fit_one_cycle`或`fine_tune`应用于学习器对象来启动fastai模型的训练过程，并且让训练按照指定的轮次运行。对于我们在本书中训练的许多模型，这种方法已经足够好，特别是对于每个周期需要很长时间的模型，而我们只训练一个或两个周期。但如果我们希望训练模型10个周期或更多呢？如果我们只是让训练过程一直运行到结束，我们将面临*图8.30*中显示的问题。在*图8.30*中，我们可以看到使用`metric`设置为`accuracy`训练一个表格模型10个周期的结果：
- en: '![Figure 8.30 – Results from a 10-epoch run training a model with tabular data'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.30 – 训练一个表格数据模型的10轮训练结果'
- en: '](img/B16216_8_030.jpg)'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_030.jpg)'
- en: Figure 8.30 – Results from a 10-epoch run training a model with tabular data
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.30 – 训练一个表格数据模型的10轮训练结果
- en: 'The goal of this training process is to get a model with the best accuracy.
    With this goal in mind, there are two problems with the results shown in *Figure
    8.30*:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 这个训练过程的目标是得到一个具有最佳准确度的模型。考虑到这一目标，*图8.30*中显示的结果存在两个问题：
- en: The best accuracy is in epoch 5, but the model we get at the end of the training
    process has the accuracy from the last epoch. The output of `validate()` for this
    model, shown in *Figure 8.31*, shows that the accuracy for the model is not the
    best accuracy from the training run:![Figure 8.31 – Output of validate() for the
    model trained with the 10-epoch run
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最佳准确度出现在第5轮，但我们在训练过程结束时得到的模型是最后一轮的准确度。对于这个模型的`validate()`输出，如*图8.31*所示，显示该模型的准确度不是训练过程中最佳的准确度：![图8.31
    – 使用10轮训练模型后`validate()`的输出
- en: '](img/B16216_8_031.jpg)'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_031.jpg)'
- en: Figure 8.31 – Output of validate() for the model trained with the 10-epoch run
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图8.31 – 使用10轮训练模型后`validate()`的输出
- en: Note that if the accuracy was still steadily improving up to the end of the
    training run, the model would likely not be overfitting yet, though you would
    want to validate this by exercising the trained model with the test set.
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，如果准确度在训练结束时仍然稳步提高，则模型可能还没有过拟合，尽管你需要通过使用测试集对已训练的模型进行验证来确认这一点。
- en: The training run keeps going after the accuracy is no longer improving, so training
    capacity is being wasted. For a run like this one, where every epoch completes
    in less than a minute, it isn't really a problem. However, consider the impact
    of wasted training cycles if each epoch took an hour and you were running on a
    paid Gradient instance. In that case, you could end up wasting many dollars on
    training cycles that didn't improve the performance of the model.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练在准确度不再提高后仍然继续进行，因此浪费了训练能力。对于像这样每个周期不到一分钟就完成的训练来说，这不算什么问题。然而，想象一下，如果每个周期都需要一个小时，而你正在使用付费的Gradient实例进行训练，那么浪费的训练周期可能会花费大量的钱，而这些周期并没有提高模型的性能。
- en: 'Luckily, fastai includes a solution to both of these problems: **callbacks**.
    You can use callbacks to control the training process and automatically take actions
    during training. In this recipe, you will learn how to specify callbacks in fastai
    that stop the training process when the model isn''t getting any better and save
    the best model from the training run. You will revisit the model you trained in
    the *Training a model in fastai with a curated tabular dataset* recipe of [*Chapter
    3*](B16216_03_Final_VK_ePub.xhtml#_idTextAnchor083)*, Training Models with Tabular
    Data*, but this time you will control the training process for the model using
    fastai callbacks.'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，fastai提供了解决这两个问题的方法：**回调函数**。你可以使用回调函数来控制训练过程，并在训练期间自动采取行动。在本节中，你将学习如何在fastai中指定回调函数，当模型没有进一步改善时，停止训练过程并保存训练过程中最佳的模型。你将重新回顾在[*第3章*](B16216_03_Final_VK_ePub.xhtml#_idTextAnchor083)*，使用表格数据训练模型*中的*使用整理过的表格数据训练模型*一节中训练的模型，但这次你将使用fastai回调函数来控制模型的训练过程。
- en: Getting ready
  id: totrans-299
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Confirm that you can open the `training_with_tabular_datasets_callbacks.ipynb`
    notebook in the `ch8` directory of your repo.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 确认你可以在你的仓库的`ch8`目录中打开`training_with_tabular_datasets_callbacks.ipynb`笔记本。
- en: How to do it…
  id: totrans-301
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'In this recipe, you will be running through the `training_with_tabular_datasets_callbacks.ipynb`
    notebook. In this recipe, you will train three variations of the model:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，你将运行`training_with_tabular_datasets_callbacks.ipynb`笔记本。在这个食谱中，你将训练模型的三个不同变体：
- en: Training with no callbacks
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无回调的训练
- en: Training with a single callback to end the training process when it has stopped
    improving
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用单个回调，在训练过程停止改进时结束训练
- en: 'Training with two callbacks: one to end the training process when it has stopped
    improving, and one to save the best model'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用两个回调进行训练：一个用于在训练停止改进时结束训练，另一个用于保存最佳模型
- en: 'Once you have the notebook open in your fastai environment, complete the following
    steps:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在 fastai 环境中打开笔记本，完成以下步骤：
- en: 'Update the following cell to ensure that `model_path` points to a writeable
    directory in your Gradient or Colab instance:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新以下单元格，确保`model_path`指向你在 Gradient 或 Colab 实例中可写的目录：
- en: '[PRE35]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Run the cells in the notebook up to the `Define and train the model with no
    callbacks` cell to import the required libraries, set up your notebook, and define
    a `dataloaders` object for the `ADULT_SAMPLE` dataset.
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行笔记本中的单元格，直到`Define and train the model with no callbacks`单元格，导入所需的库，设置你的笔记本，并为`ADULT_SAMPLE`数据集定义一个`dataloaders`对象。
- en: By calling `set_seed()` this way and defining a `dataloaders` object before
    each training run, we can get consistent training results across multiple training
    runs. You will see the significance of having consistent training results when
    we compare the results for training with and without callbacks.
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过这种方式调用`set_seed()`并在每次训练运行之前定义一个`dataloaders`对象，我们可以获得跨多个训练运行的一致训练结果。当我们比较有回调和没有回调的训练结果时，你将看到保持一致的训练结果的重要性。
- en: 'Run the following cell to define and train a model with no callbacks:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以定义并训练一个没有回调的模型：
- en: '[PRE36]'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The call to `set_seed()` specifies that the random seeds related to the model
    are set to `42` (an arbitrary value) and that results are reproducible, which
    is exactly what we want.
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对`set_seed()`的调用指定了与模型相关的随机种子被设置为`42`（一个任意值），并且结果是可重复的，这正是我们所希望的。
- en: 'The output of this cell shows the training loss, validation loss, and accuracy
    by epoch, as well as the overall time taken for the training run, as shown in
    *Figure 8.32*. Note that the training run goes for all 10 epochs, even though
    the accuracy stops improving after epoch 2:'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元格的输出显示了每一轮的训练损失、验证损失和准确率，以及整个训练运行所花费的时间，正如*图 8.32*所示。请注意，训练运行进行了所有10轮，尽管准确率在第2轮之后停止改进：
- en: '![Figure 8.32 – Results of training a model with no callbacks'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.32 – 使用没有回调的模型训练结果'
- en: '](img/B16216_8_032.jpg)'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_032.jpg)'
- en: Figure 8.32 – Results of training a model with no callbacks
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.32 – 使用没有回调的模型训练结果
- en: 'Run the following cell to get the accuracy for the trained model:'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以获取训练模型的准确率：
- en: '[PRE37]'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The output of this cell is shown in *Figure 8.33*. The accuracy for the model
    is the accuracy achieved in epoch 9, the final epoch of the training run:'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元格的输出显示在*图 8.33*中。模型的准确率是在第9轮，也就是训练运行的最后一轮，达到的准确率：
- en: '![Figure 8.33 – Output of validate() for a model trained with no callbacks'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.33 – 使用没有回调的模型进行验证时的输出'
- en: '](img/B16216_8_033.jpg)'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_033.jpg)'
- en: Figure 8.33 – Output of validate() for a model trained with no callbacks
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.33 – 使用没有回调的模型进行验证时的输出
- en: 'Run the following cell to define and train a model with one callback – early
    stopping when the model''s accuracy no longer improves:'
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以定义并训练一个带有一个回调的模型——当模型的准确率不再改进时进行早停：
- en: '[PRE38]'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The `fit` statement for this model includes the definition of an `EarlyStoppingCallback`
    callback. Here are the arguments used to define the callback:'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个模型的`fit`语句包括了`EarlyStoppingCallback`回调的定义。以下是定义回调时使用的参数：
- en: a) `monitor='accuracy'` – specifies that the callback is tracking the value
    of the accuracy metric. When the accuracy metric stops improving for the specified
    period, the callback will be triggered.
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `monitor='accuracy'` – 指定回调正在跟踪准确率指标的值。当准确率指标在指定的时间段内停止改进时，将触发该回调。
- en: b) `min_delta=0.01` – specifies that the callback pays attention to changes
    in accuracy between epochs that are at least 0.01\. That is, if the change in
    accuracy between epochs is less than 0.01, the callback ignores the change.
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `min_delta=0.01` – 指定回调函数关注的准确率变化至少为0.01。也就是说，如果准确率在两个周期之间的变化小于0.01，则回调函数将忽略这种变化。
- en: c) `patience=3` – specifies that the callback is triggered when the accuracy
    metric stops improving for 3 epochs.
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) `patience=3` – 指定回调函数在准确率指标在3个周期内不再改善时触发。
- en: 'The output of this cell shows the training loss, validation loss, and accuracy
    by epoch, as well as the overall time taken for the training run, as shown in
    *Figure 8.34*:'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元格的输出显示了每个周期的训练损失、验证损失和准确率，以及训练运行所需的总时间，如 *图 8.34* 所示：
- en: '![Figure 8.34 – Results of training a model with an early stopping callback'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.34 – 使用早期停止回调函数训练模型的结果'
- en: '](img/B16216_8_034.jpg)'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_034.jpg)'
- en: Figure 8.34 – Results of training a model with an early stopping callback
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.34 – 使用早期停止回调函数训练模型的结果
- en: Note that now the training stops after epoch 5\. You can see that the metric
    being tracked by the callback, `accuracy`, stops improving after epoch 2\. Once
    3 more epochs have passed (the value set for the `patience` parameter for the
    callback), the training process stops early, at epoch 5, even though the `fit_one_cycle()`
    call specifies a run of 10 epochs. So, with an early stopping callback, we save
    4 epochs and about 25% of the training time (51 seconds with the early stopping
    callback versus 68 seconds with no callbacks).
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，现在训练在第5个周期之后停止了。您可以看到回调函数跟踪的指标 `accuracy` 在第2个周期之后不再改善。一旦过了另外3个周期（回调函数的
    `patience` 参数设置为的值），训练过程将提前停止，在第5个周期停止，即使 `fit_one_cycle()` 调用指定了运行10个周期。因此，使用早期停止回调函数，我们保存了4个周期和约25%的训练时间（使用早期停止回调函数为51秒，而没有回调函数为68秒）。
- en: 'Run the following cell to get the accuracy for the trained model:'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元格以获取经过训练模型的准确率：
- en: '[PRE39]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The output of this cell is shown in *Figure 8.35*. The accuracy for the model
    is the accuracy achieved in epoch 5, the final epoch of the training run:'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元格的输出显示在 *图 8.35* 中。模型的准确率是在第5个周期（训练运行的最后一个周期）中实现的准确率：
- en: '![Figure 8.35 – Output of validate() for a model trained with an early stopping
    callback'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.35 – 使用早期停止回调函数训练的模型的验证输出'
- en: '](img/B16216_8_035.jpg)'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_035.jpg)'
- en: Figure 8.35 – Output of validate() for a model trained with an early stopping
    callback
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.35 – 使用早期停止回调函数训练的模型的验证输出
- en: 'With an early stopping callback, we reduce the training time compared to a
    model with no callbacks, but the accuracy of the trained model is lower than the
    best accuracy achieved during the training run. Let''s train another model that
    includes a callback to save the best model. This callback will ensure that the
    accuracy of the trained model is the best result we get from the training run.
    To do this, start by running the following cell to define and train a model with
    two callbacks – early stopping when the model''s accuracy no longer improves,
    and saving the best model:'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用早期停止回调函数，相比没有回调函数的模型，我们减少了训练时间，但训练得到的模型准确率低于训练运行期间达到的最佳准确率。让我们训练另一个模型，其中包括一个回调函数来保存最佳模型。该回调函数将确保经过训练的模型的准确率是我们从训练运行中获得的最佳结果。要做到这一点，请从运行以下单元格开始定义并训练一个包括两个回调函数的模型
    – 当模型的准确率不再改善时提前停止训练，并保存最佳模型：
- en: '[PRE40]'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'In addition to the definition of an `EarlyStoppingCallback` callback like the
    one specified in *Step 5*, the `fit` statement for this model also includes a
    `SaveModelCallback` callback. Here the arguments used to define this callback
    are as follows:'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了像 *步骤5* 中指定的 `EarlyStoppingCallback` 回调函数的定义之外，此模型的 `fit` 语句还包括一个 `SaveModelCallback`
    回调函数。这里用来定义此回调函数的参数如下：
- en: a) `monitor='accuracy'` – specifies that the `SaveModelCallback` callback is
    tracking the value of the accuracy metric. The model will be saved for epochs
    where the accuracy hits a new high-water mark.
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `monitor='accuracy'` – 指定 `SaveModelCallback` 回调函数跟踪准确率指标的值。当准确率达到新的最高水平时，模型将被保存。
- en: b) `min_delta=0.01` – specifies that the callback pays attention to changes
    in accuracy between epochs that are at least 0.01.
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `min_delta=0.01` – 指定回调函数关注的准确率变化至少为0.01。
- en: Note that this cell also includes statements to adjust the model path to a directory
    that is writeable in Gradient. If you don't change the model's path to a writeable
    directory, you will get an error in Gradient when you run this cell. Also, note
    that you may see the **Saved filed doesn't contain an optimizer state** warning
    message when you run this cell – you don't need to worry about this message for
    the purposes of this recipe.
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '请注意，该单元还包括调整模型路径为 Gradient 可写目录的语句。如果不将模型路径更改为可写目录，运行该单元时会在 Gradient 中出现错误。同时请注意，当你运行此单元时，可能会看到**保存的文件不包含优化器状态**的警告信息——在本教程中，你无需担心此消息。 '
- en: 'The output of this cell shows the training loss, validation loss, and accuracy
    by epoch, as well as the overall time taken for the training run, as shown in
    *Figure 8.36*. Note that the training stops after epoch 5 thanks to the early
    stopping callback:'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元的输出显示了每轮训练损失、验证损失和准确度，以及训练运行所花费的总时间，如*图 8.36*所示。请注意，由于早停回调，训练在第 5 轮结束：
- en: '![Figure 8.36 – Results of training a model with an early stopping callback
    and a model saving callback'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 8.36 – 使用早停回调和模型保存回调训练模型的结果'
- en: '](img/B16216_8_036.jpg)'
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_036.jpg)'
- en: Figure 8.36 – Results of training a model with an early stopping callback and
    a model saving callback
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.36 – 使用早停回调和模型保存回调训练模型的结果
- en: 'Run the following cell to get the accuracy for the trained model:'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下单元以获取训练模型的准确度：
- en: '[PRE41]'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The output of this cell is shown in *Figure 8.37*. The accuracy for the model
    is the accuracy achieved in epoch 2, the best accuracy during the training run:'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该单元的输出如*图 8.37*所示。模型的准确度是在第 2 轮迭代中的准确度，是训练过程中最好的准确度：
- en: '![Figure 8.37 – Output of validate() for a model trained with early stopping
    and model saving callbacks'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.37 – 使用早停和模型保存回调训练的模型的 validate() 输出'
- en: '](img/B16216_8_037.jpg)'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_037.jpg)'
- en: Figure 8.37 – Output of validate() for a model trained with early stopping and
    model saving callbacks
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.37 – 使用早停和模型保存回调训练的模型的 validate() 输出
- en: With both callbacks, we avoid running epochs that won't improve the performance
    of the model and we end up with a trained model with the best performance out
    of the epochs of the training run.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用这两个回调，我们避免了运行不会提高模型性能的迭代，并最终得到了在训练过程中最佳表现的训练模型。
- en: Congratulations! You have successfully applied callbacks in fastai to optimize
    the training process so that you get the most out of the training cycle for your
    models.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经成功应用了 fastai 的回调来优化训练过程，从而在训练周期中最大化你的模型表现。
- en: How it works…
  id: totrans-359
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: This recipe demonstrated how you can use fastai callbacks to control the training
    process so you get the best results from the system capacity and time that you
    apply to training. There are a few additional details about fastai callbacks that
    are worth reviewing. In this section of the recipe, we will dig a bit deeper into
    how callbacks are used in fastai.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程演示了如何使用 fastai 的回调来控制训练过程，以便从系统的计算能力和训练时间中获得最佳结果。关于 fastai 回调，还有一些额外的细节值得回顾。在本节中，我们将深入探讨
    fastai 中回调的使用方式。
- en: The set_seed() function is not the default function for fastai
  id: totrans-361
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: set_seed() 函数并非 fastai 的默认函数
- en: In order to get clear comparisons between the performance of the model with
    and without callbacks, we needed to control random differences between training
    runs. That is, we want to train the model multiple times and get consistent loss
    and accuracy for epochs between training runs. For example, if the accuracy reported
    in epoch 1 is `0.826271` for the first training run, we want to get exactly the
    same accuracy in epoch 1 for each subsequent training run. By ensuring consistent
    performance between training runs, we can do *apples-to-apples* comparisons between
    runs, focusing on the impact of the callbacks rather than random differences between
    runs.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 为了清楚地比较有回调和没有回调时模型的表现，我们需要控制训练运行之间的随机差异。也就是说，我们希望多次训练模型，并在不同的训练运行之间获得一致的损失和准确度。例如，如果第一次训练运行的第
    1 轮准确度为 `0.826271`，我们希望每次后续训练运行的第 1 轮准确度完全相同。通过确保训练运行之间表现一致，我们可以进行*公平对比*，聚焦于回调的影响，而不是训练运行之间的随机差异。
- en: 'In this recipe, we used the `set_seed()` function to control random differences
    between training runs. You may have noticed that while fastai documentation includes
    a `set_seed()` function ([https://docs.fast.ai/torch_core.html#set_seed](https://docs.fast.ai/torch_core.html#set_seed)),
    we don''t use that function in the recipe. Instead, we use the following function,
    which is adapted from code shared in this forum discussion – [https://github.com/fastai/fastai/issues/2832](https://github.com/fastai/fastai/issues/2832):'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们使用了 `set_seed()` 函数来控制训练运行之间的随机差异。你可能已经注意到，虽然 fastai 文档中包含了一个 `set_seed()`
    函数（[https://docs.fast.ai/torch_core.html#set_seed](https://docs.fast.ai/torch_core.html#set_seed)），但我们在配方中并没有使用它。相反，我们使用了以下这个函数，它是从论坛讨论中分享的代码中修改过来的——[https://github.com/fastai/fastai/issues/2832](https://github.com/fastai/fastai/issues/2832)：
- en: '[PRE42]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Why use this custom `set_seed()` function instead of the default `set_seed()`
    function documented by fastai? The simple reason is that the default `set_seed()`
    function did not work as expected – I didn't get consistent training results with
    it. With the `set_seed()` function listed previously, on the other hand, I was
    able to get consistent training results.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么要使用这个自定义的 `set_seed()` 函数，而不是 fastai 文档中提供的默认 `set_seed()` 函数？简单的原因是默认的 `set_seed()`
    函数无法按预期工作——我没有得到一致的训练结果。而使用上面列出的 `set_seed()` 函数，我得到了稳定的一致性训练结果。
- en: The Callbacks section of summary() doesn't include the callbacks defined in
    the recipe
  id: totrans-366
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: summary() 的回调部分没有包括在配方中定义的回调。
- en: 'You may notice that the end of the `training_with_tabular_datasets_callbacks.ipynb`
    notebook includes calls to the `summary()` function for the learner objects for
    the three models that you trained in the recipe. You might expect the `Callbacks`
    section of the output of the `summary()` function for the two models that include
    callbacks, `learn_es` and `learn_es_sm`, would list the early stopping and model
    saving callbacks, but that is not the case. *Figure 8.38* shows the `Callbacks`
    section for the two models that have explicitly defined callbacks, and this section
    is identical to the `Callbacks` section for the model with no callbacks:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到，`training_with_tabular_datasets_callbacks.ipynb` 笔记本的末尾包含了对三个训练模型的学习者对象调用
    `summary()` 函数的代码。这三个模型在配方中进行了训练。你可能预期，包含回调的 `learn_es` 和 `learn_es_sm` 模型的 `summary()`
    输出中的 `Callbacks` 部分会列出早停和模型保存回调，但事实并非如此。*图 8.38* 展示了两个模型（它们显式定义了回调）的 `Callbacks`
    部分，而这一部分与没有回调的模型的 `Callbacks` 部分是相同的：
- en: '![Figure 8.38 – Callbacks section of summary() output'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.38 – summary() 输出中的回调部分](img/B16216_8_038.jpg)'
- en: '](img/B16216_8_038.jpg)'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.38 – summary() 输出中的回调部分
- en: Figure 8.38 – Callbacks section of summary() output
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.38 – summary() 输出中的回调部分
- en: Why doesn't the `Callbacks` section of `summary()` output include the callbacks
    defined with the model? The `summary()` function just lists the callbacks defined
    by fastai itself, not the callbacks that you define.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么 `summary()` 输出中的 `Callbacks` 部分不包括模型中定义的回调？`summary()` 函数仅列出 fastai 本身定义的回调，而不是你自己定义的回调。
- en: Is there anything else you can do with callbacks in fastai?
  id: totrans-372
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在fastai中，你还能做些什么与回调相关的操作？
- en: 'In this recipe, we used callbacks to ensure that the training cycle was as
    efficient as possible, but that''s just scratching the surface of what you can
    do with callbacks in fastai. The fastai framework supports a broad range of callbacks
    to control aspects of the training process. In fact, in this book you have come
    across several kinds of fastai callbacks:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们使用了回调来确保训练过程尽可能高效，但这只是你在 fastai 中使用回调的一小部分功能。fastai 框架支持多种回调，用于控制训练过程的各个方面。事实上，在本书中，你已经接触到几种不同类型的
    fastai 回调：
- en: '**Tracking callbacks** – the early stopping and model saving callbacks that
    we used in this recipe are examples of tracking callbacks. This category of callbacks
    is documented here: [https://docs.fast.ai/callback.tracker.html](https://docs.fast.ai/callback.tracker.html).'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**追踪回调** – 我们在本配方中使用的早停和模型保存回调就是追踪回调的例子。这类回调的文档可以在这里找到：[https://docs.fast.ai/callback.tracker.html](https://docs.fast.ai/callback.tracker.html)。'
- en: '`ShowGraphCallback` callback to display a graph of training and validation
    loss. Progress and logging callbacks are documented here: [https://docs.fast.ai/callback.progress.html](https://docs.fast.ai/callback.progress.html).'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `ShowGraphCallback` 回调来显示训练和验证损失的图表。进度和日志回调的文档可以在这里找到：[https://docs.fast.ai/callback.progress.html](https://docs.fast.ai/callback.progress.html)。
- en: '`to_fp16()` to specify mixed-precision training for the language model you
    trained in that section. Callbacks for mixed-precision training are documented
    here: [https://docs.fast.ai/callback.fp16.html](https://docs.fast.ai/callback.fp16.html).'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`to_fp16()`来指定你在该部分训练的语言模型的混合精度训练。有关混合精度训练的回调文档，请参见：[https://docs.fast.ai/callback.fp16.html](https://docs.fast.ai/callback.fp16.html)。
- en: The callbacks that you have used so far by working through the recipes in this
    book show you some of the power and flexibility that you can get by using callbacks
    with fastai.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，通过本书中的配方所使用的回调函数展示了使用回调函数与fastai结合时，你可以获得的一些强大功能和灵活性。
- en: Making your model deployments available to others
  id: totrans-378
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让你的模型部署对其他人可用
- en: In [*Chapter 7*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*, Deployment
    and Model Maintenance*, you deployed a couple of fastai models. To get a prediction,
    you pointed your browser to `localhost:5000` and that opened up `home.html` where
    you set your scoring parameters, requested a prediction, and then got a prediction
    back in `show-prediction.html`. All this happened on your local system. Through
    the web deployments done in [*Chapter 7*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*,
    Deployment and Model Maintenance*, you can only get to the deployment on your
    local system because `localhost` is only accessible on your local system. What
    if you wanted to share these deployments with friends to allow them to try out
    your models on their own computers?
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第7章*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)《部署和模型维护》中，你部署了几个fastai模型。为了获取预测结果，你将浏览器指向了`localhost:5000`，这会打开`home.html`，在这里你设置了评分参数，请求了预测，并在`show-prediction.html`中得到了预测结果。所有这些操作都是在本地系统上完成的。通过[*第7章*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)《部署和模型维护》中的Web部署，你只能在本地系统上访问部署，因为`localhost`只在本地系统上可访问。如果你想将这些部署与朋友分享，让他们在自己的电脑上尝试你的模型，你该怎么办？
- en: The simplest way to do this is using a tool called `localhost` on your computer
    with people working on other computers. In this recipe, we will go through steps
    that show you how to use ngrok to make your deployments available to others.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法是使用一种叫做`localhost`的工具，在你的电脑上与其他电脑上的人一起工作。在这个配方中，我们将通过一些步骤来展示如何使用ngrok让你的部署对其他人可用。
- en: Getting ready
  id: totrans-381
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Follow the instructions at [https://dashboard.ngrok.com/get-started](https://dashboard.ngrok.com/get-started)
    to set up a free ngrok account and to set up ngrok on your local system. Note
    the directory where you install ngrok – you will need it in the recipe.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 按照[https://dashboard.ngrok.com/get-started](https://dashboard.ngrok.com/get-started)中的说明设置一个免费的ngrok帐户，并在本地系统上设置ngrok。记下你安装ngrok的目录—你将在配方中需要它。
- en: How to do it…
  id: totrans-383
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现…
- en: With the help of ngrok, you can get a URL you can share with your friends so
    they can try out your fastai model deployments. This recipe will show you how
    to share your deployment of the tabular model.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 借助ngrok，你可以获得一个可以与朋友分享的URL，这样他们就可以尝试你的fastai模型部署。本配方将向你展示如何分享表格模型的部署。
- en: 'To share the deployment you created in the *Deploying a fastai model trained
    on a tabular dataset* recipe of [*Chapter 7*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*,
    Deployment and Model Maintenance*, go through the following steps:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 要分享你在[*第7章*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)《部署和模型维护》中创建的部署，按照以下步骤进行：
- en: Make the directory where you installed ngrok your current directory.
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将安装ngrok的目录设置为当前目录。
- en: 'Enter the following command on the command line/terminal:'
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令行/终端中输入以下命令：
- en: '[PRE43]'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Start the deployment of the tabular model by making `deploy_tabular` your current
    directory and entering the following command:'
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将`deploy_tabular`设置为当前目录并输入以下命令，启动表格模型的部署：
- en: '[PRE44]'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: On a computer other than your local system, point the browser at the `https`
    `Forwarding` URL that you copied in *Step 2*. You should see `home.html`, as shown
    in *Figure 8.40*:![Figure 8.40 – home.html
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在另一台计算机上，打开浏览器并访问你在*步骤2*中复制的`https` `Forwarding` URL。你应该能看到`home.html`，如*图8.40*所示：![图8.40
    – home.html
- en: '](img/B16216_8_040.jpg)'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16216_8_040.jpg)'
- en: Figure 8.40 – home.html
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图8.40 – home.html
- en: 'In `home.html`, select `Get prediction` and confirm that you see a prediction
    in `show-prediction.html`, as shown in *Figure 8.41*:'
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`home.html`中，选择`Get prediction`并确认你在`show-prediction.html`中看到了预测结果，如*图8.41*所示：
- en: '![Figure 8.41 – show-prediction.html'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.41 – show-prediction.html'
- en: '](img/B16216_8_041.jpg)'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_041.jpg)'
- en: Figure 8.41 – show-prediction.html
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.41 – show-prediction.html
- en: Congratulations! You have successfully shared one of your fastai model deployments
    so that it is available to users on other systems with whom you share the ngrok
    forwarding URL.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你！你已经成功共享了你的fastai模型部署，使其可以通过你分享的ngrok转发URL供其他系统的用户访问。
- en: How it works…
  id: totrans-399
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: When you run ngrok, you create a secure tunnel to `localhost` on your local
    system. When you share the forwarding URL that is returned by ngrok, the people
    who receive the URL can point their browser to that URL to see what is being served
    at `localhost` on your local system.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行ngrok时，它会在你的本地系统上创建一个安全隧道到`localhost`。当你分享ngrok返回的转发URL时，接收URL的人可以将浏览器指向该URL，以查看你在本地系统上提供的内容。
- en: 'You specify the port that the ngrok tunnel points to when you start ngrok.
    For example, when you entered the following command in this recipe, you specified
    that the ngrok forwarding URL points to `localhost:5000`:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 当你启动ngrok时，你指定了ngrok隧道指向的端口。例如，在本教程中你输入了以下命令，指定ngrok转发的URL指向`localhost:5000`：
- en: '[PRE45]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Now you have some background on how ngrok makes it easy for you to share your
    model deployment with users on other systems.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你对ngrok如何方便地帮助你与其他系统上的用户分享你的模型部署有了了解。
- en: Displaying thumbnails in your image classification model deployment
  id: totrans-404
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在图像分类模型部署中显示缩略图
- en: 'When you created a deployment for the image classification model in the *Deploying
    a fastai model trained on an image dataset* recipe of [*Chapter 7*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*,
    Deployment and Model Maintenance*, there was something useful missing: a thumbnail
    of the image that you selected in `home.html`. In this recipe, you will see how
    to update `home.html` to display a thumbnail of the image that the user selects.'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在[*第7章*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)《部署和模型维护》中为图像分类模型创建部署时，缺少了一个有用的功能：显示在`home.html`中选择的图像的缩略图。在本教程中，你将学习如何更新`home.html`，以显示用户选择的图像的缩略图。
- en: Getting ready
  id: totrans-406
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Ensure that you have followed the steps in the *Deploying a fastai model trained
    on an image dataset* recipe of [*Chapter 7*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*,
    Deployment and Model Maintenance*, to do the deployment of the image classification
    model.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你已经按照[*第7章*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)《部署和模型维护》中的*部署一个使用图像数据集训练的fastai模型*教程的步骤完成了图像分类模型的部署。
- en: How to do it…
  id: totrans-408
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: In this recipe, you will be making updates to `home.html` in your image classification
    model deployment so that a thumbnail of the image you selected gets displayed.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你将更新图像分类模型部署中的`home.html`，以便显示你选择的图像的缩略图。
- en: 'To make these updates, go through the following steps:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进行这些更新，请按照以下步骤操作：
- en: Make the directory for the image classification deployment, `deploy_image`,
    your current directory.
  id: totrans-411
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图像分类部署的目录`deploy_image`设置为当前目录。
- en: 'Make the `templates` subdirectory your current directory by running the following
    command:'
  id: totrans-412
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令，将`templates`子目录设置为当前目录：
- en: '[PRE46]'
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Open `home.html` in an editor. I like to use Notepad++ (see [https://notepad-plus-plus.org/](https://notepad-plus-plus.org/)),
    but you can use the editor of your choice.
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑器中打开`home.html`。我喜欢使用Notepad++（见[https://notepad-plus-plus.org/](https://notepad-plus-plus.org/)），但你也可以使用你喜欢的编辑器。
- en: 'Update the control for the file dialog to specify an `onchange` action of calling
    the `getFile()` JavaScript function. After the update, the control for the file
    dialog should look like this:'
  id: totrans-415
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新文件对话框的控件，指定一个`onchange`动作来调用`getFile()` JavaScript函数。更新后，文件对话框的控件应如下所示：
- en: '[PRE47]'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Define a new JavaScript function in `home.html` called `getFile()`:'
  id: totrans-417
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`home.html`中定义一个新的JavaScript函数`getFile()`：
- en: '[PRE48]'
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Here are the key items in this function definition:'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是该函数定义中的关键内容：
- en: a) `file_list = document.getElementById("image_field").files;` – specifies that
    `file_list` contains the list of files associated with the `image_field` file
    selector
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `file_list = document.getElementById("image_field").files;` – 指定`file_list`包含与`image_field`文件选择器相关联的文件列表
- en: b) `img_f = document.createElement("img");` – defines a new image element called
    `img_f` on the page
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `img_f = document.createElement("img");` – 在页面上定义一个新的图像元素`img_f`
- en: c) `img_f.setAttribute("id","displayImage");` – assigns the `displayImage` ID
    to the new image element
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) `img_f.setAttribute("id","displayImage");` – 将`displayImage` ID 分配给新的图像元素
- en: d) `document.body.appendChild(img_f);` – adds the new image element to the bottom
    of the page
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) `document.body.appendChild(img_f);` – 将新的图像元素添加到页面底部
- en: e) `document.getElementById("displayImage").src = URL.createObjectURL(file_list[0]);`
    – specifies that the file selected in the file dialog is displayed in the new
    image element
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e) `document.getElementById("displayImage").src = URL.createObjectURL(file_list[0]);`
    – 指定在文件对话框中选择的文件会显示在新的图片元素中
- en: 'Save your changes to `home.html` and make `deploy_image` your current directory
    by running the following command:'
  id: totrans-425
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的更改保存到`home.html`，并通过运行以下命令将`deploy_image`设置为当前目录：
- en: '[PRE49]'
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Start the Flask server by running the following command:'
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令启动Flask服务器：
- en: '[PRE50]'
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Open `localhost:5000` in your browser to display `home.html`.
  id: totrans-429
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开`localhost:5000`来显示`home.html`。
- en: 'Select the `test_images` directory. If everything works, you should see a thumbnail
    of the image you selected at the bottom of the page, as shown in *Figure 8.42*:'
  id: totrans-430
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`test_images`目录。如果一切正常，你应该会看到页面底部显示你选择的图片的缩略图，如*图 8.42*所示：
- en: '![Figure 8.42 – home.html with a thumbnail of the selected image displayed'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.42 – home.html 显示选中图片的缩略图'
- en: '](img/B16216_8_042.jpg)'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_042.jpg)'
- en: Figure 8.42 – home.html with a thumbnail of the selected image displayed
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.42 – home.html 显示选中图片的缩略图
- en: Congratulations! You have updated the deployment for the image classification
    model so that you see a thumbnail when you select an image.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你！你已经更新了图像分类模型的部署，现在选择一张图片时会显示该图片的缩略图。
- en: How it works…
  id: totrans-435
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: In this recipe, you have seen a small example of dynamically creating an element
    in an HTML page. Unlike all the other elements in `home.html`, the image element
    where we show the thumbnail is not there when `home.html` is first loaded. The
    image element only gets created when an image file has been selected and the `getFile()`
    function gets called. Why didn't we just have the image element hardcoded to be
    there when the file is first loaded, like the other controls?
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，你看到了一个在HTML页面中动态创建元素的小例子。与`home.html`中的其他所有元素不同，当`home.html`首次加载时，显示缩略图的图片元素并不存在。图片元素只有在选择了图片文件并且调用`getFile()`函数时才会被创建。为什么我们不在文件首次加载时就像其他控件一样将图片元素硬编码在页面中呢？
- en: 'If we had hardcoded the image element, then when you loaded `home.html`, before
    an image file had been selected, you would see an ugly missing-image graphic where
    the thumbnail should be, as shown in *Figure 8.43*:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将图片元素硬编码，那么当你加载`home.html`时，在选择图片之前，你会看到一个丑陋的缺失图片图标，原本应该显示缩略图的位置，如*图 8.43*所示：
- en: '![Figure 8.43 – home.html with a hardcoded image element'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.43 – home.html 带有硬编码图片元素'
- en: '](img/B16216_8_043.jpg)'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_043.jpg)'
- en: Figure 8.43 – home.html with a hardcoded image element
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.43 – home.html 带有硬编码图片元素
- en: By dynamically creating the image element only after an image had been selected,
    we can avoid the messy missing-image graphic.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在选择图片之后才动态创建图片元素，我们可以避免出现丑陋的缺失图片图标。
- en: You may remember that in the *Maintaining your fastai model* recipe of [*Chapter
    7*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*, Deployment and Model Maintenance*,
    I mentioned that in a professional deployment you would not have to manually adjust
    the controls in `home.html` when the dataset schema got new values for categorical
    columns or brand-new columns. You could use the technique described in this recipe,
    dynamically creating controls, for most of the controls in `home.html` to make
    the deployment easier to adapt to schema changes.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还记得在[*第7章*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*，部署和模型维护*的*维护你的fastai模型*配方中，我提到过在专业的部署中，当数据集模式出现类别列的新值或全新的列时，你不需要手动调整`home.html`中的控件。你可以使用本配方中描述的技术，动态创建控件，来应对`home.html`中大部分控件的变化，使得部署更容易适应模式变动。
- en: Test your knowledge
  id: totrans-443
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试你的知识
- en: In this chapter, we have reviewed a broad range of topics, from taking full
    advantage of the information that fastai provides about models to making your
    web deployments available to users outside of your local system. In this section,
    you will get the opportunity to exercise some of the concepts you learned about
    in this chapter.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们回顾了从充分利用fastai提供的有关模型的信息，到将你的网页部署提供给系统外部用户的一系列主题。在本节中，你将有机会练习在本章中学到的一些概念。
- en: Explore the value of repeatable results
  id: totrans-445
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索可重复结果的价值
- en: 'In the *Using callbacks to get the most out of your training cycle* recipe,
    you made a call to the `set_seed()` function prior to training each of the models.
    In that recipe, I stated that these calls were necessary to ensure repeatable
    results for multiple training cycles. Test out this assertion yourself by following
    these steps:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 在*使用回调最大化训练周期的效益*的食谱中，你在训练每个模型之前调用了`set_seed()`函数。在那个食谱中，我提到这些调用是必要的，以确保多个训练周期的结果是可重复的。通过执行以下步骤亲自测试这一断言：
- en: First, make a copy of the `training_with_tabular_datasets_callbacks.ipynb` notebook.
  id: totrans-447
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，复制`training_with_tabular_datasets_callbacks.ipynb`笔记本。
- en: Update your new notebook by commenting out the first call to `set_seed()` and
    rerun the whole notebook. What differences do you see in the output of `fit_one_cycle()`
    between the model with no callbacks and the model with an early stopping callback?
    What about differences in the output of `fit_one_cycle()` between the model with
    an early stopping callback and the model with both an early stopping and a model
    saving callback?
  id: totrans-448
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过注释掉第一次对`set_seed()`的调用并重新运行整个笔记本，更新你的新笔记本。在没有回调的模型和具有早期停止回调的模型之间，`fit_one_cycle()`的输出有什么不同？在有早期停止回调和同时具有早期停止以及模型保存回调的模型之间，`fit_one_cycle()`的输出有什么不同？
- en: Update your new notebook again by commenting out the second call to `set_seed()`
    and rerun the whole notebook. Now what differences do you see in the output of
    `fit_one_cycle()` between the model with no callbacks and the model with an early
    stopping callback? What about differences in the output of `fit_one_cycle()` between
    the model with an early stopping callback and the model with both an early stopping
    and a model saving callback?
  id: totrans-449
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过注释掉第二次对`set_seed()`的调用并重新运行整个笔记本，更新你的新笔记本。现在，在没有回调的模型和具有早期停止回调的模型之间，`fit_one_cycle()`的输出有什么不同？在有早期停止回调和同时具有早期停止以及模型保存回调的模型之间，`fit_one_cycle()`的输出有什么不同？
- en: Finally, update your notebook again by commenting out the final call to `set_seed()`
    and rerun the whole notebook again. Compare the results of the models again. Has
    anything changed?
  id: totrans-450
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，再次更新你的笔记本，通过注释掉对`set_seed()`的最终调用并重新运行整个笔记本。再次比较模型的结果，看看有什么变化吗？
- en: Congratulations! Hopefully, by following these steps, you have been able to
    prove to yourself the value of repeatable results. When you are comparing different
    variations of a model and you want to ensure you are getting an *apples-to-apples*
    comparison between variations, it can be very valuable to use the facilities in
    fastai to control the random initialization of aspects of the model so that you
    are guaranteed consistent results from multiple training runs.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！希望通过执行这些步骤，你能够证明可重复结果的价值。当你比较不同的模型变体，并且希望确保你在进行变体间的*公平比较*时，使用fastai中的工具来控制模型的随机初始化非常有价值，这样你就能确保多次训练运行中结果的一致性。
- en: Displaying multiple thumbnails in your image classification model deployment
  id: totrans-452
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在你的图像分类模型部署中显示多个缩略图
- en: 'In the *Displaying thumbnails in your image classification model deployment*
    recipe, you learned how to enhance the image classification deployment from the
    *Deploying a fastai model trained on an image dataset* recipe of [*Chapter 7*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*,
    Deployment and Model Maintenance*, by showing a thumbnail of the image selected
    for classification. You may recall that in the *Test your knowledge* section of
    [*Chapter 7*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*, Deployment and
    Model Maintenance*, you went through the exercise of enhancing the image classification
    model deployment by allowing the user to select multiple images for classification.
    What if you want to combine these two enhancements by allowing the user to select
    multiple images for classification and showing thumbnails of each selected image?
    Go through the following steps to explore how you would do this:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 在*展示缩略图在你的图像分类模型部署*的食谱中，你学会了如何通过展示选定用于分类的图像的缩略图来增强图像分类部署，这些内容来自[*第7章*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)
    *部署与模型维护*食谱。你可能还记得，在[*第7章*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178) *部署与模型维护*的*测试你的知识*部分，你进行了一个练习，通过允许用户选择多个图像进行分类来增强图像分类模型部署。如果你想将这两个增强功能结合起来，既允许用户选择多个图像进行分类，又展示每个选定图像的缩略图，该怎么做呢？请按照以下步骤来了解如何实现：
- en: Ensure you have completed the exercise in the *Test your knowledge* section
    of [*Chapter 7*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*, Deployment
    and Model Maintenance*, to create a deployment of the image classification model
    that allows the user to select multiple images to be classified. You will be updating
    the code you completed in that section so that it shows thumbnails of the selected
    images.
  id: totrans-454
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你已经完成了[*第7章*](B16216_07_Final_VK_ePub.xhtml#_idTextAnchor178)*“部署与模型维护”*部分中的*测试你的知识*章节，以创建一个允许用户选择多个图像进行分类的图像分类模型部署。你将更新你在该部分完成的代码，使其显示所选图像的缩略图。
- en: 'Make a copy, called `deploy_image_multi_test`, of the `deploy_image_test` directory
    where you created the multi-image classification deployment. To do this, make
    the directory that contains `deploy_image_test` your current directory and run
    the following command:'
  id: totrans-455
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制`deploy_image_test`目录，创建名为`deploy_image_multi_test`的副本，该目录包含你创建的多图像分类部署。为此，首先将包含`deploy_image_test`的目录设为当前目录，并运行以下命令：
- en: '[PRE51]'
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Make `deploy_image_multi_test/templates` your current directory. You will be
    making updates to the `home.html` file in this directory.
  id: totrans-457
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使`deploy_image_multi_test/templates`成为当前目录。你将对该目录中的`home.html`文件进行更新。
- en: 'In `home.html`, update the control for the file dialog to specify an `onchange`
    action of calling the `getFile()` JavaScript function. After the update, the control
    for the file dialog should look like this:'
  id: totrans-458
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`home.html`中，更新文件对话框控件，指定一个`onchange`动作来调用`getFile()` JavaScript函数。更新后，文件对话框控件应如下所示：
- en: '[PRE52]'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Define a new JavaScript function in `home.html` called `getFile()`. This function
    will be a generalization of the `getFile()` function you defined in the *Displaying
    thumbnails in your image classification model deployment* recipe:'
  id: totrans-460
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`home.html`中定义一个新的JavaScript函数，命名为`getFile()`。该函数将是你在*显示图像分类模型部署中的缩略图*配方中定义的`getFile()`函数的泛化：
- en: '[PRE53]'
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Here are the key items in this function definition:'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是该函数定义中的关键项目：
- en: a) `file_list = document.getElementById("image_field").files;` – specifies that
    `file_list` contains the list of files associated with the `image_field` file
    selector.
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `file_list = document.getElementById("image_field").files;` – 指定`file_list`包含与`image_field`文件选择器关联的文件列表。
- en: b) `var di_string = "displayImage"` – defines the `di_string` string that will
    be used as the prefix of the IDs of the image elements that will be added to the
    page.
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `var di_string = "displayImage"` – 定义`di_string`字符串，该字符串将用作将添加到页面的图像元素ID的前缀。
- en: c) `for (file_item of file_list)` – specifies that the `for` loop iterates through
    the items in `file_list`. For each item in `file_list`, an image element will
    be created to display the image associated with the item.
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) `for (file_item of file_list)` – 指定`for`循环遍历`file_list`中的项。对于`file_list`中的每个项，将创建一个图像元素以显示与该项关联的图像。
- en: d) `img_f[i] = document.createElement("img");` – defines a new `img_f[i]`image
    element on the page.
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) `img_f[i] = document.createElement("img");` – 在页面上定义一个新的`img_f[i]`图像元素。
- en: e) `var di_1 = di_string.concat(i)` – defines a `di_1` string using the `dl_string`
    prefix and the `i` index. For example, the first time through the loop, the value
    of `di_1` will be `displayImage1`.
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e) `var di_1 = di_string.concat(i)` – 使用`dl_string`前缀和`i`索引定义一个`di_1`字符串。例如，在循环的第一次执行中，`di_1`的值将是`displayImage1`。
- en: f) `img_f[i].setAttribute("id",di_1);` – assigns the `di_1` ID to the `img_f[i]`
    image element.
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: f) `img_f[i].setAttribute("id",di_1);` – 将`di_1` ID分配给`img_f[i]`图像元素。
- en: g) `document.body.appendChild(img_f[i]);` – adds the `img_f[i]` image element
    to the bottom of the page.
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: g) `document.body.appendChild(img_f[i]);` – 将`img_f[i]`图像元素添加到页面的底部。
- en: h) `document.getElementById(di_1).src = URL.createObjectURL(file_item);` – specifies
    that the image file associated with `file_item` is displayed in the `img_f[i]`
    image element.
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: h) `document.getElementById(di_1).src = URL.createObjectURL(file_item);` – 指定与`file_item`关联的图像文件将显示在`img_f[i]`图像元素中。
- en: With these changes, thumbnails for the files that the user selects in the file
    dialog will be displayed at the bottom of `home.html`.
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过这些更改，用户在文件对话框中选择的文件的缩略图将显示在`home.html`的底部。
- en: 'Now test whether everything works. Save your changes to `home.html`, make `deploy_image_multi_test`
    your current directory, and start the Flask server by running the following command:'
  id: totrans-472
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在测试一切是否正常。保存对`home.html`的更改，将`deploy_image_multi_test`设为当前目录，并通过运行以下命令启动Flask服务器：
- en: '[PRE54]'
  id: totrans-473
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Open `localhost:5000` in your browser to display `home.html`.
  id: totrans-474
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开`localhost:5000`以显示`home.html`。
- en: 'Select the `test_images` directory. If everything works, you should see thumbnails
    of each of the images you selected at the bottom of the page, as shown in *Figure
    8.44*:'
  id: totrans-475
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`test_images`目录。如果一切正常，你应该在页面底部看到你选择的每个图像的缩略图，如*图 8.44*所示：
- en: '![Figure 8.44 – home.html showing thumbnails for multiple selected images'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.44 – home.html 显示多个选定图像的缩略图'
- en: '](img/B16216_8_044.jpg)'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16216_8_044.jpg)'
- en: Figure 8.44 – home.html showing thumbnails for multiple selected images
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.44 – home.html 显示多个选定图像的缩略图
- en: Congratulations! You have combined two enhancements to the image classification
    deployment to allow your users to select multiple images for the model to classify
    and see thumbnails for the images they selected.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你！你已经结合了图像分类部署的两个增强功能，允许用户选择多个图像供模型分类，并查看他们所选图像的缩略图。
- en: Conclusion and additional resources on fastai
  id: totrans-480
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论和fastai的附加资源
- en: In this book, you have explored a broad range of the capabilities of the fastai
    framework. By adapting the recipes in this book, you should be able to apply fastai
    to create deep learning models to make predictions on a wide variety of datasets.
    You will also be able to deploy your models in simple web applications.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，你已经探索了fastai框架的广泛功能。通过调整书中的示例，你应该能够应用fastai创建深度学习模型，对各种数据集进行预测。你还将能够将你的模型部署到简单的Web应用程序中。
- en: 'There are many more capabilities in fastai beyond those covered in this book.
    Here are some additional fastai resources that you can use to learn more about
    the platform:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: fastai有许多超出本书内容的功能。以下是一些你可以使用的额外fastai资源，帮助你更深入了解该平台：
- en: To dig deeper into fastai, you can check out the online documentation for the
    framework (https://docs.fast.ai/).
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要更深入地了解fastai，你可以查看该框架的在线文档（https://docs.fast.ai/）。
- en: If you want a comprehensive guide to fastai, I highly recommend the outstanding
    book from Jeremy Howard (the originator of fastai) and Sylvain Gugger *Deep Learning
    for Coders with Fastai and PyTorch* ([https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch/dp/1492045527](https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch/dp/1492045527)).
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想要一本全面的fastai指南，我强烈推荐Jeremy Howard（fastai的创始人）和Sylvain Gugger的杰出著作*《Deep
    Learning for Coders with Fastai and PyTorch》*（[https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch/dp/1492045527](https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch/dp/1492045527)）。
- en: Jeremy Howard's YouTube channel ([https://www.youtube.com/user/howardjeremyp](https://www.youtube.com/user/howardjeremyp))
    is another excellent source of information about fastai, including videos of Howard's
    deep learning course built on fastai, *Practical Deep Learning for Coders* ([https://course.fast.ai/](https://course.fast.ai/)).
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeremy Howard的YouTube频道（[https://www.youtube.com/user/howardjeremyp](https://www.youtube.com/user/howardjeremyp)）是另一个关于fastai的优质信息来源，包括Howard基于fastai制作的深度学习课程视频*《Practical
    Deep Learning for Coders》*（[https://course.fast.ai/](https://course.fast.ai/)）。
- en: When you are ready to go even deeper, Zachary Mueller's *Walk with fastai* site
    ([https://walkwithfastai.com/](https://walkwithfastai.com/)) is a fantastic resource
    that consolidates many insights from the fastai forum ([https://forums.fast.ai/](https://forums.fast.ai/))
    along with Mueller's own encyclopedic understanding of the platform.
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你准备深入学习时，Zachary Mueller的*《Walk with fastai》*网站（[https://walkwithfastai.com/](https://walkwithfastai.com/)）是一个非常棒的资源，它整合了fastai论坛（[https://forums.fast.ai/](https://forums.fast.ai/)）的许多见解，以及Mueller对平台的百科全书式理解。
- en: Thank you for taking the time to read this book and following the recipes in
    it. I hope that you have found this book useful, and I encourage you to apply
    what you have learned to do great things by using fastai to harness the power
    of deep learning.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你花时间阅读本书并遵循书中的示例。我希望你觉得本书有用，并鼓励你应用所学的知识，利用fastai的深度学习力量做出伟大的事情。
