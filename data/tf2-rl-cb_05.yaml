- en: '*Chapter 5*: Reinforcement Learning in the Real World – Building Stock/Share
    Trading Agents'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 5 章*：现实世界中的强化学习——构建股票/股市交易智能体'
- en: Software-based **deep reinforcement learning** (**deep RL**) agents have tremendous
    potential when it comes to executing trading strategies tirelessly and flawlessly
    without limitations based on memory capacity, speed, efficiency, and emotional
    disturbances that a human trader is prone to facing. Profitable trading in the
    stock market involves carefully executing buy/sell trades with stock symbols/tickers
    while taking into account several market factors such as trading conditions and
    macro and micro market conditions, in addition to social, political, and company-specific
    changes. Deep RL agents have a lot of potential when it comes to solving challenging
    problems in the real world and a lot of opportunities exist.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 基于软件的**深度强化学习**（**深度 RL**）智能体在执行交易策略时具有巨大的潜力，能够不知疲倦且毫无瑕疵地执行任务，且不受人类交易员常见的内存容量、速度、效率以及情绪干扰等限制。股票市场中的盈利交易涉及在考虑多个市场因素（如交易条件、宏观和微观市场条件、社会、政治和公司特定变化）后，仔细执行买入/卖出交易，并处理股票符号/代码。深度
    RL 智能体在解决现实世界中的复杂问题时具有巨大潜力，并且存在大量的机会。
- en: 'However, only a few successful stories of using deep RL agents in the real
    world beyond games exist due to the various challenges associated with real-world
    deployments of RL agents. This chapter contains recipes that will help you successfully
    develop RL agents for yet another interesting and rewarding real-world problem:
    stock market trading. The recipes provided contain information on how to implement
    custom OpenAI Gym-compatible learning environments for stock market trading with
    both discrete and continuous value action spaces. In addition, you will learn
    how to build and train RL agents for stock trading learning environments.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于与现实世界中 RL 智能体部署相关的各种挑战，目前只有少数成功的案例，展示了深度强化学习（RL）智能体在游戏以外的现实世界中的应用。本章包含的食谱将帮助你成功地开发用于另一个有趣且有回报的现实世界问题——股票市场交易的
    RL 智能体。提供的食谱包含有关如何实现与 OpenAI Gym 兼容的股票市场交易学习环境的定制方法，这些环境包括离散和连续值的动作空间。此外，你还将学习如何为股票交易学习环境构建和训练
    RL 智能体。
- en: 'Specifically, the following recipes will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下食谱：
- en: Building a stock market trading RL platform using real stock exchange data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用真实股票交易数据构建股票市场交易强化学习平台
- en: Building a stock market trading RL platform using price charts
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用价格图表构建股票市场交易强化学习平台
- en: Building an advanced stock trading RL platform to train agents to mimic professional
    traders
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个先进的股票交易强化学习平台，训练智能体模仿专业交易员
- en: Let's get started!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The code in this book has been extensively tested on Ubuntu 18.04 and Ubuntu
    20.04 and should work with later versions of Ubuntu if Python 3.6+ is available.
    With Python 3.6+ installed, along with the necessary Python packages, as listed
    at the start of each of the recipes, the code should run fine on Windows and Mac
    OS X too. You should create and use a Python virtual environment named `tf2rl-cookbook`
    to install the packages and run the code in this book. Installing Miniconda or
    Anaconda for Python virtual environment management is recommended.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的代码已在 Ubuntu 18.04 和 Ubuntu 20.04 上进行了广泛测试，如果安装了 Python 3.6+，则应适用于更新版本的 Ubuntu。安装了
    Python 3.6+ 及所需的 Python 包（如每个章节开始时列出的包）后，代码也应能在 Windows 和 Mac OS X 上正常运行。你应该创建并使用名为
    `tf2rl-cookbook` 的 Python 虚拟环境来安装包并运行本书中的代码。建议安装 Miniconda 或 Anaconda 以便进行 Python
    虚拟环境管理。
- en: 'The complete code for each recipe in each chapter is available here: [https://github.com/PacktPublishing/Tensorflow-2-Reinforcement-Learning-Cookbook](https://github.com/PacktPublishing/Tensorflow-2-Reinforcement-Learning-Cookbook).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 每章中的完整代码可以在此处找到：[https://github.com/PacktPublishing/Tensorflow-2-Reinforcement-Learning-Cookbook](https://github.com/PacktPublishing/Tensorflow-2-Reinforcement-Learning-Cookbook)。
- en: Building a stock market trading RL platform using real stock exchange data
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用真实股票交易数据构建股票市场交易强化学习平台
- en: The stock market provides anyone with a highly lucrative opportunity to participate
    and make profits. While it is easily accessible, not all humans can make consistently
    profitable trades due to the dynamic nature of the market and the emotional aspects
    that can impair people's actions. RL agents take emotion out of the equation and
    can be trained to make profits consistently. This recipe will teach you how to
    implement a stock market trading environment that will teach your RL agents how
    to trade stocks using real stock market data. When you have trained them enough,
    you can deploy them so that they automatically make trades (and profits) for you!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 股票市场为任何人提供了一个高利润的机会，可以参与并赚取利润。虽然它易于接触，但并不是所有人都能持续获得盈利的交易，因为市场的动态性和情绪因素可能会影响人的决策。RL代理将情绪因素排除在外，并可以训练成持续盈利的交易者。这个配方将教你如何实现一个股票市场交易环境，让你的RL代理学习如何使用真实的股市数据进行交易。当你训练足够后，你可以部署它们，让它们自动为你进行交易（并赚钱）！
- en: Getting ready
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备开始
- en: 'To complete this recipe, make sure you have the latest version. You will need
    to activate the `tf2rl-cookbook` Python/conda virtual environment. Make sure you
    update the environment so that it matches the latest conda environment specification
    file (`tfrl-cookbook.yml`), which can be found in this cookbook''s code repository.
    If the following `import` statements run without any issues, you are ready to
    get started:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此配方，请确保您拥有最新版本。您需要激活`tf2rl-cookbook`的Python/conda虚拟环境。请确保更新环境，以便它与最新的conda环境规范文件（`tfrl-cookbook.yml`）匹配，您可以在本烹饪书的代码库中找到该文件。如果以下`import`语句运行没有任何问题，您就可以开始了：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How to do it…
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow this step-by-step process to implement `StockTradingEnv`:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下逐步流程来实现`StockTradingEnv`：
- en: 'Let''s initialize the configurable parameters of the environment:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们初始化环境的可配置参数：
- en: '[PRE1]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let''s initialize the `StockTradingEnv` class and load the stock market data
    for the configured stock ticker symbol:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们初始化`StockTradingEnv`类并加载配置的股票交易代码的数据：
- en: '[PRE2]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s make sure that the stock market data source exists and then load the
    data stream:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们确保股票市场数据源存在，然后加载数据流：
- en: '[PRE3]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We are now ready to define the observation and action space/environment in
    order to complete our initialization function definition:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们准备好定义观察空间和动作空间/环境，以便完成初始化函数的定义：
- en: '[PRE4]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, we will implement a method so that we can gather observations:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将实现一个方法，以便收集观察数据：
- en: '[PRE5]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, to execute a trade order, we need the required logic to be in place.
    Let''s add this now:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，为了执行交易订单，我们需要确保相关逻辑已经就位。让我们现在添加这个：
- en: '[PRE6]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'With the initialization done, we can add the logic for buying stock:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化完成后，我们可以添加买入股票的逻辑：
- en: '[PRE7]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Likewise, we can now add the logic for selling stock:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，我们现在可以添加卖出股票的逻辑：
- en: '[PRE8]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Finally, let''s update the account balance:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，让我们更新账户余额：
- en: '[PRE9]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We are now ready to fire and check out the new environment:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在准备好启动并检查新环境了：
- en: '[PRE10]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How it works…
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: The observations are stock price information (OHLCV) over a horizon, as specified
    in `env_config`. The action space is discrete to allow us to perform buy/sell/hold
    trades. This is a starter environment for RL agents to learn to trade stocks in
    the stock market. Happy training!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 观察是股票价格信息（OHLCV），在`env_config`中指定的时间范围内。动作空间是离散的，以便我们可以执行买入/卖出/持有操作。这是一个为RL代理设计的入门环境，旨在帮助其学习在股市中进行交易。祝您训练愉快！
- en: Building a stock market trading RL platform using price charts
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用价格图表构建股票市场交易RL平台
- en: Human traders look at several indicators on their price monitor in order to
    vet and identify a potential trade. Can we allow the agents to also visually look
    at the price candlestick charts to trade stocks instead of providing just a tabular/CSV
    representation? Yes, we can! This recipe will teach you how to build a visually
    rich trading environment for your RL agents.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 人类交易者会查看多个指标来分析和识别潜在交易。我们能否也允许代理通过查看价格蜡烛图来进行交易，而不是仅仅提供表格/CSV表示？当然可以！这个配方将教你如何为你的RL代理构建一个视觉丰富的交易环境。
- en: Getting ready
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备开始
- en: 'To complete this recipe, make sure you have the latest version. You will need
    to activate the `tf2rl-cookbook` Python/conda virtual environment. Make sure that
    you update the environment so that it matches the latest conda environment specification
    file (`tfrl-cookbook.yml`), which can be found in this cookbook''s code repository.
    If the following `import` statements run without any issues, you are ready to
    get started:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成本教程，请确保你使用的是最新版本。你需要激活`tf2rl-cookbook` Python/conda虚拟环境。确保更新环境，使其与最新的conda环境规范文件（`tfrl-cookbook.yml`）匹配，该文件可以在本教程的代码库中找到。如果以下`import`语句没有问题，那么你就准备好开始了：
- en: '[PRE11]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: How to do it…
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现……
- en: Let's start by configuring the environment. Then, we will guide you through
    the process of completing the implementation. By the end of this recipe, you will
    have built a complete stock trading RL environment that allows an agent to process
    visual stock charts and make trading decisions.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从配置环境开始。接下来，我们将带你完成实现的过程。在本教程结束时，你将构建一个完整的股票交易RL环境，允许智能体处理可视化的股票图表并做出交易决策。
- en: 'Let''s get started:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧：
- en: 'Configure the learning environment, as follows:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置学习环境，具体如下：
- en: '[PRE12]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Let''s implement the initialization step for `StockTradingVisualEnv`:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们实现`StockTradingVisualEnv`的初始化步骤：
- en: '[PRE13]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Let''s complete the implementation of the `__init__` method:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们完成`__init__`方法的实现：
- en: '[PRE14]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The next step to is the define the `step` method for the environment:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是为环境定义`step`方法：
- en: '[PRE15]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Let''s implement the two missing methods we used in the preceding step. To
    implement the `get_observation` method, we will need the `TradeVisualizer` method
    to be initialized. Due to this, let''s implement the `reset` method first:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们实现前一步中用到的两个缺失的方法。为了实现`get_observation`方法，我们需要初始化`TradeVisualizer`方法。鉴于此，让我们首先实现`reset`方法：
- en: '[PRE16]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, let''s continue with our implementation of the `get_observation` method:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们继续实现`get_observation`方法：
- en: '[PRE17]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'It''s time to implement the logic that will execute the trade actions taken
    by the agent. We''ll split our implementation of the trade execution logic into
    the next three steps:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是时候实现执行智能体交易动作的逻辑了。我们将把交易执行逻辑的实现分为接下来的三步：
- en: '[PRE18]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Let''s implement the logic to execute `"buy"` orders:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们实现执行“买入”订单的逻辑：
- en: '[PRE19]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now, let''s take care of handling `"sell"` orders:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们处理“卖出”订单：
- en: '[PRE20]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'With that, our implementation is complete! We are now ready to test the environment
    using a randomly acting agent:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 到这里，我们的实现就完成了！现在我们可以使用一个随机动作的智能体来测试环境：
- en: '[PRE21]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: How it works…
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: 'The observations in `StockTradingVisualEnv` are stock price information (OHLCV)
    over a horizon, as specified in `env_config`. The action space is discrete so
    that we can buy/sell/hold trades. More specifically, the action has the following
    meaning: 0-> Hold; 1-> Buy; 2 ->Sell.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`StockTradingVisualEnv`中的观测值是一个时间范围内的股票价格信息（OHLCV），如`env_config`中所指定。动作空间是离散的，因此我们可以进行买入/卖出/持有交易。更具体地，动作具有以下含义：0->持有；1->买入；2->卖出。'
- en: 'The following image illustrates the environment in action:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了环境的运行情况：
- en: '![Figure 5.1 – A sample screenshot of StockTradingVisualEnv in action ](img/B15074_05_01.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图5.1 – StockTradingVisualEnv运行的示例截图](img/B15074_05_01.jpg)'
- en: Figure 5.1 – A sample screenshot of StockTradingVisualEnv in action
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1 – StockTradingVisualEnv运行的示例截图
- en: Building an advanced stock trading RL platform to train agents to mimic professional
    traders
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建一个先进的股票交易RL平台，训练智能体模仿专业交易员
- en: This recipe will help you implement a complete stock trading environment with
    high-dimensional image observation spaces and continuous action spaces for training
    your RL and deep RL agents. This will allow you to build intelligent trading bots
    using RL so that you can closely approximate how a professional stock trader would
    trade stocks. Like a professional trader, the RL agent you'll train will watch
    the stock market data in the form of candlesticks and price line charts and make
    trading decisions. A well-trained RL agent could potentially make thousands of
    profitable trades without needing a break or commission, unlike a human professional
    trader, thereby increasing your profits!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将帮助你实现一个完整的股票交易环境，具有高维图像观测空间和连续动作空间，用于训练你的RL和深度RL智能体。这将使你能够使用强化学习（RL）构建智能交易机器人，进而模拟专业股票交易员的交易方式。像专业交易员一样，你训练的RL智能体将通过蜡烛图和价格线图的形式观察股票市场数据，并做出交易决策。一个经过良好训练的RL智能体，可能在不需要休息或佣金的情况下进行数千次盈利交易，与人类专业交易员不同，从而大大提高你的利润！
- en: Getting ready
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 正在准备中
- en: 'To complete this recipe, make sure you have the latest version. You will need
    to activate the `tf2rl-cookbook` Python/conda virtual environment. Make sure that
    you update the environment so that it matches the latest conda environment specification
    file (`tfrl-cookbook.yml`), which can be found in this cookbook''s code repository.
    If the following `import` statements run without any issues, you are ready to
    get started:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此配方，请确保您拥有最新版本。您需要激活 `tf2rl-cookbook` Python/conda 虚拟环境。确保更新环境，使其与最新的 conda
    环境规范文件（`tfrl-cookbook.yml`）匹配，该文件可以在本书的代码仓库中找到。如果以下的 `import` 语句没有问题，则表示您可以开始了：
- en: '[PRE22]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How to do it…
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现…
- en: 'By now, you must be familiar with the basic flow of the implementation from
    having worked through the previous recipes in this chapter. Follow these steps
    to put together a complete stock trading environment from scratch for training
    your advanced RL agents:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，通过在本章中完成之前的配方，你应该已经熟悉了实现的基本流程。按照这些步骤，你可以从零开始构建一个完整的股市交易环境，用于训练你的高级 RL
    智能体：
- en: 'Let''s begin our implementation of `StockTradingVisualContinuousEnv`:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们开始实现 `StockTradingVisualContinuousEnv`：
- en: '[PRE23]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Let''s define the state space, action space, and other essential variables
    to complete the `__init__` function''s implementation:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们定义状态空间、动作空间和其他必要的变量，以完成 `__init__` 方法的实现：
- en: '[PRE24]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Next, let''s implement the `get_observation` method:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们来实现 `get_observation` 方法：
- en: '[PRE25]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Let''s initialize the trade execution logic:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们初始化交易执行逻辑：
- en: '[PRE26]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'We are now ready to define the behavior of a `"buy"` action:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们准备好定义 `"buy"` 动作的行为了：
- en: '[PRE27]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Similarly, we can define the behavior of the `"sell"` action and update the
    account balance to finalize the method''s implementation:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似地，我们可以定义 `"sell"` 动作的行为，并更新账户余额来完成该方法的实现：
- en: '[PRE28]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We are now ready to implement the `step` method, which allows the agent to
    step through the environment:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在准备好实现 `step` 方法，该方法允许智能体在环境中执行一步操作：
- en: '[PRE29]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Next, let''s implement the `reset()` method, which will be executed at the
    start of every episode:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们实现 `reset()` 方法，该方法将在每个训练回合开始时执行：
- en: '[PRE30]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Let''s finalize our implementation of the environment by implementing the `render`
    and `close` methods:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过实现 `render` 和 `close` 方法来完成环境的实现：
- en: '[PRE31]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now, it''s time for you to get one of the agents you built as part of the previous
    chapter to train and test this real data-backed stock market trading environment.
    For now, let''s test the environment with a simple, random agent:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，是时候让你在上一章中构建的一个智能体来训练和测试这个真实数据支持的股市交易环境了。现在，让我们用一个简单的随机智能体来测试这个环境：
- en: '[PRE32]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: How it works…
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: 'To simulate a stock market, a real stock market data stream must be used. An
    offline file-based stream is utilized as an alternative to a web-based API, which
    would require internet connectivity and potentially a user account to fetch market
    data. The file stream contains the market data in a standard format: Date, Open,
    High, Low, Close, Adj-Close, and Volume.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 为了模拟股市，必须使用真实的股市数据流。我们使用离线基于文件的数据流作为替代，避免了需要互联网连接和可能需要用户账户来获取市场数据的网页 API。该文件流包含标准格式的市场数据：日期、开盘、最高、最低、收盘、调整收盘和成交量。
- en: 'The agent observes the stock market data in the form of candlestick price charts,
    as shown in the following image for your reference:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 智能体以蜡烛图的形式观察股市数据，下面的图像供你参考：
- en: '![Figure 5.2 – Visual observation of StockTradingVisualContinuousEnvironment
    ](img/B15074_05_02.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.2 – StockTradingVisualContinuousEnvironment 的视觉观察](img/B15074_05_02.jpg)'
- en: Figure 5.2 – Visual observation of StockTradingVisualContinuousEnvironment
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2 – StockTradingVisualContinuousEnvironment 的视觉观察
- en: 'The agent''s action and learning progress can be seen in the following image,
    which was generated by the `render()` method:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 智能体的动作和学习进度可以从以下图像中看到，该图像是通过 `render()` 方法生成的：
- en: '![Figure 5.3 – Visualization of the live account balance and the trade actions
    taken by the agent in the current time window ](img/B15074_05_03.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.3 – 实时账户余额和智能体在当前时间窗口内执行的交易动作的可视化](img/B15074_05_03.jpg)'
- en: Figure 5.3 – Visualization of the live account balance and the trade actions
    taken by the agent in the current time window
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3 – 实时账户余额和智能体在当前时间窗口内执行的交易动作的可视化
- en: That concludes this recipe and this chapter. Happy training!
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是本配方和本章的内容。祝训练愉快！
