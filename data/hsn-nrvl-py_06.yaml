- en: Pole-Balancing Experiments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 杆平衡实验
- en: In this chapter, you will learn about a classic reinforcement learning experiment,
    which is also an established benchmark for testing various implementations of
    the control strategies. In this chapter, we consider three modifications of the
    cart-pole balancing experiment and develop control strategies that can be used
    to stabilize the cart-pole apparatuses of given configurations. You will learn
    how to write accurate simulations of real-life physical systems and how to use
    them for a definition of the objective function for the NEAT algorithm. After
    this chapter, you will be ready to apply the NEAT algorithm to implement controllers
    that can be directly used to control physical appliances.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解一个经典的强化学习实验，它也是测试各种控制策略实现的既定基准。在本章中，我们考虑了小车-杆平衡实验的三个修改版本，并开发了可用于稳定给定配置的小车-杆装置的控制策略。你将学习如何编写真实物理系统的准确模拟，以及如何使用它们为NEAT算法定义目标函数。在本章之后，你将准备好应用NEAT算法来实现可以直接用于控制物理设备的控制器。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: The single-pole balancing problem in reinforcement learning
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强化学习中的单杆平衡问题
- en: Implementation of the simulator of the cart-pole apparatus in Python
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python中实现小车-杆装置模拟器的实现
- en: How to define the objective function of a single-pole balancing controller using
    the simulator
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用模拟器定义单杆平衡控制器的目标函数
- en: The peculiarities of the double-pole balancing problem
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双杆平衡问题的特殊性
- en: Implementation of the simulator of the cart-pole apparatus with two poles in
    Python
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python中实现具有两杆的小车-杆装置模拟器的实现
- en: How to define the objective function for the double-pole balancing controller
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何为双杆平衡控制器定义目标函数
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The following technical requirements should be met to execute the experiments
    described in this chapter:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行本章中描述的实验，应满足以下技术要求：
- en: Windows 8/10, macOS 10.13 or newer, modern Linux
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 8/10，macOS 10.13或更新的版本，现代Linux
- en: Anaconda Distribution version 2019.03 or newer
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda Distribution版本2019.03或更新的版本
- en: The code for this chapter can be found at [https://github.com/PacktPublishing/Hands-on-Neuroevolution-with-Python/tree/master/Chapter4](https://github.com/PacktPublishing/Hands-on-Neuroevolution-with-Python/tree/master/Chapter4)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码可以在[https://github.com/PacktPublishing/Hands-on-Neuroevolution-with-Python/tree/master/Chapter4](https://github.com/PacktPublishing/Hands-on-Neuroevolution-with-Python/tree/master/Chapter4)找到
- en: The single-pole balancing problem
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单杆平衡问题
- en: The single-pole balancer (or *inverted pendulum*) is an unstable pendulum that
    has its center of mass above its pivot point. It can be stabilized by applying
    external forces under the control of a specialized system that monitors the angle
    of the pole and moves the pivot point horizontally back and forth under the center
    of mass as it starts to fall. The single-pole balancer is a classic problem in
    dynamics and control theory that is used as a benchmark for testing control strategies,
    including strategies based on reinforcement learning methods. We are particularly
    interested in the implementation of the specific control algorithm that uses neuroevolution-based
    methods to stabilize the inverted pendulum for a given amount of time.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 单杆平衡器（或*倒立摆*）是一个不稳定的摆，其质心位于其支点之上。通过应用外部力，在监控杆角度并使支点在质心下方左右移动以防止摆动开始下落时，可以将其稳定。单杆平衡器是动力学和控制理论中的一个经典问题，被用作测试控制策略的基准，包括基于强化学习方法的策略。我们特别感兴趣的是实现使用基于神经进化的方法稳定倒立摆的特定控制算法。
- en: 'The experiment described in this chapter considers the simulation of the inverted
    pendulum implemented as a cart that can move horizontally with a pivot point mounted
    on top of it, that is, the cart and pole apparatus. The apparatus is shown in
    the following diagram:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中描述的实验考虑了作为可以水平移动的带有顶部安装支点的车的倒立摆的模拟。该装置在以下图中显示：
- en: '![](img/04194552-ebae-4b1d-9065-f5b8b24bd0d3.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/04194552-ebae-4b1d-9065-f5b8b24bd0d3.png)'
- en: The cart and single-pole apparatus
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 小车和单杆装置
- en: Before we start writing the source code of the simulator, we need to determine
    the equation of motion that can be used to estimate the values of the state variables
    of the pole balancer at any given time.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写模拟器的源代码之前，我们需要确定可以用来估计平衡杆在任何给定时间的状态变量值的运动方程。
- en: The equations of motion of the single-pole balancer
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单平衡杆运动方程
- en: The goal of the controller is to exert a sequence of forces, ![](img/da59aea6-7aaf-4dcc-b9b9-71b57429240c.png),
    on the center of mass of the cart such that the pole balanced for a specific (or
    infinite) amount of time and the cart stays within the track, that is, doesn't
    hit left or right walls. Taking into account the mechanics described here, we
    can qualify the pole-balancing task as an *avoidance control problem*, because
    the state of the cart-pole apparatus must be maintained to avoid certain regions
    of the state space. No unique solution exists for appropriate state estimation,
    and any solution of equations of motion that enables the avoidance of certain
    regions is acceptable.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器的目标是施加一系列力，![](img/da59aea6-7aaf-4dcc-b9b9-71b57429240c.png)，在小车的质心处，使得平衡杆在特定（或无限）时间内保持平衡，并且小车保持在轨道内，即不撞击左右墙壁。考虑到这里描述的力学，我们可以将平衡杆任务定性为*避障控制问题*，因为必须保持小车-平衡杆装置的状态以避免状态空间中的某些区域。对于适当的状态估计不存在唯一解，任何能够避免某些区域的运动方程的解都是可接受的。
- en: 'The learning algorithm needs to receive a minimal amount of knowledge about
    the task from the environment to train the pole-balancing controller. Such knowledge
    should reflect how close our controller is to the goal. The goal of the pole-balancing
    problem is to stabilize an inherently unstable system and keep it balanced for
    as long as possible. Thus, the reinforcement signal (![](img/26ea1e55-3d34-4214-8331-06b49b30babf.png))
    received from the environment must reflect the occurrence of a failure. The failure
    can be caused either by the pole falling past a predefined angle or the cart hitting
    the boundaries of the track. The reinforcement signal, ![](img/bd9c30b3-3068-43dd-b7d3-1095f8352daf.png),
    can be defined as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 学习算法需要从环境中接收关于任务的最小知识量来训练平衡杆控制器。这种知识应该反映我们的控制器离目标有多近。平衡杆问题的目标是稳定一个本质上不稳定的系统，并尽可能长时间地保持平衡。因此，从环境中接收到的强化信号
    (![](img/26ea1e55-3d34-4214-8331-06b49b30babf.png)) 必须反映失败的发生。失败可能是由于平衡杆超过预定义的角度或小车撞击轨道边界造成的。强化信号，![](img/bd9c30b3-3068-43dd-b7d3-1095f8352daf.png)，可以定义为以下内容：
- en: '![](img/7d4d96cc-9586-408a-a885-40932a4e22cf.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d4d96cc-9586-408a-a885-40932a4e22cf.png)'
- en: In this equation, ![](img/d8e041b6-58a4-4246-a4a9-573157c6ed86.png) is the angle
    between the pole and vertical positive in a clockwise direction, and ![](img/2396aff1-1592-49c4-a48d-8ff923372a48.png)
    is the horizontal position of the cart relative to the track.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方程中，![](img/d8e041b6-58a4-4246-a4a9-573157c6ed86.png) 是平衡杆与垂直正方向顺时针方向的夹角，而
    ![](img/2396aff1-1592-49c4-a48d-8ff923372a48.png) 是小车相对于轨道的水平位置。
- en: Note that the reinforcement signal, ![](img/8dab6ab8-0563-45f3-9987-f3b998fd51a9.png),
    doesn't depend on either the angular pole velocity (![](img/3a0f38ae-f21b-4581-98b9-2519f93c205f.png))
    or the horizontal cart speed (![](img/69dc9bb7-9be3-4dc6-b951-1dcc2e2483a8.png)).
    It only provides information on whether the dynamics of the cart-pole system is
    within defined constraints.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，强化信号，![](img/8dab6ab8-0563-45f3-9987-f3b998fd51a9.png)，既不依赖于角平衡杆速度 (![](img/3a0f38ae-f21b-4581-98b9-2519f93c205f.png))，也不依赖于水平小车速度
    (![](img/69dc9bb7-9be3-4dc6-b951-1dcc2e2483a8.png))。它只提供关于小车-平衡杆系统的动力学是否在定义的约束之内信息。
- en: 'The motion-dynamic equations for the cart-pole system, ignoring friction, are
    as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 忽略摩擦的小车-平衡杆系统的运动动力学方程如下：
- en: '![](img/b872602d-f323-45d6-bd34-bf79162e33db.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b872602d-f323-45d6-bd34-bf79162e33db.png)'
- en: '![](img/569d99aa-eb6f-4478-b2ab-cf9019ff492c.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/569d99aa-eb6f-4478-b2ab-cf9019ff492c.png)'
- en: In this equation, ![](img/a74032f1-8797-452d-aba9-88d20e0a3138.png) is the angular
    velocity of the pole, and ![](img/a563f582-b8d8-459d-8399-b1d20863f099.png) is
    the angular acceleration of the pole. Furthermore, ![](img/75f31906-f413-4400-9508-27f1c3d199c4.png)
    is the horizontal velocity of the cart and ![](img/f4d891cd-5fec-4d08-b2ab-70bf4e6c49d3.png)
    is the acceleration of the cart along the ![](img/5bc9487f-6bb1-4e33-9c68-c8b5040bf8c5.png)-axis.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方程中， ![](img/a74032f1-8797-452d-aba9-88d20e0a3138.png) 是杆的角速度，而 ![](img/a563f582-b8d8-459d-8399-b1d20863f099.png)
    是杆的角加速度。此外， ![](img/75f31906-f413-4400-9508-27f1c3d199c4.png) 是购物车的水平速度，而 ![](img/f4d891cd-5fec-4d08-b2ab-70bf4e6c49d3.png)
    是购物车沿 ![](img/5bc9487f-6bb1-4e33-9c68-c8b5040bf8c5.png)-轴的加速度。
- en: 'In our experiment, the following system parameters are used:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的实验中，使用了以下系统参数：
- en: '![](img/c3b5660e-a3be-4e08-9895-3ca305f63b0a.png)  is the mass of the cart.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/c3b5660e-a3be-4e08-9895-3ca305f63b0a.png) 是购物车的质量。'
- en: '![](img/6fc8f666-84e7-4697-8c44-6e6e6b42a62d.png)  is the mass of the pole.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/6fc8f666-84e7-4697-8c44-6e6e6b42a62d.png) 是杆的质量。'
- en: '![](img/0c6ee46a-7895-45dd-8f53-a40ee215dfb7.png)  is the distance from the
    center of mass of the pole to the pivot.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/0c6ee46a-7895-45dd-8f53-a40ee215dfb7.png) 是杆质心到支点的距离。'
- en: '![](img/766ff045-f59f-45b1-a859-2f2276c99c6d.png) is the acceleration due to
    gravity.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/766ff045-f59f-45b1-a859-2f2276c99c6d.png) 是重力加速度。'
- en: State equations and control actions
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 状态方程和控制动作
- en: 'The cart-pole system for the experiment is simulated by numerically approximating
    the equations of motion using Euler''s method with a time step of ![](img/15d32731-3561-401b-8c1f-2572a9e32d62.png)
    seconds. Thus, the state equations can be defined as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 实验中使用的购物车-杆系统是通过使用步长为 ![](img/15d32731-3561-401b-8c1f-2572a9e32d62.png) 秒的欧拉方法数值近似运动方程来模拟的。因此，状态方程可以定义为如下：
- en: '![](img/eb31ceb3-2e5c-4a37-a79b-7971acad5a74.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eb31ceb3-2e5c-4a37-a79b-7971acad5a74.png)'
- en: '![](img/9ab5e970-1363-42a8-a143-6065a69b8222.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ab5e970-1363-42a8-a143-6065a69b8222.png)'
- en: '![](img/db3b725e-234b-4f0a-810a-614033f041c7.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/db3b725e-234b-4f0a-810a-614033f041c7.png)'
- en: '![](img/9f5d47cd-9318-4420-8c73-3c4928712df9.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9f5d47cd-9318-4420-8c73-3c4928712df9.png)'
- en: 'For a small range of pole angles, as used in our experiment, we can use the
    linear approximation of the surface that divides the space of all possible states
    of the system that require different actions (the switching surface). Thus, the
    action space consists of left and right push actions. The cart-pole controller
    that we use in our experiment is not designed to produce a zero force. Instead,
    at each time step, ![](img/a9bcebe7-b837-4fb4-94c3-8321270bb1d5.png), it applies
    a force to the cart''s center of mass with equal amplitude, but in the opposite
    direction. Such a control system has a name (*bang-bang controller*) and can be
    defined with the following equation:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于实验中使用的极小范围的杆角度，我们可以使用分割系统所有可能状态空间（切换表面）的表面的线性近似。因此，动作空间由左右推动作组成。我们在实验中使用的购物车-杆控制器不是为了产生零力。相反，在每一个时间步， ![](img/a9bcebe7-b837-4fb4-94c3-8321270bb1d5.png)，它对购物车质心施加一个等幅的力，但方向相反。这种控制系统有一个名字（*bang-bang
    控制器*）并且可以用以下方程定义：
- en: '![](img/f0b8468b-d784-4fd5-b5fa-773694a2f120.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0b8468b-d784-4fd5-b5fa-773694a2f120.png)'
- en: In this equation, ![](img/96c1b1e3-df69-433d-b53c-a747378fe6f6.png) is an action
    signal received from the solver. Given the action value, the bang-bang controller
    applies the force, ![](img/a7c80f82-cb8e-4b5b-b2f0-6902d406c4bb.png), of the same
    magnitude (`10` Newtons) but in the opposite direction, depending on the action
    selected.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方程中， ![](img/96c1b1e3-df69-433d-b53c-a747378fe6f6.png) 是从求解器接收到的动作信号。给定动作值后，bang-bang
    控制器应用相同大小（`10` 牛顿）但方向相反的力， ![](img/a7c80f82-cb8e-4b5b-b2f0-6902d406c4bb.png)，取决于所选的动作。
- en: The interactions between the solver and the simulator
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 求解器和模拟器之间的交互
- en: 'The solver receives scaled values of the state variables described previously
    at each given time, ![](img/bad9077a-b37c-4c92-ab5e-c3ce78033789.png). These values
    serve as inputs to the ANNs created from the phenotypes of the solver genomes
    and are defined as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 求解器在每个给定的时间点接收之前描述的状态变量的缩放值， ![](img/bad9077a-b37c-4c92-ab5e-c3ce78033789.png)。这些值作为从求解器基因组表型创建的
    ANNs 的输入，并定义为如下：
- en: '![](img/27403595-0fc3-41f3-9f56-f017f9ac11d8.png),'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/27403595-0fc3-41f3-9f56-f017f9ac11d8.png),'
- en: '![](img/a96e3891-a4dc-45bc-816f-19edc4c593b9.png),'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/a96e3891-a4dc-45bc-816f-19edc4c593b9.png),'
- en: '![](img/7aed04f2-fdda-4b48-b276-6f3591bca4c8.png),'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/7aed04f2-fdda-4b48-b276-6f3591bca4c8.png),'
- en: '![](img/7f6d4b84-7103-4c6a-a5b2-eb32f337b7e6.png),'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/7f6d4b84-7103-4c6a-a5b2-eb32f337b7e6.png),'
- en: '![](img/6ec11018-42cc-4fbe-b4f4-3c52ddebbab5.png).'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/6ec11018-42cc-4fbe-b4f4-3c52ddebbab5.png).'
- en: In the first equation, ![](img/1029b3f4-cc37-405c-8a2e-cb1fcd3e1c8f.png) is
    a constant bias value and ![](img/bed0a79c-afd6-4d3e-954e-bf18119af381.png) correspond
    to the cart's horizontal position, its horizontal speed, the pole angle from vertical,
    and its angular speed, respectively.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个方程中，![](img/1029b3f4-cc37-405c-8a2e-cb1fcd3e1c8f.png) 是一个常量偏置值，而 ![](img/bed0a79c-afd6-4d3e-954e-bf18119af381.png)
    分别对应于购物车的水平位置、其水平速度、从垂直方向测量的极角以及其角速度。
- en: 'Taking into account the system constraints defined previously (see ![](img/5405e25b-263b-4b23-9a7c-bb926b1f6e7f.png)),
    the scaled values of ![](img/0020bc36-496d-45a9-a6cb-e07d173269f6.png) and ![](img/92d3c005-8913-4062-a2cd-0875e6ffcdde.png)
    are guaranteed to be within the `[0,1]` range, while the scaled values of ![](img/88387d60-8a76-48dd-95ac-74cfaf15c01b.png)
    and ![](img/94eef5a7-8b78-44aa-95ce-e3ad28939679.png) mostly fall within the `[0,1]` range,
    but can fall outside these bounds eventually. The state variables are scaled to
    accomplish the two essential goals:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到之前定义的系统约束（参见 ![](img/5405e25b-263b-4b23-9a7c-bb926b1f6e7f.png)），![](img/0020bc36-496d-45a9-a6cb-e07d173269f6.png)
    和 ![](img/92d3c005-8913-4062-a2cd-0875e6ffcdde.png) 的缩放值保证在 `[0,1]` 范围内，而 ![](img/88387d60-8a76-48dd-95ac-74cfaf15c01b.png)
    和 ![](img/94eef5a7-8b78-44aa-95ce-e3ad28939679.png) 的缩放值大多落在 `[0,1]` 范围内，但最终可能超出这些界限。状态变量被缩放以实现两个基本目标：
- en: To remove the learning bias that can arise when terms with predominantly large
    magnitudes have a more significant impact on the learner due to the rounding effects.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了消除当具有主要大值的项由于舍入效应而对学习者产生更大影响时可能出现的学习偏差。
- en: For this particular task, since the values of state variables are centered around
    zero, it is possible to find an ANN solver that doesn't need any hidden units.
    However, we are interested in evolving the topology of neural networks with the
    NEAT algorithm. The introduced scaling scheme ensures that the neuroevolution
    process eventually produces phenotypes that encode the hidden units.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于这个特定任务，由于状态变量的值围绕零中心，可以找到一个不需要任何隐藏单元的ANN求解器。然而，我们感兴趣的是使用NEAT算法进化神经网络的拓扑结构。引入的缩放方案确保神经进化过程最终产生编码隐藏单元的表型。
- en: The pole-balancing controller takes the scaled inputs and produces an output
    that is a binary value determining the action to be applied at time ***t***, as
    discussed earlier. The sampling rate of the state variables of the cart-pole system
    and the rate at which the control force is applied are the same as the simulation
    rate, ![](img/f6062caf-1343-4a5e-ad79-7a21226005d7.png).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 极平衡控制器接收缩放后的输入并产生一个输出，该输出是一个二进制值，用于确定在之前讨论的时间 ***t*** 应该应用的动作。购物车-杆系统的状态变量采样率以及施加控制力的速率与仿真速率相同，![](img/f6062caf-1343-4a5e-ad79-7a21226005d7.png)。
- en: 'Thus, the initial configuration of the controller''s ANN can be depicted as
    follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，控制器ANN的初始配置可以描述如下：
- en: '![](img/1664e358-d178-4ce9-8b25-1ff3c52f5243.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1664e358-d178-4ce9-8b25-1ff3c52f5243.png)'
- en: The initial ANN configuration of a single-pole balancing controller
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 单极平衡控制器ANN的初始配置
- en: The initial configuration of the single-pole balancing controller's ANN includes
    five input nodes for the horizontal position of the cart (**x1**) and its velocity
    (**x2**), for the vertical angle of the pole (**x3**) and its angular velocity (**x4**),
    and an additional input node for bias (**x0**) (*which can be optional depending
    on the particular NEAT library used*). The output node (**a**) is a binary node
    providing the control signal to the [`0` or `1`] application. The hidden node
    (**h**) is optional and can be skipped.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 单极平衡控制器ANN的初始配置包括五个输入节点，用于购物车的水平位置（**x1**）及其速度（**x2**），杆的垂直角度（**x3**）及其角速度（**x4**），以及一个额外的偏置输入节点（**x0**）（*这可以根据特定NEAT库的使用情况是可选的*）。输出节点（**a**）是一个二进制节点，提供控制信号到[`0`或`1`]应用。隐藏节点（**h**）是可选的，可以跳过。
- en: Objective function for a single-pole balancing experiment
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单极平衡实验的目标函数
- en: 'Our goal is to create a pole balancing controller that''s able to maintain
    a system in a stable state within defined constraints for as long as possible,
    but at least for the expected number of time steps specified in the experiment
    configuration (500,000). Thus, the objective function must optimize the duration
    of stable pole-balancing and can be defined as the logarithmic difference between
    the expected number of steps and the actual number of steps obtained during the
    evaluation of the phenotype ANN. The loss function is given as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标是创建一个能够尽可能长时间（但至少为实验配置中指定的预期时间步数，即500,000步）在定义的约束内保持系统稳定状态的极平衡控制器。因此，目标函数必须优化稳定极平衡的持续时间，可以定义为预期步数与在评估表现型ANN期间获得的实际步数之间的对数差。损失函数如下所示：
- en: '![](img/b6168406-2921-4200-b53b-075bb365fc0b.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6168406-2921-4200-b53b-075bb365fc0b.png)'
- en: In this experiment, ![](img/bf1d2e38-3978-46e1-bcca-2642dc98a7fb.png) is the
    expected number of time steps from the configuration of the experiment, and ![](img/4e8600b4-f33e-4657-bc81-b0d5d52cef57.png)
    is the actual number of time steps during which the controller was able to maintain
    a stable pole balancer state within allowed bounds (refer to the reinforcement
    signal definition for details about permissible bounds).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，![](img/bf1d2e38-3978-46e1-bcca-2642dc98a7fb.png)是实验配置中的预期时间步数，而![](img/4e8600b4-f33e-4657-bc81-b0d5d52cef57.png)是控制器能够在允许的范围内保持稳定极平衡状态的实际时间步数（有关允许范围的详细信息，请参阅强化信号定义）。
- en: Cart-pole apparatus simulation
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 车杆装置模拟
- en: The given definition of the objective function assumes that we can measure the
    number of time steps during which the single-pole balancer was in a stable state.
    To perform such measurements, we need to implement the simulator of the cart-pole
    apparatus, using the equations of motion and data constraints defined earlier.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数的定义假设我们可以测量单极平衡器处于稳定状态的时间步数。为了进行此类测量，我们需要实现车杆装置的模拟器，使用之前定义的运动方程和数据约束。
- en: The source code for this chapter is available at [https://github.com/PacktPublishing/Hands-on-Neuroevolution-with-Python/tree/master/Chapter4](https://github.com/PacktPublishing/Hands-on-Neuroevolution-with-Python/tree/master/Chapter4).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的源代码可在[https://github.com/PacktPublishing/Hands-on-Neuroevolution-with-Python/tree/master/Chapter4](https://github.com/PacktPublishing/Hands-on-Neuroevolution-with-Python/tree/master/Chapter4)找到。
- en: 'First, we need to create a file called `cart_pole.py` in the `work` directory.
    This file contains the source code of the equations of motion and the function
    for evaluating the fitness of a single-pole balancer:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要在`work`目录中创建一个名为`cart_pole.py`的文件。此文件包含运动方程和评估单极平衡器适应度的函数的源代码：
- en: 'We start with a definition of the constants describing the physics of the cart-pole
    apparatus:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们从定义描述车杆装置物理学的常量开始：
- en: '[PRE0]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After that, we are ready to implement the equations of motion using these constants:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们准备使用这些常量实现运动方程：
- en: '[PRE1]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Refer to the `do_step(action, x, x_dot, theta, theta_dot)` function implementation
    in the source code of this chapter for full details.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此章节源代码中`do_step(action, x, x_dot, theta, theta_dot)`函数实现的详细信息，请参阅下一节。
- en: The preceding code snippet uses the current system state (`x, x_dot, theta,
    theta_dot`) along with a control action as input and applies the equations of
    motion described earlier to update the system state for the next time step. The
    updated system state then returns to update the simulator and to check for constraint
    violations. Thus, the simulation cycle is organized, as described in the next
    section.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码片段使用当前系统状态（`x, x_dot, theta, theta_dot`）以及一个控制动作作为输入，并应用之前描述的运动方程来更新下一个时间步的系统状态。然后，更新后的系统状态返回以更新模拟器并检查约束违规。因此，模拟周期组织如下一节所述。
- en: The simulation cycle
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模拟周期
- en: Now we have fully implemented the equations of motion and the numerical approximation
    of the state variables for one step of the cart-pole apparatus simulation. With
    this, we are ready to start the implementation of a full simulation cycle, which
    uses the ANN of the controller to evaluate the current system state and to select
    the appropriate action (the force to be applied) for the next step. The ANN mentioned
    previously is created for each genome of the population for a particular generation
    of evolution, allowing us to evaluate the performance of all genomes.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完全实现了小车-杆装置模拟一步的动力学方程和状态变量的数值近似。有了这个，我们就可以开始实现完整模拟周期了，该周期使用控制器的ANN来评估当前系统状态并选择适当的动作（下一步要施加的力）。前面提到的ANN是为特定进化代中的每个基因组的基因组创建的，使我们能够评估所有基因组的性能。
- en: Refer to the `run_cart_pole_simulation(net, max_bal_steps, random_start=True)`
    function implementation for complete implementation details.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅`run_cart_pole_simulation(net, max_bal_steps, random_start=True)`函数的实现以获取完整的实现细节。
- en: 'We can refer to the following steps to perform the implementation of a full
    simulation cycle:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以参考以下步骤来执行完整模拟周期的实现：
- en: 'First, we need to initialize the initial state variables, either with zeros
    or with random values within the constraints described previously and centered
    around zero. The random state values can be created as follows:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要初始化初始状态变量，要么用零，要么用之前描述的约束范围内的随机值，并围绕零进行初始化。随机状态值可以创建如下：
- en: '[PRE2]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We intentionally reduced the range of all values compared to the corresponding
    scaled constraints to make sure that the algorithm does not start in the critical
    state, that is, when stabilization is no longer possible.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们故意将所有值与相应的缩放约束范围相比进行了缩减，以确保算法不会从临界状态开始，即当稳定化不再可能时。
- en: After that, we are ready to start the simulation cycle over the defined number
    of steps, which are specified by the `max_bal_steps` parameter. The following code is
    executed inside the *simulation loop*.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们准备开始模拟周期，该周期由`max_bal_steps`参数指定的步数定义。以下代码是在*模拟循环*中执行的。
- en: 'The state variables need to be scaled to fit into the `[0,1]` range before
    being loaded as inputs into the ANN of the controller. This procedure has a computational
    and evolutionary advantage, as previously described. The bias value is not explicitly
    provided because the NEAT-Python framework handles it internally, so the inputs
    of the ANN can be defined as follows in the source code:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在将状态变量作为输入加载到控制器的ANN之前，需要将其缩放到`[0,1]`范围内。这个程序具有计算和进化的优势，如前所述。偏差值没有明确提供，因为NEAT-Python框架内部处理它，所以可以在源代码中定义ANN的输入如下：
- en: '[PRE3]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Next, the scaled inputs can be used to activate the ANN of the phenotype, and
    its output is used to produce a discrete value of the action:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，可以缩放输入来激活表型的ANN，并使用其输出产生动作的离散值：
- en: '[PRE4]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: With the produced value of the action and the current values of the state variables,
    you can run a single step of the cart-pole simulation. After the simulation step,
    the returned state variables are tested against the constraints to check whether
    the state of the system is still within the boundaries.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用产生的动作值和当前的状态变量值，可以运行小车-杆模拟的单步。在模拟步骤之后，返回的状态变量将测试是否在约束范围内，以检查系统状态是否仍然在边界内。
- en: 'In case of failure, the current number of simulation steps is returned, and
    its value will be used to evaluate the fitness of the phenotype:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在失败的情况下，返回当前的模拟步数，其值将用于评估表型的适应度：
- en: '[PRE5]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If the controller's ANN was able to maintain a stable state of the cart-pole
    apparatus balancing for all simulation steps, the value with the maximum number
    of simulation steps is returned by the `run_cart_pole_simulation` function.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果控制器的ANN能够在整个模拟步骤中维持小车-杆装置平衡的稳定状态，则`run_cart_pole_simulation`函数将返回具有最大模拟步数的值。
- en: Genome fitness evaluation
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基因组适应度评估
- en: 'Using the number of successful simulation steps returned by the `run_cart_pole_simulation`
    function described earlier, we are ready to implement the genome fitness evaluation
    function:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面描述的`run_cart_pole_simulation`函数返回的成功模拟步数，我们准备实现基因组适应度评估函数：
- en: 'First, we run the cart-pole simulation loop, which returns the number of successful
    simulation steps:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们运行小车-杆模拟循环，它返回成功的模拟步数：
- en: '[PRE6]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'After that, we are ready to evaluate the fitness score of the particular genome,
    as described previously:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们准备评估特定基因组的适应性分数，如前所述：
- en: '[PRE7]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Refer to the `eval_fitness(net, max_bal_steps=500000)` function for more details.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅`eval_fitness(net, max_bal_steps=500000)`函数以获取更多详细信息。
- en: We use a logarithmic scale because most simulation runs fail in about 100 steps,
    but we test against `500000` balancing steps.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用对数刻度，因为大多数模拟运行在约100步时失败，但我们测试了`500000`平衡步。
- en: The single-pole balancing experiment
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单极平衡实验
- en: Now that we have an objective function defined and implemented along with a
    simulation of cart-pole apparatus dynamics, we are ready to start writing the
    source code to run the neuroevolutionary process with the NEAT algorithm. We will
    use the same NEAT-Python library as in the XOR experiment in the previous chapter,
    but with the NEAT hyperparameters adjusted appropriately. The hyperparameters
    are stored in the `single_pole_config.ini`file, which can be found in the source
    code repository related to this chapter. You need to copy this file into your
    local `Chapter4` directory, in which you already should have a Python script with
    the cart-pole simulator we created earlier.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经定义并实现了目标函数，以及与滑车杆装置动力学模拟，我们准备开始编写源代码以使用NEAT算法运行神经进化过程。我们将使用与上一章中XOR实验相同的NEAT-Python库，但适当调整NEAT超参数。这些超参数存储在`single_pole_config.ini`文件中，该文件可在与本章相关的源代码存储库中找到。您需要将此文件复制到您的本地`Chapter4`目录中，在该目录中您应该已经有一个包含我们之前创建的滑车杆模拟器的Python脚本。
- en: Hyperparameter selection
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超参数选择
- en: In the NEAT section of the configuration file, we define the population of organisms
    set to ![](img/213bc840-04cb-428f-bd8f-84a908f856ae.png) individuals, and the
    fitness threshold with a value of `1.0` as a termination criterion.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置文件的NEAT部分，我们定义了生物种群数量为![](img/213bc840-04cb-428f-bd8f-84a908f856ae.png)个个体，以及适应性阈值`1.0`作为终止标准。
- en: 'The `fitness_criterion` is set to `max`, which means that the evolutionary
    process terminates when any individual reaches a fitness score equal to the `fitness_threshold` value:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`fitness_criterion`设置为`max`，这意味着当任何个体达到等于`fitness_threshold`值的适应性分数时，进化过程终止：'
- en: '[PRE8]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Also, we significantly decreased the probability of adding the new node to bias
    the evolutionary process into elaborating more on the connectivity patterns with
    a minimal number of ANN nodes in the controller. Thus, we aim to reduce the energy
    consumption of the evolved controller's ANN and to reduce the computational costs
    of training.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还显著降低了添加新节点的概率，以使进化过程偏向在控制器中使用最小数量的ANN节点来详细阐述连接模式。因此，我们的目标是减少进化控制器ANN的能量消耗和减少训练的计算成本。
- en: 'The corresponding parameters in the configuration file are as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件中相应的参数如下：
- en: '[PRE9]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The parameters describing our initial network configuration by a count of hidden,
    input, and output nodes are given as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 描述我们初始网络配置的参数，通过隐藏、输入和输出节点的数量给出如下：
- en: '[PRE10]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We increased the species' compatibility threshold to bias the evolutionary process
    into producing fewer species. Also, we increased the minimum species' size to
    indicate that we are interested in much more highly populated species that have
    a bigger chance of preserving beneficial mutations. At the same time, we decreased
    the maximal stagnation age to intensify the evolutionary process by heightening
    the early extinction of stagnated species that do not show any fitness improvements.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提高了物种的兼容性阈值，以使进化过程偏向产生更少的物种。同时，我们增加了最小物种大小，表示我们对具有更大机会保留有益突变的、高度密集的物种感兴趣。在此同时，我们降低了最大停滞年龄，通过提高停滞物种早期灭绝来加强进化过程，这些停滞物种没有显示出任何适应性改进。
- en: 'The related parameters in the configuration file are as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件中的相关参数如下：
- en: '[PRE11]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Refer to the `single_pole_config.ini` configuration file for full details.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅`single_pole_config.ini`配置文件以获取完整详情。
- en: As a result of the configuration parameters, more populated species will be
    used during the evolutionary process; however, the number of unique species will
    be kept low.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 由于配置参数的影响，在进化过程中将使用更多种类的生物；然而，独特种类的数量将保持较低。
- en: Working environment setup
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作环境设置
- en: 'Before you start writing the source code of the experiment runner, you must
    set up a virtual Python environment and install all the necessary dependencies.
    You can do this with Anaconda by executing the following commands in the command
    line:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在您开始编写实验运行器的源代码之前，您必须设置一个虚拟Python环境并安装所有必要的依赖项。您可以通过在命令行中执行以下命令使用Anaconda来完成此操作：
- en: '[PRE12]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: First, these commands create and activate a `single_pole_neat` virtual environment
    with Python 3.5\. After that, the NEAT-Python library, version 0.92, is installed,
    along with the other dependencies used by our visualization utilities.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，这些命令创建并激活一个Python 3.5的`single_pole_neat`虚拟环境。之后，安装了NEAT-Python库版本0.92，以及我们的可视化工具使用的其他依赖项。
- en: The experiment runner implementation
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实验运行器实现
- en: First, you need to create a `single_pole_experiment.py` file in the `Chapter4` directory.
    In that file, the source code of the single-pole balancing experiment will be
    written. Also, you need to copy the `visualize.py` file from the chapter's repository
    into this directory as well. We will use the visualization utilities from this
    file to render the results of the experiment.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要在`Chapter4`目录下创建一个`single_pole_experiment.py`文件。在该文件中，将编写单极平衡实验的源代码。此外，您还需要将章节仓库中的`visualize.py`文件复制到该目录中。我们将使用该文件中的可视化工具来渲染实验结果。
- en: The experiment runner script includes two essential functions.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 实验运行器脚本包括两个基本函数。
- en: Function to evaluate the fitness of all genomes in the population
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估种群中所有基因组适应度的函数
- en: 'The first function evaluates the list of all genomes in the population and
    assigns a fitness score to each of them. This function is passed by reference
    into the neuroevolution runner of the NEAT-Python library. The source code of
    this function is as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个函数评估种群中所有基因组的列表，并为每个基因组分配一个适应度分数。此函数通过引用传递给NEAT-Python库的神经进化运行器。此函数的源代码如下：
- en: '[PRE13]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note that we are introducing additional simulation runs for the winning genome
    to make sure that its control strategy is stable when starting from a variety
    of random initial states. This additional check guarantees that we have found
    the real winner rather than a special case that's specific to a particular initial
    state.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们为获胜的基因组引入了额外的模拟运行，以确保其控制策略在从各种随机初始状态开始时是稳定的。这个额外的检查确保我们找到了真正的获胜者，而不是特定于特定初始状态的特殊情况。
- en: 'The preceding function receives the list of all genomes in the population and
    the NEAT configuration parameters. For each specific genome, it creates the phenotype
    ANN and uses it as a controller to run the cart-pole apparatus simulation, as
    defined in the following snippet from the preceding code:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个函数接收种群中所有基因组的列表和NEAT配置参数。对于每个特定的基因组，它创建表型ANN并将其用作控制器来运行定义在以下代码片段中的cart-pole装置模拟：
- en: '[PRE14]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The returned fitness score is then compared with the fitness threshold value
    we defined in the configuration parameters. If it exceeds the threshold, we can
    assume that a successful controller was found. To further verify the validity
    of the found controller, it will be tested for additional simulation runs and
    a final fitness score will be calculated (as in the following snippet taken from
    the preceding code):'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的适应度分数然后与我们在配置参数中定义的适应度阈值值进行比较。如果它超过了阈值，我们可以假设找到了一个成功的控制器。为了进一步验证找到的控制器，它将在额外的模拟运行中进行测试，并计算最终的适应度分数（如以下代码片段所示）：
- en: '[PRE15]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The additional simulation steps will use different seeds for a random number
    generator to cover the majority of possible initial configurations of the cart-pole
    apparatus.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 额外的模拟步骤将使用不同的随机数生成器种子来覆盖cart-pole装置的大多数可能的初始配置。
- en: The experiment runner function
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实验运行器函数
- en: 'The second function configures, executes, and outputs the results of the neuroevolution
    process. Here, we outline some critical places in the implementation of the experiment
    runner function:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个函数配置、执行并输出神经进化过程的结果。在此，我们概述了实验运行器函数实现中的几个关键位置：
- en: 'The function begins with the loading of the hyperparameters from the configuration
    file and spawns the initial population using the loaded configuration:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 函数开始于从配置文件中加载超参数并使用加载的配置生成初始种群：
- en: '[PRE16]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'After that, it configures statistics'' reporters to collect the statistics regarding
    execution of the evolutionary process. The output reporters are added as well
    in order to output the execution results to the console in real time. The checkpoints
    collector is also configured to save intermediary stages of execution, which can
    be useful if you need to restore the training process later:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，它配置了统计报告器以收集有关进化过程执行的统计数据。同时添加了输出报告器，以便实时将执行结果输出到控制台。还配置了检查点收集器以保存执行的中途阶段，这在需要稍后恢复训练过程时可能很有用：
- en: '[PRE17]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Finally, the evolution process is executed over the specified number of generations,
    and the results are saved in the `output` directory:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在指定的代数数上执行进化过程，并将结果保存在`output`目录中：
- en: '[PRE18]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Refer to the `run_experiment(config_file, n_generations=100)` function for full
    implementation details.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅`run_experiment(config_file, n_generations=100)`函数以获取完整的实现细节。
- en: After the best genome has been found during the evolutionary process, it is
    verified whether it actually meets the fitness threshold criteria that we set
    in the configuration file. There may be no working solution found during the process,
    but nevertheless, the NEAT-Python library will return the best fit genome. That
    is why we need this additional check to ensure that the resulting best fit genome
    can actually solve the problem in practice.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在进化过程中找到最佳基因组后，它被验证是否实际上符合我们在配置文件中设置的适应度阈值标准。在过程中可能找不到有效解决方案，但无论如何，NEAT-Python库将返回最佳匹配的基因组。这就是为什么我们需要这个额外的检查来确保最终的最佳匹配基因组实际上可以解决实际问题。
- en: Running the single-pole balancing experiment
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行单极平衡实验
- en: 'You need to enter the directory containing the `single_pole_experiment.py` file
    and execute the following command:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要进入包含`single_pole_experiment.py`文件的目录，并执行以下命令：
- en: '[PRE19]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Do not forget to activate the appropriate virtual environment with the following
    command:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记使用以下命令激活适当的虚拟环境：
- en: '`conda activate single_pole_neat`'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '`conda activate single_pole_neat`'
- en: 'During the execution of the Python script, the console will print the following
    output for each generation of the evolution:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行Python脚本的过程中，控制台将为每一代的进化打印以下输出：
- en: '[PRE20]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'In the output, you can see that the average fitness of the population in generation
    `14` is low, but the fitness of the best performing organism (`0.70923`) is already
    close to our completion threshold value (`fitness_threshold = 1.0`), which was
    set in the configuration file. The organism champion encodes the phenotype ANN
    that consists of one non-linear node (output) and only two connections (`size:
    (1, 2)`). Also, it is interesting to note that only one species exists in the
    population.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '在输出中，你可以看到在生成`14`时，种群的平均适应度较低，但表现最佳生物体的适应度（`0.70923`）已经接近我们在配置文件中设置的完成阈值值（`fitness_threshold
    = 1.0`）。冠军生物体编码的表型ANN由一个非线性节点（输出）和仅两个连接（`size: (1, 2)`）组成。此外，值得注意的是，种群中只存在一个物种。'
- en: 'After the winner is found, the console output has the following lines:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在找到获胜者后，控制台输出以下行：
- en: '[PRE21]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The best genome that is an evolution winner encodes a phenotype ANN that consists
    of only one non-linear node (output) and three connections from input nodes (`size:
    (1, 3)`). It is interesting to note that evolution was able to produce a solid
    control strategy that completely ignores the linear velocity of the cart and only
    uses the other three inputs: `x`, `θ`, and `θ`. This fact is another sign of the
    correctness of the evolutionary selection because we decided to ignore friction
    of the cart, which effectively excluded the linear velocity of the cart from the
    equations of motion.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '作为进化获胜者的最佳基因组编码了一个仅由一个非线性节点（输出）和从输入节点（`size: (1, 3)`）来的三个连接组成的表型ANN。值得注意的是，进化能够产生一个稳固的控制策略，完全忽略了滑车的线性速度，只使用了其他三个输入：`x`、`θ`和`θ`。这一事实是进化选择正确性的另一个标志，因为我们决定忽略滑车的摩擦，这实际上排除了滑车线性速度在运动方程中的作用。'
- en: 'The graph with ANN of winning single-pole balancing controller is shown here:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 带有ANN的单极平衡控制器获胜图的展示如下：
- en: '![](img/94084e5e-4ec0-4bad-89ac-5f47182ac36e.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/94084e5e-4ec0-4bad-89ac-5f47182ac36e.png)'
- en: The ANN of the single-pole balancing controller found by the NEAT algorithm
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 由NEAT算法找到的单极平衡控制器的ANN
- en: 'The plot with the changes in fitness value over generations of evolution is
    as follows:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 进化过程中适应度值随代数变化的图表如下：
- en: '![](img/115564ed-987f-4fac-b451-982f0d357b05.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/115564ed-987f-4fac-b451-982f0d357b05.png)'
- en: The population's average and best fitness in the single-pole experiment
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 单极实验中种群的平均和最佳适应度
- en: The average fitness of the population in all generations was low, but from the
    very beginning, there was a beneficial mutation that spawned a particular lineage
    of organisms. From generation to generation, gifted individuals from that lineage
    were able not only to preserve their beneficial traits but also to improve them,
    which ultimately led to finding an evolution winner.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 所有代中种群的平均适应度都很低，但从一开始就有一个有益的突变产生了特定的生物种群谱系。从一代到下一代，该谱系中的有才能的个体不仅能够保留其有益的特征，而且还能改进它们，这最终导致了进化获胜者的出现。
- en: Exercises
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: Try to increase the value of the `node_add_prob` parameter and see what happens.
    Does the algorithm produce any number of hidden nodes, and if so, how many?
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试增加`node_add_prob`参数的值，看看会发生什么。算法是否会产生一定数量的隐藏节点，如果是的话，有多少个？
- en: Try to decrease/increase the `compatibility_threshold` value. What happens if
    you set it to `2.0` or `6.0`? Can the algorithm find the solution in each case?
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试降低/增加`compatibility_threshold`的值。如果你将其设置为`2.0`或`6.0`会发生什么？算法是否能在每种情况下找到解决方案？
- en: Try to set the `elitism` value to zero in the `DefaultReproduction` section.
    See what happens. How long did the evolutionary process take to find an acceptable
    solution in this case?
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试在`DefaultReproduction`部分将`elitism`值设置为零。看看会发生什么。在这种情况下，进化过程找到可接受的解决方案需要多长时间？
- en: Set the `survival_threshold` value to `0.5` in the `DefaultReproduction` section.
    See how this affects speciation during evolution. Why does it?
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`DefaultReproduction`部分将`survival_threshold`值设置为`0.5`。看看这如何影响进化过程中的物种形成。为什么会有这样的影响？
- en: Increase the `additional_num_runs` and `additional_steps` values in order of
    magnitude to examine further how well the found control strategy is generalized.
    Is the algorithm still able to find a winning solution?
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`additional_num_runs`和`additional_steps`的值按量级增加，以进一步检验找到的控制策略的泛化能力。算法是否仍然能够找到获胜的解决方案？
- en: The last exercise will lead to an increase in the execution time of the algorithm.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个练习将导致算法执行时间的增加。
- en: The double-pole balancing problem
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 双极平衡问题
- en: The single-pole balancing problem is easy enough for the NEAT algorithm, which
    can quickly find the optimal control strategy to maintain a stable system state.
    To make the experiment more challenging, we present a more advanced version of
    the cart-pole balancing problem. In this version, the two poles are connected
    to the moving cart by a hinge.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 单极平衡问题对于NEAT算法来说足够简单，它可以快速找到保持稳定系统状态的最佳控制策略。为了使实验更具挑战性，我们提出了一个更高级的滑车-杆平衡问题。在这个版本中，两个杆通过一个铰链连接到移动的滑车上。
- en: 'A schema of the new cart-poles apparatus is as follows:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 新的滑车-杆装置的方案如下：
- en: '![](img/d8951ad6-2e47-4f3b-88d6-11033cf61335.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d8951ad6-2e47-4f3b-88d6-11033cf61335.png)'
- en: The cart-poles apparatus with two poles
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 具有两个杆的滑车-杆装置
- en: Before we move to the implementation details of the experiment, we need to define
    the state variables and equations of motion for the simulation of the double-pole
    balancing system.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们转向实验的具体实现细节之前，我们需要定义双极平衡系统模拟的状态变量和运动方程。
- en: The system state and equations of motion
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统状态和运动方程
- en: The goal of the controller is to apply the force to the cart in order to keep
    two poles balanced for as long as possible. At the same time, the cart should
    stay within the defined boundaries. As with the single-pole balancing problem
    discussed previously, the control strategy can be defined as an avoidance control
    problem, which means that the controller must maintain a stable system state,
    avoiding the danger zones when the cart moves outside the track boundaries or
    either of the poles fall beyond the allowed vertical angle. There is no unique
    solution for this problem, but an appropriate control strategy can be found because
    the poles have different lengths and masses. Therefore, they respond differently
    to the control inputs.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器的目标是施加力到滑车上，以尽可能长时间地保持两个杆的平衡。同时，滑车应保持在定义的边界内。与之前讨论的单极平衡问题一样，控制策略可以定义为避免控制问题，这意味着控制器必须保持系统状态稳定，避免当滑车移动到轨道边界之外或任一杆超出允许的垂直角度时的危险区域。这个问题没有唯一解，但由于杆的长度和质量不同，因此它们对控制输入的反应也不同。
- en: 'The current state of the double-pole balancing apparatus can be defined by
    the following variables:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 双极平衡装置的当前状态可以通过以下变量定义：
- en: Cart position on the track (![](img/58c58c96-ed90-4af9-b600-cc33827280c3.png))
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滑车在轨道上的位置 (![](img/58c58c96-ed90-4af9-b600-cc33827280c3.png))
- en: Cart velocity (![](img/a8659522-7d44-462f-8108-c6a0764a4b01.png))
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滑车速度 (![](img/a8659522-7d44-462f-8108-c6a0764a4b01.png))
- en: First pole's angle from the vertical (![](img/87a960cd-9398-48da-b0d6-fdaa85a4d46c.png))
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一柱与垂直线的角度 (![](img/87a960cd-9398-48da-b0d6-fdaa85a4d46c.png))
- en: First pole's angular velocity (![](img/7863f770-1d28-421f-bd4d-1d1924e2af43.png))
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一柱的角速度 (![](img/7863f770-1d28-421f-bd4d-1d1924e2af43.png))
- en: Second pole's angle from the vertical (![](img/8511a332-e426-417d-8bdb-adce53560d5e.png))
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二柱与垂直线的角度 (![](img/8511a332-e426-417d-8bdb-adce53560d5e.png))
- en: Second pole's angular velocity (![](img/c1f55beb-93ff-4611-8935-b99b3b4ea2e7.png))
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二柱的角速度 (![](img/c1f55beb-93ff-4611-8935-b99b3b4ea2e7.png))
- en: 'The equations of motion for two unjoined poles balanced on a single cart that
    ignores friction between cart wheels and the track are as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 忽略滑车轮与轨道之间摩擦的、平衡在单个滑车上的两个未连接柱子的运动方程如下：
- en: '![](img/be73a75c-bd3d-4f0e-9094-c0a069e73e8e.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/be73a75c-bd3d-4f0e-9094-c0a069e73e8e.png)'
- en: '![](img/8968071c-f398-4735-babc-3c6e082107aa.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8968071c-f398-4735-babc-3c6e082107aa.png)'
- en: 'In this equation, ![](img/ac7d62d9-cc3b-4797-ae79-24f1c86c0bb0.png) is the
    reaction force from the ![](img/2344d1ef-0f0b-41f4-8745-862dae768ce7.png) pole
    on the cart:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在此方程中，![](img/ac7d62d9-cc3b-4797-ae79-24f1c86c0bb0.png) 是柱子 ![](img/2344d1ef-0f0b-41f4-8745-862dae768ce7.png)
    对滑车的反作用力：
- en: '![](img/7c073c61-901d-41af-b765-3975d752f109.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7c073c61-901d-41af-b765-3975d752f109.png)'
- en: 'In this equation, ![](img/51d64bef-2e18-48a3-b169-ca75ec0813ae.png) is the
    effective mass of the ![](img/c60f03fd-eeb7-4bc9-847b-d502b936cd82.png) pole:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在此方程中，![](img/51d64bef-2e18-48a3-b169-ca75ec0813ae.png) 是柱子 ![](img/c60f03fd-eeb7-4bc9-847b-d502b936cd82.png)
    的有效质量：
- en: '![](img/4e7d1be9-3acc-4be8-b82f-b46b9a20a454.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4e7d1be9-3acc-4be8-b82f-b46b9a20a454.png)'
- en: 'The following parameters are used for double-pole simulation:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 以下参数用于双柱模拟：
- en: '| **Symbol** | **Description** | **Values** |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| **符号** | **描述** | **值** |'
- en: '| ![](img/c2dae5b9-fe5b-49ad-b531-2c7f56e9e0ba.png) | The position of the cart
    on a track | ![](img/b6112da8-918a-43b3-9c96-208b8a5477b4.png) |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| ![](img/c2dae5b9-fe5b-49ad-b531-2c7f56e9e0ba.png) | 轨道上滑车的位置 | ![](img/b6112da8-918a-43b3-9c96-208b8a5477b4.png)
    |'
- en: '| ![](img/57f65383-80b5-4e30-874e-d224020a9eac.png) | The angle of a pole from
    the vertical | ![](img/cee7bb3d-eb7b-4dc2-8987-ec1894749e15.png) |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| ![](img/57f65383-80b5-4e30-874e-d224020a9eac.png) | 柱子与垂直线的角度 | ![](img/cee7bb3d-eb7b-4dc2-8987-ec1894749e15.png)
    |'
- en: '| ![](img/714d496d-1542-4fee-b132-911103af8029.png) | The control force applied
    to the cart | ![](img/1b8ee74e-42f7-4859-a8a2-c35fcab26cf1.png) |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| ![](img/714d496d-1542-4fee-b132-911103af8029.png) | 对滑车施加的控制力 | ![](img/1b8ee74e-42f7-4859-a8a2-c35fcab26cf1.png)
    |'
- en: '| ![](img/1b4458eb-1b1c-45ec-9ecd-726631e96f33.png) | The distance from the
    center of mass of the pole to the pivot | ![](img/29a6b8ac-e763-46a5-9d6a-d2996df44b3d.png)![](img/2ad149c7-6285-439b-8236-364142659995.png)
    |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| ![](img/1b4458eb-1b1c-45ec-9ecd-726631e96f33.png) | 柱子质心到支点的距离 | ![](img/29a6b8ac-e763-46a5-9d6a-d2996df44b3d.png)![](img/2ad149c7-6285-439b-8236-364142659995.png)
    |'
- en: '| ![](img/c277bb60-e1e7-40e3-b926-50e557bf2b64.png) | The mass of the cart
    | ![](img/70043e09-5a9d-47ba-844c-b60957781183.png) |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| ![](img/c277bb60-e1e7-40e3-b926-50e557bf2b64.png) | 滑车的质量 | ![](img/70043e09-5a9d-47ba-844c-b60957781183.png)
    |'
- en: '| ![](img/4eefd5e6-7d13-486a-a5fe-cd5b61f4a5fe.png) | The mass of the ![](img/ec921e39-7533-4f39-aaf4-ec4e2f91e7c1.png)
    pole | ![](img/c3f17eb0-7427-4086-b3e7-b4f233da118b.png)![](img/dd8bd2ca-d758-409e-97c4-02564ce9f3b4.png)
    |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| ![](img/4eefd5e6-7d13-486a-a5fe-cd5b61f4a5fe.png) | 柱子的质量 | ![](img/c3f17eb0-7427-4086-b3e7-b4f233da118b.png)![](img/dd8bd2ca-d758-409e-97c4-02564ce9f3b4.png)
    |'
- en: '| ![](img/6134cc80-b12b-4af1-86cb-891ff6807ffd.png) | The coefficient of friction
    of the **pivot** of the ![](img/32e5ed21-4a64-4fe4-b40b-6b2fcea1c797.png) pole
    | ![](img/3629a999-06c3-4cd7-82d2-ff0e7ac38bab.png) |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| ![](img/6134cc80-b12b-4af1-86cb-891ff6807ffd.png) | 对滑车施加的控制力 | ![](img/3629a999-06c3-4cd7-82d2-ff0e7ac38bab.png)
    |'
- en: '| ![](img/00ccc395-dcb9-451f-90f0-84ac7191b5e6.png) | Acceleration of free
    fall due to gravity | ![](img/9f831f81-d62e-491d-b3b7-15a1e5ba67e7.png) |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| ![](img/00ccc395-dcb9-451f-90f0-84ac7191b5e6.png) | 由于重力引起的自由落体加速度 | ![](img/9f831f81-d62e-491d-b3b7-15a1e5ba67e7.png)
    |'
- en: 'The corresponding Python code defines these system parameters as constants:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 对应的Python代码将这些系统参数定义为常量：
- en: '[PRE22]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The implementation of the equations of motion in Python is as follows:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中实现运动方程如下：
- en: '[PRE23]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: More implementation details are available in the `cart_two_pole.py` file in
    the repository associated with `Chapter4` source code files. Refer to the `calc_step(action,
    x, x_dot, theta1, theta1_dot, theta2, theta2_dot)` function.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 更多实现细节可在与`Chapter4`源代码文件相关的存储库中的`cart_two_pole.py`文件中找到。请参阅`calc_step(action,
    x, x_dot, theta1, theta1_dot, theta2, theta2_dot)`函数。
- en: The preceding code receives the current system state (`x, x_dot, theta1, theta1_dot,
    theta2, theta2_dot`) along with the control action and calculates the derivatives
    (cart acceleration and angular acceleration of both poles).
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码接收当前系统状态（`x, x_dot, theta1, theta1_dot, theta2, theta2_dot`）以及控制动作，并计算导数（小车加速度和两个极的角加速度）。
- en: Reinforcement signal
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 强化信号
- en: 'The simulation environment must provide minimal information about the system
    state after performing actions in the form of a reinforcement signal (![](img/fc22bec5-3708-414b-b602-27448d4ac84b.png)).
    The reinforcement signal indicates whether a double-pole balancing system violates
    the bounding constraints after applying an action. It can be defined as follows:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟环境必须在执行动作后以强化信号（![](img/fc22bec5-3708-414b-b602-27448d4ac84b.png)）的形式提供关于系统状态的最小信息。强化信号指示在应用动作后，双极平衡系统是否违反了边界约束。它可以定义为以下：
- en: '![](img/b788c1c5-bb85-4a4c-b1bb-b85d3861ebd7.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b788c1c5-bb85-4a4c-b1bb-b85d3861ebd7.png)'
- en: 'The implementation of the reinforcement signal generation in Python is as follows:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Python中强化信号生成的实现如下：
- en: '[PRE24]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The condition checks that the angle of each pole is ![](img/7ec89f5d-74cb-4799-97d2-9e4dc2192645.png) from
    the vertical, and that the position of the cart is ![](img/7d5bde15-10d8-4bd6-9e68-1aa3252ba5e2.png) from
    the center of the track.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 条件检查每个极的角度是否为 ![](img/7ec89f5d-74cb-4799-97d2-9e4dc2192645.png) 相对于垂直方向，以及小车位置是否为
    ![](img/7d5bde15-10d8-4bd6-9e68-1aa3252ba5e2.png) 相对于轨道中心。
- en: Initial conditions and state update
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 初始条件和状态更新
- en: In the single-pole balancing experiment, we used random initial state conditions,
    but with the two poles, the initial conditions are a bit more simplified. The
    system starts with all cart and pole velocities set to zero. The initial position
    of the long pole is one degree from the vertical, and the short pole is exactly
    upright.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在单极平衡实验中，我们使用了随机的初始状态条件，但有两个极时，初始条件更为简化。系统开始时，所有小车和极的速度都设置为零。长极的初始位置与垂直方向相差一度，短极完全直立。
- en: 'The initial conditions are as follows:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 初始条件如下：
- en: '![](img/8a69cfc8-74b9-4b45-af4f-8f911b37565f.png)'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![](img/8a69cfc8-74b9-4b45-af4f-8f911b37565f.png)'
- en: '![](img/667f19c3-c24e-4a7d-89ce-22897e01410b.png)'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![](img/667f19c3-c24e-4a7d-89ce-22897e01410b.png)'
- en: '![](img/d019620c-0c49-44c5-bb15-3aafe6dd430e.png)'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![](img/d019620c-0c49-44c5-bb15-3aafe6dd430e.png)'
- en: '![](img/3b91fda3-c5e7-44a9-9c00-9e8980bc6b68.png)'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![](img/3b91fda3-c5e7-44a9-9c00-9e8980bc6b68.png)'
- en: '![](img/c8f77873-ac3d-4d28-b103-e8d686bdcd37.png)'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![](img/c8f77873-ac3d-4d28-b103-e8d686bdcd37.png)'
- en: '![](img/da16b0a8-cb4e-4b6f-bbb0-542b9f53ef91.png)'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![](img/da16b0a8-cb4e-4b6f-bbb0-542b9f53ef91.png)'
- en: The state of the cart-pole system is updated at each simulation step by numerical
    approximation of the equations of motion using the Runge-Kutta fourth-order method
    with a time step size of *0.01* seconds. The Runge-Kutta fourth-order approximation
    method allows calculation of the system response given the state variables of
    the current time step. The new control inputs are generated every ![](img/08aa1b9b-c4ac-45e5-90af-ceb2e8acd574.png) seconds.
    Thus, the control frequency is **50 Hz**, and the update frequency of the system
    state is **100 Hz**.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用时间步长为*0.01*秒的Runge-Kutta四阶方法对运动方程进行数值近似，在每个模拟步骤中更新小车-极系统的状态。Runge-Kutta四阶近似方法允许根据当前时间步的状态变量计算系统响应。新的控制输入每![](img/08aa1b9b-c4ac-45e5-90af-ceb2e8acd574.png)秒生成一次。因此，控制频率为**50
    Hz**，系统状态更新频率为**100 Hz**。
- en: 'The Runge-Kutta fourth-order method implementation in Python is as follows:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Python中Runge-Kutta四阶方法实现如下：
- en: 'Use the current cart-pole apparatus state variables to update the intermediate
    state for the next half-time step and do the first simulation step:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用当前小车-极装置状态变量更新下一个半时间步的中间状态，并执行第一次模拟步骤：
- en: '[PRE25]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Update the intermediate state using the derivatives obtained from the first
    simulation step and perform the second simulation step:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用第一次模拟步骤获得的导数更新中间状态，并执行第二次模拟步骤：
- en: '[PRE26]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Update the intermediate state using the derivatives from the first and second
    simulation steps and execute the third pole-balancing simulation step using the
    updated state:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用第一次和第二次模拟步骤的导数更新中间状态，并使用更新后的状态执行第三次极平衡模拟步骤：
- en: '[PRE27]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Finally, use the derivatives from the first three simulation steps to approximate
    the final state of the cart-pole apparatus that will be used in further simulation:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用前三个模拟步骤的导数来近似用于进一步模拟的小车-杆装置的最终状态：
- en: '[PRE28]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Let''s examine the elements of the preceding equation:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查前面方程的元素：
- en: '`f` is a control action to apply during simulation (**0 **or **1**).'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`f`是在模拟期间应用的控制动作（**0**或**1**）。'
- en: '`y` is a list with the current values of the state variables (![](img/f79951a1-1e41-4e79-aa7f-c1d0026ec371.png)).'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`y`是一个包含状态变量当前值(![](img/f79951a1-1e41-4e79-aa7f-c1d0026ec371.png))的列表。'
- en: '`dydx` is a list with the derivatives of the state variables (![](img/e2d8988c-2ae7-41e1-b34a-f6f52382d77b.png)).'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dydx`是一个包含状态变量导数(![](img/e2d8988c-2ae7-41e1-b34a-f6f52382d77b.png))的列表。'
- en: '`tau` is the size of the time step for approximation.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tau`是近似的时间步长大小。'
- en: For more implementation details, refer to the `rk4(f, y, dydx, tau)` function
    in the `cart_two_pole.py` file.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更多实现细节，请参阅`cart_two_pole.py`文件中的`rk4(f, y, dydx, tau)`函数。
- en: This implementation of the Runge-Kutta fourth-order method receives the current
    system state (`x, x_dot, theta1, theta1_dot, theta2, theta2_dot`) along with derivatives
    and approximates the system state at the next time step.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 这种四阶龙格-库塔方法的实现接收当前系统状态（`x, x_dot, theta1, theta1_dot, theta2, theta2_dot`）以及导数，并近似下一个时间步的系统状态。
- en: Control actions
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制动作
- en: 'As with the single-pole balancing experiment discussed earlier in this chapter,
    the control system for the double-pole balancing experiment generates only two
    control signals: push left and push right with a constant force. Thus, the control
    force at time ![](img/bb496626-827c-48e5-a3b3-bc89636b64ba.png) can be defined
    as follows:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 与本章前面讨论的单极平衡实验一样，双极平衡实验的控制系统只生成两个控制信号：向左推和向右推，力是恒定的。因此，时间![](img/bb496626-827c-48e5-a3b3-bc89636b64ba.png)的控制力可以定义为以下：
- en: '![](img/592640c7-d64b-4179-ad0c-76402aedacca.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/592640c7-d64b-4179-ad0c-76402aedacca.png)'
- en: In the preceding equation, ![](img/829855d2-7f89-434d-9c3b-1db857635745.png)
    is an action signal received from the controller at time ![](img/b234e4ad-b9f4-4830-b99e-4ed4dc1ca359.png).
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的方程中，![](img/829855d2-7f89-434d-9c3b-1db857635745.png)是控制器在时间![](img/b234e4ad-b9f4-4830-b99e-4ed4dc1ca359.png)接收到的动作信号。
- en: Interactions between the solver and the simulator
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解算器和模拟器之间的交互
- en: 'The state variables are scaled down to fit the `[0,1]` range before they are
    applied as inputs to the controller ANN. Thus, the equations for preprocessing
    of the state input variables are as follows:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 状态变量在作为控制器ANN的输入应用之前被缩放到`[0,1]`范围内。因此，状态输入变量预处理的方程如下：
- en: '![](img/36086576-53c2-4337-804e-6749919a2333.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/36086576-53c2-4337-804e-6749919a2333.png)'
- en: '![](img/ef65aaa9-36d9-442e-8d78-a723bbc49afe.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ef65aaa9-36d9-442e-8d78-a723bbc49afe.png)'
- en: '![](img/68e2406f-5a04-4df0-9d6f-248e1c857a87.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/68e2406f-5a04-4df0-9d6f-248e1c857a87.png)'
- en: '![](img/db6d27ef-0051-48a2-a214-2aa9794cca09.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/db6d27ef-0051-48a2-a214-2aa9794cca09.png)'
- en: '![](img/38cb7007-53ae-47ca-8c80-b7a75f15ea9b.png)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/38cb7007-53ae-47ca-8c80-b7a75f15ea9b.png)'
- en: '![](img/1eb1c5c3-59d6-426a-94aa-6b63fb6a6e05.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1eb1c5c3-59d6-426a-94aa-6b63fb6a6e05.png)'
- en: In the preceding equations, ![](img/c44ddf68-8ca2-4a1e-9875-78023cf88b28.png) correspond
    to the cart's horizontal position, its horizontal velocity, the first pole's angle
    from the vertical, its angular velocity, and the second pole's angle and angular
    velocity, respectively.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的方程中，![](img/c44ddf68-8ca2-4a1e-9875-78023cf88b28.png)对应于小车在水平方向的位置，其水平速度，第一个极点相对于垂直的角度，其角速度，以及第二个极点的角度和角速度，分别。
- en: Taking into account the system constraints defined earlier (see ![](img/43575c2d-0f73-48c9-908b-c6c1728f46ce.png)),
    the scaled values of ![](img/49856ea8-0837-4ea2-a4f6-bd79dd87bd32.png), ![](img/77bd9544-f690-443f-8c59-9c6bfce465b0.png),
    and ![](img/776c7abd-c5ad-41cc-a2aa-4eb54b18b5c0.png) are guaranteed to be within
    the `[0,1]` range, while the scaled values of ![](img/47785056-fe6d-4c4c-a2ab-d741a1b5b1f9.png), ![](img/d739616c-3da4-484c-8310-fa542cbc0ebb.png),
    and ![](img/cd31e739-15e7-4671-8e4e-505547b4f2ff.png) mostly fall within the `0...1` range,
    but can fall outside these bounds eventually.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到之前定义的系统约束（见![](img/43575c2d-0f73-48c9-908b-c6c1728f46ce.png)），![](img/49856ea8-0837-4ea2-a4f6-bd79dd87bd32.png)、![](img/77bd9544-f690-443f-8c59-9c6bfce465b0.png)和![](img/776c7abd-c5ad-41cc-a2aa-4eb54b18b5c0.png)的缩放值保证在`[0,1]`范围内，而![](img/47785056-fe6d-4c4c-a2ab-d741a1b5b1f9.png)、![](img/d739616c-3da4-484c-8310-fa542cbc0ebb.png)和![](img/cd31e739-15e7-4671-8e4e-505547b4f2ff.png)的缩放值大多落在`0...1`范围内，但最终可能会超出这些界限。
- en: 'The corresponding source code for input scaling is as follows:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 输入缩放的相应源代码如下：
- en: '[PRE29]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The state list holds the current state variables in the following order: ![](img/a74878d2-4ef8-40a6-be7e-d27af13dadd7.png).
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 状态列表按照以下顺序保存当前状态变量： ![](img/a74878d2-4ef8-40a6-be7e-d27af13dadd7.png).
- en: Objective function for a double-pole balancing experiment
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 双摆平衡实验的目标函数
- en: 'The objective function for this problem is similar to the objective function
    defined earlier for the single-pole balancing problem. It is given by the following
    equations:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题的目标函数与之前为单摆平衡问题定义的目标函数相似。它由以下方程给出：
- en: '![](img/fd546863-081e-4289-b3f1-a1c5c99d7156.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd546863-081e-4289-b3f1-a1c5c99d7156.png)'
- en: '![](img/64991d2c-7d00-4676-a9c8-cea273e14412.png)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![](img/64991d2c-7d00-4676-a9c8-cea273e14412.png)'
- en: In these equations, ![](img/9bcb9c30-deec-483a-9f71-dca8ab267bd6.png) is the
    expected number of time steps specified in the configuration of the experiment
    (100,000), and ![](img/0d98561b-d894-41dd-bcc9-70cfb2b6eed0.png) is the actual
    number of time steps during which the controller was able to maintain a stable
    state of the pole balancer within the specified limits.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些方程中， ![](img/9bcb9c30-deec-483a-9f71-dca8ab267bd6.png) 是实验配置中指定的预期时间步数（100,000），而 ![](img/0d98561b-d894-41dd-bcc9-70cfb2b6eed0.png)
    是控制器能够维持摆杆平衡器在指定范围内稳定状态的实际时间步数。
- en: We use logarithmic scales because most of the trials fail in the first several
    100 steps, but we are testing against 100,000 steps. With a logarithmic scale,
    we have a better distribution of fitness scores, even compared with a small number
    of steps in failed trials.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用对数刻度，因为大多数试验在前几步（100步左右）就失败了，但我们是在测试100,000步。在对数刻度下，我们有一个更好的适应度分数分布，即使与失败试验中的少量步骤相比。
- en: The first of the preceding equations defines the loss, which is in the `[0,1]` range,
    and the second is a fitness score that is complementing the loss value. Thus,
    the fitness score values are in the `[0,1]` range, and the higher the value, the
    better the outcome.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 前述方程的第一个定义了损失，其范围在 `[0,1]` 之间，第二个是一个补充损失值的适应度分数。因此，适应度分数值也在 `[0,1]` 范围内，值越高，结果越好。
- en: 'The Python source code is similar to the objective function definition in the
    single-pole balancing experiment, but it uses different simulator calls to get
    a number of balanced steps:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: Python源代码与单摆平衡实验中的目标函数定义相似，但它使用不同的模拟器调用以获取平衡步数：
- en: '[PRE30]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: We use the logarithmic scale here because most of the runs fail too early, within
    100 steps or so, but we are testing against 100,000 steps.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里使用对数刻度，因为大多数运行在100步左右就失败了，但我们是在测试100,000步。
- en: Double-pole balancing experiment
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 双摆平衡实验
- en: This experiment uses a version of the double-pole balancing problem that assumes
    full knowledge of the current system state, including the angular velocities of
    the poles and the velocity of the cart. The criteria of success in this experiment
    are to keep both poles balanced for 100,000 steps, or approximately 33 minutes
    of simulated time. The pole is considered balanced when it stays within ![](img/7e187b55-6614-4d0d-a5dd-2d7f77fb5e3a.png) degrees
    of vertical, while the cart remains within ![](img/e10fcf6e-7929-49ab-8962-ee029537efe4.png) meters
    of the track's center.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实验使用的是双摆平衡问题的版本，它假设对当前系统状态有完全的了解，包括极的角速度和车的速度。这个实验成功的标准是保持两个极在100,000步内平衡，或者大约33分钟的模拟时间。当极保持在垂直方向的 ![](img/7e187b55-6614-4d0d-a5dd-2d7f77fb5e3a.png) 度以内时，我们认为它是平衡的，而车保持在轨道中心的 ![](img/e10fcf6e-7929-49ab-8962-ee029537efe4.png) 米以内。
- en: Hyperparameter selection
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超参数选择
- en: Compared to the previous experiment described in this chapter, double-pole balancing
    is much harder to solve due to its complex motion dynamics. Thus, the search space
    for a successful control strategy is broader and requires a more diverse population.
    To increase the diversity of the population, we increase its size to become 10
    times bigger than with a single-pole balancing experiment.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 与本章中描述的先前实验相比，双摆平衡由于其复杂的运动动力学而更难解决。因此，成功控制策略的搜索空间更广，需要更多样化的种群。为了增加种群的多样性，我们将种群大小增加到单摆平衡实验的10倍。
- en: 'The fitness termination threshold remains the same as shown here:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 适应度终止阈值与这里显示的相同：
- en: '[PRE31]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'To intensify evolutionary diversity further, we increase the probabilities
    of adding new nodes and connections, as well as changing the configuration scheme
    of initial connections. Also, the value of the `initial_connection` parameter
    contains the probability of connection creation, which introduces additional non-determinism
    into the process of the production of the connections graph:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步增强进化多样性，我们增加了添加新节点和连接的概率，以及改变初始连接配置方案的概率。此外，`initial_connection`参数的值包含了连接创建的概率，这为连接图的生产过程引入了额外的非确定性：
- en: '[PRE32]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Finally, taking into account the size of a population and the possible size
    of a species, we reduced the fraction of individuals who are allowed to reproduce
    (`survival_threshold`). This tweak limits the search space of the solution by
    enabling only the fittest organisms to participate in the recombination process:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，考虑到种群的大小和物种可能的大小，我们减少了允许繁殖的个体比例（`survival_threshold`）。这种调整通过仅允许最健壮的有机体参与重组过程来限制解决方案的搜索空间：
- en: '[PRE33]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The last tweak is controversial and can reduce the performance of the evolutionary
    process in general. But with large populations, it often works well by decreasing
    the number of possible recombinations. Thus, as a rule of thumb, large survival
    thresholds are used for small populations, and small values are used for large
    populations.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的调整是有争议的，并且可能会降低进化过程的整体性能。但在大型种群中，通过减少可能的重组数量通常效果良好。因此，作为经验法则，对于小型种群使用较大的生存阈值，对于大型种群使用较小的值。
- en: Due to the increased complexity of this experiment, the additional hyperparameter
    type becomes extremely important for the final outcome. The neuroevolution process
    is built around the likelihood of mutations occurring, and the probability of
    mutation is tested against the values produced by a random number generator.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本实验的复杂性增加，额外的超参数类型对于最终结果变得极其重要。神经进化过程是围绕突变发生的可能性构建的，突变概率与随机数生成器产生的值进行测试。
- en: As you know, in conventional computers, there is no true source of randomness.
    Instead, the randomness is generated by a pseudo-random algorithm that heavily
    depends on the random seed to start the generation of a random number sequence.
    Actually, the random seed value exactly defines a sequence of all pseudo-random
    numbers that will be produced by a given generator.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所知，在传统计算机中，没有真正的随机数源。相反，随机性是通过一个伪随机算法生成的，该算法高度依赖于随机种子来启动随机数序列的生成。实际上，随机种子值精确地定义了给定生成器将产生的所有伪随机数的序列。
- en: Thus, we can consider the random seed number as an essential parameter defining
    the initial conditions. This parameter sets the properties of the random attractor,
    which will amplify the tiny changes in the numerical search space of the algorithm.
    The effect of amplification ultimately determines whether the algorithm will be
    able to find the winner and how long it will take.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以将随机种子数视为一个定义初始条件的本质参数。此参数设置了随机吸引子的属性，这将放大算法在数值搜索空间中的微小变化。放大的效果最终决定了算法是否能够找到最优解以及需要多长时间。
- en: 'The random seed value is defined in the `two_pole_markov_experiment.py` file
    around line 100:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 随机种子值在`two_pole_markov_experiment.py`文件的大约第100行定义：
- en: '[PRE34]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: For the complete list of hyperparameters used in the double-pole balancing experiment,
    please refer to the `two_pole_markov_config.ini` file in the source code repository
    associated with this chapter.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 对于双极平衡实验中使用的完整超参数列表，请参阅与此章节相关的源代码仓库中的`two_pole_markov_config.ini`文件。
- en: The preceding code sets the seed value of the standard random number generator
    supplied with the Python environment.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码设置了Python环境中提供的标准随机数生成器的种子值。
- en: Working environment setup
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作环境设置
- en: 'The working environment for the double-pole balancing experiment can be set
    up with the following commands entered into your Terminal application of choice:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 双极平衡实验的工作环境可以通过在您选择的终端应用程序中输入以下命令来设置：
- en: '[PRE35]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: These commands create and activate a `double_pole_neat` virtual environment
    with Python 3.5\. After that, the NEAT-Python library with version 0.92 is installed,
    along with the other dependencies used by our visualization utilities.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令创建并激活了一个Python 3.5版本的`double_pole_neat`虚拟环境。之后，安装了版本0.92的NEAT-Python库，以及我们的可视化工具所使用的其他依赖项。
- en: The experiment runner implementation
  id: totrans-284
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实验运行器实现
- en: The source code implementing the evaluation of the genome fitness is similar
    to the one used for a single-pole balancing experiment. The main difference is
    that it will refer to another simulation environment to get the number of balanced
    steps. Thus, you can refer to the source code of the `eval_fitness(net, max_bal_steps=100000)` and
    `eval_genomes(genomes, config)` functions in the `two_pole_markov_experiment.py` file for
    implementation details.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 实现基因组适应度评估的源代码与用于单杆平衡实验的源代码相似。主要区别在于它将引用另一个模拟环境以获取平衡步数的数量。因此，您可以参考`two_pole_markov_experiment.py`文件中的`eval_fitness(net,
    max_bal_steps=100000)`和`eval_genomes(genomes, config)`函数的源代码以获取实现细节。
- en: 'In this experiment, we introduced adaptive learning, which will try to find
    the correct short pole length during the evolution process. The length of the
    short pole changes the motion dynamics of the system. Not all combinations of
    hyperparameters combined with a particular length of the short pole can produce
    a successful control strategy. Thus, we implement a sequential increase of the short
    pole length until the solution is found:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，我们引入了自适应学习，它将在进化过程中尝试找到正确的短杆长度。短杆的长度会改变系统的运动动力学。并非所有与特定长度的短杆结合的超参数组合都能产生成功的控制策略。因此，我们实现了一个顺序增加短杆长度的过程，直到找到解决方案：
- en: '[PRE36]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Refer to the `two_pole_markov_experiment.py` file for more implementation details.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考`two_pole_markov_experiment.py`文件以获取更多实现细节。
- en: The preceding code runs the simulation using different short pole length values
    until the solution is found.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码使用不同的短杆长度值运行模拟，直到找到解决方案。
- en: Running the double-pole balancing experiment
  id: totrans-290
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行双杆平衡实验
- en: 'Having implemented the two-pole balancing simulator, genome fitness function
    evaluator, and experiment runner code, we are ready to start experimenting. Enter
    the directory containing the `two_pole_markov_experiment.py` file and execute
    the following command:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在实现了双杆平衡模拟器、基因组适应度函数评估器和实验运行代码后，我们准备开始实验。进入包含`two_pole_markov_experiment.py`文件的目录，并执行以下命令：
- en: '[PRE37]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Do not forget to activate the appropriate virtual environment with the following
    command:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记使用以下命令激活适当的虚拟环境：
- en: '**`conda activate double_pole_neat`**'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '**`conda activate double_pole_neat`**'
- en: The preceding command will launch the evolutionary process under the control
    of the NEAT algorithm, using the hyperparameters specified in the `two_pole_markov_config.ini` file,
    as well as the simulator of the cart-two-pole apparatus that we already implemented.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令将在NEAT算法的控制下启动进化过程，使用`two_pole_markov_config.ini`文件中指定的超参数，以及我们已经实现的购物车双杆装置模拟器。
- en: 'After `96` generations, the winning solution can be found in generation `97`.
    The console output for the last generation looks similar to the following:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在`96`代之后，获胜的解决方案可以在第`97`代找到。最后一代的控制台输出类似于以下内容：
- en: '[PRE38]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: In the console output, we can see that the winning genome has a size `(1, 6)`,
    which means that it has only one non-linear node—the output—and a full set of
    connections from six inputs to the output nodes. Thus, we can assume that the
    minimal possible configuration of the controller ANN was found because it does
    not include any hidden nodes, but instead encodes control behavior with specifically
    explored connection weights. Also, it is interesting to note that the solution
    for the smallest length value among the list of all possible short pole length
    values was found.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台输出中，我们可以看到获胜的基因组大小为`(1, 6)`，这意味着它只有一个非线性节点——输出节点，并且从六个输入节点到输出节点的连接是完整的。因此，我们可以假设控制器ANN的最小可能配置已被找到，因为它不包含任何隐藏节点，而是使用特定探索的连接权重来编码控制行为。此外，值得注意的是，在所有可能的短杆长度值列表中，找到了最小长度值的解决方案。
- en: 'The configuration of the controller''s ANN that''s capable of executing a reliable
    control strategy is shown in the following graph:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 能够执行可靠控制策略的控制器ANN的配置如图所示：
- en: '![](img/56f7e312-d4bf-44a8-a2d9-80c6c37e2049.png)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![](img/56f7e312-d4bf-44a8-a2d9-80c6c37e2049.png)'
- en: The ANN of the double-pole balancing controller
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 双杆平衡控制器的ANN
- en: 'The fitness scores vary over generations, as shown in the following graph:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 适应度分数在代与代之间变化，如图所示：
- en: '![](img/c2dd4e25-d092-4764-976a-93ddc822f705.png)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c2dd4e25-d092-4764-976a-93ddc822f705.png)'
- en: The fitness scores through generations for a double-pole balancing experiment
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 双杆平衡实验的每一代的适应度分数
- en: The preceding graph is interesting if we want to know how the evolution works.
    You can see that before finding a winner, the fitness score drops sharply. This
    is due to the extinction of stagnated species that have reached a plateau with
    medium-high fitness scores that showed no improvement over the past 15 generations.
    After that, the vacant place is occupied by fresh species endowed with the genetic
    knowledge accumulated by extinct species. This newborn species also introduces
    a beneficial mutation that combines its hereditary knowledge with new tricks and,
    ultimately, produces a winner.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们想要了解进化如何运作的情况下，前面的图表很有趣。你可以看到，在找到胜者之前，适应度分数会急剧下降。这是由于那些达到中等高适应度分数并显示在过去15代中没有改进的停滞物种的灭绝。之后，空缺的位置被拥有灭绝物种积累的遗传知识的全新物种占据。这个新生物种还引入了一种有益的突变，将它的遗传知识与新的技巧相结合，最终产生了胜者。
- en: 'In this experiment, we decided to intensify the species'' diversity by significantly
    increasing the population size and making other tweaks to the hyperparameters.
    In the following graph, you can see that we have reached our goal, and that the
    neuroevolution process goes through a wide variety of species until a solution
    is found:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，我们决定通过显著增加种群规模并对超参数进行其他调整来增强物种的多样性。在下面的图表中，你可以看到我们已经达到了我们的目标，神经进化过程会经历多种物种，直到找到解决方案：
- en: '![](img/5e427f23-b42c-4b61-bfd0-06e9342b2095.png)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5e427f23-b42c-4b61-bfd0-06e9342b2095.png)'
- en: The speciation by generations for a double-pole balancing experiment
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 双极平衡实验的代际物种分化
- en: 'Next, we would like to learn how a change in the value of the random seed number
    impacts the NEAT algorithm. To begin with, we increased the value of the random
    seed number only by one (everything else has not changed). With this new condition,
    the NEAT algorithm could still find a stable control strategy but created a different,
    bizarre configuration of the controller''s ANN instead of the optimal configuration
    shown earlier:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们想了解随机种子数值的变化对NEAT算法的影响。首先，我们只将随机种子数值增加了一（其他一切都没有改变）。在这种新条件下，NEAT算法仍然可以找到稳定的控制策略，但创建了一个与之前展示的优化配置不同的、奇异的控制器ANN配置：
- en: '![](img/e0231b73-c676-4c23-ae6e-f9775c7deb11.png)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e0231b73-c676-4c23-ae6e-f9775c7deb11.png)'
- en: The ANN of a double-pole balancing controller with a random seed number increased
    by one (everything else is unchanged)
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 随机种子数值增加一个（其他一切未变）的双极平衡控制器ANN
- en: When the value of the random seed number increased, for example, by 10, the
    neuroevolution process could not find any solid control strategy at all.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 当随机种子数值增加，例如增加10时，神经进化过程根本找不到任何稳定的控制策略。
- en: This experiment revealed another vital aspect of methods based on neuroevolution—the
    impact of the initial conditions determined by the value of the random seed number.
    The random seed defines the properties of a random attractor, which amplifies
    the effects of the evolution process, both good or bad. So, with this experiment,
    it is crucial to find a suitable value of the random seed number to bootstrap
    the process of neuroevolution. We will discuss methods for finding appropriate
    values of the random seed numbers at the end of this book.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实验揭示了基于神经进化方法的一个另一个重要方面——由随机种子数值确定的初始条件的影响。随机种子定义了随机吸引子的属性，它放大了进化过程的效果，无论是好是坏。因此，在这个实验中，找到合适的随机种子数值以启动神经进化过程至关重要。我们将在本书的末尾讨论寻找合适的随机种子数值的方法。
- en: Exercises
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: Try setting the `node_add` parameter value to `0.02` in the configuration file
    and see what happens.
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试在配置文件中将`node_add`参数值设置为`0.02`，看看会发生什么。
- en: Change the seed value of the random number generator and see what happens. Was
    a solution found with a new value? How is it different from what we have presented
    in this chapter?
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 改变随机数生成器的种子值，看看会发生什么。是否找到了新的值解决方案？它与我们在本章中展示的内容有何不同？
- en: Summary
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to implement control strategies for controllers
    that can maintain a stable state of a cart-pole apparatus with one or two poles
    mounted on top. We improved our Python skills and expanded our knowledge of the
    NEAT-Python library by implementing accurate simulations of physical apparatuses,
    which was used to define the objective functions for the experiments. Besides
    this, we learned about two methods for numerical approximations of differential
    equations, Euler's and Runge-Kutta, and implemented them in Python.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何实现控制策略，以维持一个带有顶部一个或两个极点的滑车装置的稳定状态。通过实现物理装置的精确模拟，我们提高了我们的Python技能，并扩展了我们对NEAT-Python库的知识，这些模拟被用来定义实验的目标函数。此外，我们还学习了两种微分方程的数值近似方法，即欧拉法和龙格-库塔法，并将它们实现到了Python中。
- en: We found that the initial conditions that determine the neuroevolutionary process,
    such as a random seed number, have a significant impact on the performance of
    the algorithm. These values determine the entire sequence of numbers that will
    be generated by a random number generator. They serve as a random attractor that
    can amplify or dampen the effects of evolution.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现，决定神经进化过程的初始条件，例如随机种子数，对算法的性能有显著影响。这些值决定了随机数生成器将生成的整个数字序列。它们作为随机吸引子，可以放大或减弱进化的影响。
- en: In the next chapter, we will discuss how to use neuroevolution to create navigator
    agents that can find their way through a maze. You will learn how to define a
    goal-oriented objective function to solve the maze problem and how to write an
    accurate simulation of a robotic agent that can navigate through the maze. We
    will take a look at two types of maze environments and examine how the goal-oriented
    fitness function can get stuck trying to find a solution in the deceptive environment
    of a hard maze configuration.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论如何使用神经进化来创建能够通过迷宫的导航代理。你将学习如何定义一个以目标为导向的目标函数来解决迷宫问题，以及如何编写一个能够导航迷宫的机器人代理的精确模拟。我们将探讨两种迷宫环境类型，并检查以目标为导向的适应度函数如何在复杂的迷宫配置的欺骗性环境中陷入寻找解决方案的困境。
