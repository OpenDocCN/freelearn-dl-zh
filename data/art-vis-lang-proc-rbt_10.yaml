- en: '*Appendix*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*附录*'
- en: About
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于
- en: This section is included to assist the students to perform the activities in
    the book. It includes detailed steps that are to be performed by the students
    to achieve the objectives of the activities.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容旨在帮助学生完成书中的活动。它包括学生为实现活动目标而需要执行的详细步骤。
- en: 'Chapter 1: Fundamentals of Robotics'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第 1 章：机器人学基础
- en: 'Activity 1: Robot Positioning Using Odometry with Python'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 1：使用 Python 进行机器人定位与里程计
- en: '**Solution**'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Note:'
  id: totrans-7
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: For further observations, you can change the wheels' diameter to 15 cm and check
    the difference in the output. Similarly, you can change other input values and
    check the difference in the output.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 若要进行进一步观察，您可以将车轮的直径更改为 15 cm 并检查输出的差异。类似地，您可以更改其他输入值并检查输出的差异。
- en: 'Chapter 2: Introduction to Computer Vision'
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第 2 章：计算机视觉简介
- en: 'Activity 2: Classify 10 Types of Clothes from the Fashion-MNIST Data'
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 2：从 Fashion-MNIST 数据集中分类 10 种衣物
- en: '**Solution**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: Open up your Google Colab interface.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的 Google Colab 界面。
- en: Create a folder for the book, download the `Dataset` folder from GitHub, and
    upload it into the folder.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个书籍文件夹，从 GitHub 下载 `Dataset` 文件夹，并将其上传到该文件夹中。
- en: 'Import the drive and mount it as follows:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下方式导入驱动并挂载：
- en: '[PRE1]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once you have mounted your drive for the first time, you will have to enter
    the authorization code mentioned by clicking on the URL given by Google and pressing
    the **Enter** key on your keyboard:'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦你第一次挂载了你的驱动器，你将需要输入 Google 提供的授权代码，点击给定的 URL 并按下键盘上的 **Enter** 键：
- en: '![Figure 2.39: Image displaying the Google Colab authorization step](img/C13550_05_08.jpg)'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.39：展示 Google Colab 授权步骤的图像](img/C13550_05_08.jpg)'
- en: 'Figure 2.38: Image displaying the Google Colab authorization step'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.38：展示 Google Colab 授权步骤的图像
- en: 'Now that you have mounted the drive, you need to set the path of the directory:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你已经挂载了驱动器，你需要设置目录的路径：
- en: '[PRE2]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Load the dataset and show five samples:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载数据集并展示五个样本：
- en: '[PRE3]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output is as follows:'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 2.40: Loading datasets with five samples](img/C1355_02_40.jpg)'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.40：加载带有五个样本的数据集](img/C1355_02_40.jpg)'
- en: 'Figure 2.39: Loading datasets with five samples'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.39：加载带有五个样本的数据集
- en: '[PRE4]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/C1355_02_41.jpg)'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/C1355_02_41.jpg)'
- en: 'Figure 2.40: Samples of images from the Fashion-MNIST dataset'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.40：来自 Fashion-MNIST 数据集的图像样本
- en: 'Preprocess the data:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预处理数据：
- en: '[PRE5]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Build the architecture of the neural network using `Dense` layers:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `Dense` 层构建神经网络架构：
- en: '[PRE6]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Note:'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: The entire code file for this activity can be found on GitHub in the Lesson02
    | Activity02 folder.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本活动的完整代码文件可以在 GitHub 的 Lesson02 | Activity02 文件夹中找到。
- en: 'Compile and train the model:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编译并训练模型：
- en: '[PRE7]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The accuracy obtained is **88.72%**. This problem is harder to solve, so that's
    why we have achieved less accuracy than in the last exercise.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 获得的准确率为 **88.72%**。这个问题更难解决，所以我们达成的准确率低于上一个练习。
- en: 'Make the predictions:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 做出预测：
- en: '[PRE8]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Output will look like this:'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 2.42: Prediction for clothes using Neural Networks](img/C1355_02_42.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.42：使用神经网络进行衣物预测](img/C1355_02_42.jpg)'
- en: 'Figure 2.41: Prediction for clothes using Neural Networks'
  id: totrans-42
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.41：使用神经网络进行衣物预测
- en: It has classified the bag and the t-shirt correctly, but it has failed to classify
    the boots and the trousers. These samples are very different from the ones that
    it was trained for.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 它已经正确地分类了包和T恤，但它未能正确分类靴子和裤子。这些样本与它所训练的样本差异很大。
- en: 'Chapter 3: Fundamentals of Natural Language Processing'
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第 3 章：自然语言处理基础
- en: 'Activity 3: Process a Corpus'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 3：处理语料库
- en: '**Solution**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Import the `sklearn` `TfidfVectorizer` and `TruncatedSVD` methods:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `sklearn` 的 `TfidfVectorizer` 和 `TruncatedSVD` 方法：
- en: '[PRE9]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Load the corpus:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载语料库：
- en: '[PRE10]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'With `spaCy`, let''s add some new stop words, tokenize the corpus, and remove
    the stop words. The new corpus without these words will be stored in a new variable:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `spaCy`，让我们添加一些新的停用词，标记化语料库，并删除这些停用词。去除这些词后的新语料库将存储在一个新变量中：
- en: '[PRE11]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Create the TF-IDF matrix. I''m going to add some parameters to improve the
    results:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 TF-IDF 矩阵。我将添加一些参数来改善结果：
- en: '[PRE12]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Perform the LSA algorithm:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行 LSA 算法：
- en: '[PRE13]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'With pandas, we are shown a sorted `DataFrame` with the weights of the terms
    of each concept and the name of each feature:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 pandas，我们看到一个排序过的 `DataFrame`，其中包含每个概念的术语权重和每个特征的名称：
- en: '[PRE14]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The output is as follows:'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.25: Output example of the most relevant words in a concept (f1)](img/C1355_03_25.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.25：最相关词语的输出示例 (f1)](img/C1355_03_25.jpg)'
- en: 'Figure 3.26: Output example of the most relevant words in a concept (f1)'
  id: totrans-61
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.26：概念中最相关单词的输出示例（f1）
- en: 'Note:'
  id: totrans-62
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: Do not worry if the keywords are not the same as yours, if the keywords represent
    a concept, it is a valid result.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 不用担心关键字与您的不完全相同，只要这些关键字代表一个概念，那就是有效结果。
- en: 'Chapter 4: Neural Networks with NLP'
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第四章：自然语言处理中的神经网络
- en: 'Activity 4: Predict the Next Character in a Sequence'
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 4：预测序列中的下一个字符
- en: '**Solution**'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Import the libraries we need to solve the activity:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入解决此任务所需的库：
- en: '[PRE15]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Define the sequence of characters and multiply it by 100:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义字符序列，并将其乘以 100：
- en: '[PRE16]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Create a `char2id` dictionary to relate every character with an integer:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 `char2id` 字典，将每个字符与一个整数关联：
- en: '[PRE17]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Divide the sentence of characters into time series. The maximum length of time
    series will be five, so we will have vectors of five characters. Also, we are
    going to create the upcoming vector. The y_labels variable is the size of our
    vocabulary. We will use this variable later:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将字符的句子划分为时间序列。时间序列的最大长度为五，因此我们将得到五个字符的向量。同时，我们将创建即将到来的向量。`y_labels` 变量表示我们词汇表的大小。我们稍后会使用这个变量：
- en: '[PRE18]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'So far, we have the sequences variable, which is an array of arrays, with the
    time series of characters. char is an array with the upcoming character. Now,
    we need to encode these vectors, so let''s define a method to encode an array
    of characters using the information of char2id:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 到目前为止，我们有一个序列变量，它是一个数组的数组，包含字符的时间序列。`char` 是一个数组，包含即将出现的字符。现在，我们需要对这些向量进行编码，因此我们来定义一个方法，用
    `char2id` 信息对字符数组进行编码：
- en: '[PRE19]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Encode the variables into one-hot vectors. The shape of this is x = (2695,5,27)
    and y = (2695,27):'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将变量编码为 one-hot 向量。其形状为 x = (2695,5,27) 和 y = (2695,27)：
- en: '[PRE20]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![Figure 4.35: Variables encoded into OneHotVectors](img/C1355_04_35.jpg)'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.35：变量编码为 OneHotVectors](img/C1355_04_35.jpg)'
- en: 'Figure 4.35: Variables encoded into OneHotVectors'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.35：变量编码为 OneHotVectors
- en: 'Split the data into train and test sets. To do this, we are going to use the
    `train_test_split` method of sklearn:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据分为训练集和测试集。为此，我们将使用 sklearn 的 `train_test_split` 方法：
- en: '[PRE21]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![Figure 4.36: Splitting the data into train and test sets](img/C1355_04_36.jpg)'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.36：将数据分为训练集和测试集](img/C1355_04_36.jpg)'
- en: 'Figure 4.36: Splitting the data into train and test sets'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.36：将数据分为训练集和测试集
- en: 'With the data ready to be inserted in the neural network, create a Sequential
    model with two layers:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据准备好插入到神经网络中后，创建一个包含两层的 Sequential 模型：
- en: 'First layer: LSTM with eight neurons (the activation is tanh). input_shape
    is the maximum length of the sequences and the size of the vocabulary. So, because
    of the shape of our data, we do not need to reshape anything.'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第一层：LSTM，包含八个神经元（激活函数为 tanh）。`input_shape` 是序列的最大长度和词汇表的大小。因此，基于我们数据的形状，我们不需要进行任何形状重塑。
- en: 'Second layer: Dense with 27 neurons. This is how we successfully complete the
    activity. Using a LeakyRelu activation will give you a good score. But why? Our
    output has many zeroes, so the network could fail and just return a vector of
    zeroes. Using LeakyRelu prevents this problem:'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第二层：Dense，包含 27 个神经元。这就是我们成功完成任务的方式。使用 LeakyRelu 激活函数将给您一个良好的分数。但为什么？我们的输出中有许多零值，因此网络可能会失败并仅返回一个零向量。使用
    LeakyRelu 可以避免这个问题：
- en: '[PRE22]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Train the model. The batch_size we use is 32, and we have 25 epochs:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练模型。我们使用的 `batch_size` 是 32，训练了 25 个周期：
- en: '[PRE23]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Figure 4.37: Training with a batch_size of 32 and 25 epochs](img/C1355_04_37.jpg)'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.37：使用批次大小 32 和 25 个周期进行训练](img/C1355_04_37.jpg)'
- en: 'Figure 4.37: Training with a batch_size of 32 and 25 epochs'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.37：使用批次大小 32 和 25 个周期进行训练
- en: Compute the error of your model.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算您的模型的误差。
- en: '[PRE24]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![Figure 4.38: Error shown in the model](img/C1355_04_38.jpg)'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.38：模型中显示的错误](img/C1355_04_38.jpg)'
- en: 'Figure 4.38: Error shown in the model'
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.38：模型中显示的错误
- en: 'Predict the test data and see the average percentage of hits. With this model,
    you will obtain an average of more than 90%:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预测测试数据，并查看命中率的平均百分比。使用该模型，您将获得超过 90% 的平均准确率：
- en: '[PRE25]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Figure 4.39: Predicting the test data](img/C1355_04_39.jpg)'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.39：预测测试数据](img/C1355_04_39.jpg)'
- en: 'Figure 4.39: Predicting the test data'
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.39：预测测试数据
- en: To end this activity, we need to create a function that accepts a sequence of
    characters and returns the next predicted value. To decode the prediction of the
    model, we first code a decode method. This method just search in the prediction
    the higher value and take the key character in the char2id dictionary.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了完成这个任务，我们需要创建一个函数，该函数接受一个字符序列并返回下一个预测值。为了对模型的预测结果进行解码，我们首先编写一个解码方法。这个方法只是寻找预测中的最大值，并在
    `char2id` 字典中获取相应的字符键。
- en: '[PRE26]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Create a method to predict the next character in a given sentence:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个方法来预测给定句子中的下一个字符：
- en: '[PRE27]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Finally, introduce the sequence ''tyuio'' to predict the upcoming character.
    It will return ''p'':'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，引入序列‘tyuio’来预测即将到来的字符。它将返回‘p’：
- en: '[PRE28]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![Figure 4.40: Final output with the predicted sequence](img/C1355_04_40.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图4.40：带有预测序列的最终输出](img/C1355_04_40.jpg)'
- en: 'Figure 4.40: Final output with the predicted sequence'
  id: totrans-108
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图4.40：带有预测序列的最终输出
- en: Congratulations! You have finished the activity. You can predict a value outputting
    a temporal sequence. This is also very important in finances, that is, when predicting
    future prices or stock movements.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经完成了活动。你可以预测一个值并输出一个时间序列。这在金融中也非常重要，即预测未来的价格或股票的变动。
- en: You can change the data and predict what you want. If you add a linguistic corpus,
    you will generate text from your own RNN language model. So, our future conversational
    agent could generate poems or news text.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以更改数据并预测你想要的内容。如果添加语言语料库，你将从自己的RNN语言模型中生成文本。因此，我们未来的对话代理可以生成诗歌或新闻文本。
- en: 'Chapter 5: Convolutional Neural Networks for Computer Vision'
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第5章：计算机视觉的卷积神经网络
- en: 'Activity 5: Making Use of Data Augmentation to Classify correctly Images of
    Flowers'
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动5：利用数据增强正确分类花卉图像
- en: '**Solution**'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: Open your Google Colab interface.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的Google Colab界面。
- en: 'Note:'
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: '[PRE29]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'To output some samples from the dataset:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输出数据集中的一些样本：
- en: '[PRE30]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The output is as follows:'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![Figure 5.19: Samples from the dataset](img/C1355_05_19.jpg)'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图5.19：数据集中的样本](img/C1355_05_19.jpg)'
- en: 'Figure 5.23: Samples from the dataset'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5.23：数据集中的样本
- en: 'Now, we will normalize and perform one-hot encoding:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将进行归一化并执行一热编码：
- en: '[PRE31]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Splitting the training and testing set:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分割训练集和测试集：
- en: '[PRE32]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Import libraries and build the CNN:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库并构建CNN：
- en: '[PRE33]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Declare ImageDataGenerator:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明ImageDataGenerator：
- en: '[PRE34]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'We will now train the model:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在将训练模型：
- en: '[PRE35]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'After which, we will evaluate the model:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们将评估模型：
- en: '[PRE36]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The accuracy achieved is **91.68%**.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 达到的准确率是**91.68%**。
- en: 'Try the model with unseen data:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试使用未见过的数据测试模型：
- en: '[PRE37]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Output will look like this:'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 5.20: Prediction of roses result from Activity 1](img/C1355_05_20.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图5.20：活动1中玫瑰的预测结果](img/C1355_05_20.jpg)'
- en: 'Figure 5.24: Prediction of roses result from Activity05'
  id: totrans-139
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5.24：活动05中玫瑰的预测结果
- en: 'Note:'
  id: totrans-140
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: The detailed code for this activity can be found on GitHub - [https://github.com/PacktPublishing/Artificial-Vision-and-Language-Processing-for-Robotics/blob/master/Lesson05/Activity05/Activity05.ipynb](https://github.com/PacktPublishing/Artificial-Vision-and-Language-Processing-for-Robotics/blob/master/Lesson05/Activity05/Activity05.ipynb)
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 该活动的详细代码可以在GitHub上找到 - [https://github.com/PacktPublishing/Artificial-Vision-and-Language-Processing-for-Robotics/blob/master/Lesson05/Activity05/Activity05.ipynb](https://github.com/PacktPublishing/Artificial-Vision-and-Language-Processing-for-Robotics/blob/master/Lesson05/Activity05/Activity05.ipynb)
- en: 'Chapter 6: Robot Operating System (ROS)'
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第6章：机器人操作系统（ROS）
- en: 'Activity 6: Simulators and Sensor'
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动6：模拟器和传感器
- en: '**Solution**'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'We start by creating the packages and files:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们从创建包和文件开始：
- en: '[PRE38]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'This is the implementation of the image obtainer node:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是图像获取节点的实现：
- en: 'Note:'
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: '[PRE39]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'As you can see, this node is very similar to the one in *Exercise 21*, *Publishers
    and Subscribers*. The only differences are:'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，这个节点与*练习21*中的*发布者和订阅者*节点非常相似。唯一的区别是：
- en: A counter is used for showing only one image of twenty received.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用计数器仅显示收到的二十张图像中的一张。
- en: We enter `1000 (ms)` as the `Key()` parameter so that each image is shown for
    a second.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们输入`1000 (ms)`作为`Key()`参数，这样每张图像就会显示一秒钟。
- en: 'This is the implementation of the movement node:'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是运动节点的实现：
- en: '[PRE40]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: To execute the file, we will execute the code mentioned here.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了执行文件，我们将执行这里提到的代码。
- en: 'Note:'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: '[PRE41]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Run both nodes and check the system functioning. You should see the robot turning
    on itself while images of what it sees are shown. This is a sequence of the execution:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行两个节点并检查系统功能。你应该看到机器人转动自己，同时展示它所看到的图像。这是执行的一个顺序：
- en: 'The output will look like this:'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 6.9: The first sequence of the execution of activity nodes](img/C1355_06_09.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图6.9：活动节点执行的第一个顺序](img/C1355_06_09.jpg)'
- en: 'Figure 6.10: The first sequence of the execution of activity nodes'
  id: totrans-161
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.10：活动节点执行的第一个顺序
- en: '![Figure 6.10: The second sequence of the execution of activity nodes](img/C1355_06_10.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![图6.10：活动节点执行的第二个顺序](img/C1355_06_10.jpg)'
- en: 'Figure 6.11: The second sequence of the execution of activity nodes'
  id: totrans-163
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.11：活动节点执行的第二个顺序
- en: '![Figure 6.11: The third sequence of the execution of activity nodes](img/C1355_06_11.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.11: 活动节点执行的第三个序列](img/C1355_06_11.jpg)'
- en: 'Figure 6.12: The third sequence of the execution of activity nodes'
  id: totrans-165
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 6.12: 活动节点执行的第三个序列'
- en: 'Note:'
  id: totrans-166
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: The output will look similar but not exactly look as the one mentioned in figures
    6.10, 6.11, and 6.12.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 输出看起来类似但不完全像图 6.10、6.11 和 6.12 中提到的那样。
- en: Congratulations! You have completed the activity and at the end, you will have
    an output which is like figures 6.8, 6.9, and 6.10\. By completing this activity
    successfully, you have been able to implement and work with nodes that let you
    subscribe to a camera which will show images in the virtual environment. You also
    learned to rotate a robot on itself that lets you view these images.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已完成此活动，最终将会有一个类似于图 6.8、6.9 和 6.10 的输出。通过成功完成此活动，您已能够实现并使用让您订阅相机的节点，在虚拟环境中显示图像。您还学会了让机器人自转，以便查看这些图像。
- en: 'Chapter 7: Build a Text-Based Dialogue System (Chatbot)'
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第7章：构建基于文本的对话系统（聊天机器人）
- en: 'Activity 7: Create a Conversational Agent to Control a Robot'
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动7：创建用于控制机器人的对话代理
- en: '**Solution**'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: Open up your Google Colab interface.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的Google Colab界面。
- en: Create a folder for the book and download the `utils`, `responses`, and `training`
    folder from Github and upload it in the folder.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为书创建一个文件夹，并从Github下载`utils`、`responses`和`training`文件夹，然后上传到该文件夹中。
- en: 'Import drive and mount it as follows:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入驱动并按如下方式挂载它：
- en: '[PRE42]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Note
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Every time you use a new collaborator, mount the drive to the desired folder.
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每次使用新的协作者时，请将驱动器挂载到所需的文件夹。
- en: 'Once you have mounted your drive for the first time, you will need to enter
    the authorization code mentioned by clicking on the URL mentioned by Google and
    press the Enter key on your keyboard:![Figure 7.24: Image displaying the Google
    Colab authorization step](img/C13550_05_08.jpg)'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '第一次挂载驱动后，您需要按照Google提供的URL并在键盘上按Enter键来输入授权代码：![图 7.24: 显示Google Colab授权步骤的图像](img/C13550_05_08.jpg)'
- en: 'Figure 7.28: Image displaying the Google Colab authorization step'
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 7.28: 显示Google Colab授权步骤的图像'
- en: Now that you have mounted the drive, you need to set the path of the directory.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您已经挂载了驱动器，需要设置目录的路径。
- en: '[PRE43]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Note:'
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: The path mentioned in step 5 may change as per your folder setup on Google Drive.
    The path will always begin with cd /content/drive/My Drive/
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 步骤5中提到的路径可能会根据您在Google Drive上的文件夹设置而变化。路径将始终以cd /content/drive/My Drive/开头。
- en: 'Import the chatbot_intro file:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入chatbot_intro文件：
- en: '[PRE44]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Define the GloVe model:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义GloVe模型：
- en: '[PRE45]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'List the responses and training sentences files:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出响应和训练句子文件：
- en: '[PRE46]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '![Figure 7.25: A list of intent documents](img/C1355_07_25.jpg)'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 7.25: 意图文档列表](img/C1355_07_25.jpg)'
- en: 'Figure 7.29: A list of intent documents'
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 7.29: 意图文档列表'
- en: 'Create document vectors:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建文档向量：
- en: '[PRE47]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '![7.26: Shape of doc_vectors](img/C1355_07_26.jpg)'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![7.26: doc_vectors的形状](img/C1355_07_26.jpg)'
- en: '7.30: Shape of doc_vectors'
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '7.30: doc_vectors的形状'
- en: 'Predict the intent:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预测意图：
- en: '[PRE48]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '![7.27: Predicted intent](img/C1355_07_27.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![7.27: 预测意图](img/C1355_07_27.jpg)'
- en: '7.31: Predicted intent'
  id: totrans-199
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '7.31: 预测意图'
- en: Congratulations! You finished the activity. You can add more intents if you
    want to and train the GloVe model to achieve better results. By creating a function
    with all the code, you programmed and developing a movement node in ROS, you can
    order your robot to make movements and turn around.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已完成此活动。如果希望，您可以添加更多意图，并训练GloVe模型以获得更好的结果。通过创建包含所有代码的函数，您可以编程和开发ROS中的运动节点，从而命令您的机器人进行移动和转向。
- en: 'Chapter 8: Object Recognition to Guide a Robot Using CNNs'
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第8章：使用CNN引导机器人进行对象识别
- en: 'Activity 8: Multiple Object Detection and Recognition in Video'
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动8：在视频中进行多对象检测和识别
- en: '**Solution**'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Mount the drive:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 挂载驱动器：
- en: '[PRE49]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Install the libraries:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装库：
- en: '[PRE50]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Import the libraries:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE51]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Declare the model:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明模型：
- en: '[PRE52]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Declare the callback method:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明回调方法：
- en: '[PRE53]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Run Matplotlib and the video detection process:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行Matplotlib和视频检测过程：
- en: '[PRE54]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'The output will be as shown in the following frames:'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下帧所示：
- en: '![Figure 8.7: ImageAI video object detection output](img/C1355_08_07.jpg)'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 8.7: ImageAI视频对象检测输出](img/C1355_08_07.jpg)'
- en: 'Figure 8.7: ImageAI video object detection output'
  id: totrans-218
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 8.7: ImageAI视频对象检测输出'
- en: As you can see, the model detects objects more or less properly. Now you can
    see the output video in your chapter 8 root directory with all the object detections
    in it.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所见，模型可以较为准确地检测到对象。现在您可以在第8章的根目录中看到包含所有对象检测结果的输出视频。
- en: 'Note:'
  id: totrans-220
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: There is an additional video added in the `Dataset/videos` folder – `park.mp4`.
    You can use the steps just mentioned and recognize objects in this video as well.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Dataset/videos`文件夹中新增了一个视频——`park.mp4`。你可以使用刚才提到的步骤，也可以在这个视频中识别物体。
- en: 'Chapter 9: Computer Vision for Robotics'
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第9章：机器人计算机视觉
- en: 'Activity 9: A Robotic Security Guard'
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动9：机器人安保守卫
- en: '**Solution**'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Create a new package in your catkin workspace to contain the integration node.
    Do it with this command to include the correct dependencies:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的catkin工作空间中创建一个新的包来包含集成节点。使用此命令来包括正确的依赖项：
- en: '[PRE55]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Switch to the package folder and create a new `scripts` directory. Then, create
    the Python file and make it executable:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到包文件夹并创建一个新的`scripts`目录。然后，创建Python文件并使其可执行：
- en: '[PRE56]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'This is the implementation of the first node:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是第一个节点的实现：
- en: 'Libraries importation:'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 库导入：
- en: '[PRE57]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Note
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: '[PRE58]'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Node, subscriber, and network initialization:'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 节点、订阅者和网络初始化：
- en: '[PRE59]'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Note
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: '[PRE60]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Main function of the node:'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 节点的主函数：
- en: '[PRE61]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Method for making predictions on images:'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对图像进行预测的方法：
- en: '[PRE62]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Publish the predictions:'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 发布预测：
- en: '[PRE63]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Program entry:'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 程序入口：
- en: '[PRE64]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'This is the implementation of the second node:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是第二个节点的实现：
- en: 'Libraries importation:'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 库导入：
- en: '[PRE65]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Class definition:'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类定义：
- en: '[PRE66]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Node initialization and subscriber definition:'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 节点初始化和订阅者定义：
- en: '[PRE67]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'The callback function for obtaining published data:'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 获取已发布数据的回调函数：
- en: '[PRE68]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Start the alarm if a person is detected in the data:'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果检测到有人员在数据中，启动警报：
- en: '[PRE69]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Program entry:'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 程序入口：
- en: '[PRE70]'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Now, you need to set the destination to the scripts folder:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你需要将目标设置为scripts文件夹：
- en: '[PRE71]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Execute the movement.py file:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行movement.py文件：
- en: '[PRE72]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Open a new terminal and execute the command to get the output:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端并执行命令以获取输出：
- en: '[PRE73]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Run both nodes at the same time. This is an execution example:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时运行这两个节点。以下是执行示例：
- en: 'Gazebo situation:'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Gazebo情况：
- en: '![Figure 9.16: Example situation for the activity](img/C1355_09_16.jpg)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![图9.16：活动的示例情况](img/C1355_09_16.jpg)'
- en: 'Figure 9.16: Example situation for the activity'
  id: totrans-268
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.16：活动的示例情况
- en: 'First node output:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个节点输出：
- en: '![Figure 9.17: First activity node output](img/C1355_09_17.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![图9.17：第一个活动节点输出](img/C1355_09_17.jpg)'
- en: 'Figure 9.17: First activity node output'
  id: totrans-271
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.17：第一个活动节点输出
- en: 'Second node output:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个节点输出：
- en: '![Figure 9.18: Second activity node output](img/C1355_09_18.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![图9.18：第二个活动节点输出](img/C1355_09_18.jpg)'
- en: 'Figure 9.18: Second activity node output'
  id: totrans-274
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.18：第二个活动节点输出
