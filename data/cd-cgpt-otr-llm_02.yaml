- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2  '
- en: 'Unleashing the Power of LLMs for Coding: A Paradigm Shift'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '利用LLMs的力量进行编程：一种范式转变  '
- en: In this chapter, we’ll be unveiling the advantages of coding with LLMs and looking
    at what is possible with code generation with LLMs such as ChatGPT and Bard (now
    Gemini). Here, you’ll find out how to start getting good results, recognize the
    limitations of code taken from LLMs, and discover practical examples of LLM applications
    in coding tasks.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '在本章中，我们将揭示使用LLMs进行编程的优势，并探讨使用像ChatGPT和Bard（现在称为Gemini）等LLMs进行代码生成的可能性。在这里，你将了解如何开始获得良好的结果，认识到从LLMs获得的代码的局限性，并发现LLM在编程任务中的实际应用示例。  '
- en: This should help you to get into some coding and prompt engineering. You’ll
    get some results, then get better results, and you’ll start to make more stable
    code.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '这将帮助你进入一些编程和提示工程的领域。你将获得一些结果，之后逐步提升结果，最终开始编写更稳定的代码。  '
- en: We’ll be looking at some example prompts for the LLMs and the code they produce,
    progressing to better prompts to get better code. However, this will take multiple
    prompts. Then, in [*Chapter 3*](B21009_03.xhtml#_idTextAnchor073) , we’ll look
    more at the whole process of correcting and debugging your code.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '我们将查看一些LLMs的示例提示及其生成的代码，逐步提高提示，以获得更好的代码。然而，这将需要多次提示。然后，在[*第3章*](B21009_03.xhtml#_idTextAnchor073)中，我们将更详细地讨论修正和调试代码的整个过程。  '
- en: 'This chapter covers the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '本章内容包括以下主题：  '
- en: Unveiling the advantages of coding with LLMs
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '揭示使用LLMs进行编程的优势  '
- en: Plan your LLM-powered coding
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '规划你的LLM驱动编程  '
- en: Getting into LLM-powered coding
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '进入LLM驱动的编程  '
- en: Making it work for you
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '使其为你工作  '
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '技术要求  '
- en: 'In this chapter, you’ll need the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '在本章中，你需要以下内容：  '
- en: Access to an LLM/chatbot such as GPT-4 or Gemini; each requires a login. For
    GPT-4, you’ll need an OpenAI account, and for Gemini, you’ll need a Google account.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '需要访问一个LLM/聊天机器人，如GPT-4或Gemini；每个都需要登录。对于GPT-4，你需要一个OpenAI账户；对于Gemini，你需要一个Google账户。  '
- en: A Python interpreter or **integrated development environment** ( **IDE** ) such
    as Spyder, PyCharm, Visual Studio, or Eclipse, or an online interpreter such as
    [https://www.online-python.com/](https://www.online-python.com/) or [https://www.w3schools.com/python/python_compiler.asp](https://www.w3schools.com/python/python_compiler.asp)
    .
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Python解释器或**集成开发环境**（**IDE**），如Spyder、PyCharm、Visual Studio或Eclipse，或者一个在线解释器，如[https://www.online-python.com/](https://www.online-python.com/)或[https://www.w3schools.com/python/python_compiler.asp](https://www.w3schools.com/python/python_compiler.asp)。
- en: An HTML interpreter such as [https://htmledit.squarefree.com/](https://htmledit.squarefree.com/)
    , [https://onecompiler.com/html](https://onecompiler.com/html) , or [https://www.w3schools.com/tryit/](https://www.w3schools.com/tryit/)
    , or a website editor such as Wix, GoDaddy, One.com, and so on.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '一个HTML解释器，如[https://htmledit.squarefree.com/](https://htmledit.squarefree.com/)、[https://onecompiler.com/html](https://onecompiler.com/html)或[https://www.w3schools.com/tryit/](https://www.w3schools.com/tryit/)，或一个网站编辑器，如Wix、GoDaddy、One.com等。  '
- en: 'Get the code in this book here: [https://github.com/PacktPublishing/Coding-with-ChatGPT-and-other-LLMs/tree/main/Chapter2](https://github.com/PacktPublishing/Coding-with-ChatGPT-and-other-LLMs/tree/main/Chapter2)
    .'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '获取本书中的代码：[https://github.com/PacktPublishing/Coding-with-ChatGPT-and-other-LLMs/tree/main/Chapter2](https://github.com/PacktPublishing/Coding-with-ChatGPT-and-other-LLMs/tree/main/Chapter2)。  '
- en: Now, we’ll get into the chapter, starting with the advantages of coding with
    LLMs, and why you’d want to do this at all.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '现在，我们将进入本章，首先讨论使用LLMs进行编程的优势，以及你为何要这么做。  '
- en: Unveiling the advantages of coding with LLMs
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '揭示使用LLMs进行编程的优势  '
- en: Why would you want to use LLMs such as Gemini or GPT-4 to give you code?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '为什么你会想使用像Gemini或GPT-4这样的LLMs来为你提供代码？  '
- en: The short version
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '简短版本  '
- en: Using LLMs to code is quick and makes it easy to get the code you need, translate
    between code languages, document and explain code, and share with programmers
    of different abilities.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '使用LLMs进行编程既快捷又能轻松获得所需的代码，进行代码语言之间的转换，记录和解释代码，并与不同能力的程序员分享。  '
- en: The longer version
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '更长的版本  '
- en: 'LLMs boost your ability in more ways than one, including increased productivity,
    faster innovation, reduced barriers to entry, and better collaboration. We’ll
    cover the most useful advantages next:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 'LLMs在多个方面提升你的能力，包括提高生产力、加速创新、降低进入门槛和更好的协作。接下来我们将介绍最有用的优势：  '
- en: '**Greatly** **increased productivity** :'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大幅** **提高生产力**：  '
- en: You can save a lot of time, and almost immediately get examples of relevant
    code for what you’re trying to do. The LLM will most likely give you helpful comments
    too.
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '你可以节省大量时间，几乎可以立即获得与目标相关的代码示例。LLM还很可能会给你提供有用的注释。  '
- en: LLMs can also translate or convert code from one coding language to another
    (Python to C++, for example).
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: LLMs 还可以将代码从一种编程语言转换到另一种语言（例如，从 Python 到 C++）。
- en: LLMs can even automatically generate documentation for code, improving communication
    and understanding for other coders working on your code, or you, if you’ve forgotten
    what you were attempting to create and why.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: LLMs 甚至可以自动生成代码文档，改善沟通与理解，方便其他开发者理解你的代码，或者如果你忘记了你当时在创建什么及其原因，帮助你回忆。
- en: '**Boilerplate reduction** : LLMs can automatically generate repetitive code
    snippets, saving developers time and effort on routine tasks.'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减少样板代码** : LLMs 可以自动生成重复的代码片段，节省开发者在常规任务上投入的时间和精力。'
- en: This all means greater productivity. What about how it improves the speed of
    innovation?
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这意味着更高的生产力。那么它如何提高创新速度呢？
- en: '**Innovation acceleration** :'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创新加速** : '
- en: '**Experimentation with new ideas** : LLMs can generate alternative code approaches
    and solutions, encouraging exploration and innovation'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**新想法的实验** : LLMs 可以生成替代的代码方法和解决方案，鼓励探索和创新。'
- en: '**Exploration of niche and complex algorithms** : LLMs can efficiently search
    through vast code libraries and suggest relevant algorithms for specific needs'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**探索小众和复杂算法** : LLMs 可以高效地浏览庞大的代码库，并为特定需求推荐相关算法。'
- en: '**Rapid prototyping** : LLMs can quickly generate functional prototypes, speeding
    up the development cycle and testing new ideas'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速原型设计** : LLMs 可以快速生成功能性原型，加快开发周期并测试新想法。'
- en: '**Personalized optimization** : LLMs can suggest code optimization based on
    specific use cases and performance requirements'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**个性化优化** : LLMs 可以根据特定的使用案例和性能要求，建议代码优化方案。'
- en: '**Reduced barriers** **to entry** :'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**降低进入壁垒** : '
- en: '**Learning assistance** : LLMs can explain complex code concepts and answer
    questions in real time, making coding more accessible for beginners'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学习辅助** : LLMs 可以实时解释复杂的代码概念并回答问题，使初学者更容易进行编码。'
- en: '**Code completion suggestions** : LLMs can auto-complete code, providing helpful
    prompts and reducing syntax errors'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码补全建议** : LLMs 可以自动补全代码，提供有用的提示并减少语法错误。'
- en: '**Personalized learning materials** : LLMs can generate tailored learning materials
    based on individual needs and skill levels'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**个性化学习材料** : LLMs 可以根据个人需求和技能水平生成量身定制的学习材料。'
- en: '**Democratization of data** : LLMs can help analyze and process large datasets,
    making data-driven development more accessible to all'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据的民主化** : LLMs 可以帮助分析和处理大数据集，使数据驱动的开发对所有人更加可及。'
- en: '**Enhanced collaboration** :'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强协作** :'
- en: '**Improved communication** : LLMs can simplify technical explanations and generate
    code comments, enabling clearer communication between developers'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**改进的沟通** : LLMs 可以简化技术解释并生成代码注释，促进开发者之间更清晰的沟通。'
- en: '**Accessibility for diverse skill sets** : LLMs can bridge the gap between
    developers with different levels of expertise, facilitating knowledge sharing
    and collaboration'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面向多样技能的可达性** : LLMs 可以弥合不同技能水平的开发者之间的差距，促进知识共享与合作。'
- en: '**Team augmentation** : LLMs can act as virtual assistants, assisting developers
    with tasks and freeing them to focus on complex problems'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**团队增强** : LLMs 可以作为虚拟助手，协助开发者完成任务，使他们能专注于复杂问题。'
- en: '**Version control assistance** : LLMs can help track changes and suggest improvements
    to code over time'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本控制协助** : LLMs 可以帮助跟踪更改并建议代码改进。'
- en: Warning
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: 'You will still need to know something about writing code and how to do other
    tasks associated with making a program: programming. You’ll need to debug the
    code you get from LLMs.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你仍然需要了解如何编写代码以及执行与编程相关的其他任务。你还需要调试从 LLMs 获得的代码。
- en: LLMs can suggest possible fixes for identified errors, accelerating the debugging
    process.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: LLMs 可以建议已识别错误的可能修复方案，加速调试过程。
- en: 'So, those are the advantages; there are reasons why this might not be straightforward
    though and there are dangers. We’ll get into those things in later chapters: code
    refactoring, debugging, and optimization ( [*Chapter 3*](B21009_03.xhtml#_idTextAnchor073)
    ), addressing biases and ethical concerns ( [*Chapter 5*](B21009_05.xhtml#_idTextAnchor115)
    ), navigating the legal landscape of LLM-generated code ( [*Chapter 6*](B21009_06.xhtml#_idTextAnchor137)
    ), security considerations and measures ( [*Chapter 7*](B21009_07.xhtml#_idTextAnchor180)
    ), and limitations of coding with LLMs ( [*Chapter 8*](B21009_08.xhtml#_idTextAnchor203)
    ).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这些是优势；然而，这可能并不直截了当，并且存在危险。我们将在后续章节中详细讨论这些内容：代码重构、调试和优化（ [*第3章*](B21009_03.xhtml#_idTextAnchor073)
    ）、解决偏见和道德问题（ [*第5章*](B21009_05.xhtml#_idTextAnchor115) ）、LLM生成代码的法律环境（ [*第6章*](B21009_06.xhtml#_idTextAnchor137)
    ）、安全考虑和措施（ [*第7章*](B21009_07.xhtml#_idTextAnchor180) ）、以及使用LLM进行编码的限制（ [*第8章*](B21009_08.xhtml#_idTextAnchor203)
    ）。
- en: To generate good, workable code, like most things, it’s important to plan.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成良好且可操作的代码，与大多数事物一样，计划很重要。
- en: These are some powerful reasons why using LLMs to assist with your coding can
    be advantageous. In the next section, you can learn about how to actually implement
    LLM tools in coding, starting with the planning phase.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是使用LLM来辅助编码的强大理由。在下一节中，你可以了解如何实际在编码中实现LLM工具，从规划阶段开始。
- en: Planning your LLM-powered coding
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规划你的LLM驱动编码
- en: To make sure you have good code, you’re going to need to plan what you will
    need well.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要确保你有好的代码，你需要很好地计划你将需要什么。
- en: 'You may need to answer questions such as the following:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要回答以下问题：
- en: What is the purpose of the code/software?
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码/软件的目的是什么？
- en: Who will use your software?
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁将使用你的软件？
- en: Where will the software be used?
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件将在哪里使用？
- en: How will the user interaction work?
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户如何进行交互？
- en: What data sources will be needed, if any?
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否需要任何数据源？
- en: What data format will you use?
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将使用什么数据格式？
- en: How will you plumb in the data?
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何处理数据输入？
- en: What will your software look like? GUI or command-line interface?
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的软件将是什么样子？GUI还是命令行界面？
- en: Before leaping into the exciting world of LLM-powered coding, taking a moment
    to meticulously plan your project is crucial for ensuring the creation of robust,
    effective code. It’s like sketching out a blueprint before building a house –
    you prioritize stability and functionality before adding the finishing touches.
    Here are some key questions to ponder.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在跃入充满激情的LLM驱动编码世界之前，花一点时间精心规划你的项目对确保创造稳健有效的代码至关重要。这就像在建造房子之前绘制蓝图 - 你优先考虑稳定性和功能性，然后再添加最后的修饰。以下是一些需要深思熟虑的关键问题。
- en: 1. Understanding your purpose – unveiling the why
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. 理解你的目的 - 揭示为什么
- en: Every great creation starts with a purpose. Your LLM-powered code is no exception.
    Before diving into technical nuances, pause and truly define its raison d’être.
    What problem are you solving? What specific task will it automate? Is it about
    streamlining an existing process, creating a completely new solution, or exploring
    innovative possibilities?
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 每个伟大的创造都始于一个目的。你的LLM驱动代码也不例外。在深入技术细节之前，暂停一下，真正定义它的存在理由。你要解决什么问题？它将自动化哪些具体任务？是优化现有流程，创建全新解决方案，还是探索创新可能性？
- en: 'Clearly articulating your goals is akin to giving the LLM a roadmap. The clearer
    your vision, the more effectively it can focus its generation capabilities on
    relevant code aligned with your aspirations. Think of it as a conversation: “
    *This is what I want to achieve; LLM, guide me to the code that makes* *it happen*
    .”'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 清晰地表达你的目标就像给LLM一张路线图。你的愿景越清晰，它越能有效地将生成能力集中在与你愿望一致的相关代码上。把它看作是一场对话：“ *这是我想要实现的；LLM，指引我生成能让这个目标实现的代码*
    *。* ”
- en: 2. Identifying your audience – tailoring the experience
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2. 确定你的受众 - 量身定制体验
- en: Imagine your software being used. Who is interacting with it? Are they tech-savvy
    individuals familiar with complex interfaces, or everyday users seeking a familiar
    and intuitive experience? Identifying your target audience is crucial, as it shapes
    the LLM’s output in significant ways.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你的软件正在使用。谁在使用它？是熟悉复杂界面的技术达人，还是寻求熟悉和直观体验的普通用户？确定你的目标受众至关重要，因为它在很大程度上塑造了LLM的输出。
- en: For tech-savvy audiences, the LLM might focus on generating efficient and powerful
    code, even if it involves more technical elements. But when catering to everyday
    users, the emphasis shifts toward creating a user-friendly interface, prioritizing
    clarity and ease of use. Think of it as designing a building – you consider your
    audience’s needs and preferences to create a welcoming and accessible space.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于技术熟练的受众，LLM可能会侧重于生成高效且强大的代码，即使它涉及更多技术元素。但在面向普通用户时，重点则转向创建一个用户友好的界面，优先考虑清晰性和易用性。可以把它想象成设计一座建筑——你要根据受众的需求和偏好来创建一个既友好又易于访问的空间。
- en: 3. Defining the environment – where your code calls home
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3. 定义环境 – 你的代码的“家”
- en: Imagine your code having a physical address. Where will it reside? Will it be
    accessible online as a web application, readily available on devices as a mobile
    app, or tucked away on specific hardware as local software? Understanding the
    deployment environment is vital for the LLM.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你的代码有一个物理地址。它会在哪里驻留？是作为一个网络应用程序在线访问、作为一个移动应用程序在设备上随时可用，还是作为本地软件藏匿在特定硬件中？理解部署环境对LLM至关重要。
- en: Different environments have distinct requirements. Web applications need optimization
    for online accessibility, mobile apps demand portability and resource efficiency,
    and local software might prioritize offline functionality. Each context influences
    the LLM’s code generation, ensuring it meets the specific needs of its deployment
    environment.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的环境有不同的需求。Web 应用需要优化在线访问性，移动应用要求便捷的可移植性和资源效率，而本地软件则可能优先考虑离线功能。每种情境都会影响LLM的代码生成，确保它满足特定部署环境的需求。
- en: 4. Mapping user interaction – charting the navigation flow
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4. 用户交互映射 – 绘制导航流程图
- en: Think about how users will interact with your software. Will they navigate through
    graphical elements such as buttons and menus, or will they rely on text commands
    in a terminal-like interface? Perhaps even voice commands are in the mix! Defining
    the interaction style significantly impacts the LLM’s output.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 想想用户如何与软件互动。他们是通过按钮和菜单等图形元素进行导航，还是依赖于终端类界面中的文本命令？甚至可能会有语音命令！定义交互方式会显著影响LLM的输出。
- en: For **graphical user interfaces** ( **GUIs** ), the LLM prioritizes code for
    element placement, responsiveness, and intuitive interaction handling. Think of
    it as drawing a map – you guide the LLM in creating a clear and efficient navigational
    flow for users. In contrast, for **command-line interfaces** ( **CLIs** ), the
    focus shifts toward text input, output formatting, and command parsing, helping
    users interact with the software through clear and concise textual commands.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**图形用户界面**（**GUI**），LLM优先生成元素位置、响应性和直观交互处理的代码。可以把它看作是绘制一张地图——你引导LLM创建清晰且高效的用户导航流程。相比之下，对于**命令行界面**（**CLI**），重点则转向文本输入、输出格式化和命令解析，帮助用户通过清晰简洁的文本命令与软件进行互动。
- en: 5. Identifying data sources – feeding the machine learning beast
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5. 确定数据源 – 喂养机器学习的“猛兽”
- en: Does your software rely on external data to function? Perhaps it uses user input,
    retrieves information from databases, or processes sensor readings. If so, pinpointing
    the data sources, their format (CSV, JSON, etc.), and how they will be integrated
    into the code becomes crucial.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你的软件是否依赖外部数据来运行？也许它使用用户输入、从数据库检索信息或处理传感器读取值。如果是这样，确定数据源、它们的格式（CSV、JSON 等）以及它们将如何集成到代码中就变得至关重要。
- en: Think of data as the fuel that powers your LLM. By providing specific details
    about the data sources, you equip the LLM with the knowledge it needs to access
    and process this fuel effectively. This ensures the generated code can correctly
    handle data interactions, leading to accurate and robust functionality.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 把数据当作是驱动你的LLM的燃料。通过提供有关数据源的具体细节，你为LLM提供了它需要的知识，使其能够有效地访问和处理这些燃料。这确保了生成的代码可以正确地处理数据交互，从而实现准确且强大的功能。
- en: 6. What data format?
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6. 什么数据格式？
- en: 'Choosing the right data format is crucial for seamless integration with your
    LLM-powered code. Consider these factors:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 选择正确的数据格式对于与LLM驱动的代码无缝集成至关重要。考虑以下因素：
- en: '**Compatibility** : Will your LLM natively understand the format, or will you
    need conversion steps? Popular options such as CSV, JSON, and XML are widely supported,
    while less common formats might require additional processing.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**兼容性**：你的LLM是否能够原生理解该格式，还是需要额外的转换步骤？像CSV、JSON和XML这样的常用格式广泛支持，而不太常见的格式可能需要额外的处理。'
- en: '**Efficiency** : For large datasets, consider space-efficient formats such
    as Parquet or Apache DataFrames. For structured data with frequent reads/writes,
    relational databases such as MySQL might be suitable. Analyze your data size,
    access patterns, and LLM compatibility to find the optimal balance.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**效率**：对于大规模数据集，考虑使用空间高效的格式，如 Parquet 或 Apache DataFrames。对于频繁读写的结构化数据，关系型数据库如
    MySQL 可能更为合适。分析你的数据大小、访问模式以及 LLM 兼容性，以找到最优的平衡点。'
- en: '**Human readability** : If you need to understand the data manually, opt for
    human-readable formats such as CSV or JSON. However, for purely machine processing,
    more compact formats may be preferable.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可读性**：如果你需要手动理解数据，选择易于人类阅读的格式，如 CSV 或 JSON。但对于纯机器处理，更紧凑的格式可能更合适。'
- en: '**Future needs** : Think beyond your current requirements. Will the data format
    scale well with your project’s growth? Can you easily add new data types later?
    Choosing a flexible and widely adopted format can save you headaches down the
    line.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**未来需求**：考虑超越当前需求。数据格式能否随着项目的增长而良好扩展？你能否轻松地在以后添加新的数据类型？选择一种灵活且广泛采用的格式，可以避免日后遇到麻烦。'
- en: By carefully considering these factors, you’ll select a data format that enables
    smooth communication between your LLM and the data, ensuring it fuels the code
    generation process effectively.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 通过仔细考虑这些因素，你将选择一种数据格式，确保 LLM 和数据之间的顺畅沟通，从而有效地推动代码生成过程。
- en: 7. How will you plumb in the data?
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7. 你将如何管道化数据？
- en: '**Plumbing** refers to how your code retrieves, processes, and integrates data.
    With LLMs, this takes on a special importance:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**管道**（Plumbing）指的是你的代码如何获取、处理和集成数据。在 LLM 的应用中，这变得尤为重要：'
- en: '**Data access mechanism** : Will your LLM directly access the data source (e.g.,
    database API)? Or will your code act as an intermediary, fetching and preprocessing
    data before feeding it to the LLM? Choose based on complexity, security needs,
    and desired control over data handling.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据访问机制**：你的 LLM 是否直接访问数据源（例如，数据库 API）？或者你的代码将作为中介，先获取并预处理数据，然后再传递给 LLM？根据复杂性、安全需求以及你对数据处理的控制要求来选择。'
- en: '**Data transformation** : Does the LLM expect specific data structures or formats?
    You might need to transform or preprocess the data (e.g., cleaning and normalization)
    before passing it to the LLM. Consider using libraries or tools specializing in
    data preparation for AI models.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据转换**：LLM 是否要求特定的数据结构或格式？你可能需要在将数据传递给 LLM 之前对其进行转换或预处理（例如，清理和归一化）。考虑使用专门用于
    AI 模型数据准备的库或工具。'
- en: '**Error handling** : Anticipate potential data issues such as missing values,
    inconsistencies, or errors. Design your code to handle these gracefully, potentially
    providing alternative data sources or fallback mechanisms to prevent the LLM from
    generating faulty code due to bad data.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误处理**：预见潜在的数据问题，如缺失值、不一致性或错误。设计代码时应优雅地处理这些问题，可能提供备用数据源或回退机制，防止 LLM 因为不良数据而生成错误的代码。'
- en: '**Flexibility and scalability** : As your project evolves, the data access
    and transformation might need adjustments. Ensure your code is modular and adaptable,
    allowing for easy updates and scaling to accommodate changes in data sources,
    formats, or processing requirements.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活性和可扩展性**：随着项目的发展，数据访问和转换可能需要调整。确保你的代码模块化且具有适应性，便于更新和扩展，以适应数据源、格式或处理需求的变化。'
- en: By effectively “plumbing” the data, you provide the LLM with the clean and organized
    information it needs to generate robust and accurate code, empowering your LLM-powered
    development journey.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 通过有效地“管道化”数据，你为 LLM 提供了干净且有序的信息，使其能够生成稳健且准确的代码，从而增强你的 LLM 驱动的开发过程。
- en: 8. Visualizing the interface
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8. 可视化界面
- en: 'Will your software have a user-friendly GUI with buttons, menus, and visual
    elements, or will it be a CLI driven by text commands? Choosing the interface
    is like deciding on the exterior design of your building – it determines how users
    interact and experience your creation. Here’s how your choice impacts the LLM’s
    code generation:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 你的软件是会有一个带有按钮、菜单和视觉元素的用户友好图形界面（GUI），还是将采用文本命令驱动的命令行界面（CLI）？选择界面就像是在决定你建筑的外观设计——它决定了用户如何与之互动并体验你的创作。以下是这种选择如何影响
    LLM 的代码生成：
- en: '**GUI** : If you choose a GUI, the LLM will generate code that adheres to UI
    design principles. This includes code for element placement, responsiveness, and
    interaction handling. Consider providing the LLM with examples of similar GUIs
    or design mockups to guide its output.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GUI**：如果选择 GUI，LLM 将生成符合 UI 设计原则的代码。包括元素定位、响应式布局和交互处理的代码。考虑向 LLM 提供类似 GUI
    或设计模型的示例，以指导其输出。'
- en: '**CLI** : For a CLI, the LLM will focus on code for text input, output formatting,
    and command parsing. Providing examples of existing CLI tools or command structures
    can help the LLM understand your desired user experience.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CLI**：对于 CLI，LLM 将专注于文本输入、输出格式化和命令解析的代码。提供现有 CLI 工具或命令结构的示例，可以帮助 LLM 理解你所期望的用户体验。'
- en: Remember, the interface also shapes user expectations and perceptions. Choose
    wisely and ensure that the LLM generates code that aligns with your vision for
    user interactions.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，界面也会塑造用户的期望和感知。明智选择，并确保 LLM 生成的代码符合你对用户交互的愿景。
- en: 'By meticulously addressing these foundational elements, you lay a solid groundwork
    for your LLM-powered coding journey. Take note: a clear purpose, defined audience,
    appropriate environment, intuitive interaction, and accessible data sources are
    the pillars upon which successful LLM-driven code is built.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 通过仔细处理这些基础元素，你为基于 LLM 的编程之旅奠定了坚实的基础。请注意：明确的目的、清晰的受众、合适的环境、直观的交互和可访问的数据源是成功的
    LLM 驱动代码构建的支柱。
- en: Now, you’re ready to delve deeper into the technical aspects, confident that
    your LLM is equipped with the right map and tools to guide you toward achieving
    your coding goals.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经准备好深入探索技术方面，确信你的 LLM 拥有正确的路线图和工具，能够引导你实现编程目标。
- en: Now, let’s actually get that code!
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们实际获取那些代码！
- en: Getting into LLM-powered coding
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始进入 LLM 驱动的编程
- en: Here, you get to use an LLM to produce code for you! It can just reel off a
    load of code for you from some English. If you’re lucky or the code is simple
    and commonly used enough, the code will just work straight away! This is going
    to save you a lot of time and effort!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以使用 LLM 为你生成代码！它可以根据一些英文内容直接为你生成一堆代码。如果你运气好，或者代码很简单且常用，代码可能会立刻就能正常工作！这将为你节省大量时间和精力！
- en: Here is a series of prompts and their resulting code responses by Gemini. From
    these, we can start to see the sorts of things that can be done easily by chatbots
    and what is more difficult and error-prone.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是由 Gemini 提供的一系列提示及其生成的代码响应。通过这些，我们可以开始了解聊天机器人能够轻松完成的任务，以及哪些任务更加困难且容易出错。
- en: We can then analyze and see how to improve our prompts and how to debug when
    we get errors.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以分析并学习如何改进我们的提示，并在出现错误时如何进行调试。
- en: 'Here is *Prompt 1* : **Please give me an example of python code to make a button
    for a webpage where if you click the button it** **says "hello".**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 *Prompt 1*：**请给我一个 Python 代码示例，制作一个网页按钮，当你点击按钮时，它会显示 "hello"。**
- en: 'This is HTML, so should be put into a web page on a website editor or it can
    be tested and played with in an HTML interpreter, such as [https://htmledit.squarefree.com/](https://htmledit.squarefree.com/)
    , [https://onecompiler.com/html](https://onecompiler.com/html) , or [https://www.w3schools.com/tryit/](https://www.w3schools.com/tryit/)
    :'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 HTML，因此应该将其放入网页编辑器中的网页，或者可以在 HTML 解释器中进行测试和操作，例如 [https://htmledit.squarefree.com/](https://htmledit.squarefree.com/)、[https://onecompiler.com/html](https://onecompiler.com/html)
    或 [https://www.w3schools.com/tryit/](https://www.w3schools.com/tryit/)：
- en: '[PRE0]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In an online HTML interpreter, this is what the code looks like:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在在线 HTML 解释器中，代码看起来是这样的：
- en: '![Figure 2.1: Here is the code pasted into an HTML interpreter](img/B21009_02_1.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1：这是粘贴到 HTML 解释器中的代码](img/B21009_02_1.jpg)'
- en: 'Figure 2.1: Here is the code pasted into an HTML interpreter'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1：这是粘贴到 HTML 解释器中的代码
- en: We’ll get a button similar to the one shown in the following figure. It’s pretty
    simple!
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到一个与下图相似的按钮。它非常简单！
- en: '![Figure 2.2: The resulting button](img/B21009_02_2.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2：生成的按钮](img/B21009_02_2.jpg)'
- en: 'Figure 2.2: The resulting button'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2：生成的按钮
- en: In *Figure 2* *.3* , we can see the output from clicking the button.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *图 2* *.3* 中，我们可以看到点击按钮后的输出。
- en: '![Figure 2.3: Output from clicking the button from the HTML code I got from
    Gemini](img/B21009_02_3.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3：点击从 Gemini 获得的 HTML 代码按钮后的输出](img/B21009_02_3.jpg)'
- en: 'Figure 2.3: Output from clicking the button from the HTML code I got from Gemini'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3：点击从 Gemini 获得的 HTML 代码按钮后的输出
- en: So, that first bit of code worked fine, with no debugging needed, apparently.
    The user clicks the **OK** button, and the window disappears. You’d have to click
    the first button, **Click me** , to get the pop-up window again. That part works
    too.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，第一段代码很好地运行了，似乎不需要调试。用户点击 **OK** 按钮，窗口消失了。你需要再次点击第一个按钮 **Click me** 才能再次弹出窗口。这部分也运行正常。
- en: Hopefully, we’ve learned (yes, me too) that LLM chatbots can give some nice
    code to do simple things and it can work if you place it in the correct place
    to execute that code.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 希望我们已经学到了（是的，我也是），LLM聊天机器人可以提供一些不错的代码来做简单的事情，如果你把它放在正确的位置来执行该代码，它可以运行。
- en: I won’t normally put all the code on the page like this, as it can get unwieldy
    and too verbose for a book.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我通常不会将所有代码放在页面上，因为这样会变得笨重而且太啰嗦，对于一本书来说。
- en: 'You can get the code from Packt’s GitHub repository for this book: [https://github.com/PacktPublishing/Coding-with-ChatGPT-and-Other-LLMs/](https://github.com/PacktPublishing/Coding-with-ChatGPT-and-Other-LLMs/)
    .'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从本书的Packt GitHub存储库获取代码：[https://github.com/PacktPublishing/Coding-with-ChatGPT-and-Other-LLMs/](https://github.com/PacktPublishing/Coding-with-ChatGPT-and-Other-LLMs/)
    。
- en: 'This code combines HTML and JavaScript:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码结合了HTML和JavaScript：
- en: The HTML creates a button with the text **Click me**
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML创建一个带有文本 **Click me** 的按钮
- en: The **sayHello()** JavaScript function displays an alert box with the message
    **Hello!** when the button is clicked
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sayHello()** JavaScript函数在点击按钮时显示带有消息 **Hello!** 的警报框'
- en: Next, we have the second prompt for Bard (now replaced by Gemini), and you’ll
    see a little bit of mathematics is needed.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有巴德（现已被双子座替代）的第二个提示，你将看到一点数学是必要的。
- en: 'Here is *Prompt 2* : **Please give me an example of python code to make a simple
    script where if you put in Fahrenheit it gives Celsius but if you put in Celsius
    temperature it gives** **you Fahrenheit.**'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 *Prompt 2* ：**请给我一个Python代码示例，制作一个简单的脚本，如果输入华氏度，它给出摄氏度，如果输入摄氏温度，它给出华氏度。**
- en: This will need a Python interpreter or IDE.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这将需要Python解释器或IDE。
- en: 'Copy the code from the following block, run it, and see how well it works:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 复制以下块中的代码，运行它，看看它的运行效果：
- en: '[PRE1]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In *Figure 2* *.4* , we can see the code in the free, online interpreter.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *Figure 2* *.4* 中，我们可以看到在线解释器中的代码。
- en: '![Figure 2.4: The Fahrenheit and Celsius converter code](img/B21009_02_4.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图2.4：华氏度和摄氏度转换器代码](img/B21009_02_4.jpg)'
- en: 'Figure 2.4: The Fahrenheit and Celsius converter code'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4：华氏度和摄氏度转换器代码
- en: 'Next, in *Figure 2* *.5* , we can see the code executing once:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在 *Figure 2* *.5* 中，我们可以看到代码执行一次：
- en: '![Figure 2.5: The F to C and C to F temperature conversion script; this is
    to the right on the web page in Figure 2.4](img/B21009_02_5.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图2.5：F到C和C到F温度转换脚本；这是网页上图2.4右边的位置](img/B21009_02_5.jpg)'
- en: 'Figure 2.5: The F to C and C to F temperature conversion script; this is to
    the right on the web page in Figure 2.4'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5：F到C和C到F温度转换脚本；这是网页上图2.4右边的位置
- en: 'The following figure shows the Celsius to Fahrenheit conversion running in
    the command line:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了在命令行中进行的摄氏度到华氏度转换：
- en: '![Figure 2.6: Celsius to Fahrenheit conversion code in the command line](img/B21009_02_6.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图2.6：命令行中的摄氏度转华氏度转换代码](img/B21009_02_6.jpg)'
- en: 'Figure 2.6: Celsius to Fahrenheit conversion code in the command line'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6：命令行中的摄氏度转华氏度转换代码
- en: What can we learn here? Again, simple code snippets from an LLM chatbot can
    work fine the first time! This time, the code is Python.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从这里学到什么？再次证明，LLM聊天机器人的简单代码片段第一次运行就可以很好地工作！这次，代码是Python。
- en: 'We’ll want to improve this code later; it’s very simple but we might be able
    to make it more user-friendly: easy to use and prettier.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以后会改进这段代码；它非常简单，但我们可能可以使其更用户友好：易于使用和更漂亮。
- en: 'Here is *Prompt 3* : **A block of code for Jupiter notebook that will if given
    a column of data display a plot** **a graph.**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 *Prompt 3* ：**一个Jupyter笔记本的代码块，如果给定一列数据，将显示绘图。**
- en: 'This is for a Jupyter notebook, formerly called an IPython notebook, so the
    files from these have the **.ipynb** file format. You can get a Jupyter notebook
    in the Anaconda Python distribution. If you would like to test this code much
    quicker, you could use Google Colab ( [https://colab.research.google.com](https://colab.research.google.com)
    ) or Jupyter Notebook itself: [https://jupyter.org/try-jupyter/notebooks/?path=notebooks/Intro.ipynb](https://jupyter.org/try-jupyter/notebooks/?path=notebooks/Intro.ipynb)
    .'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这是针对 Jupyter Notebook 的，之前叫做 IPython Notebook，因此这些文件的格式是 **.ipynb**。你可以在 Anaconda
    Python 发行版中获得 Jupyter Notebook。如果你想更快速地测试这段代码，你可以使用 Google Colab（[https://colab.research.google.com](https://colab.research.google.com)）或
    Jupyter Notebook 本身：[https://jupyter.org/try-jupyter/notebooks/?path=notebooks/Intro.ipynb](https://jupyter.org/try-jupyter/notebooks/?path=notebooks/Intro.ipynb)。
- en: These notebooks work by putting the Python code into cells; see *Figure 2* *.7*
    .
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这些笔记本通过将 Python 代码放入单元格中来工作；见 *图 2* *.7*。
- en: It’s Python code; if you don’t know how to use these notebooks, search the internet
    for Jupyter Notebook or Google Colaboratory, or use an LLM such as GPT-4 or Gemini,
    of course.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Python 代码；如果你不知道如何使用这些笔记本，可以搜索 Jupyter Notebook 或 Google Colaboratory，当然也可以使用像
    GPT-4 或 Gemini 这样的 LLM。
- en: '[PRE2]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In *Figure 2* *.7* , you’ll see the code in the notebook, along with a title
    and extra text. It’s always good to introduce your code block or cell.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *图 2* *.7* 中，你会看到笔记本中的代码，以及标题和额外的文字。介绍你的代码块或单元格总是个好主意。
- en: '![Figure 2.7: Python code in Jupyter Notebook, which, given a column of data,
    should plot the data](img/B21009_02_7.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.7：在 Jupyter Notebook 中的 Python 代码，给定一列数据后，应绘制数据](img/B21009_02_7.jpg)'
- en: 'Figure 2.7: Python code in Jupyter Notebook, which, given a column of data,
    should plot the data'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7：在 Jupyter Notebook 中的 Python 代码，给定一列数据后，应绘制数据
- en: '*Figure 2* *.8* shows the output plot:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2* *.8* 显示了输出图表：'
- en: '![Figure 2.8: The plot resulting from the code from Prompt 3](img/B21009_02_8.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.8：来自 Prompt 3 的代码生成的图表](img/B21009_02_8.jpg)'
- en: 'Figure 2.8: The plot resulting from the code from Prompt 3'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8：来自 Prompt 3 的代码生成的图表
- en: Okay, this plot is pretty boring, but now you know how to make a plot in Python
    or Jupyter notebooks. If you didn’t know that before, the chapter and the LLM
    have given some pointers.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这个图表挺无聊的，但现在你知道如何在 Python 或 Jupyter Notebook 中制作图表了。如果你之前不知道，现在的章节和 LLM 已经给出了一些提示。
- en: 'Here is *Prompt 4* : **A script where to ask you to load bench then it will
    help you browse for the image finally** **displayed image.**'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 *Prompt 4*：**一个脚本，会要求你加载 bench，然后帮助你浏览最终显示的图像。**
- en: Load bench? What does that mean?
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 加载 bench？那是什么意思？
- en: I got the prompt wrong! I spoke badly or the AI didn’t listen properly, but
    it still figured out what I wanted and gave me the code! Haha!
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我弄错了提示！我说得不好，或者 AI 没有听懂，但它还是弄明白了我想要什么，并给了我代码！哈哈！
- en: This is Python code, meant for putting in an IDE that can run Python and also
    load code libraries such as tkinter. So, that code library needs to be installed
    on whatever code environment you’re running.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Python 代码，旨在放入可以运行 Python 并加载如 tkinter 这类代码库的 IDE 中。因此，必须在你使用的代码环境中安装这个代码库。
- en: Let’s see whether it works in one of those online Python interpreters… This
    is continued in [*Chapter 3*](B21009_03.xhtml#_idTextAnchor073) , in prompt 4.
    There was a fair amount of debugging needed, and that chapter is on debugging
    and other things, so the process is there.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它在某个在线 Python 解释器中是否能工作……这部分内容在 [*第 3 章*](B21009_03.xhtml#_idTextAnchor073)
    中继续，在 Prompt 4 中。需要进行相当多的调试，这一章就是关于调试和其他内容的，所以过程在那儿。
- en: 'The following is the final code, which came from Gemini and Stack Overflow,
    and me making sure I’d installed the relevant code libraries. Google replaced
    the Bard LLM with Gemini in February 2024. This code began with Bard and finished
    with Gemini:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是最终的代码，它来自 Gemini 和 Stack Overflow，以及我确保安装了相关代码库的结果。谷歌在 2024 年 2 月用 Gemini
    替代了 Bard LLM。这段代码从 Bard 开始，最终由 Gemini 完成：
- en: '[PRE3]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This should work well. What I hope you learn here, and from the relevant section
    of [*Chapter 3*](B21009_03.xhtml#_idTextAnchor073) ( *Prompt 4 debugging* ), is
    that these LLMs can produce pretty good code but as soon as it gets a little bit
    complicated, such as code libraries and loading files, the code often needs work:
    debugging, checking online forums such as Stack Overflow, thinking about the code,
    testing it, and iterating.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该能很好地工作。我希望你从这里以及 [*第 3 章*](B21009_03.xhtml#_idTextAnchor073)（*Prompt 4 调试*）的相关部分中学到的是，这些
    LLM 可以生成相当不错的代码，但一旦代码变得稍微复杂一些，比如涉及到代码库和加载文件，代码通常需要调整：调试、检查在线论坛如 Stack Overflow、思考代码、测试它并反复迭代。
- en: So, you still need programming skills. LLMs are not ready for complex code in
    early 2024.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，你仍然需要编程技能。到2024年初，LLM 还不能处理复杂的代码。
- en: 'Here is *Prompt 5* : **HTML code for a web page that will display a graphical
    user interface. However, calculator a calculator that actually functions if you
    click** **the buttons**'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 *Prompt 5* ：**显示图形用户界面的网页的 HTML 代码。但是，这个计算器是一个真正有效的计算器，点击按钮后可以实际运算** **这些按钮**
- en: Again, I got the prompt slightly wrong, but the LLM still got the idea.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 再次提醒，我稍微弄错了提示，但 LLM 仍然明白了意思。
- en: It’s reassuring to understand that LLMs are somewhat capable of managing and
    understanding errors in user input.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 了解 LLM 在一定程度上能够管理和理解用户输入中的错误，令人感到放心。
- en: Bard sometimes gives multiple versions for your consideration. Here, it gives
    HTML and Flask (Python). An HTML and JavaScript script worked well, so we didn’t
    need the flask version.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Bard 有时会给出多个版本供你选择。在这里，它提供了 HTML 和 Flask（Python）版本。HTML 和 JavaScript 脚本工作得很好，所以我们不需要
    Flask 版本。
- en: 'Put this into a website builder or HTML interpreter:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 将其放入网站构建器或 HTML 解释器中：
- en: '[PRE4]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '*Figure 2* *.9* shows the calculator GUI:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2.9* 显示了计算器的 GUI：'
- en: '![Figure 2.9: The interface looks like this](img/B21009_02_9.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.9：界面看起来是这样的](img/B21009_02_9.jpg)'
- en: 'Figure 2.9: The interface looks like this'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9：界面看起来是这样的
- en: 'The calculator is very simple; you can type in numbers or click the little
    up/down arrows that appear. You can also select the operators from the drop-down
    menu ( **+** , **-** , ***** , and **/** ). This is not a scientific calculator,
    just very simple operators here: an arithmetic calculator.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 计算器非常简单，你可以输入数字或点击出现的小上下箭头。你还可以从下拉菜单中选择运算符 (**+** 、**-** 、***** 和 **/**)。这不是科学计算器，只是一个非常简单的算术计算器。
- en: This code is HTML and calls JavaScript embedded within a **<script>** tag that
    does the calculations. So, it’s not pure HTML code. HTML is there to do the GUI
    side of things.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码是 HTML，并调用了嵌入在 **<script>** 标签中的 JavaScript 来进行计算。因此，这不是纯粹的 HTML 代码。HTML
    主要用于实现 GUI 部分。
- en: The good news is that this worked the second time around. There was a minor
    bug. I copied the error message to the LLM, and it gave me the solution. That
    was a very quick debugging process and Gemini gave me usable code. [*Chapter 3*](B21009_03.xhtml#_idTextAnchor073)
    is the debugging chapter; you can see the debugging of all the [*Chapter 2*](B21009_02.xhtml#_idTextAnchor051)
    code in that chapter.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，第二次尝试成功了。虽然有一个小的 bug。我将错误信息复制给了 LLM，它给出了解决方案。这个调试过程非常迅速，Gemini 给了我可用的代码。[*第三章*](B21009_03.xhtml#_idTextAnchor073)是调试章节，你可以在该章节看到[*第二章*](B21009_02.xhtml#_idTextAnchor051)代码的调试过程。
- en: Next, we have *Prompt 5* as a Flask app ( **app.py** ) with Python code.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将 *Prompt 5* 转换为一个 Flask 应用（**app.py**），并使用 Python 代码。
- en: 'This code should be run in a Python-friendly IDE:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码应该在支持 Python 的 IDE 中运行：
- en: '[PRE5]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here is the HTML code ( **templates/index.html** ):'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 HTML 代码（**templates/index.html**）：
- en: '[PRE6]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To run this code, follow these steps:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行此代码，请按照以下步骤操作：
- en: Save the Flask code as **app.py** in a simple, short file path.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Flask 代码保存为 **app.py**，并放在一个简单、短的文件路径中。
- en: Create a **templates** folder and save the HTML code as **index.html** inside
    it.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 **templates** 文件夹，并将 HTML 代码保存为 **index.html**。
- en: Run the Flask app with **python app.py** .
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**python app.py**运行 Flask 应用。
- en: Open your browser and navigate to **http://localhost:5000** .
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的浏览器并访问 **http://localhost:5000**。
- en: You should now see a functional calculator GUI on the web page. When you click
    the buttons, the corresponding values will be appended to the display input field.
    Clicking the **=** button will evaluate the expression and display the result.
    The **C** button clears the display.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该能在网页上看到一个功能齐全的计算器 GUI。当你点击按钮时，相应的值将添加到显示输入框中。点击 **=** 按钮会计算表达式并显示结果。**C**
    按钮会清空显示。
- en: Important note
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: This implementation uses the **eval** function in JavaScript to evaluate the
    expression, which can be a security risk if you’re accepting user input directly.
    In a production environment, you should use a safer method or a dedicated library
    for expression evaluation.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 该实现使用了 JavaScript 中的 **eval** 函数来计算表达式，但如果直接接受用户输入，这可能会带来安全风险。在生产环境中，应该使用更安全的方法或专用库来进行表达式评估。
- en: Back to the HTML code for Prompt 5
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 返回到 *Prompt 5* 的 HTML 代码
- en: This HTML code did not give functioning code, so it needed debugging.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这段 HTML 代码没有提供可运行的代码，因此需要调试。
- en: Wow, this has lots of **if** , **else** , and **elif** statements!
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 哇，这里有很多 **if** 、**else** 和 **elif** 语句！
- en: For the debugging of this code, see [*Chapter 3*](B21009_03.xhtml#_idTextAnchor073)
    , in the *Prompt 5* *debugging* section.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这段代码的调试，请参见[*第3章*](B21009_03.xhtml#_idTextAnchor073)，在*提示5* *调试*部分。
- en: Back to the Flask code for Prompt 5
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回到Prompt 5的Flask代码
- en: With help from Claude 3 Sonnet, this code was debugged and started to work.
    Where is the code?
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在Claude 3 Sonnet的帮助下，这段代码已被调试并开始正常运行。代码在哪里？
- en: 'Again, you can get the code from Packt’s GitHub repository for this book, here:
    [https://github.com/PacktPublishing/Coding-with-ChatGPT-and-Other-LLMs/tree/main/Chapter2](https://github.com/PacktPublishing/Coding-with-ChatGPT-and-Other-LLMs/tree/main/Chapter2)
    .'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以从本书的Packt GitHub仓库中获取这段代码，链接在此：[https://github.com/PacktPublishing/Coding-with-ChatGPT-and-Other-LLMs/tree/main/Chapter2](https://github.com/PacktPublishing/Coding-with-ChatGPT-and-Other-LLMs/tree/main/Chapter2)。
- en: This is okay for starters, but this is not brilliant. We need more quality,
    and this will not work straight away. There will be bugs that the LLM hasn’t foreseen.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于初学者来说是可以的，但这并不出色。我们需要更高质量的代码，而且它不会立刻就能正常工作。会有LLM没有预见到的BUG。
- en: As Bard says at the bottom of every code snippet it provides, “ *Use code with
    caution.* *Learn more* .”
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 正如Bard在每个代码片段底部所说的，“*小心使用代码。* *了解更多*。”
- en: That then leads to an FAQ page about the current engine and what to expect from
    it.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 这会引导你到一个关于当前引擎的常见问题页面，并告诉你应该期待什么。
- en: How can this process and this code be made better? Let’s talk about that in
    the next section.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如何让这个过程和这段代码变得更好？我们将在下一节讨论这个问题。
- en: Making it work for you
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让它为你工作
- en: 'Here are some tips to make coding with LLMs work better for you:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些让LLM编程更适合你的技巧：
- en: Be specific about what you want the code to do and look like.
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确你希望代码做什么以及看起来是什么样子的。
- en: Master prompt engineering. Craft your prompts meticulously. The clearer and
    more detailed your instructions, the better the LLM understands your intent and
    generates relevant code. Think of prompts as precise questions guiding the LLM
    toward creating your desired solution.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 精通提示工程。精心设计你的提示。你提供的指令越清晰、越详细，LLM就越能理解你的意图并生成相关代码。可以把提示看作是精确的问题，指导LLM创建你想要的解决方案。
- en: Tell the LLM which version of which language you’re using and which IDE/environment
    you’re using for the code. For example, I have been using Python 3.10 in a Spyder
    IDE.
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 告诉LLM你使用的是哪一版本的编程语言，以及你使用的是哪种IDE/环境进行编码。例如，我一直在使用Python 3.10版本和Spyder IDE。
- en: Break down tasks into smaller chunks. Don’t overwhelm the LLM with complex,
    multi-step tasks. Instead, break them down into smaller, manageable subtasks.
    This allows for more focused prompts and facilitates easier troubleshooting and
    refinement.
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将任务拆解成更小的部分。不要让LLM处理复杂的、多步骤的任务。相反，将它们拆解成更小、更易管理的子任务。这样可以提供更专注的提示，便于更轻松地排查问题和改进。
- en: Go through iterations, improving all the time. Use the LLM to check how you
    can improve, and get it to ask you questions about what you want, like a good
    consultant. Don’t simply accept the first generated code. Treat it as a starting
    point and provide constructive feedback to the LLM. Explain what aspects worked
    well and what needs improvement. This feedback loop guides the LLM toward better
    understanding your needs and refining the code output.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过多次迭代，持续改进。利用LLM检查你如何改进，并让它像一个好的顾问一样，向你提问关于你想要的内容。不要简单接受第一次生成的代码。把它当作一个起点，并给LLM提供建设性的反馈。解释哪些方面做得好，哪些需要改进。这个反馈循环帮助LLM更好地理解你的需求，并优化代码输出。
- en: Utilize code examples and documentation. Provide the LLM with relevant code
    examples, libraries, or documentation references when possible. This serves as
    a roadmap, influencing the LLM’s code generation within the context you desire.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用代码示例和文档。尽可能为LLM提供相关的代码示例、库或文档引用。这为LLM的代码生成提供了路线图，影响其在你所期望的背景下的代码输出。
- en: Combine LLM power with your expertise. Remember, LLMs are powerful tools, but
    they don’t replace your coding knowledge. Use your expertise to curate prompts,
    evaluate outputs, and integrate the LLM’s suggestions into your existing coding
    practices.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将LLM的能力与您的专业知识结合。记住，LLM是强大的工具，但它们不能取代你的编码知识。利用你的专业知识来策划提示、评估输出，并将LLM的建议融入到你现有的编码实践中。
- en: Explore different LLMs and tools. Not all LLMs are created equal. Experiment
    with different options and explore available tools specifically designed for LLM-assisted
    coding. Find the combination that best suits your needs and coding style.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索不同的LLM和工具。并非所有LLM都一样。尝试不同的选项，探索专门为LLM辅助编程设计的工具。找到最适合你的需求和编程风格的组合。
- en: Embrace the learning process. Remember, LLM-powered coding is still evolving.
    Embrace the learning journey, experiment, and don’t be afraid to make mistakes.
    Every interaction with the LLM contributes to your understanding and helps you
    unlock its full potential.
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥抱学习过程。请记住，基于LLM的编码仍在发展中。拥抱学习旅程，实验，并且不要害怕犯错。与LLM的每次互动都有助于您的理解，并帮助您释放其全部潜力。
- en: Test the code and see whether it does what you want it to; this is the most
    important stage.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试代码，看它是否按照你的意图运行；这是最重要的阶段。
- en: Just like with any code, rigorous testing is essential. Don't assume that the
    LLM-generated code is flawless. Put it through its paces, identify and address
    any errors, and verify its functionality before deployment.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何代码一样，严格的测试是必不可少的。不要假设由LLM生成的代码是完美无缺的。让它经过考验，识别和解决任何错误，并在部署之前验证其功能。
- en: We’ll get into debugging in [*Chapter 3*](B21009_03.xhtml#_idTextAnchor073)
    .
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第三章*](B21009_03.xhtml#_idTextAnchor073) 中深入探讨调试。
- en: Summary
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter has introduced you to how to code with LLMs. You’ve explored the
    potential benefits, learned practical steps to get started (planning and iterating),
    and gained valuable insights into using LLMs effectively. Remember, these are
    just the most simple examples of what can be done along with some advice.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了如何使用LLM编码。您探索了潜在的好处，学习了开始的实际步骤（规划和迭代），并获得了有效使用LLM的宝贵见解。请记住，这只是可以与一些建议一起完成的最简单的示例。
- en: There’s plenty more to learn to do this well, but this can help you get started.
    We need to understand how to deal with code that has bugs and doesn’t work how
    we intend.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 还有很多东西需要学习才能做得很好，但这可以帮助你入门。我们需要理解如何处理有 bug 并且不按我们意图运行的代码。
- en: We might want to improve upon the speed or the memory usage of the code.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能希望改进代码的速度或内存使用。
- en: GPT-4, Gemini, and so on don’t innately know what you want to achieve or which
    resources you want to save or fully exploit.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: GPT-4、Gemini 等等并不天然知道你想要达到的目标或者你想要保存或充分利用的资源。
- en: In [*Chapter 3*](B21009_03.xhtml#_idTextAnchor073) , we’ll delve into debugging,
    code refactoring, and optimization.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第三章*](B21009_03.xhtml#_idTextAnchor073) 中，我们将深入探讨调试、代码重构和优化。
