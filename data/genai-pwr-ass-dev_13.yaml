- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Simplifying Scanning and Fixing Security Vulnerabilities in Code
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简化代码中的扫描和修复安全漏洞
- en: 'In this chapter, we will go through the following key topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下关键主题：
- en: The importance of code-security scanning
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码安全扫描的重要性
- en: Types of code scans using Amazon Q
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Amazon Q进行的代码扫描类型
- en: Initiating security scans
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动安全扫描
- en: Addressing vulnerability findings
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决漏洞发现
- en: This chapter is short; however, one could argue that anything related to software
    security is never brief and takes top priority over everything else. Before we
    explore the features related to code-security scanning using Amazon Q Developer,
    let’s reiterate the importance of this subject.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章篇幅虽短，但可以争论的是，与软件安全相关的内容永远不会简短，并且比其他任何事情都更重要。在我们探索使用Amazon Q Developer进行代码安全扫描的相关功能之前，让我们重申这一主题的重要性。
- en: The importance of code-security scanning
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码安全扫描的重要性
- en: 'Code-security scanning is a critical practice in software development, aimed
    at identifying and mitigating potential security vulnerabilities in the code base
    before they can be exploited. Here are several reasons why code-security scanning
    is essential:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 代码安全扫描是软件开发中的一个关键实践，旨在在代码库中的潜在安全漏洞被利用之前识别和减轻这些漏洞。以下是代码安全扫描之所以至关重要的几个原因：
- en: '**Preventing security breaches**: Regular code-security scanning helps in identifying
    vulnerabilities that could be exploited by attackers. By catching these issues
    early in the development process, organizations can prevent data breaches, financial
    losses, and damage to their reputation.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预防安全漏洞**：定期的代码安全扫描有助于识别攻击者可能利用的漏洞。通过在开发早期阶段捕捉这些问题，组织可以预防数据泄露、财务损失和声誉损害。'
- en: '**Compliance with regulations**: Many industries are subject to strict regulatory
    requirements regarding data protection and security, such as the **General Data
    Protection Regulation** (**GDPR**), the **Health Insurance Portability and Accountability
    Act** (**HIPAA**), and the **Payment Card Industry Data Security Standard** (**PCI-DSS**).
    Code-security scanning ensures that the software complies with these regulations,
    thereby avoiding legal penalties and ensuring customer trust.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**遵守法规**：许多行业都受到严格的数据保护和安全法规的约束，例如**通用数据保护条例**（**GDPR**）、**健康保险可携带性和问责法案**（**HIPAA**）和**支付卡行业数据安全标准**（**PCI-DSS**）。代码安全扫描确保软件符合这些法规，从而避免法律处罚并确保客户信任。'
- en: '**Protecting sensitive information**: Applications often handle sensitive information
    such as personal data, financial records, and proprietary business information.
    Security vulnerabilities in the code can lead to unauthorized access to this data.
    Regular scanning helps to safeguard this sensitive information by identifying
    and addressing security flaws.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保护敏感信息**：应用程序经常处理敏感信息，如个人数据、财务记录和专有商业信息。代码中的安全漏洞可能导致对这些数据的未授权访问。定期扫描有助于通过识别和解决安全缺陷来保护这些敏感信息。'
- en: '**Reducing costs**: Fixing security vulnerabilities early in the development
    cycle is significantly less costly than addressing them after deployment. Post-deployment
    fixes can involve not only code changes but also compensations, legal fees, and
    damage control measures.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**降低成本**：在开发周期早期修复安全漏洞比部署后解决它们要便宜得多。部署后的修复不仅涉及代码更改，还包括补偿、法律费用和损害控制措施。'
- en: '**Maintaining software integrity**: Code-security scanning helps maintain the
    integrity of the software by ensuring that no malicious code or backdoors are
    present. This is particularly important for software that is distributed to end
    users, as it helps maintain trust and reliability in the product.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**维护软件完整性**：代码安全扫描通过确保不存在恶意代码或后门来帮助维护软件的完整性。这对于分发给最终用户的软件尤为重要，因为它有助于保持产品在信任和可靠性方面的声誉。'
- en: '**Facilitating continuous improvement**: By integrating code-security scanning
    into the development process, organizations can continuously improve their security
    posture. Scanning tools can provide feedback and recommendations, allowing developers
    to learn from past mistakes and avoid introducing similar vulnerabilities in the
    future.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**促进持续改进**：通过将代码安全扫描集成到开发过程中，组织可以持续改进其安全态势。扫描工具可以提供反馈和建议，使开发者能够从过去的错误中学习，并避免在未来引入类似漏洞。'
- en: '**Supporting secure development practices**: Regular security scanning reinforces
    the importance of secure coding practices among developers. It encourages a security-first
    mindset, making developers more aware of common security pitfalls and best practices
    to avoid them.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持安全开发实践**: 定期安全扫描强化了安全编码实践在开发者中的重要性。它鼓励以安全为首要考虑的心态，使开发者更加意识到常见的安全陷阱和避免它们的最佳实践。'
- en: '**Enhancing customer confidence**: Customers and clients are increasingly aware
    of cybersecurity threats. Demonstrating a commitment to security through regular
    code scanning can enhance customer confidence and trust in the organization’s
    products and services.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强客户信心**: 客户和客户越来越意识到网络安全威胁。通过定期代码扫描展示对安全的承诺可以增强客户对组织产品和服务的信心和信任。'
- en: Code-security scanning for vulnerabilities is a proactive measure that plays
    a crucial role in the overall security strategy of any software development organization.
    By identifying and addressing security issues early, companies can protect sensitive
    data, comply with regulations, reduce costs, and maintain the integrity and trustworthiness
    of their software products.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对漏洞进行代码安全扫描是一种主动措施，在软件开发组织的整体安全策略中发挥着至关重要的作用。通过早期识别和解决安全问题，公司可以保护敏感数据，遵守法规，降低成本，并保持其软件产品的完整性和可信度。
- en: Now let’s shift our focus to what Amazon Q Developer can assist with when it
    comes to code scanning and fixing vulnerabilities in the code.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将重点转向 Amazon Q 开发者工具在代码扫描和修复代码漏洞方面的辅助作用。
- en: Types of code scans using Amazon Q
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon Q 的代码扫描类型
- en: Amazon Q scans utilize security detectors built on years of Amazon standards
    and security best practices. As security policies evolve and new detectors are
    introduced, scans automatically integrate these updates to ensure your code remains
    compliant with the latest policies.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q 扫描利用基于多年亚马逊标准和安全最佳实践的检测器。随着安全政策的演变和新检测器的引入，扫描会自动集成这些更新，以确保您的代码始终符合最新的政策。
- en: The security detectors are powered by Amazon CodeGuru, a developer tool that
    analyzes code and offers smart recommendations to enhance code security and quality.
    A link to all the different detector libraries for different programming languages
    is provided in the *References* section at the end of this chapter. Note that
    the detectors cover hundreds of code recommendations for each of the supported
    programming languages. For the purpose of understanding the security scan feature
    of Amazon Q Developer, we will just pick a couple of vulnerabilities detected
    in our sample code in the next section.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 安全检测器由 Amazon CodeGuru 提供支持，这是一个分析代码并提供智能建议以增强代码安全和质量的开发者工具。在本书末尾的 *参考文献* 部分提供了一个链接，列出了不同编程语言的各个不同检测器库。请注意，检测器涵盖了每个受支持编程语言的数百个代码建议。为了理解
    Amazon Q 开发者工具的安全扫描功能，我们将在下一节中仅选择几个在示例代码中检测到的漏洞。
- en: 'Amazon Q ensures your code’s security by identifying policy violations and
    vulnerabilities through **static application security testing** (**SAST**), secrets
    detection, and **infrastructure as code** (**IaC**) scanning. The AWS documentation
    also highlights this list, the link to which is provided in the *References* section.
    This list may expand to other types of scans in the future, so keep a close eye
    on the official documentation for updates:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q 通过识别策略违规和漏洞来确保代码的安全性，这些漏洞是通过 **静态应用安全测试**（**SAST**）、秘密检测和 **基础设施即代码**（**IaC**）扫描来识别的。AWS
    文档也突出了这个列表，其链接在 *参考文献* 部分提供。这个列表可能会在未来扩展到其他类型的扫描，因此请密切关注官方文档以获取更新：
- en: '**SAST scanning**: This type of scan is done before the code complication stage
    and is used by the application security team to catch vulnerabilities in the source
    code itself. It is also referred to as white-box testing. Amazon Q uncovers issues
    in the source code, such as resource leaks, SQL injection, and cross-site scripting.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SAST 扫描**: 这种扫描在代码混淆阶段之前进行，并由应用安全团队使用，以捕获源代码本身中的漏洞。它也被称为白盒测试。Amazon Q 检测源代码中的问题，例如资源泄露、SQL
    注入和跨站脚本。'
- en: '**Secrets scanning**: Safeguard sensitive information from exposure in your
    code base. Amazon Q checks your code and text files for secrets such as hardcoded
    passwords, database connection strings, and usernames, providing details about
    the vulnerabilities and recommendations for securing them.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**秘密扫描**：保护代码库中敏感信息免受泄露。Amazon Q会检查你的代码和文本文件，寻找如硬编码密码、数据库连接字符串和用户名等秘密，并提供关于漏洞和安全加固的建议。'
- en: '**IaC scanning**: Assess the security of your infrastructure files. Amazon
    Q reviews your IaC files to identify misconfigurations, compliance issues, and
    security vulnerabilities.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IaC扫描**：评估你的基础设施文件的安全性。Amazon Q会审查你的IaC文件，以识别配置错误、合规性问题以及安全漏洞。'
- en: Now let’s jump into how you can start using the security scan features of Amazon
    Q.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看看如何开始使用Amazon Q的安全扫描功能。
- en: Initiating security scans
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动安全扫描
- en: Amazon Q Developer provides two variations of the code-security scans.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q Developer提供了两种代码安全扫描的变体。
- en: Scanning while coding
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编码时扫描
- en: Some developers prefer the IDE to warn them of any security vulnerabilities
    in their code as they type. Amazon Q’s auto-scan feature continuously monitors
    the file you’re actively working on, generating findings immediately as they are
    detected in your code.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一些开发者更喜欢在编写代码时，IDE能够提醒他们代码中存在的任何安全漏洞。Amazon Q的自动扫描功能会持续监控你正在积极工作的文件，一旦在代码中检测到问题，就会立即生成发现结果。
- en: Note
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This feature is only available for use in the Pro tier and is enabled by default
    when using Amazon Q Developer. If you have subscribed to the Pro tier of Amazon
    Q Developer, then the auto-scan feature will appear in the Amazon Q menu option,
    where you can even pause it if you prefer to run the entire scan at once at the
    project level.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能仅适用于Pro级别，并在使用Amazon Q Developer时默认启用。如果你已订阅Amazon Q Developer的Pro级别，则自动扫描功能将出现在Amazon
    Q菜单选项中，你甚至可以暂停它，如果你更喜欢在项目级别一次性运行整个扫描。
- en: The following screenshot illustrates this feature in the VS Code IDE.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图展示了在VS Code IDE中的此功能。
- en: '![Figure 13.1 – Amazon Q security scan – auto-scan settings](img/B21378_13_1.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图13.1 – Amazon Q安全扫描 – 自动扫描设置](img/B21378_13_1.jpg)'
- en: Figure 13.1 – Amazon Q security scan – auto-scan settings
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1 – Amazon Q安全扫描 – 自动扫描设置
- en: If the auto-scan feature is running, as soon as you code something that would
    be considered a security vulnerability, Q will immediately flag it and let you
    know the issue, providing an explanation for it.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果自动扫描功能正在运行，一旦你编写了可能被视为安全漏洞的代码，Q会立即标记它，并告知你问题，并提供解释。
- en: The following screenshot shows an obvious security violation we introduced in
    our code, and Q immediately flagged it and provided us with the reason on the
    spot.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了我们在代码中引入的一个明显的安全违规，Q立即标记了它，并立即提供了原因。
- en: '![Figure 13.2 – Amazon Q security scan – auto-scan detected an issue](img/B21378_13_2.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图13.2 – Amazon Q安全扫描 – 自动扫描检测到问题](img/B21378_13_2.jpg)'
- en: Figure 13.2 – Amazon Q security scan – auto-scan detected an issue
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.2 – Amazon Q安全扫描 – 自动扫描检测到问题
- en: Now let’s look at the open scan option Amazon Q provides.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看Amazon Q提供的开放扫描选项。
- en: Scanning the whole project
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扫描整个项目
- en: If the developer prefers to scan the project after it’s complete, then they
    can use this option provided by Amazon Q, which scans the entire project and provides
    all the security vulnerabilities at once. This option is available in both tiers
    of Amazon Q Developer.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果开发者希望在项目完成后进行扫描，那么他们可以使用Amazon Q提供的此选项，该选项会扫描整个项目，并一次性提供所有安全漏洞。此选项在Amazon
    Q Developer的两个级别中均可用。
- en: To initiate this, open the project and simply run the **Run Project Scan** option
    for Amazon Q, as shown in the following screenshot.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动此操作，请打开项目，然后运行Amazon Q的**运行项目扫描**选项，如图下所示。
- en: '![Figure 13.3 – Amazon Q security scan – scan whole project](img/B21378_13_3.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图13.3 – Amazon Q安全扫描 – 扫描整个项目](img/B21378_13_3.jpg)'
- en: Figure 13.3 – Amazon Q security scan – scan whole project
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3 – Amazon Q安全扫描 – 扫描整个项目
- en: 'Once the scan is complete, Amazon Q will provide a summary of all the security
    problems for the developer to review and take action to address them. The following
    screenshot shows all the issues we found in the Python project we used in [*Chapter
    12*](B21378_12.xhtml#_idTextAnchor181). In case you skipped that chapter, here
    is the GitHub link to the project for you to try it out again in this chapter:
    [https://github.com/jassics/learning-python](https://github.com/jassics/learning-python).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦扫描完成，Amazon Q将为开发者提供一个所有安全问题的摘要，以便他们审查并采取行动解决这些问题。以下截图显示了我们在[*第12章*](B21378_12.xhtml#_idTextAnchor181)中使用的Python项目中找到的所有问题。如果你跳过了那一章，以下是项目的GitHub链接，你可以尝试在本章中再次运行它：[https://github.com/jassics/learning-python](https://github.com/jassics/learning-python)。
- en: '![Figure 13.4 – Amazon Q security scan – security scan findings](img/B21378_13_4.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图13.4 – Amazon Q安全扫描 – 安全扫描发现](img/B21378_13_4.jpg)'
- en: Figure 13.4 – Amazon Q security scan – security scan findings
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.4 – Amazon Q安全扫描 – 安全扫描发现
- en: Getting a report of issues in the code is one thing, but taking appropriate
    action to address them is the main reason we discovered them in the first place.
    Amazon Q Developer can also help address the vulnerability findings, so let’s
    take a look at the options we have.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 获取代码中的问题报告是一回事，但采取适当的行动来解决问题是我们最初发现它们的主要原因。Amazon Q开发者也可以帮助解决漏洞发现，让我们看看我们有哪些选项。
- en: Addressing vulnerability findings
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决漏洞发现
- en: Amazon Q Developer provides a few options once it identifies the issue. It can
    either provide you with further details about the issue or you can use the Q chat
    feature to explain the finding along with recommendations to fix it. Or sometimes,
    you will also see an automatic fix option when Q is able to resolve it on its
    own.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Amazon Q识别出问题，它将提供一些选项。它要么提供有关问题的更多详细信息，或者你可以使用Q聊天功能来解释发现，并提供修复建议。有时，当Q能够自行解决时，你也会看到自动修复选项。
- en: The following screenshot shows the actions we can take for the issues we discussed
    in the project from the previous section. Of course, in this case, the printing
    of the password was done on purpose to showcase the password generation feature,
    but Q’s scan was able to detect the issue and present actions you can take on
    it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了我们在上一节的项目中讨论的问题可以采取的行动。当然，在这种情况下，打印密码是故意为之，以展示密码生成功能，但Q的扫描能够检测到问题，并展示你可以采取的行动。
- en: '![Figure 13.5 – Amazon Q security scan – options to address findings](img/B21378_13_5.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图13.5 – Amazon Q安全扫描 – 处理发现的选项](img/B21378_13_5.jpg)'
- en: Figure 13.5 – Amazon Q security scan – options to address findings
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.5 – Amazon Q安全扫描 – 处理发现的选项
- en: Viewing security findings in detail
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 详细查看安全发现
- en: Looking at *Figure 13**.5*, if you choose the **View details** option, Amazon
    Q will describe in detail what the issue is and how you can approach coming up
    with a resolution. It basically lets you make an informed decision to improve
    your code. The following screenshot shows this option.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 查看图13.5，如果你选择**查看详情**选项，Amazon Q将详细描述问题是什么以及你可以如何找到解决方案。它基本上让你能够做出明智的决定来改进你的代码。以下截图显示了此选项。
- en: '![Figure 13.6 – Amazon Q security scan – detailed view of the finding](img/B21378_13_6.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图13.6 – Amazon Q安全扫描 – 发现的详细视图](img/B21378_13_6.jpg)'
- en: Figure 13.6 – Amazon Q security scan – detailed view of the finding
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.6 – Amazon Q安全扫描 – 发现的详细视图
- en: Let’s now look at the Q explanation option you can choose.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看你可以选择的Q解释选项。
- en: Seeking an explanation of the issue
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 寻求对问题的解释
- en: Looking again at *Figure 13**.5*, if you choose the **Explain** option, Amazon
    Q will let you seek an interactive explanation for the issue, where Q will invoke
    its chat feature and provide you with the explanation along with recommended fixes
    that you can insert back into your code. The following screenshot shows the explanation
    for the same issue we just looked at in the previous section.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 再次查看图13.5，如果你选择**解释**选项，Amazon Q将允许你寻求对问题的交互式解释，其中Q将调用其聊天功能，并提供解释以及你可以将其插入代码中的推荐修复方案。以下截图显示了我们在上一节中查看的相同问题的解释。
- en: '![Figure 13.7 – Amazon Q security scan – explain finding](img/B21378_13_7.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图13.7 – Amazon Q安全扫描 – 解释发现](img/B21378_13_7.jpg)'
- en: Figure 13.7 – Amazon Q security scan – explain finding
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.7 – Amazon Q安全扫描 – 解释发现
- en: This brings us to the end of this important chapter. Feel free to try this feature
    on your own projects to see what you discover. The mechanism for detecting and
    viewing issues using Amazon Q Developer, along with seeking explanations and fixing
    them, remains the same across all types of security issues, hence we will keep
    this chapter short.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这就带我们来到了本章的重要结尾。请随意在自己的项目中尝试这个功能，看看你发现了什么。使用亚马逊Q开发者检测和查看问题的机制，以及寻求解释和修复，对所有类型的安全问题都是相同的，因此我们将保持本章简短。
- en: Summary
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered why code security scans are vital for every project.
    No software project can be put into production without a clear strategy for finding
    security issues in the code and addressing them.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了为什么代码安全扫描对每个项目都是至关重要的。没有明确的策略来发现并解决代码中的安全问题，任何软件项目都不能投入生产。
- en: We then looked at the different types of scans that Amazon Q Developer provides.
    We also explored how to initiate security scans in Amazon Q, either with the auto-scan
    option or by scanning at the project level. Finally, we examined how Amazon Q
    can help address all the findings.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们随后探讨了亚马逊Q开发者提供的不同类型扫描。我们还研究了如何在亚马逊Q中启动安全扫描，无论是使用自动扫描选项还是通过项目级别进行扫描。最后，我们检查了亚马逊Q如何帮助解决所有发现的问题。
- en: In the next chapter, we will pivot toward using Amazon Q Developer to create
    solutions in AWS environments.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将转向使用亚马逊Q开发者来在AWS环境中创建解决方案。
- en: References
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Amazon CodeGuru Detector Library: [https://docs.aws.amazon.com/codeguru/detector-library/](https://docs.aws.amazon.com/codeguru/detector-library/)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊CodeGuru检测库：[https://docs.aws.amazon.com/codeguru/detector-library/](https://docs.aws.amazon.com/codeguru/detector-library/)
- en: 'Types of security scans by Amazon Q Developer: [https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/security-scans.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/security-scans.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊Q开发者提供的安全扫描类型：[https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/security-scans.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/security-scans.html)
- en: Part 4:Accelerate Build on AWS
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四部分：在AWS上加速构建
- en: In this part, we will look at how Amazon Q Developer can assist in building
    applications faster on AWS. Amazon Q integrates with various AWS services and
    tools to provide a holistic assistant experience. Amazon Q not only boosts the
    productivity of AWS builders but also provides an integrated and seamless working
    experience.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分中，我们将探讨亚马逊Q开发者如何帮助在AWS上更快地构建应用程序。亚马逊Q与各种AWS服务和工具集成，提供全面的辅助体验。亚马逊Q不仅提高了AWS构建者的生产力，还提供了集成和无缝的工作体验。
- en: 'This part contains the following chapters:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 14*](B21378_14.xhtml#_idTextAnchor210), *Accelerate Data Engineering
    on AWS*'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第14章*](B21378_14.xhtml#_idTextAnchor210)，*在AWS上加速数据工程*'
- en: '[*Chapter 15*](B21378_15.xhtml#_idTextAnchor239), *Accelerate Building Solutions
    on AWS*'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第15章*](B21378_15.xhtml#_idTextAnchor239)，*在AWS上加速构建解决方案*'
- en: '[*Chapter 16*](B21378_16.xhtml#_idTextAnchor254), *Accelerate the DevOps Process
    on AWS*'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第16章*](B21378_16.xhtml#_idTextAnchor254)，*在AWS上加速DevOps流程*'
