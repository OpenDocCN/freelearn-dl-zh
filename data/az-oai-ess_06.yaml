- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Querying From a Structured Database
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从结构化数据库查询
- en: In the last chapter, we learned about using ChatGPT to analyze customer conversations
    and get useful information. Now, let’s imagine we’ve stored all this valuable
    info in a SQL database. As you can imagine, this database is like a treasure chest
    filled with different and important details.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何使用ChatGPT分析客户对话并获取有用的信息。现在，让我们假设我们已将所有这些宝贵的信息存储在一个SQL数据库中。正如你所想，这个数据库就像一个装满了各种重要细节的宝箱。
- en: Meet Sarah, our awesome customer care manager. Her job is to uncover the stories
    hidden in this sea of data. In the past, finding these stories meant being a master
    of SQL queries, a kind of language not everyone understands. Crafting these queries
    was like solving a puzzle and took a lot of time even for experienced users.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 认识Sarah，我们的超级客户关怀经理。她的工作是揭开这些数据海洋中隐藏的故事。在过去，找到这些故事意味着必须精通SQL查询，这是一种并非每个人都能理解的语言。编写这些查询就像解谜，即使是经验丰富的用户也需要花费大量时间。
- en: But now, a new chapter begins—the birth of SQL GPT. No longer stuck with tricky
    SQL rules, Sarah now has a tool that understands simple language. Instead of writing
    complex queries, she talks to the database like she’s chatting with a friend.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 但是现在，一个新篇章开始了——SQL GPT的诞生。Sarah不再被复杂的SQL规则困扰，她现在有了一个能够理解简单语言的工具。她不再需要编写复杂的查询，而是像和朋友聊天一样与数据库对话。
- en: Using SQL GPT, Sarah explores the database’s analytics using easy English prompts.
    Curious about last month’s satisfaction score or the number of audio conversations?
    Just ask!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用SQL GPT，Sarah通过简单的英文提示探索数据库的分析结果。想了解上个月的满意度评分或音频对话的数量吗？只需提问即可！
- en: In this chapter, we embark on a mission to simplify data for everyone. SQL GPT
    serves as a friendly bridge between the complex world of databases and users of
    all skill levels, transforming everyday questions into powerful SQL queries. Together,
    we’ll explore how this tool makes data accessible and empowers people, like Sarah,
    to uncover meaningful insights with ease. While SQL GPT is a great resource for
    beginners learning SQL, it also proves invaluable for experienced users, helping
    them craft even the most complex queries effortlessly. Let’s dive into this exciting
    journey to unlock the true potential of data!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们开始了一个简化数据的使命。SQL GPT作为数据库复杂世界与各个技能层次用户之间的友好桥梁，将日常问题转化为强大的SQL查询。我们将一起探索，这个工具如何使数据变得易于访问，并帮助像Sarah一样的人轻松发现有价值的见解。虽然SQL
    GPT是学习SQL的初学者的好帮手，但它对于经验丰富的用户来说同样宝贵，帮助他们毫不费力地编写复杂的查询。让我们一起踏上这段激动人心的旅程，解锁数据的真正潜力！
- en: 'This chapter covers the following topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖以下主题：
- en: Architecture design
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构设计
- en: Developing an SQL GPT section
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发SQL GPT部分
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow along with the practical exercises in this chapter, access the source
    code available in this chapter's GitHub repository at [https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter6.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter6.ipynb).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟上本章中的实践练习，访问本章GitHub仓库中的源代码：[https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter6.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter6.ipynb)。
- en: 'Following are the requirements that are already configured in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059):'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是[*第4章*](B21019_04.xhtml#_idTextAnchor059)中已经配置的要求：
- en: Python 3.9, 3.10, or 3.11 - [https://www.python.org/downloads/](https://www.python.org/downloads/)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3.9、3.10或3.11 - [https://www.python.org/downloads/](https://www.python.org/downloads/)
- en: Azure Developer CLI - Azure developer CLI Installation
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure开发者CLI - Azure开发者CLI安装
- en: Node.js 14+ - [https://nodejs.org/en/download](https://nodejs.org/en/download)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js 14+ - [https://nodejs.org/en/download](https://nodejs.org/en/download)
- en: Git - [https://git-scm.com/downloads](https://git-scm.com/downloads)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git - [https://git-scm.com/downloads](https://git-scm.com/downloads)
- en: Powershell 7+ (`pwsh`) - [https://github.com/powershell/powershell](https://github.com/powershell/powershell)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Powershell 7+ (`pwsh`) - [https://github.com/powershell/powershell](https://github.com/powershell/powershell)
- en: Azure account - If you’re new to Azure, get an Azure account for free and you’ll
    get some free Azure credits to get started.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure账户 - 如果你是Azure新手，可以免费获取一个Azure账户，并且会得到一些免费的Azure积分来开始使用。
- en: Azure subscription with access enabled for the Azure OpenAI service. You can
    request access with this form.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用Azure OpenAI服务的Azure订阅。你可以通过这个表格申请访问权限。
- en: 'Azure OpenAI connection and model information:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure OpenAI连接和模型信息：
- en: OpenAI API key
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI API密钥
- en: OpenAI embedding model deployment name
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI嵌入模型部署名称
- en: OpenAI API version
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI API版本
- en: An SQL Server with database connection strings
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个带有数据库连接字符串的 SQL 服务器
- en: As we can see, we only need an SQL Server with database connection strings in
    addition to the requirements specific in [*Chapter 5*](B21019_05.xhtml#_idTextAnchor067)
    and [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，我们只需要一个带有数据库连接字符串的 SQL 服务器，另外还需要 [*第 5 章*](B21019_05.xhtml#_idTextAnchor067)
    和 [*第 4 章*](B21019_04.xhtml#_idTextAnchor059) 中特定要求。
- en: Architecture design
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构设计
- en: 'The process behind developing our GPT solution begins when the user sends a
    text-based query. Azure OpenAI then processes this query, converting it into a
    SQL command, which is passed to the SQL server. The SQL server executes the command
    and returns the results, which are then sent back to the user. This is represented
    in the following image:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 GPT 解决方案开发过程始于用户发送文本查询。Azure OpenAI 处理此查询，将其转换为 SQL 命令，然后传递给 SQL 服务器。SQL
    服务器执行命令并返回结果，然后将结果发送回用户。这在以下图像中表示：
- en: '![Figure 6.1: Solution architecture diagram](img/B21019_06_1.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.1：解决方案架构图](img/B21019_06_1.jpg)'
- en: 'Figure 6.1: Solution architecture diagram'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1：解决方案架构图
- en: 'In the preceding architecture diagram, we see three key components: the User,
    Azure OpenAI, and a SQL server. The arrows illustrate the flow of data between
    these components.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述架构图中，我们看到三个关键组件：用户、Azure OpenAI 和一个 SQL 服务器。箭头显示了这些组件之间数据的流动。
- en: Developing an SQLGPT solution
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发一个 SQLGPT 解决方案
- en: Now that we’re familiar with the architectural elements necessary for creating
    this solution, let’s proceed with the implementation of these components in the
    Azure portal. As mentioned in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059),
    it’s crucial to have an active Azure account for this section. Details for setting
    up the Azure account with an active subscription and the Azure OpenAI Service
    resource are provided in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了在 Azure 门户中创建此解决方案所需的架构元素，请继续执行这些组件的实施。如 [*第 4 章*](B21019_04.xhtml#_idTextAnchor059)
    所述，为了完成本节，必须拥有活跃的 Azure 帐户。有关使用活跃订阅设置 Azure 帐户和 Azure OpenAI 服务资源的详细信息，请参阅 [*第
    4 章*](B21019_04.xhtml#_idTextAnchor059)。
- en: 'Let’s look into the steps for creating an SQL sever in Azure:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看在 Azure 中创建 SQL 服务器的步骤：
- en: Creating an SQL Server in Azure
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Azure 中创建 SQL Server
- en: 'To create an SQL Server, we will use the following steps:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建 SQL Server，我们将使用以下步骤：
- en: Open [portal.azure.com](http://portal.azure.com)
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 [portal.azure.com](http://portal.azure.com)
- en: Navigate to the search bar in the top navigation and search for “`SQL Database`”.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到顶部导航中的搜索栏，并搜索 “`SQL Database`”。
- en: If it is not found in the search results, click on `SQL Database`”
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在搜索结果中找不到，请点击“ `SQL Database`”
- en: '![Figure 6.2: Select SQL Database](img/B21019_06_2.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2：选择 SQL 数据库](img/B21019_06_2.jpg)'
- en: 'Figure 6.2: Select SQL Database'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2：选择 SQL 数据库
- en: Click on **Create**
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建**
- en: Select the `azure-openai-rg`) .
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 `azure-openai-rg`)。
- en: '![Figure 6.3: Enter Database details](img/B21019_06_3.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3：输入数据库详细信息](img/B21019_06_3.jpg)'
- en: 'Figure 6.3: Enter Database details'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3：输入数据库详细信息
- en: Now give your desired database name and server for database.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在给你想要的数据库名称和服务器以供数据库使用。
- en: For Server, select Create new, and fill out the New server form with the following
    values - **Server name**, **Location**, **Authentication method**, **Server admin
    login**, **Password**, and click on **Ok**.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于服务器，选择“创建新的”，并使用以下值填写新服务器表单 - **服务器名称**、**位置**、**认证方法**、**服务器管理员登录**、**密码**，然后点击
    **确定**。
- en: '![Figure 6.4: Enter SQL Server details](img/B21019_06_4.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.4：输入 SQL Server 详细信息](img/B21019_06_4.jpg)'
- en: 'Figure 6.4: Enter SQL Server details'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4：输入 SQL Server 详细信息
- en: Once the Server is created then we need to select the server for creating the
    SQL database.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦服务器创建完成，我们需要选择服务器以创建 SQL 数据库。
- en: 'Select the Workload environment, Compute+storage and click on **Next**. For
    **Networking** tab, toggle **Add current client IP address** to **Yes**:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择工作负载环境，计算+存储，然后点击 **下一步**。在 **网络** 选项卡中，将 **添加当前客户端 IP 地址** 切换到 **是**：
- en: '![Figure 6.5: Enter SQL database details](img/B21019_06_5.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.5：输入 SQL 数据库详细信息](img/B21019_06_5.jpg)'
- en: 'Figure 6.5: Enter SQL database details'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.5：输入 SQL 数据库详细信息
- en: 'Click on **Next** in the **Networking** page and leave the **Security**, **Additional**
    **Settings** **Tags** as defaults and go to **Review +** **create** page:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **网络** 页面点击 **下一步**，将 **安全性**、**额外设置**、**标签** 设为默认值，然后进入 **审阅 + 创建** 页面：
- en: '![Figure 6.6: Review Page](img/B21019_06_6.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.6：审阅页面](img/B21019_06_6.jpg)'
- en: 'Figure 6.6: Review Page'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.6：审阅页面
- en: Review all the details and click on the **Create** button to create the SQL
    Server and database.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看所有详细信息并点击**创建**按钮以创建 SQL Server 和数据库。
- en: Now that we have set up all the essential services in our Azure portal, we can
    begin constructing our solution.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经在 Azure 门户中设置了所有必要的服务，可以开始构建我们的解决方案了。
- en: Solution using Azure SQL and ChatGPT
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Azure SQL 和 ChatGPT 的解决方案
- en: To develop the code, I will be working within the Jupyter notebook and the remaining
    installations remain the same as in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059).
    You will find all the necessary items, including the Python notebook, in the chapter
    6 folder of this book’s GitHub repository at - [https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter6.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter6.ipynb)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开发代码，我将在 Jupyter notebook 中工作，其余的安装与 [*第4章*](B21019_04.xhtml#_idTextAnchor059)
    中相同。你可以在本书 GitHub 仓库的第 6 章文件夹中找到所有必要的项目，包括 Python notebook，链接为 - [https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter6.ipynb](https://github.com/PacktPublishing/Azure-OpenAI-Essentials/blob/main/Chapter6.ipynb)
- en: You will need to install one extra Python library for this code other than the
    one installed in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在 [*第4章*](B21019_04.xhtml#_idTextAnchor059) 中安装的软件包外，你还需要安装一个额外的 Python 库。
- en: 'Create a new Jupyter Notebook and install the following package:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的 Jupyter Notebook，并安装以下软件包：
- en: '[PRE0]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Our code includes the following sections in which we are going to develop our
    solution
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的代码包括以下几个部分，在这些部分中我们将开发解决方案：
- en: Importing packages
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入包
- en: Setting DB connection strings
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置数据库连接字符串
- en: Sample Query testing
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 示例查询测试
- en: Use the ChatGPT deployed model
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用部署的 ChatGPT 模型
- en: Create a Pandas agent and ask questions
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 Pandas 代理并提问
- en: Importing Packages
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入包
- en: We need to import the required packages before we develop the solution.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在开发解决方案之前导入所需的包。
- en: '[PRE1]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can see a variety of libraries being used in the code above. Let’s delve
    into each of these libraries in the table here:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到上面的代码中使用了多种库。我们来详细了解一下这些库，在下表中查看：
- en: '| **Imported Packages** | **Description** |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| **导入的包** | **描述** |'
- en: '| `pyodbc` | A Python module for ODBC (Open Database Connectivity) database
    access. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `pyodbc` | 一个用于 ODBC（开放数据库连接）数据库访问的 Python 模块。 |'
- en: '| `pandas` | A powerful data manipulation and analysis library for Python.
    |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| `pandas` | 一个强大的 Python 数据操作和分析库。 |'
- en: '| `langchain.llms.AzureOpenAI` | A module from the “langchain” package for
    handling language models, specifically Azure OpenAI. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| `langchain.llms.AzureOpenAI` | 来自“langchain”软件包的一个模块，用于处理语言模型，特别是 Azure OpenAI。
    |'
- en: '| `openai` | The OpenAI Python library, which provides access to OpenAI’s GPT
    models. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| `openai` | OpenAI Python 库，提供对 OpenAI GPT 模型的访问。 |'
- en: '| `os` | Provides a way to interact with the operating system, including reading
    or setting environment variables. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `os` | 提供与操作系统交互的方式，包括读取或设置环境变量。 |'
- en: '| `dotenv.load_dotenv` | Loads environment variables from a .env file into
    the script’s environment. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `dotenv.load_dotenv` | 从 .env 文件加载环境变量到脚本的环境中。 |'
- en: '| `langchain_experimental.agents.agent_toolkits.``create_spark_dataframe_agent`
    | A function to create a Spark DataFrame agent for experimental purposes. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| `langchain_experimental.agents.agent_toolkits.``create_spark_dataframe_agent`
    | 一个创建 Spark DataFrame 代理的函数，用于实验目的。 |'
- en: '| `langchain_experimental.agents.agent_toolkits.``create_pandas_dataframe_agent`
    | A function to create a Pandas DataFrame agent for experimental purposes. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `langchain_experimental.agents.agent_toolkits.``create_pandas_dataframe_agent`
    | 一个创建 Pandas DataFrame 代理的函数，用于实验目的。 |'
- en: 'Table 6.1: Explanation of the usage of the imported packages'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6.1：导入的包使用说明
- en: Now, let’s initialize all the necessary constants using the keys provided in
    the `.env` file. We add “`DATABASESERVER`” ,” `DATABASE`” , “`DATABASEUSERNAME`”
    and “`DATABASEPASSWORD`” to our .`env` file from [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `.env` 文件中提供的密钥初始化所有必要的常量。我们将 “`DATABASESERVER`” 、” `DATABASE`” 、 “`DATABASEUSERNAME`”
    和 “`DATABASEPASSWORD`” 添加到我们在 [*第4章*](B21019_04.xhtml#_idTextAnchor059) 中的 .`env`
    文件中。
- en: '[PRE2]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Add these to the `.env` file we created in [*Chapter 4*](B21019_04.xhtml#_idTextAnchor059)
    with the `connectionString` and `endpoints`:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些添加到我们在 [*第4章*](B21019_04.xhtml#_idTextAnchor059) 创建的 `.env` 文件中，并包括 `connectionString`
    和 `endpoints`：
- en: '[PRE3]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Follow these steps to add the SQL Server end point in the `.env` file. The required
    details can be found in your SQL server created in the azure portal in **Connection
    Strings** -> **ODBC** section
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤将 SQL Server 端点添加到 `.env` 文件中。所需的详细信息可以在 Azure 门户中的 **连接字符串** -> **ODBC**
    部分找到
- en: Update the **DATABASESERVER** value with the **Server Name** value found in
    your SQL Database page.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 **DATABASESERVER** 的值为你在 SQL 数据库页面中找到的 **服务器名称**。
- en: Similarly, modify the values of `DATABASE` with the Database name.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，修改 `DATABASE` 的值为数据库名称。
- en: 'Similarly update the **DATABASEUSERNAME** and **DATABASEPASSWORD** you set
    while setting up the database:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，更新你在设置数据库时设置的 **DATABASEUSERNAME** 和 **DATABASEPASSWORD**：
- en: '![Figure 6.7: Connection Strings](img/B21019_06_7.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.7：连接字符串](img/B21019_06_7.jpg)'
- en: 'Figure 6.7: Connection Strings'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.7：连接字符串
- en: 'We get the following output:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '[PRE4]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Setting DB Connection Strings
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置数据库连接字符串
- en: This code is a common pattern for connecting to a SQL Server database in Python
    using `pyodbc`, specifying connection parameters in the `connectionString`. The
    resulting connection (`cnxn`) and cursor (`cursor`) can be used to interact with
    the database through SQL queries.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码是连接到 SQL Server 数据库的常见模式，使用 `pyodbc` 在 Python 中指定连接参数，参数位于 `connectionString`
    中。生成的连接 (`cnxn`) 和游标 (`cursor`) 可用于通过 SQL 查询与数据库进行交互。
- en: '[PRE5]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now that we’ve incorporated the connection strings into our SQL database, it’s
    time to validate them by executing a sample query. In my experience I have seen
    several instances where developers struggle with getting the right connection
    string, the best way is to copy that directly from the source like azure portal
    and paste. Incase if you are formatting on your own then please take care if there
    are any special characters in either the password or the username.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将连接字符串集成到 SQL 数据库中，是时候通过执行示例查询来验证它们了。在我的经验中，我见过多次开发人员在获取正确的连接字符串时遇到困难，最佳方式是直接从源（如
    Azure 门户）复制并粘贴。如果你是自己格式化的，请确保密码或用户名中没有特殊字符。
- en: This code snippet facilitates fetching a subset of data from the designated
    SQL table and visualizing it in a Pandas DataFrame, a typical procedure when handling
    data in Python.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码有助于从指定的 SQL 表中提取一部分数据，并在 Pandas DataFrame 中进行可视化，这是在 Python 中处理数据时的典型操作。
- en: '[PRE6]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We get the following output:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '![Figure 6.8: An overview of the Output of SQL Query](img/B21019_06_8.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.8：SQL 查询输出概述](img/B21019_06_8.jpg)'
- en: 'Figure 6.8: An overview of the Output of SQL Query'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.8：SQL 查询输出概述
- en: Use the ChatGPT deployed model
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用部署的 ChatGPT 模型
- en: From the previous output, we confirm that the SQL connection is established
    successfully, enabling us to execute database queries from our Python code.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的输出可以确认，SQL 连接已成功建立，这使得我们可以从 Python 代码中执行数据库查询。
- en: The provided code snippet initializes an instance of the `AzureOpenAI` class,
    assuming that `OPENAI_DEPLOYMENT_NAME` and `OPENAI_MODEL_NAME` are variables storing
    the targeted deployment and model names, respectively, for utilization.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的代码片段初始化了一个 `AzureOpenAI` 类的实例，假设 `OPENAI_DEPLOYMENT_NAME` 和 `OPENAI_MODEL_NAME`
    是存储目标部署和模型名称的变量，用于使用该模型。
- en: '[PRE7]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Create Pandas agent and Ask Questions
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Pandas 代理并提问
- en: In continuation from the previous step, the code initializes an experimental
    agent capable of natural language interaction with a Pandas DataFrame and a language
    model. It issues a query, “how many rows are there?”, anticipating the agent to
    interpret and respond accordingly based on the DataFrame.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 从前一步继续，代码初始化了一个实验性代理，能够与 Pandas DataFrame 和语言模型进行自然语言交互。它发出了一个查询，“有多少行？”，预计代理将根据
    DataFrame 进行解析并作出响应。
- en: '[PRE8]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We get the following Output:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '![Figure 6.9: Sample output of our agent creation](img/B21019_06_9.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.9：我们代理创建的示例输出](img/B21019_06_9.jpg)'
- en: 'Figure 6.9: Sample output of our agent creation'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.9：我们代理创建的示例输出
- en: Let’s now assess the effectiveness of our agent by experimenting with various
    prompts to retrieve data from the SQL database.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过尝试各种提示来评估代理的有效性，以便从 SQL 数据库中获取数据。
- en: 'First Prompt: “What is the frequency of each country region”'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个提示：“每个国家区域的频率是多少？”
- en: '[PRE9]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We get the following output:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '![Figure 6.10: SQL Output For our prompt](img/B21019_06_10.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.10：我们提示的 SQL 输出](img/B21019_06_10.jpg)'
- en: 'Figure 6.10: SQL Output For our prompt'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.10：我们提示的 SQL 输出
- en: 'Second Prompt: “list the name of 10 unique cities”'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个提示：“列出 10 个独特的城市名”
- en: '[PRE10]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We get the following output:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '![Figure 6.11: SQl Output for our prompt](img/B21019_06_11.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.11：我们提示的 SQL 输出](img/B21019_06_11.jpg)'
- en: 'Figure 6.11: SQl Output for our prompt'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.11：我们提示的 SQL 输出
- en: 'Third Prompt: “how many unique state provinces are there?”'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个提示：“有多少个独特的省份？”
- en: '[PRE11]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We get the following output:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '![Figure 6.12: SQL Output for our prompt](img/B21019_06_12.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图6.12：我们提示的SQL输出](img/B21019_06_12.jpg)'
- en: 'Figure 6.12: SQL Output for our prompt'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12：我们提示的SQL输出
- en: With this, we’ve successfully established the connection between SQL Server
    and ChatGPT. Now, instead of executing SQL queries directly, we can provide prompts
    to retrieve SQL data using Pandas DataFrame and ChatGPT LLM.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们成功地建立了SQL Server与ChatGPT之间的连接。现在，我们无需直接执行SQL查询，而是可以通过Pandas DataFrame和ChatGPT
    LLM提供提示来检索SQL数据。
- en: Summary
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we delved into the effortless world of interacting with an
    SQL database using straightforward English prompts. First, we set the stage by
    creating a SQL database and establishing a seamless connection to it through the
    PyODBC library. We ensured the connectivity by testing simple SQL queries.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们深入探讨了如何通过简明的英语提示与SQL数据库进行交互。首先，我们通过创建一个SQL数据库并通过PyODBC库建立无缝连接来奠定基础。我们通过测试简单的SQL查询确保了连接的正常性。
- en: Moving forward, we introduced a powerful ally in the form of a Pandas agent
    driven using ChatGPT. This dynamic duo allows us to effortlessly make queries
    using everyday English prompts. In essence, this SQL GPT tool opens up a realm
    where anyone, regardless of prior SQL knowledge, can effortlessly extract data
    from the database. This is a game-changer, making the world of databases more
    accessible and user-friendly for all.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们引入了一个强大的助手——一个由ChatGPT驱动的Pandas代理。这对动态组合使我们能够轻松地使用日常英语提示进行查询。本质上，这个SQL
    GPT工具打开了一个领域，在这个领域中，任何人都可以轻松地从数据库中提取数据，无论他们是否具备SQL知识。这是一个颠覆性的创新，让数据库世界对所有人更加开放和友好。
- en: In the next chapter, we will look into how we can use Azure Open AI to generate
    code and documentation for the user prompts.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨如何使用Azure Open AI为用户提示生成代码和文档。
