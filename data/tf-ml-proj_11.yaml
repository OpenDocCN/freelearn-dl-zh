- en: Making Quality Product Recommendations Using TensorFlow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 TensorFlow 进行高质量产品推荐
- en: When you visit Amazon, Netflix, or your other favorite websites, or use any
    modern app such as Spotify or Pandora, you will have noticed that they recommend
    different items to you. These recommendations are created using recommendation
    system algorithms. Before machine learning based recommendations systems, the
    recommendations were generated with rule-based systems. However, with the advent
    of machine learning and neural networks, recommendations have become more accurate.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当你访问亚马逊、Netflix 或其他你喜欢的网站，或使用 Spotify、Pandora 等现代应用时，你会注意到它们会向你推荐不同的商品。这些推荐是通过推荐系统算法生成的。在基于机器学习的推荐系统之前，推荐是通过基于规则的系统生成的。然而，随着机器学习和神经网络的出现，推荐变得更加准确。
- en: In this chapter, we'll learn about recommendation systems. We'll use the Retailrocket
    dataset to implement a recommendation system in two different ways, using TensorFlow
    and Keras.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习推荐系统。我们将使用 Retailrocket 数据集，通过两种不同的方式实现推荐系统，分别使用 TensorFlow 和 Keras。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涉及以下主题：
- en: Recommendation systems
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐系统
- en: Content-based filtering
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于内容的过滤
- en: Collaborative filtering
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协同过滤
- en: Hybrid systems
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合系统
- en: Matrix factorization
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩阵分解
- en: Introducing the Retailrocket dataset
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Retailrocket 数据集
- en: Exploring the Retailrocket dataset
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 Retailrocket 数据集
- en: Preprocessing the data
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据预处理
- en: The matrix factorization model for Retailrocket recommendations
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Retailrocket 推荐系统的矩阵分解模型
- en: The neural network model for Retailrocket recommendations
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Retailrocket 推荐系统的神经网络模型
- en: Recommendation systems
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐系统
- en: 'One of the most common applications of machine learning systems is to recommend
    things to users that they''ll be interested in. Have you noticed how Spotify and
    Pandora recommend a certain kind of music, or particular songs or radio stations?
    You may have observed Netflix recommending movies for you, as well, as in the
    following screenshot:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习系统的最常见应用之一是向用户推荐他们可能感兴趣的内容。你有没有注意到 Spotify 和 Pandora 如何推荐某种类型的音乐，或者特定的歌曲或电台？你可能也观察到
    Netflix 向你推荐电影，如以下截图所示：
- en: '![](img/bb82990e-16df-4071-94c2-0606431b38b1.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bb82990e-16df-4071-94c2-0606431b38b1.png)'
- en: 'How about Amazon recommending books based on the book that you are currently
    browsing, as in the following screenshot:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊如何根据你当前浏览的书籍推荐其他书籍，参考以下截图：
- en: '![](img/d7875ab6-8be8-4ede-ab89-0a5db8b9473b.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d7875ab6-8be8-4ede-ab89-0a5db8b9473b.png)'
- en: Such systems are known as recommendation systems.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的系统被称为推荐系统。
- en: 'A recommendation system is one that learns about what items might be of interest
    to a user, and then recommends those items for buying, renting, listening, watching,
    and so on. Recommendation systems are broadly classified into two categories:
    content-based filtering and collaborative filtering.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统是学习用户可能感兴趣的项目，然后推荐这些项目供购买、租赁、收听、观看等使用的系统。推荐系统大致可以分为两类：基于内容的过滤和协同过滤。
- en: Content-based filtering
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于内容的过滤
- en: Content-based filtering is based on creating a detailed model of the content
    from which recommendations are made, such as the text of books, attributes of
    movies, or information about music. The content model is generally represented
    as a vector space model. Some of the common models for transforming content into
    vector space models are TFIDF, the *Bag-of-words* model, Word2Vec, GloVe, and
    Item2Vec.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 基于内容的过滤是通过创建内容的详细模型来进行推荐的，这些内容可能是书籍的文本、电影的属性或音乐的信息。内容模型通常表示为向量空间模型。一些常见的将内容转化为向量空间模型的方法包括
    TFIDF、*词袋模型*、Word2Vec、GloVe 和 Item2Vec。
- en: Along with the content model, a user profile is also created using information
    about the user. Content is recommended based on matching the user profile with
    the content model.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 除了内容模型，还通过用户信息创建了用户档案。根据匹配用户档案和内容模型来推荐内容。
- en: Advantages of content-based filtering algorithms
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于内容的过滤算法的优点
- en: 'The following are the advantages of content-based filtering algorithms:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是基于内容的过滤算法的优点：
- en: '**Eliminates the cold-start problem for new items:** If we have enough information
    about the users, and detailed information about the new content, then the cold-start
    problem found in collaborative filtering algorithms does not affect content-based
    algorithms. The recommendation can be made based on the user profile and the information
    about the content.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消除了新物品的冷启动问题：** 如果我们拥有足够的用户信息以及新内容的详细信息，那么协同过滤算法中的冷启动问题就不会影响基于内容的算法。推荐可以基于用户档案和内容信息进行。'
- en: '**The recommendations are explainable and transparent:** Using content representation
    models, we''ll be able to explain how certain items are selected for recommendations.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**推荐结果是可解释和透明的：** 使用内容表示模型，我们能够解释为什么某些物品被选择作为推荐项。'
- en: Disadvantages of content-based filtering algorithms
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于内容的过滤算法的缺点
- en: 'The following are the disadvantages of content-based filtering algorithms:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是基于内容的过滤算法的缺点：
- en: Content-based filtering algorithms require detailed information about items
    and content, which is sometimes not available
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于内容的过滤算法需要详细的物品和内容信息，而这些信息有时并不可用
- en: Content-based filtering algorithms are prone to overspecialization
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于内容的过滤算法容易导致过度专业化
- en: Collaborative filtering
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 协同过滤
- en: 'Collaborative filtering algorithms do not need detailed information about the
    user or the items. They build models based on user interactions with items such
    as song listened, item viewed, link clicked, item purchased or video watched.
    The information generated from the user-item interactions is classified into two
    categories: implicit feedback and explicit feedback:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 协同过滤算法不需要关于用户或物品的详细信息。它们根据用户与物品的互动（如听过的歌曲、查看的物品、点击的链接、购买的物品或观看的视频）构建模型。通过用户与物品的互动生成的信息可以分为两类：隐式反馈和显式反馈：
- en: Explicit feedback information is when the user explicitly assigns a score, such
    as a rating from 1 to 5 to an item.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显式反馈信息是指用户明确地为物品打分，例如对物品进行1到5的评分。
- en: Implicit feedback information is collected with different kinds of interaction
    between users and items, for example, view, click, purchase interactions in the
    Retailrocket dataset that we will use in our example.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐式反馈信息是通过用户与物品之间的不同互动收集的，例如在Retailrocket数据集中，我们将使用的查看、点击、购买等互动。
- en: Further collaborative filtering algorithms can be either user-based or item-based.
    In user-based algorithms, interactions between users are focused on to identify
    similar users. Then the user is recommended items that other similar users have
    bought or viewed. In item-based algorithms, first, the similar items are identified
    based on item-user interactions, and then items similar to the current item are
    recommended.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步的协同过滤算法可以分为基于用户和基于物品的两种类型。在基于用户的算法中，重点关注用户之间的互动，以识别相似的用户。然后，系统会推荐其他相似用户购买或查看的物品。在基于物品的算法中，首先根据物品-用户的互动识别相似的物品，然后推荐与当前物品相似的物品。
- en: Hybrid systems
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 混合系统
- en: 'Hybrid systems leverage the power of both content-based and collaborative filtering
    by combing both methods. There are many ways hybrid systems are implemented, such
    as:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 混合系统通过结合两种方法，利用基于内容和协同过滤的优势。混合系统有许多实现方式，例如：
- en: Creating ensembles of content-based and collaborative filtering algorithms and
    combining the recommendations of both types of algorithms
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建基于内容和协同过滤算法的集成，并结合两种算法的推荐结果
- en: Enhancing collaborative filtering with content details and user information
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过内容细节和用户信息增强协同过滤
- en: Adding user-item interaction models to content-based filtering algorithms
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向基于内容的过滤算法添加用户-物品互动模型
- en: The reader is encouraged to explore more about the three kinds of recommendation
    systems. We'll explore how to build recommendation systems with matrix factorization
    and neural networks in the Retailrocket dataset example in the following section.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 鼓励读者进一步探索三种推荐系统。我们将在接下来的章节中，使用Retailrocket数据集的示例，探讨如何通过矩阵分解和神经网络构建推荐系统。
- en: Matrix factorization
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 矩阵分解
- en: Matrix factorization is a popular algorithm for implementing recommendation
    systems and falls in the collaborative filtering algorithms category. In this
    algorithm, the user-item interaction is decomposed into two low-dimensional matrices.
    For example, let's say all the visitor-item interactions in our dataset are M
    x N matrix, denoted by A. Matrix factorization decomposes matrix A into two matrices
    of M x k and k x N dimensions respectively, such that the dot product of these
    two can approximate matrix A. Some of the more popular algorithms for finding
    the low-dimensional matrix are based on **Singular Value Decomposition** (**SVD**).
    In the following example, we'll use the TensorFlow and Keras libraries to implement
    matrix factorization.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵分解是一种实现推荐系统的流行算法，属于协同过滤算法类别。在此算法中，用户-物品交互被分解为两个低维矩阵。例如，假设我们数据集中的所有访客-物品交互是一个M
    x N的矩阵，记作A。矩阵分解将矩阵A分解成两个分别为M x k和k x N维度的矩阵，使得这两个矩阵的点积可以逼近矩阵A。用于寻找低维矩阵的更流行的算法之一是基于**奇异值分解**（**SVD**）。在下面的示例中，我们将使用TensorFlow和Keras库来实现矩阵分解。
- en: Introducing the Retailrocket dataset
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Retailrocket数据集
- en: In this chapter, we shall showcase a recommendation system algorithm using the
    Retailrocket dataset.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将展示如何使用Retailrocket数据集实现推荐系统算法。
- en: The Retailrocket dataset is available from the Kaggle website, at [https://www.kaggle.com/retailrocket/ecommerce-dataset](https://www.kaggle.com/retailrocket/ecommerce-dataset).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Retailrocket数据集可以从Kaggle网站下载，网址为[https://www.kaggle.com/retailrocket/ecommerce-dataset](https://www.kaggle.com/retailrocket/ecommerce-dataset)。
- en: 'We download the dataset using the following command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用以下命令下载数据集：
- en: '[PRE0]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The downloaded files are moved into the `~/datasets/kaggle-retailrocket` folder. You
    can keep it in whichever folder you feel comfortable with.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 下载的文件已移动到`~/datasets/kaggle-retailrocket`文件夹。你可以根据自己的需要保存在任何文件夹中。
- en: 'The Retailrocket dataset comes in three files:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Retailrocket数据集包含三个文件：
- en: '`events.csv`: This file contains the visitor-item interaction data'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`events.csv`：此文件包含访客-物品交互数据'
- en: '`item_properties.сsv`: This file contains item properties'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`item_properties.csv`：此文件包含物品属性'
- en: '`category_tree.csv`: This file contains the category tree'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`category_tree.csv`：此文件包含类别树'
- en: The data contains the values collected from an e-commerce website but has been
    anonymized to ensure the privacy of the users. The interaction data represents
    interactions over a period of 4.5 months.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包含来自电商网站的数值，但已被匿名化以确保用户隐私。交互数据代表了4.5个月内的交互情况。
- en: 'A visitor can engage in three categories of events: `view`, `addtocart`, or
    `transaction`. The dataset has a total of 2,756,101 interactions that include
    2,664,312 `view` events, 69,332 `addtocart` events, and 22,457 `transaction` events.
    The interactions are from 1,407,580 unique visitors.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 访客可以参与三种类别的事件：`view`、`addtocart`或`transaction`。该数据集包含总共2,756,101次交互，包括2,664,312次`view`事件、69,332次`addtocart`事件和22,457次`transaction`事件。这些交互来自1,407,580个独特的访客。
- en: Since the data contains the user-item interactions and not the explicit ranking
    of items by users, it, therefore, falls under the category of implicit feedback
    information.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 由于数据包含的是用户-物品交互而不是用户对物品的明确排序，因此它属于隐式反馈信息类别。
- en: Exploring the Retailrocket dataset
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索Retailrocket数据集
- en: Let's load the dataset and explore it to learn more about the data.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们加载数据集并进行探索，了解更多关于数据的信息。
- en: 'Set the path to the folder where we downloaded the data:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置我们下载数据的文件夹路径：
- en: '[PRE1]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Load the `events.csv` in a pandas DataFrame:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`events.csv`加载到一个pandas DataFrame中：
- en: '[PRE2]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The events data has the five columns of `timestamp`, `visitorid`, `event`,
    `itemid`, and `transactionid`, as shown here:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 事件数据包含`timestamp`、`visitorid`、`event`、`itemid`和`transactionid`五列，如下所示：
- en: '[PRE3]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Print the unique items, users, and transactions:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印唯一的物品、用户和交易：
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We get the following output:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到如下输出：
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Verify the kinds of events that we mentioned earlier:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证我们之前提到的事件类型：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We see the three kinds of events that we described before:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了之前描述的三种事件：
- en: '[PRE7]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Pre-processing the data
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据预处理
- en: Fields `visitorid` and `itemid` are already numeric, but we still need to convert
    the events into numeric values.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`visitorid`和`itemid`字段已为数值型，但我们仍需要将事件转换为数值。'
- en: 'We convert `view` events to `1`, `addtocart` events to `2`, and `transaction`
    events to `3` with the following code:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们通过以下代码将`view`事件转换为`1`，`addtocart`事件转换为`2`，`transaction`事件转换为`3`：
- en: '[PRE8]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Drop the `transcationid` and `timestamp` columns that we don''t need:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除我们不需要的`transactionid`和`timestamp`列：
- en: '[PRE9]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Shuffle the dataset to get random data for training and test datasets:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对数据集进行打乱，以获得用于训练和测试的数据：
- en: '[PRE10]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The dataset can also be shuffled with the following command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集也可以通过以下命令进行打乱：
- en: '[PRE11]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Split the data in `train`, `valid`, and `test` sets, as follows:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据分为 `train`、`valid` 和 `test` 集，如下所示：
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The `train` and `test` data is printed as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`train` 和 `test` 数据如下所示：'
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The matrix factorization model for Retailrocket recommendations
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于 Retailrocket 推荐的矩阵分解模型
- en: 'Now let''s create a matrix factorization model in Keras:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在 Keras 中创建一个矩阵分解模型：
- en: 'Store the number of visitors and items in a variable, as follows:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将访客和物品的数量存储在一个变量中，如下所示：
- en: '[PRE14]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Set the number of latent factors for embedding to `5`. You may want to try
    different values to see the impact on the model training:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将嵌入层的潜在因子数量设置为 `5`。你可能想尝试不同的值，以观察对模型训练的影响：
- en: '[PRE15]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Import the Input, Embedding, and Flatten layers from the Keras library:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Keras 库中导入 Input、Embedding 和 Flatten 层：
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Start with the items – create an input layer for them as follows:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从物品开始—创建一个输入层，如下所示：
- en: '[PRE17]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Create an Embedding representation layer and then flatten the Embedding layer
    to get the output in the number of latent dimensions that we set earlier:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个嵌入表示层，然后将该嵌入层展平，以获得我们之前设置的潜在维度的输出：
- en: '[PRE18]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Similarly, create the vector space representation for the visitors:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似地，创建访客的向量空间表示：
- en: '[PRE19]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Create a layer for the dot product of both vector space representations:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个点积层，用于表示两个向量空间的点积：
- en: '[PRE20]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Build the Keras model from the input layers, and the dot product layer as the
    output layer, and compile it as follows:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从输入层构建 Keras 模型，并将点积层作为输出层，然后按如下方式编译：
- en: '[PRE21]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The model is summarized as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 模型总结如下：
- en: '[PRE22]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Since the model is complicated, we can also draw it graphically using the following
    commands:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 由于模型较为复杂，我们还可以使用以下命令将其图形化：
- en: '[PRE23]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You can see the layers and output sizes clearly in this plotted visualization:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过这个绘制的可视化图清晰地看到各层及输出的大小：
- en: '![](img/88232a90-7a0b-4964-9a4b-195d3ead67f5.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/88232a90-7a0b-4964-9a4b-195d3ead67f5.png)'
- en: 'Now let''s train and evaluate the model:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们训练和评估模型：
- en: '[PRE24]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The training and evaluation loss will be very high. We can improve this by using
    advanced methods for matrix factorization.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 训练和评估的损失会非常高。我们可以通过使用矩阵分解的高级方法来改进这一点。
- en: Now, let's build the neural network model to provide the same recommendations.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们构建神经网络模型，以提供相同的推荐。
- en: The neural network model for Retailrocket recommendations
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于 Retailrocket 推荐的神经网络模型
- en: 'In this model, we set two different variables for latent factors for users
    and items but set both of them to `5`. The reader is welcome to experiment with
    different values of latent factors:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个模型中，我们为用户和物品设置了两个不同的潜在因子变量，但都将它们设置为 `5`。读者可以尝试使用不同的潜在因子值进行实验：
- en: '[PRE25]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Build the item and visitor embeddings and vector space representations the
    same way we built earlier:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照我们之前的方法，构建物品和访客的嵌入表示和向量空间表示：
- en: '[PRE26]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Instead of creating a dot product layer, we concatenate the user and visitor
    representations, and then apply fully connected layers to get the recommendation
    output:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不再创建点积层，而是将用户和访客的表示进行连接，然后应用全连接层以获得推荐输出：
- en: '[PRE27]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Define and compile the model as follows:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下方式定义并编译模型：
- en: '[PRE28]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Let''s see how this model looks visually:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个模型的可视化效果：
- en: '![](img/dd18aa42-3786-4c6d-bb49-762d635a2e69.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd18aa42-3786-4c6d-bb49-762d635a2e69.png)'
- en: 'Train and evaluate the model:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练和评估模型：
- en: '[PRE29]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We get a pretty good accuracy with a very low error rate:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了一定准确度，并且误差率非常低：
- en: '[PRE30]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: That's it. We encourage the reader to learn more about different recommendation
    system algorithms and try implementing them with Retailrocket or other publicly
    available datasets.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。我们鼓励读者了解更多不同的推荐系统算法，并尝试使用 Retailrocket 或其他公开可用的数据集来实现它们。
- en: Summary
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about recommendation systems. We learned about different
    kinds of recommendation systems such as collaborative filtering, content-based
    filtering, and hybrid systems. We used the Retailrocket dataset to create two
    models of our recommendation system, one with matrix factorization, and one using
    a neural network. We saw that the neural network model gave pretty good accuracy.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们学习了推荐系统。我们了解了不同种类的推荐系统，如协同过滤、基于内容的过滤和混合系统。我们使用 Retailrocket 数据集创建了两种推荐系统模型，一种是矩阵分解，另一种是使用神经网络。我们看到神经网络模型的准确度相当不错。
- en: In the next chapter, we'll learn about object detection at large scale with
    distributed TensorFlow.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何使用分布式 TensorFlow 进行大规模目标检测。
- en: Questions
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Enhance your understanding by practicing the following questions:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 通过练习以下问题来增强理解：
- en: What are the various algorithms for implementing vector space models for text-based
    content?
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实现基于文本内容的向量空间模型有哪些算法？
- en: What are the various advanced algorithms for collaborative filtering?
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 协同过滤的各种高级算法有哪些？
- en: How can we handle overfitting in collaborative filtering models?
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何处理协同过滤模型中的过拟合问题？
- en: Experiment with different algorithms apart from the ones implemented in this
    chapter.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试除了本章实现的算法之外的其他算法。
- en: Experiment with different values of latent factors for visitors and items.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试不同的潜在因子值，分别用于访客和项目。
- en: Further reading
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'You''ll learn more by reading the following materials:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过阅读以下材料来获得更多信息：
- en: 'Tutorials and articles on recommender systems at the following link: [http://recommendation-systems.org](http://recommender-systems.org)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下链接中有推荐系统的教程和文章：[http://recommendation-systems.org](http://recommender-systems.org)
- en: '*Recommendation Systems Handbook **2nd ed.* by Francesco Ricci, Lior Rokach,
    and Bracha Shapira, 2015.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*推荐系统手册 **第二版*** 由 Francesco Ricci、Lior Rokach 和 Bracha Shapira 编著，2015年。'
- en: '*Recommendation Systems: The Textbook.* by Charu C. Aggarwal, 2016.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*推荐系统：教科书* 由 Charu C. Aggarwal 编著，2016年。'
