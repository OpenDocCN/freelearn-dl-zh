- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In this chapter, we'll have a gentle introduction to**natural language processing**
    (**NLP**) and how natural language processing concepts are used in real-life artificial
    intelligence applications. We will focus mainly on Python programming paradigms,
    which are used to develop NLP applications. Later on, the chapter has a tips section
    for readers. If you are really interested in finding out about the comparison
    of various programming paradigms for NLP and why Python is the best programming
    paradigm then, as a reader, you should go through the *Preface* of this book.
    As an industry professional, I have tried most of the programming paradigms for
    NLP. I have used Java, R, and Python for NLP applications. Trust me, guys, Python
    is quite easy and efficient for developing applications that use NLP concepts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将对**自然语言处理**（**NLP**）进行简要介绍，并讨论自然语言处理概念是如何在现实中的人工智能应用中使用的。我们将主要关注用于开发NLP应用的Python编程范式。之后，本章还会有一个为读者准备的提示部分。如果你真的有兴趣了解不同编程范式在NLP中的对比，以及为什么Python是最好的编程范式，那么作为读者，你应该阅读本书的*前言*。作为一名行业专业人士，我尝试过多种编程范式来开发NLP应用。我使用过Java、R和Python来开发NLP应用。相信我，Python在开发使用NLP概念的应用时非常简单且高效。
- en: 'We will cover following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding NLP
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解NLP
- en: Understanding basic applications
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解基本应用
- en: Understanding advance applications
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解高级应用
- en: Advantages of the togetherness--NLP and Python
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NLP和Python的结合优势
- en: Environment setup for NLTK
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NLTK的环境设置
- en: Tips for readers
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读者提示
- en: Understanding natural language processing
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解自然语言处理
- en: In the last few years, branches of **artificial intelligence** (**AI**) have
    created a lot of buzz, and those branches are data science, data analytics, predictive
    analysis, NLP, and so on.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几年里，**人工智能**（**AI**）的各个分支引起了广泛关注，其中包括数据科学、数据分析、预测分析、NLP等。
- en: As mentioned in the *Preface* of this book, we are focusing on Python and natural
    language processing. Let me ask you some questions--Do you really know what natural
    language is? What is natural language processing? What are the other branches
    involved in building expert systems using various concepts of natural language
    processing? How can we build intelligent systems using the concept of NLP?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本书*前言*中提到的，我们专注于Python和自然语言处理。让我问你一些问题——你真的知道什么是自然语言吗？什么是自然语言处理？在使用各种自然语言处理概念构建专家系统时，涉及哪些其他分支？我们如何利用NLP的概念构建智能系统？
- en: Let's begin our roller coaster ride of understanding NLP.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始理解NLP的过山车之旅。
- en: What is natural language?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是自然语言？
- en: As a human being, we express our thoughts or feelings via a language
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为人类，我们通过语言表达我们的思想或感情
- en: Whatever you speak, read, write, or listen to is mostly in the form of natural
    language, so it is commonly expressed as natural language
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你说、读、写或听的任何内容大多都是自然语言的形式，因此通常被称为自然语言
- en: 'For example:'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：
- en: The content of this book is a source of natural language
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书的内容是自然语言的来源
- en: Whatever you speak, listen, and write in your daily life is also in the form
    of natural language
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你在日常生活中说、听和写的所有内容也是自然语言的形式
- en: Movie dialogues are also a source of natural language
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电影对话也是自然语言的来源
- en: Your WhatsApp conversations are also considered a form of natural language
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你在WhatsApp上的对话也被视为自然语言的一种形式
- en: What is natural language processing?
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是自然语言处理？
- en: Now you have an understanding of what natural language is. NLP is a sub-branch
    of AI. Let's consider an example and understand the concept of NLP. Let's say
    you want to build a machine that interacts with humans in the form of natural
    language. This kind of an intelligent system needs computational technologies
    and computational linguistics to build it, and the system processes natural language
    like humans.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在你对自然语言有了了解。NLP（自然语言处理）是人工智能的一个子领域。让我们通过一个例子来理解NLP的概念。假设你想构建一个与人类通过自然语言互动的机器。这样的智能系统需要计算技术和计算语言学来构建，系统像人类一样处理自然语言。
- en: You can relate the aforementioned concept of NLP to the existing NLP products
    from the world's top tech companies, such as Google Assistant from Google, Siri
    speech assistance from Apple, and so on.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以将上述NLP的概念与世界顶尖科技公司现有的NLP产品相联系，比如谷歌的Google Assistant、苹果的Siri语音助手等。
- en: 'Now you will able to understand the definitions of NLP, which are as follows:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在你将能够理解NLP的定义，具体如下：
- en: Natural language processing is the ability of computational technologies and/or
    computational linguistics to process human natural language
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自然语言处理是计算技术和/或计算语言学处理人类自然语言的能力
- en: Natural language processing is a field of computer science, artificial intelligence,
    and computational linguistics concerned with the interactions between computers
    and human (natural) languages
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自然语言处理是计算机科学、人工智能和计算语言学领域的一个分支，涉及计算机与人类（自然）语言之间的交互。
- en: Natural language processing can be defined as the automatic (or semi-automatic)
    processing of human natural language
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自然语言处理可以定义为对人类自然语言进行自动（或半自动）处理。
- en: 'What are the other branches involved in building expert systems using, various
    concepts of NLP? *Figure 1.1* is the best way to know how many other branches
    are involved when you are building an expert system using NLP concepts:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用各种NLP概念构建专家系统时，还涉及哪些其他分支？*图 1.1* 是了解在构建使用NLP概念的专家系统时涉及多少其他分支的最佳方法：
- en: '![](img/45cd7530-00a5-4f6a-9e34-25cc31e1811c.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/45cd7530-00a5-4f6a-9e34-25cc31e1811c.png)'
- en: 'Figure 1.1: NLP concepts'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1：NLP 概念
- en: '*Figures 1.2* and *1.3* convey all the subtopics that are included in every
    branch given in *Figure 1.1*:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1.2* 和 *1.3* 传达了在 *图 1.1* 中提到的每个分支中包含的所有子主题：'
- en: '![](img/36f22ae9-c6d1-4edf-af64-bceb49590da1.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/36f22ae9-c6d1-4edf-af64-bceb49590da1.png)'
- en: 'Figure 1.2: Sub-branches of NLP concepts'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2：NLP 概念的子分支
- en: '*Figure 1.3* depicts the rest of the sub-branches:![](img/67409a23-5e50-454a-aa0e-3d1fe3a47d38.png)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1.3* 描述了其余的子分支：![](img/67409a23-5e50-454a-aa0e-3d1fe3a47d38.png)'
- en: 'Figure 1.3: Sub-branches of NLP concepts'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3：NLP 概念的子分支
- en: 'How can we build an intelligent system using concepts of NLP? *Figure 1.4*
    is the basic model, which indicates how an expert system can be built for NLP
    applications. The development life cycle is defined in the following figure:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如何利用NLP概念构建智能系统？*图 1.4* 是基本模型，指示如何为NLP应用程序构建专家系统的开发生命周期在下图中定义：
- en: '![](img/5198f031-ff81-4cfa-92c0-9ad50a032f2a.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5198f031-ff81-4cfa-92c0-9ad50a032f2a.png)'
- en: 'Figure 1.4: Development life cycle'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4：开发生命周期
- en: 'Let''s see some of the details of the development life cycle of NLP-related
    problems:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看与NLP相关问题的开发生命周期的一些细节：
- en: If you are solving an NLP problem, you first need to understand the problem
    statement.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您正在解决一个NLP问题，您首先需要理解问题陈述。
- en: Once you understand your problem statement, think about what kind of data or
    corpus you need to solve the problem. So, data collection is the basic activity
    toward solving the problem.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您理解了问题陈述，思考一下您需要解决问题所需的数据或语料库类型。因此，数据收集是解决问题的基本活动。
- en: After you have collected a sufficient amount of data, you can start analyzing
    your data. What is the quality and quantity of our corpus? According to the quality
    of the data and your problem statement, you need to do preprocessing.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在收集足够的数据后，您可以开始分析数据。我们的语料库的质量和数量如何？根据数据的质量和您的问题陈述，您需要进行预处理。
- en: Once you are done with preprocessing, you need to start with the process of
    feature engineering. Feature engineering is the most important aspect of NLP and
    data science related applications. We will be covering feature engineering related
    aspects in much more detail in [Chapter 5](07f71ca1-6c8a-492d-beb3-a47996e93f04.xhtml),
    *Feature Engineering and NLP Algorithms* and [Chapter 6](c4861b9e-2bcf-4fce-94d4-f1e2010831de.xhtml),
    *Advance Feature Engineering and NLP Algorithms.*
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您完成预处理，您需要开始进行特征工程的过程。特征工程是NLP和数据科学相关应用程序中最重要的方面。我们将在[第5章](07f71ca1-6c8a-492d-beb3-a47996e93f04.xhtml)，*特征工程和NLP算法*以及[第6章](c4861b9e-2bcf-4fce-94d4-f1e2010831de.xhtml)，*高级特征工程和NLP算法*中更详细地介绍与特征工程相关的方面。
- en: Having decided on and extracted features from the raw preprocessed data, you
    are to decide which computational technique is useful to solve your problem statement,
    for example, do you want to apply machine learning techniques or rule-based techniques?.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从原始预处理数据中选择和提取功能后，您需要决定哪些计算技术对解决您的问题陈述有用，例如，您是否想要应用机器学习技术或基于规则的技术？
- en: Now, depending on what techniques you are going to use, you should ready the
    feature files that you are going to provide as an input to your decided algorithm.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，根据您将使用的技术，应准备好要提供给所选择算法的特征文件。
- en: Run your logic, then generate the output.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行您的逻辑，然后生成输出。
- en: Test and evaluate your system's output.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试和评估您系统的输出。
- en: Tune the parameters for optimization, and continue till you get satisfactory
    results.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调整参数以进行优化，并继续直到获得满意的结果。
- en: We will be covering a lot of information very quickly in this chapter, so if
    you see something that doesn't immediately make sense, please do not feel lost
    and bear with me. We will explore all the details and examples from the next chapter
    onward, and that will definitely help you connect the dots.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将快速覆盖大量信息，如果您遇到不立即能理解的内容，请不要感到迷茫，耐心一点。我们将在下一章开始详细探讨所有细节和示例，这肯定会帮助您理清思路。
- en: Understanding basic applications
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解基础应用
- en: 'NLP is a sub-branch of AI. Concepts from NLP are used in the following expert
    systems:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 自然语言处理（NLP）是人工智能的一个子领域。NLP的概念被应用于以下专家系统：
- en: Speech recognition system
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语音识别系统
- en: Question answering system
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问答系统
- en: Translation from one specific language to another specific language
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一种特定语言翻译到另一种特定语言
- en: Text summarization
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本摘要
- en: Sentiment analysis
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 情感分析
- en: Template-based chatbots
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于模板的聊天机器人
- en: Text classification
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本分类
- en: Topic segmentation
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主题分割
- en: We will learn about most of the NLP concepts that are used in the preceding
    applications in the further chapters.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后续章节中学习大多数在前述应用中使用的NLP概念。
- en: Understanding advanced applications
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解高级应用
- en: 'Advanced applications include the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 高级应用包括以下内容：
- en: Human robots who understand natural language commands and interact with humans
    in natural language.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解自然语言指令并与人类进行自然语言互动的类人机器人
- en: Building a universal machine translation system is the long-term goal in the
    NLP domain because you could easily build a machine translation system which can
    convert one specific language to another specific language, but that system may
    not help you to translate other languages. With the help of deep learning, we
    can develop a universal machine translation system and Google recently announced
    that they are very close to achieving this goal. We will build our own machine
    translation system using deep learning in [Chapter 9](f414d38e-b88e-4239-88bd-2d90e5ce67ab.xhtml),
    *Deep Learning for NLP and NLG Problems.*
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个通用的机器翻译系统是NLP领域的长期目标，因为你可以很容易地建立一个将一种特定语言翻译成另一种特定语言的机器翻译系统，但这个系统可能无法帮助你翻译其他语言。借助深度学习，我们可以开发一个通用的机器翻译系统，谷歌最近宣布他们离实现这一目标非常接近。我们将在[第9章](f414d38e-b88e-4239-88bd-2d90e5ce67ab.xhtml)中使用深度学习构建自己的机器翻译系统，*深度学习在NLP和NLG问题中的应用。*
- en: The NLP system, which generates the logical title for the given document is
    one of the advance applications. Also, with the help of deep learning, you can
    generate the title of document and perform summarization on top of that. This
    kind of application, you will see in [Chapter 9](f414d38e-b88e-4239-88bd-2d90e5ce67ab.xhtml),
    *Deep Learning for NLP and NLG Problems.*
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NLP系统是生成给定文档逻辑标题的高级应用之一。此外，借助深度学习，您还可以生成文档标题并进行摘要处理。您将在[第9章](f414d38e-b88e-4239-88bd-2d90e5ce67ab.xhtml)中看到这种应用，*深度学习在NLP和NLG问题中的应用。*
- en: The NLP system, which generates text for specific topics or for an image is
    also considered an advanced NLP application.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NLP系统，用于生成特定主题或图像的文本，也被认为是一个高级NLP应用。
- en: Advanced chatbots, which generate personalized text for humans and ignore mistakes
    in human writing is also a goal we are trying to achieve.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级聊天机器人，能够为人类生成个性化文本并忽略人类写作中的错误，也是我们力图实现的目标。
- en: There are many other NLP applications, which you can see in **Figure 1.5:**
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有许多其他NLP应用，您可以在**图1.5：**中看到：
- en: '![](img/0d9656d2-a8c1-4c85-b16e-ae96df254fa6.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0d9656d2-a8c1-4c85-b16e-ae96df254fa6.png)'
- en: 'Figure 1.5: Applications In NLP domain'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5：NLP领域的应用
- en: Advantages of togetherness - NLP and Python
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 团结的优势 - NLP与Python
- en: 'The following points illustrate why Python is one of the best options to build
    an NLP-based expert system:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下几点说明了为什么Python是构建基于NLP的专家系统的最佳选择之一：
- en: Developing prototypes for the NLP-based expert system using Python is very easy
    and efficient
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Python开发基于NLP的专家系统原型非常简单且高效
- en: A large variety of open source NLP libraries are available for Python programmers
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有许多开源的NLP库可以供Python程序员使用。
- en: Community support is very strong
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社区支持非常强大
- en: Easy to use and less complex for beginners
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于使用，适合初学者，且复杂度低
- en: 'Rapid development: testing, and evaluation are easy and less complex'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速发展：测试和评估简便且不复杂
- en: Many of the new frameworks, such as Apache Spark, Apache Flink, TensorFlow,
    and so on, provide API for Python
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多新的框架，如 Apache Spark、Apache Flink、TensorFlow 等，都提供了 Python 的 API。
- en: Optimization of the NLP-based system is less complex compared to other programming
    paradigms
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 NLP 的系统优化比其他编程范式更为简单。
- en: Environment setup for NLTK
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NLTK 环境设置
- en: I would like to suggest to all my readers that they pull the `NLPython` repository
    on GitHub. The repository URL is [https://github.com/jalajthanaki/NLPython](https://github.com/jalajthanaki/NLPython)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议所有读者从 GitHub 拉取`NLPython`仓库。仓库的 URL 是 [https://github.com/jalajthanaki/NLPython](https://github.com/jalajthanaki/NLPython)
- en: I'm using Linux (Ubuntu) as the operating system, so if you are not familiar
    with Linux, it's better for you to make yourself comfortable with it, because
    most of the advanced frameworks, such as Apache Hadoop, Apache Spark, Apache Flink,
    Google TensorFlow, and so on, require a Linux operating system.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用的是 Linux（Ubuntu）操作系统，所以如果你不熟悉 Linux，最好先熟悉它，因为大多数高级框架，如 Apache Hadoop、Apache
    Spark、Apache Flink、Google TensorFlow 等，都需要 Linux 操作系统。
- en: The GitHub repository contains instructions on how to install Linux, as well
    as basic Linux commands which we will use throughout this book. On GitHub, you
    can also find basic commands for GitHub if you are new to Git as well. The URL
    is [https://github.com/jalajthanaki/NLPython/tree/master/ch1/documentation](https://github.com/jalajthanaki/NLPython/tree/master/ch1/documentation)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 仓库包含了如何安装 Linux 的说明，以及本书中将使用的基本 Linux 命令。如果你是 Git 新手，在 GitHub 上也能找到有关
    Git 的基础命令。URL 是 [https://github.com/jalajthanaki/NLPython/tree/master/ch1/documentation](https://github.com/jalajthanaki/NLPython/tree/master/ch1/documentation)
- en: I'm providing an installation guide for readers to set up the environment for
    these chapters. The URL is [https://github.com/jalajthanaki/NLPython/tree/master/ch1/installation_guide](https://github.com/jalajthanaki/NLPython/tree/master/ch1/installation_guide)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我为读者提供了一个安装指南，用于设置本书章节的环境。URL 是 [https://github.com/jalajthanaki/NLPython/tree/master/ch1/installation_guide](https://github.com/jalajthanaki/NLPython/tree/master/ch1/installation_guide)
- en: 'Steps for installing nltk are as follows (or you can follow the URL: [https://github.com/jalajthanaki/NLPython/blob/master/ch1/installation_guide/NLTK%2BSetup.md](https://github.com/jalajthanaki/NLPython/blob/master/ch1/installation_guide/NLTK%2BSetup.md)):'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '安装 nltk 的步骤如下（或者你可以访问 URL: [https://github.com/jalajthanaki/NLPython/blob/master/ch1/installation_guide/NLTK%2BSetup.md](https://github.com/jalajthanaki/NLPython/blob/master/ch1/installation_guide/NLTK%2BSetup.md)）：'
- en: Install Python 2.7.x manually, but on Linux Ubuntu 14.04, it has already been
    installed; otherwise, you can check your Python version using the `python -V`
    command.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 手动安装 Python 2.7.x，但在 Linux Ubuntu 14.04 上已经预装；如果没有安装，可以使用 `python -V` 命令检查你的
    Python 版本。
- en: Configure pip for installing Python libraries ([https://github.com/jalajthanaki/NLPython/blob/master/ch1/installation_guide/NLTK%2BSetup.md](https://github.com/jalajthanaki/NLPython/blob/master/ch1/installation_guide/NLTK%2BSetup.md)).
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置 pip 以安装 Python 库 ([https://github.com/jalajthanaki/NLPython/blob/master/ch1/installation_guide/NLTK%2BSetup.md](https://github.com/jalajthanaki/NLPython/blob/master/ch1/installation_guide/NLTK%2BSetup.md))。
- en: 'Open the terminal, and execute the following command:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端，执行以下命令：
- en: '[PRE0]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Open the terminal, and execute the `python` command.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端，执行 `python` 命令。
- en: Inside the Python shell, execute the `import nltk` command.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Python shell 中，执行 `import nltk` 命令。
- en: If your `nltk` module is successfully installed on your system, the system will
    not throw any messages.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的 `nltk` 模块已成功安装，系统不会显示任何信息。
- en: Inside the Python shell, execute the `nltk.download()` command.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Python shell 中，执行 `nltk.download()` 命令。
- en: 'This will open an additional dialog window, where you can choose specific libraries,
    but in our case, click on All packages, and you can choose the path where the
    packages reside. Wait till all the packages are downloaded. It may take a long
    time to download. After completion of the download, you can find the folder named
    `nltk_data` at the path specified by you earlier. Take a look at the NLTK Downloader
    in the following screenshot:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开一个额外的对话框，你可以选择特定的库，但在我们的情况下，点击 "All packages"（所有包），然后可以选择包存放的路径。等待所有包下载完成。下载可能会花费较长时间。下载完成后，你可以在之前指定的路径下找到名为
    `nltk_data` 的文件夹。请查看以下截图中的 NLTK 下载器：
- en: '![](img/af8a53d9-a5bd-43e9-adb9-3be662d437bd.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/af8a53d9-a5bd-43e9-adb9-3be662d437bd.png)'
- en: 'Figure 1.6: NLTK Downloader'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6：NLTK 下载器
- en: This repository contains an installation guide, codes, wiki page, and so on.
    If readers have questions and queries, they can post their queries on the Gitter
    group. The Gitter group URL is [https://gitter.im/NLPython/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link](https://gitter.im/NLPython/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这个仓库包含了安装指南、代码、维基页面等。如果读者有问题或疑问，可以在 Gitter 群组中发布自己的问题。Gitter 群组的 URL 是 [https://gitter.im/NLPython/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link](https://gitter.im/NLPython/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link)
- en: Tips for readers
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 给读者的建议
- en: This book is a practical guide. As an industry professional, I strongly recommend
    all my readers replicate the code that is already available on GitHub and perform
    the exercises given in the book. This will improve your understanding of NLP concepts.
    Without performing the practicals, it will be nearly impossible for you to get
    all the NLP concepts thoroughly. By the way, I promise that it will be fun to
    implement them.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是一本实用指南。作为一名行业专业人士，我强烈建议所有读者复制已经在 GitHub 上提供的代码，并进行书中给出的练习。这将帮助你加深对 NLP 概念的理解。如果不进行这些实践，你几乎不可能彻底掌握所有的
    NLP 概念。顺便说一下，我保证实现这些代码会很有趣。
- en: 'The flow of upcoming chapters is as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的章节流程如下：
- en: Explanation of the concepts
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概念的解释
- en: Application of the concepts
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概念的应用
- en: Needs of the concepts
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概念的需求
- en: Possible ways to implement the concepts (code is on GitHub)
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现这些概念的可能方式（代码在 GitHub 上）
- en: Challenges of the concepts
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概念的挑战
- en: Tips to overcome challenges
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 克服挑战的小贴士
- en: Exercises
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 练习
- en: Summary
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter gave you an introduction to NLP. You now have a brief idea about
    what kind of branches are involved in NLP and the various stages for building
    an expert system using NLP concepts. Lastly, we set up the environment for NLTK.
    All the installation guidelines and codes are available on GitHub.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 本章为你介绍了 NLP。你现在对 NLP 涉及的分支以及使用 NLP 概念构建专家系统的各个阶段有了一个简要了解。最后，我们为 NLTK 设置了环境。所有安装指南和代码都可以在
    GitHub 上找到。
- en: In the next chapter, we will see what kind of corpus is used on NLP-related
    applications and what all the critical points we should keep in mind are when
    we analyze a corpus. We will deal with the different types of file formats and
    datasets. Let's explore this together!
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到 NLP 相关应用中使用了什么样的语料库，以及在分析语料库时需要牢记的所有关键点。我们将处理不同类型的文件格式和数据集。让我们一起探索吧！
