- en: '*Chapter 2*: Using the Editor UI to Create Workflows'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第二章*：使用编辑器 UI 创建工作流程'
- en: In this chapter, you will learn how to use n8n's **Editor UI**. This will help
    you find the different functionalities of n8n. You will also learn about the different
    kinds of nodes in n8n and how to use them. You will then learn about building
    workflows and dealing with dynamic data to handle different kinds of scenarios.
    You will finally create your first workflow in n8n.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何使用 n8n 的 **编辑器 UI**。这将帮助您找到 n8n 的不同功能。您还将了解 n8n 中不同类型的节点以及如何使用它们。然后，您将学习如何构建工作流程以及处理动态数据以应对不同场景。最后，您将在
    n8n 中创建您的第一个工作流程。
- en: 'This chapter will cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要主题：
- en: Introduction to the Editor UI
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑器 UI 简介
- en: Exploring the regular and trigger nodes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索常规和触发节点
- en: Expressions – using dynamic data
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表达式 – 使用动态数据
- en: Workflows – putting it all together
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作流程 – 整合一切
- en: Creating your first workflow – Hello World
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建您的第一个工作流程 – Hello World
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This is a list of technical requirements to prepare before continuing with
    the chapter:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续本章之前，请准备以下技术要求列表：
- en: Have n8n installed.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保 n8n 已安装。
- en: Ensure n8n is running and the Editor UI is open.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保 n8n 正在运行且编辑器 UI 已打开。
- en: Create an account on Telegram.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Telegram 上创建一个账户。
- en: Introduction to the Editor UI
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编辑器 UI 简介
- en: 'The Editor UI is a graphical interface that allows you to create automations
    using a node-based approach. n8n takes its inspiration for node-based visualization
    from the film and television industry, where many tools have a node-based system.
    Let''s take a look at what we have here:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑器 UI 是一个图形界面，允许您使用基于节点的方案创建自动化。n8n 从电影和电视行业汲取了基于节点的可视化的灵感，在该行业中，许多工具都拥有基于节点的系统。让我们看看我们这里有什么：
- en: '![Figure 2.1 – The Editor UI in n8n'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.1 – n8n 中的编辑器 UI'
- en: '](img/Figure_2.01_B17493.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.01_B17493.jpg)'
- en: Figure 2.1 – The Editor UI in n8n
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – n8n 中的编辑器 UI
- en: Let's start from the top left. You can expand the menu by clicking on the **>**
    button beneath the n8n logo.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从左上角开始。您可以通过点击 n8n 标志下方的 **>** 按钮来展开菜单。
- en: For now, we'll get ourselves familiar with the interface so that we can quickly
    find our way through n8n. We'll dive deeper into specific sections, such as **Executions**,
    as we progress through the chapters in this book. Let's take a look at the menu
    bar on the left.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们将熟悉界面，以便我们可以在 n8n 中快速找到我们的位置。随着我们在本书的章节中前进，我们将更深入地探讨特定部分，例如 **执行**。让我们看看左侧的菜单栏。
- en: 'First of all, we have the **Workflows** menu. In the menu, we have the following
    options:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们有 **工作流程** 菜单。在菜单中，我们有以下选项：
- en: '**New**: Create a new workflow.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**新建**：创建新的工作流程。'
- en: '**Open**: Open an existing workflow.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**打开**：打开现有的工作流程。'
- en: '**Save**: Save changes to the current workflow.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存**：保存当前工作流程的更改。'
- en: '**Save As**: Save the current workflow.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**另存为**：保存当前工作流程。'
- en: '**Rename**: Rename the current workflow.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重命名**：重命名当前工作流程。'
- en: '**Delete**: Delete the current workflow.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**删除**：删除当前工作流程。'
- en: '**Download**: Download the workflow as a JSON file.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**下载**：将工作流程作为 JSON 文件下载。'
- en: '**Import from URL**: Import a workflow from a URL.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从 URL 导入**：从 URL 导入工作流程。'
- en: '**Import from File**: Import a workflow from a JSON file.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从文件导入**：从 JSON 文件导入工作流程。'
- en: '**Settings**: Configure the settings for the current workflow.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置**：配置当前工作流程的设置。'
- en: Please note that some of these options will be grayed out since we haven't saved
    the workflow.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于我们尚未保存工作流程，其中一些选项将被灰色显示。
- en: 'Next, we have the **Credentials** menu. In this menu, we have two options:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有 **凭据** 菜单。在这个菜单中，我们有以下两个选项：
- en: '**New**: Create a new credential.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**新建**：创建新的凭据。'
- en: '**Open**: Open an existing credential.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**打开**：打开现有的凭据。'
- en: n8n allows you to connect to many different applications, services, and APIs.
    A lot of these require credentials to authenticate yourself. n8n enables you to
    encrypt and save these credentials in its database so that they can be quickly
    reused when building workflows.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: n8n 允许您连接到许多不同的应用程序、服务和 API。其中许多需要凭据进行身份验证。n8n 允许您在数据库中加密并保存这些凭据，以便在构建工作流程时可以快速重用。
- en: Next up, we have the **Executions** tab, which opens up a modal (popup) where
    you can view the executions of your different workflows. You can also filter the
    executions by their name and status.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有 **执行** 选项卡，它打开一个模态（弹出窗口），您可以在其中查看不同工作流程的执行情况。您还可以通过名称和状态过滤执行。
- en: 'Finally, we have the **Help** tab, which lists resources that will be useful
    for you:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们有**帮助**标签，其中列出了对您有用的资源：
- en: '**Documentation**: A link to the n8n docs. The n8n docs contain detailed information
    on each node, example workflows, and references.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：一个链接到n8n文档的链接。n8n文档包含每个节点的详细信息、示例工作流程和参考。'
- en: '**Forum**: n8n has a very active and friendly community. If you get stuck on
    anything, feel free to drop a question there and someone will help you resolve
    it.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**论坛**：n8n有一个非常活跃和友好的社区。如果您在任何事情上遇到困难，请随时在那里提出问题，有人会帮助您解决问题。'
- en: '**Workflows**: This page lists workflows that have been submitted by the community.
    It''s a great place to gain some inspiration for your next automation.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作流程**：此页面列出了社区提交的工作流程。这是一个获得您下一个自动化灵感的绝佳地方。'
- en: '**About n8n**: This option opens up a modal with details about n8n''s version,
    a link to the GitHub repository, and the license.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**关于n8n**：此选项打开一个模态窗口，其中包含有关n8n版本、GitHub存储库链接和许可证的详细信息。'
- en: At the bottom left, you'll see options to zoom in and out of the canvas. The
    canvas is the grid of boxes in the Editor UI where you'll be adding the nodes
    to create workflows. You'll also notice that all new n8n workflows have a **Start**
    node.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在左下角，您会看到放大和缩小画布的选项。画布是编辑器UI中的网格框，您将在其中添加节点以创建工作流程。您还会注意到所有新的n8n工作流程都有一个**开始**节点。
- en: 'At the bottom center of the Editor UI, you''ll notice a button labeled **Execute
    Workflow**. This is useful for manually executing the workflows that you have
    created in n8n. Workflows can run in two ways:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑器UI的底部中央，您会注意到一个标有**执行工作流程**按钮。这对于手动执行您在n8n中创建的工作流程非常有用。工作流程可以以两种方式运行：
- en: '**Manual executions**: These are useful for testing your workflows while you
    are building them or for one-off executions. An example of one-off execution can
    be a workflow that migrates all the data from a CSV file to Google Sheets. You
    can manually execute a workflow by clicking on the **Execute Workflow** button.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**手动执行**：这些在您构建工作流程或进行一次性执行时非常有用。一次性执行的例子可以是迁移CSV文件中的所有数据到Google Sheets的工作流程。您可以通过点击**执行工作流程**按钮手动执行工作流程。'
- en: '**Automated executions**: Once your automations are ready, most of the time,
    you''d want them to run at regular intervals or when a specific event occurs.
    For this to happen, you''ll need to activate a workflow. You can do so by clicking
    on the **Active** button at the top left, which will change the state of the toggle
    from inactive to active. Please note that you''ll need to first save the workflow
    before being able to activate it.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动执行**：一旦您的自动化准备就绪，大多数情况下，您希望它们在常规间隔或特定事件发生时运行。为了实现这一点，您需要激活一个工作流程。您可以通过点击左上角的**激活**按钮来这样做，这将改变切换的状态从非活动状态变为活动状态。请注意，您需要首先保存工作流程，然后才能激活它。'
- en: 'Finally, we have the **+** button on the right side of the Editor UI. Clicking
    on it will reveal the **Nodes** panel. You can use this to add new nodes to the
    canvas and build out your workflow. You''ll notice that it has three categories:
    **All**, **Regular**, and **Trigger**. Let''s learn a bit more about nodes in
    n8n to understand what these sections mean.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们在编辑器UI的右侧有一个**+**按钮。点击它将显示**节点**面板。您可以使用它向画布添加新节点并构建工作流程。您会注意到它有三个类别：**所有**、**常规**和**触发器**。让我们更深入地了解n8n中的节点，以了解这些部分的意义。
- en: Exploring the regular and trigger nodes
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索常规和触发节点
- en: Nodes are the building blocks of workflows in n8n. Nodes can connect to applications,
    services, and APIs, and do anything that is possible with Node.js in general.
    Each node performs tasks based on its design. Upon completion, the data is passed
    on to the next node. This data is the result of the work performed by the configured
    task in the previous node.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 节点是n8n中工作流程的构建块。节点可以连接到应用程序、服务和API，并执行Node.js中一般可能执行的所有操作。每个节点根据其设计执行任务。完成后，数据将传递到下一个节点。这是上一个节点配置的任务执行的结果。
- en: Each node has an input (left) side and an output (right) side. If a node's output
    connects to a second node's input, the second node receives the outcome of the
    first node as its input.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 每个节点都有一个输入（左侧）和一个输出（右侧）。如果一个节点的输出连接到第二个节点的输入，则第二个节点将接收第一个节点的结果作为其输入。
- en: Note
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: We will cover specific nodes in greater detail later on in the book.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本书的后面部分更详细地介绍特定节点。
- en: 'From an abstract point of view, there are two types of nodes in n8n:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 从抽象的角度来看，n8n中有两种类型的节点：
- en: '**Regular nodes**: Regular nodes are useful for things such as handling **Create,
    Read, Update, and Delete** (**CRUD**) operations with applications and APIs, transforming
    data, and pulling information from the internet. Some examples of regular nodes
    include the following:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**常规节点**：常规节点对于处理**创建、读取、更新和删除**（**CRUD**）操作、转换数据和从互联网获取信息等事物非常有用。以下是一些常规节点的示例：'
- en: '**Airtable node**: It can read, add, update, and delete data from an Airtable
    table.'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Airtable节点**：它可以读取、添加、更新和删除Airtable表中的数据。'
- en: '**Function node**: It can execute JavaScript code, most often to manipulate
    workflow data.'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**函数节点**：它可以执行JavaScript代码，通常用于操作工作流数据。'
- en: '**Bubble node**: This node allows you to create, delete, update, and get objects
    from Bubble.'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Bubble节点**：此节点允许您创建、删除、更新和从Bubble获取对象。'
- en: 'You can find the whole list of regular nodes in the latest version of n8n by
    heading over to the **Apps & nodes** page of the n8n website ([https://n8n.io/integrations](https://n8n.io/integrations))
    and clicking on the **Regular** tab (see *Figure 2.2*):'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过访问n8n网站的**应用与节点**页面（[https://n8n.io/integrations](https://n8n.io/integrations)）并点击**常规**选项卡来找到最新版本的n8n中的整个常规节点列表（见*Figure
    2.2*）：
- en: '![Figure 2.2 – Some of the regular nodes that n8n comes with'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.2 – n8n附带的一些常规节点'
- en: '](img/Figure_2.02_B17493.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.02 – B17493.jpg](img/Figure_2.02_B17493.jpg)'
- en: Figure 2.2 – Some of the regular nodes that n8n comes with
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.2 – n8n附带的一些常规节点
- en: '**Trigger nodes**: Trigger nodes start the execution of a workflow. These nodes
    can start a workflow based on events such as time-based intervals or events from
    external systems. You need a trigger node in a workflow if you want it to execute
    automatically. You cannot activate workflows unless they have a trigger node.
    A couple of examples of trigger nodes include the following:'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**触发节点**：触发节点启动工作流的执行。这些节点可以根据基于时间间隔或来自外部系统的事件启动工作流。如果您想使工作流自动执行，则需要一个触发节点。除非有触发节点，否则无法激活工作流。以下是一些触发节点的示例：'
- en: '**Cron node**: This node can be configured to activate a workflow every minute
    or every hour, or specify using custom Cron expressions.'
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cron节点**：此节点可以配置为每分钟或每小时激活一次工作流，或使用自定义Cron表达式指定。'
- en: '**Telegram trigger node**: This node can be configured to activate a workflow
    every time a Telegram bot receives a message.'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Telegram触发节点**：此节点可以配置为每次Telegram机器人收到消息时激活工作流。'
- en: 'You can also find an exhaustive list of trigger nodes on n8n''s **Apps & nodes**
    page by clicking on the **Trigger** tab (see *Figure 2.3*):'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以通过点击**触发**选项卡（见*Figure 2.3*）来在n8n的**应用与节点**页面上找到触发节点的详尽列表：
- en: '![Figure 2.3 – Some of the trigger nodes that n8n comes with'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.3 – n8n附带的一些触发节点'
- en: '](img/Figure_2.03_B17493.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.03 – B17493.jpg](img/Figure_2.03_B17493.jpg)'
- en: Figure 2.3 – Some of the trigger nodes that n8n comes with
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.3 – n8n附带的一些触发节点
- en: 'Some of the nodes in n8n are referred to as core nodes. As of the time of writing,
    there isn''t a distinction in the Editor UI for these nodes. Core nodes could
    be both regular or trigger nodes. These are nodes that are more general purpose,
    such as the following:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: n8n中的一些节点被称为核心节点。截至写作时，在编辑器UI中这些节点没有区别。核心节点可以是常规节点或触发节点。这些节点是更通用的，例如以下：
- en: '**Webhook node**: Can be used to receive webhook responses'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Webhook节点**：可用于接收Webhook响应'
- en: '**Function node**: Can be used to manipulate workflow data'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**函数节点**：可用于操作工作流数据'
- en: '**Cron node**: Can be used to trigger workflows at specific intervals'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cron节点**：可用于在特定间隔触发工作流'
- en: '**HTTP Request node**: Can be used to make HTTP requests to a web page or an
    API endpoint'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTTP请求节点**：可用于向网页或API端点发送HTTP请求'
- en: 'We''ll dive deeper into the core nodes in n8n in [*Chapter 3*](B17493_03_Final_PD_ePub.xhtml#_idTextAnchor039),
    *Diving into Core Nodes and Data in n8n.* To put this concept to practice, follow
    these steps:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第3章*](B17493_03_Final_PD_ePub.xhtml#_idTextAnchor039)中深入了解n8n的核心节点，*深入n8n的核心节点和数据*。为了将这个概念付诸实践，请按照以下步骤操作：
- en: Let's go back to the Editor UI. First of all, click on the **Start** node so
    that it's highlighted. Doing this ensures that the new node that you add to the
    canvas will automatically connect to the highlighted node.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们回到编辑器UI。首先，点击**起始**节点以便它被突出显示。这样做可以确保您添加到画布上的新节点将自动连接到突出显示的节点。
- en: '![Figure 2.4 – Highlighting the Start node by clicking on it'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.4 – 通过点击它来突出显示起始节点'
- en: '](img/Figure_2.04_B17493.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.04 – B17493.jpg](img/Figure_2.04_B17493.jpg)'
- en: Figure 2.4 – Highlighting the Start node by clicking on it
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.4 – 通过点击它来突出显示起始节点
- en: If you didn't do that, no worries. You can always connect two disconnected nodes
    by clicking on the circle in front of the node and dragging it to the rectangle
    of the next node.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有这样做，不用担心。您始终可以通过点击节点前面的圆圈并将其拖动到下一个节点的矩形中来连接两个未连接的节点。
- en: Let's add a node to the canvas by clicking on the **+** button in the Editor
    UI.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击编辑器UI中的**+**按钮，我们可以向画布添加一个节点。
- en: Type `Hacker News` into the **Nodes** panel and select the **Hacker News** node.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**节点**面板中输入“Hacker News”并选择**Hacker News**节点。
- en: Clicking on the node will add it to the canvas and open the node to be configured.
    Select **All** for the **Resource** field and click on the **Execute Node** button
    at the top right of the node panel.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击节点会将它添加到画布上，并打开要配置的节点。对于**资源**字段选择**所有**，然后在节点面板右上角点击**执行节点**按钮。
- en: '![Figure 2.5 – Output of the Hacker News node'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.5 – Hacker News节点的输出'
- en: '](img/Figure_2.05_B17493.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.05_B17493.jpg)'
- en: Figure 2.5 – Output of the Hacker News node
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5 – Hacker News节点的输出
- en: You will notice that the node returns 100 news articles from Hacker News. It
    produces a variety of information for each news item. Let's take a few minutes
    to understand what we have in the node panel.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到该节点从Hacker News返回100篇新闻文章。它为每个新闻条目产生各种信息。让我们花几分钟时间了解节点面板中的内容。
- en: Clicking on any node in n8n will open up the node details view, which allows
    you to configure the node, execute it, and look at the data that was either received
    or generated by it.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 点击n8n中的任何节点都会打开节点详细信息视图，允许您配置节点、执行它并查看它接收或生成的数据。
- en: Let's start with the top left of the node panel. It says `Get news` for now.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从节点面板的左上角开始。现在它写着“获取新闻”。
- en: 'Under the name of the node, we have two tabs:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在节点名称下方，我们有两个选项卡：
- en: '**Parameters**: This tab contains parameters to configure the task. Most of
    the nodes have the **Resource** and **Operation** fields. They are a way to bundle
    together the wide variety of functionalities offered by the various applications
    and APIs.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**参数**：此选项卡包含配置任务的参数。大多数节点都有**资源**和**操作**字段。它们是将各种应用程序和API提供的广泛功能捆绑在一起的方式。'
- en: To understand this better, let's take the example of a CRM where you can store
    the data of individuals and companies. In n8n, a node for this CRM would have
    **People** and **Company** as resources. For each of the resources, it might then
    have create, read, update, and delete as the operations.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解这一点，让我们以CRM为例，您可以在其中存储个人和公司的数据。在n8n中，此CRM的节点将**人员**和**公司**作为资源。对于每个资源，它可能随后有创建、读取、更新和删除作为操作。
- en: Underneath these two fields, you would have the fields that are required, for
    example, **Name**. Like the last name, any optional fields are always bundled
    together under the **Additional Fields** section, which keeps the UI uncluttered.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两个字段下方，您将看到所需的字段，例如**名称**。像姓氏一样，任何可选字段总是捆绑在**附加字段**部分下，这有助于保持UI整洁。
- en: '**Settings**: This tab contains a couple of options, such as adding notes,
    and a couple of other settings that we''ll cover later on in the book as they
    become relevant.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置**：此选项卡包含一些选项，例如添加备注，以及一些我们将在本书稍后讨论的其他设置，因为它们变得相关。'
- en: 'In the top middle of the node panel, you will see two tabs:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在节点面板的顶部中间，您将看到两个选项卡：
- en: '**JSON**: Clicking on this tab will showcase the data received from **Hacker
    News** in JSON format.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JSON**：点击此选项卡将展示从**Hacker News**接收的JSON格式的数据。'
- en: '![Figure 2.6 – Viewing the output by clicking on the JSON tab'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.6 – 通过点击JSON选项卡查看输出'
- en: '](img/Figure_2.06_B17493.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.06_B17493.jpg)'
- en: Figure 2.6 – Viewing the output by clicking on the JSON tab
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6 – 通过点击JSON选项卡查看输出
- en: '**Table**: The table view is the default view for displaying data in n8n.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表格**：表格视图是n8n显示数据的默认视图。'
- en: At the top right of the panel, you'll see the **Execute Node** button. This
    button enables you to execute this specific node manually without re-triggering
    the entire workflow or executing the following nodes in the workflow. This is
    very useful for testing the workflows while building them step by step. We then
    have an **X** button next to it. You can click on it to go back to the canvas
    in the Editor UI.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在面板的右上角，您会看到**执行节点**按钮。此按钮允许您手动执行此特定节点，而无需重新触发整个工作流或执行工作流中的后续节点。这在逐步构建工作流时测试工作流非常有用。然后，我们旁边有一个**X**按钮。您可以点击它返回到编辑器UI中的画布。
- en: Finally, at the bottom of the node panel, you'll see a link to the node's documentation
    that you have opened up. Click on it to reach the node documentation, which contains
    example workflows with that node along with some FAQs.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在节点面板的底部，你会看到一个链接到你打开的节点文档。点击它以访问节点文档，其中包含带有该节点的示例工作流和一些常见问题解答。
- en: When working with nodes, you will often need to reference data between nodes.
    This data would usually be dynamic. For example, weather data might change every
    hour. Let's learn about how we can reference dynamic data in n8n using expressions.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 当与节点一起工作时，你通常会需要在节点之间引用数据。这些数据通常是动态的。例如，天气数据可能每小时都会变化。让我们了解如何使用表达式在n8n中引用动态数据。
- en: Expressions – using dynamic data
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表达式 – 使用动态数据
- en: 'Consider this scenario: you only want the name of the news article and the
    URL as part of your workflow data because the rest of the data returned by the
    Hacker News node is irrelevant to you. We can filter out the workflow data in
    a couple of ways, but we''ll use the **Set** node here. The **Set** node is one
    of the code nodes in n8n that helps you to configure workflow data To create a
    Set node for the aforementioned scenario, follow these steps:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下场景：你只想将新闻文章的名称和URL作为工作流数据的一部分，因为Hacker News节点返回的其他数据对你来说无关紧要。我们可以以几种方式过滤工作流数据，但在这里我们将使用**Set**节点。**Set**节点是n8n中的代码节点之一，可以帮助你配置工作流数据。为了创建上述场景的Set节点，请按照以下步骤操作：
- en: Add the **Set** node to the canvas and connect it to the **Get news** node.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Set**节点添加到画布中，并将其连接到**获取新闻**节点。
- en: '![Figure 2.7 – Adding the Set node to the Hacker News node'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.7 – 将Set节点添加到Hacker News节点'
- en: '](img/Figure_2.07_B17493.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.07_B17493.jpg)'
- en: Figure 2.7 – Adding the Set node to the Hacker News node
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7 – 将Set节点添加到Hacker News节点
- en: Now, open the **Set** node by double-clicking on it. Toggle the **Keep Only
    Set** field to true (green). It removes all incoming workflow data and only appends
    the new values configured in the **Set** node.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过双击打开**Set**节点。将**仅保留集合**字段切换为true（绿色）。这将移除所有传入的工作流数据，并仅追加在**Set**节点中配置的新值。
- en: 'Click on the **Add Value** button and select **String**. You''ll notice that
    we now have two fields: **Name** and **Value**. These two fields design the JSON
    data structure.'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加值**按钮并选择**字符串**。你会注意到我们现在有两个字段：**名称**和**值**。这两个字段设计JSON数据结构。
- en: Delete `propertyName` from the `Title`.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**标题**中删除`propertyName`。
- en: Now, the value of the title will be different each time the node iterates over
    the 100 items that it will receive from the previous node. It is also possible
    that those 100 values will be completely different as new articles appear on Hacker
    News and so on.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，标题的值将在节点每次迭代前一个节点接收到的100个项目时都不同。也有可能这100个值会完全不同，因为新的文章出现在Hacker News等地方。
- en: Because of that, the **Value** field needs to be dynamic since the value keeps
    changing. You can achieve this in n8n using expressions.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个原因，**值**字段需要是动态的，因为值会不断变化。你可以在n8n中使用表达式来实现这一点。
- en: To add an expression to a field, click on the gears icon next to the field and
    click on **Add Expression**. Perform this step with the **Value** field. These
    actions will open up the Expression Editor.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要向字段添加表达式，点击字段旁边的齿轮图标，然后点击**添加表达式**。使用**值**字段执行此步骤。这些操作将打开表达式编辑器。
- en: 'On the left-hand side, you''ll notice the **Variable Selector** section. Click
    on the current node and go through the nesting to find the title. It should look
    like this:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧，你会注意到**变量选择器**部分。点击当前节点，通过嵌套找到标题。它应该看起来像这样：
- en: '![Figure 2.8 – Selecting the title of a post using the Expression Editor in
    n8n'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.8 – 使用n8n中的表达式编辑器选择帖子的标题'
- en: '](img/Figure_2.08_B17493.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.08_B17493.jpg)'
- en: Figure 2.8 – Selecting the title of a post using the Expression Editor in n8n
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.8 – 使用n8n中的表达式编辑器选择帖子的标题
- en: 'If the data does not show up for you, check the following:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据没有显示出来，请检查以下内容：
- en: This node and the previous node are connected.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此节点与上一个节点相连。
- en: The previous node has been executed.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前一个节点已经执行。
- en: We'll perform the same steps for the URL and then click on the **Execute Node**
    button for the **Set** node.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将对URL执行相同的步骤，然后点击**Set**节点的**执行节点**按钮。
- en: '![Figure 2.9 – Output of the Set node'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.9 – Set节点的输出'
- en: '](img/Figure_2.09_B17493.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.09_B17493.jpg)'
- en: Figure 2.9 – Output of the Set node
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.9 – Set节点的输出
- en: We now have only the relevant data that we wanted in the workflow, thanks to
    the **Set** node and expressions.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 多亏了**Set**节点和表达式，我们现在只在工作流中有了我们想要的相关数据。
- en: Expressions are a powerful feature in n8n. You can use them to reference data
    from the workflow, other nodes, the environment, and even self-generated data.
    Let's say we want to add a random ID to each of the news articles. Add a numerical
    value in the `ID` as the name, and click on **Add Expression** for the **Value**
    field.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 表达式是n8n中的一个强大功能。你可以使用它们来引用工作流中的数据、其他节点、环境，甚至自生成数据。假设我们想在每篇新闻文章中添加一个随机ID。在`ID`中添加一个数值作为名称，然后点击**值**字段的**添加表达式**。
- en: 'Delete the `0` and enter the following: `{{ Math.floor(Math.random() *1000)
    }}`.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 删除`0`并输入以下内容：`{{ Math.floor(Math.random() *1000) }}`。
- en: 'Expressions can execute JavaScript between double curly braces, and here we''ve
    used it to generate three-digit random numbers. Let''s say that we want the IDs
    to be prefixed by `ID_`. Edit the expression so that it looks like this: `ID_{{
    Math.floor(Math.random() *1000) }}`. Click on the **Execute Node** button to see
    the result.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 表达式可以在双大括号之间执行JavaScript，在这里我们用它来生成三位随机数。假设我们希望ID以`ID_`开头。编辑表达式，使其看起来像这样：`ID_{{
    Math.floor(Math.random() *1000) }}`。点击**执行节点**按钮查看结果。
- en: '![Figure 2.10 – Output of the Set node after adding the ID'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.10 – 添加ID后的Set节点输出'
- en: '](img/Figure_2.10_B17493.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.10_B17493.jpg)'
- en: Figure 2.10 – Output of the Set node after adding the ID
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.10 – 添加ID后的Set节点输出
- en: There are many other things that you can do with expressions, and we'll introduce
    more concepts throughout the rest of the book.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用表达式做很多事情，我们将在本书的其余部分介绍更多概念。
- en: Now that we know about expressions, let's learn more about workflows in n8n
    to understand what they are.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了表达式，让我们进一步了解n8n中的工作流，以了解它们是什么。
- en: Workflows – putting it all together
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作流 – 整合一切
- en: Workflows are a collection of nodes in n8n. Workflows can range anywhere from
    two nodes to hundreds of nodes, with workflows calling sub-workflows. These workflows
    can then be saved in n8n's database and activated to run on their own in the background
    even when you do not have the n8n Editor UI open.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流是n8n中节点的一个集合。工作流可以从两个节点到数百个节点不等，包括调用子工作流。这些工作流可以保存在n8n的数据库中，并在后台运行，即使你没有打开n8n编辑器UI。
- en: While each of these nodes in n8n is very powerful in and of itself, the true
    potential of n8n is evident when you begin to connect these nodes. In n8n, you
    can join one node to many other nodes. Workflows don't necessarily have to follow
    a linear structure.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然n8n中的每个节点本身都非常强大，但当你开始连接这些节点时，n8n的真正潜力就显现出来了。在n8n中，你可以将一个节点连接到许多其他节点。工作流不一定要遵循线性结构。
- en: Real-world problems or tasks are usually made up of a series of steps. n8n is
    powerful because you can model your complex processes and tasks as a workflow,
    a series of nodes that each performs a step toward completing the bigger process.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现实世界的问题或任务通常由一系列步骤组成。n8n之所以强大，是因为你可以将复杂的过程和任务建模为工作流，即一系列执行步骤以完成更大过程的节点。
- en: Let's now save the workflow created by clicking on the `My first workflow` and
    press *Enter*.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们保存通过点击`我的第一个工作流`创建的工作流，并按*Enter*键。
- en: 'Workflows are JSON objects. You can take a look at the underlying JSON in one
    of two ways:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流是JSON对象。你可以通过两种方式查看其底层的JSON：
- en: Click on the **Workflows** icon and click on the **Download** button to download
    the JSON file.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击**工作流**图标，然后点击**下载**按钮以下载JSON文件。
- en: Press *Ctrl* + *A* on the canvas to select all the nodes in your workflow, press
    *Ctrl* + *C* to copy them, head over to a text editor, and paste the JSON by pressing
    *Ctrl* + *V*.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在画布上按*Ctrl* + *A*选择你的工作流中的所有节点，按*Ctrl* + *C*复制它们，然后在文本编辑器中粘贴JSON，按*Ctrl* + *V*。
- en: 'Here''s how the JSON for the workflow that we created appears:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们创建的工作流的JSON看起来是这样的：
- en: '![Figure 2.11 – JSON for the workflow that we created'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.11 – 我们创建的工作流的JSON'
- en: '](img/Figure_2.11_B17493.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.11_B17493.jpg)'
- en: Figure 2.11 – JSON for the workflow that we created
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.11 – 我们创建的工作流的JSON
- en: If you look at the JSON file, you'll see that it contains information about
    the different nodes present in your workflow, how they are connected, and the
    set parameters. In the preceding screenshot, you can notice the title, URL, and
    ID that we configured in the **Set** node and the expressions that we added.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看 JSON 文件，你会看到它包含了关于你工作流程中不同节点信息，它们是如何连接的，以及设置的参数。在前面的屏幕截图中，你可以注意到我们在 **设置**
    节点中配置的标题、URL 和 ID，以及我们添加的表达式。
- en: You can then share these files with your friends and colleagues so that they
    can load them on their n8n instances and run the workflows that you created. They
    can either import the workflow as a file or the JSON and paste it into their Editor
    UI.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以将这些文件与你的朋友和同事分享，以便他们可以在他们的 n8n 实例上加载它们并运行你创建的工作流程。他们可以将工作流程作为文件导入，或者将
    JSON 粘贴到他们的编辑器界面中。
- en: Now that we have learned about workflows, let's create our first workflow in
    n8n, which will send us a cocktail recipe in Telegram every day at 6 P.M.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了工作流程，让我们在 n8n 中创建我们的第一个工作流程，它将在每天下午 6 点通过 Telegram 发送鸡尾酒配方。
- en: Creating your first workflow – Hello World
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建你的第一个工作流程 – Hello World
- en: 'Now that we are familiar with n8n''s Editor UI, nodes, and workflows, let''s
    create a new workflow that allows us to send a random cocktail recipe to Telegram
    every day. Follow these steps:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经熟悉了 n8n 的编辑器界面、节点和工作流程，让我们创建一个新的工作流程，允许我们每天向 Telegram 发送一个随机鸡尾酒配方。按照以下步骤操作：
- en: Create a new workflow on n8n by clicking on the **Workflows** icon and then
    clicking on **New**. Since this is an automation that runs every day, we'll need
    to add a trigger node.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 n8n 上创建一个新的工作流程，点击 **工作流程** 图标，然后点击 **新建**。由于这是一个每天运行的自动化任务，我们需要添加一个触发节点。
- en: Click on the **+** button, click on the **Trigger** tab, and select the **Cron**
    node.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **+** 按钮，点击 **触发** 选项卡，并选择 **Cron** 节点。
- en: From the **Cron** node's details view, click on **Add Cron Time** and change
    **Hour** to **18**. By doing this, we ensure that the workflow runs every day
    at 1800 hours.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **Cron** 节点的详细信息视图，点击 **添加 Cron 时间** 并将 **小时** 更改为 **18**。通过这样做，我们确保工作流程每天在
    1800 小时运行。
- en: Save the workflow and name it **Hello World**. Now, the workflow will be triggered
    at 1800 hours for the default time zone in n8n. n8n's default time zone is **New
    York**.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存工作流程并将其命名为 **Hello World**。现在，工作流程将在 n8n 的默认时区 1800 小时触发。n8n 的默认时区是 **纽约**。
- en: Let's change the time zone for this specific workflow by clicking on the **Workflows**
    icon and selecting **Settings**. There, you can choose your time zone.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过点击 **工作流程** 图标并选择 **设置** 来更改此特定工作流程的时间区域。在那里，你可以选择你的时区。
- en: Once you have done that, click on the **Save** button and return to the Editor
    UI.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成这些操作后，点击 **保存** 按钮，并返回到编辑器界面。
- en: '![Figure 2.12 – Adding a Cron node to the Editor UI and saving the workflow'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.12 – 向编辑器界面添加 Cron 节点并保存工作流程]'
- en: '](img/Figure_2.12_B17493.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_2.12_B17493.jpg](img/Figure_2.12_B17493.jpg)'
- en: Figure 2.12 – Adding a Cron node to the Editor UI and saving the workflow
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12 – 向编辑器界面添加 Cron 节点并保存工作流程
- en: Now, highlight the **Cron** node by clicking on it and then add the **HTTP Request**
    node to the canvas. Make sure that it is connected to the **Cron** node.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过点击它来突出显示 **Cron** 节点，然后将 **HTTP 请求** 节点添加到画布上。确保它连接到 **Cron** 节点。
- en: We'll use the **HTTP Request** node since the cocktail API does not have a node
    in n8n. The **HTTP Request** node allows us to make HTTP requests and enables
    us to make API calls to services that don't have a node in n8n yet. We'll be making
    a call to the random endpoint of the CocktailDB API.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 **HTTP 请求** 节点，因为鸡尾酒 API 在 n8n 中没有节点。**HTTP 请求** 节点允许我们发起 HTTP 请求，并使我们能够调用
    n8n 中尚未有节点的服务 API。我们将调用 CocktailDB API 的随机端点。
- en: Enter [https://www.thecocktaildb.com/api/json/v1/1/random.php](https://www.thecocktaildb.com/api/json/v1/1/random.php)
    in the **URL** field of the **HTTP Request** node and click on the **Execute Node**
    button. You will notice that it returns details about a random cocktail.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **HTTP 请求** 节点的 **URL** 字段中输入 [https://www.thecocktaildb.com/api/json/v1/1/random.php](https://www.thecocktaildb.com/api/json/v1/1/random.php)
    并点击 **执行节点** 按钮。你会注意到它返回了关于随机鸡尾酒的详细信息。
- en: '![Figure 2.13 – Output of the HTTP Request node after making a request to the
    random endpoint of the CocktailDB API'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.13 – 向 CocktailDB API 的随机端点发起请求后 HTTP 请求节点的输出]'
- en: '](img/Figure_2.13_B17493.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_2.13_B17493.jpg](img/Figure_2.13_B17493.jpg)'
- en: Figure 2.13 – Output of the HTTP Request node after making a request to the
    random endpoint of the CocktailDB API
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13 – 向 CocktailDB API 的随机端点发起请求后 HTTP 请求节点的输出
- en: 'Now, we''ll have to send this data to Telegram. To do that, we''ll first need
    to create a Telegram bot. You can use either the Telegram mobile app, web app,
    or desktop application for that. In the example screenshot (*Figure 2.14*), I
    am using the desktop app for macOS. To do that, follow these steps:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将需要将此数据发送到 Telegram。为此，我们首先需要创建一个 Telegram 机器人。您可以使用 Telegram 移动应用、Web
    应用或桌面应用程序来创建机器人。在示例截图（*图 2.14*）中，我正在使用 macOS 的桌面应用程序。要这样做，请按照以下步骤操作：
- en: Search for `BotFather` with a blue and white "verified" symbol next to its name.
    To verify, click on the BotFather username.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在名称旁边带有蓝色和白色“已验证”符号的“BotFather”中搜索。要验证，请点击 BotFather 用户名。
- en: '![Figure 2.14 – BotFather in the Telegram application'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.14 – Telegram 应用中的 BotFather'
- en: '](img/Figure_2.14_B17493.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_2.14_B17493.jpg)'
- en: Figure 2.14 – BotFather in the Telegram application
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.14 – Telegram 应用中的 BotFather
- en: Enter the `/newbot` command and follow the instructions to create your bot.
    You can name it as you please, but the username needs to be unique.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `/newbot` 命令，并按照说明创建您的机器人。您可以随意命名，但用户名必须是唯一的。
- en: Once completed, it will give you an access token for the HTTP API. Copy that;
    we'll need that in n8n. Next, click on your bot link provided by BotFather and
    click on **Start**.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，它将为您提供 HTTP API 的访问令牌。复制它；我们将在 n8n 中需要它。接下来，点击 BotFather 提供的机器人链接，并点击 **开始**。
- en: Now head over to n8n and add a **Telegram** node. Make sure that the input of
    the Telegram node is connected to the output of the **HTTP Request** node. You
    will notice that the node has a section called **Credentials**.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，前往 n8n 并添加一个 **Telegram** 节点。确保 Telegram 节点的输入连接到 **HTTP 请求** 节点的输出。您会注意到节点有一个名为
    **凭证** 的部分。
- en: Click on the **Telegram API** field and select **Create New** from the dropdown.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Telegram API** 字段，并从下拉菜单中选择 **创建新**。
- en: The `Daily Drinks Bot` to differentiate it from my other Telegram bots at a
    glance.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Daily Drinks Bot` 以便在视觉上区分我的其他 Telegram 机器人。'
- en: Now, paste the access token you copied from BotFather in the **Access Token**
    field, and click on the **Save** button.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将您从 BotFather 复制的访问令牌粘贴到 **访问令牌** 字段中，然后点击 **保存** 按钮。
- en: Now, we need the chat ID. To find that, open a new tab in your web browser and
    go to https://api.telegram.org/bot<YourBOTToken>/getUpdates.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要聊天 ID。要找到它，请在您的网络浏览器中打开一个新标签页，并转到 https://api.telegram.org/bot<YourBOTToken>/getUpdates。
- en: Don't forget to replace `<YourBOTToken>` with the access token that you got
    from BotFather. If you see nothing on that page, send a message to your bot and
    open the URL again. You can then copy the chat ID from there and paste it into
    the **Chat ID** field in n8n.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记将 `<YourBOTToken>` 替换为您从 BotFather 获得的访问令牌。如果您在那个页面上看不到任何内容，请向您的机器人发送消息并再次打开该
    URL。然后您可以从那里复制聊天 ID 并将其粘贴到 n8n 的 **Chat ID** 字段中。
- en: 'Now, we have to craft the message for the **Text** field. We''ll use expressions
    for this. Feel free to craft the message as you like. Here''s how mine looked:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须为 **文本** 字段编写消息。我们将为此使用表达式。请随意编写您喜欢的消息。以下是我的样子：
- en: '![Figure 2.15 – Using the Expressions Editor to specify the content of the
    Telegram message'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.15 – 使用表达式编辑器指定 Telegram 消息的内容'
- en: '](img/Figure_2.15_B17493.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_2.15_B17493.jpg)'
- en: Figure 2.15 – Using the Expressions Editor to specify the content of the Telegram
    message
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.15 – 使用表达式编辑器指定 Telegram 消息的内容
- en: 'Head back to the Telegram node panel and click on the **Execute Node** button.
    You should now see a message from your bot on Telegram. Here''s how mine looked:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回 Telegram 节点面板，点击 **执行节点** 按钮。现在您应该能在 Telegram 上看到您的机器人发送的消息。以下是我的样子：
- en: '![Figure 2.16 – Message sent by our n8n workflow via the Telegram bot'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.16 – 通过 Telegram 机器人发送的消息'
- en: '](img/Figure_2.16_B17493.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_2.16_B17493.jpg)'
- en: Figure 2.16 – Message sent by our n8n workflow via the Telegram bot
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.16 – 通过 Telegram 机器人发送的消息
- en: Now that our bot is up and running, we will have to activate the workflow to
    get a new cocktail recipe every day at 1800 hours.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经启动了机器人，我们将需要激活工作流程，以便每天 18:00 小时获得新的鸡尾酒配方。
- en: 'Return to the canvas in the Editor UI, click on the **Activate** button at
    the top right, and select **Yes**, then activate and save! My final workflow looks
    like this:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回编辑器 UI 中的画布，点击右上角的 **激活** 按钮，然后选择 **是**，然后激活并保存！我的最终工作流程看起来像这样：
- en: '![Figure 2.17 – Final workflow that has been activated'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.17 – 已激活的最终工作流程'
- en: '](img/Figure_2.17_B17493.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_2.17_B17493.jpg)'
- en: Figure 2.17 – Final workflow that has been activated
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.17 – 已激活的最终工作流程
- en: As long as n8n is running, you will now get cocktail recipes every evening.
    Congrats on creating your first n8n workflow!
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 只要 n8n 在运行，你现在每晚都会收到鸡尾酒配方。恭喜你创建了你的第一个 n8n 工作流程！
- en: Summary
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about n8n's Editor UI. We then learned about the
    two types of nodes in n8n. We then covered expressions to reference dynamic data
    in n8n workflows and learned more about workflows in n8n. Finally, we created
    our first workflow in n8n by putting together knowledge of the Editor UI, nodes,
    expressions, and workflows. We'll use the principles that we've learned throughout
    this chapter to build workflows that will handle the backend of our products.
    An understanding of these topics will help with building workflows of any complexity
    in n8n.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了 n8n 的编辑器 UI。然后我们了解了 n8n 中的两种节点类型。接着我们介绍了如何在 n8n 工作流程中引用动态数据，并进一步学习了
    n8n 中的工作流程。最后，我们通过结合编辑器 UI、节点、表达式和工作流程的知识，创建了我们的第一个 n8n 工作流程。我们将利用本章学到的原则来构建处理我们产品后端的工作流程。对这些主题的理解将有助于在
    n8n 中构建任何复杂程度的工作流程。
- en: In the next chapter, we are going to dig deeper into the core nodes that make
    n8n so powerful. We will then take a look at how n8n workflows share data between
    themselves and learn how to access that information.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨使 n8n 如此强大的核心节点。然后我们将看看 n8n 工作流程之间如何共享数据，并学习如何访问这些信息。
